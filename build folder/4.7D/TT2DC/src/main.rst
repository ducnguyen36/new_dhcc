                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _huongdan
                                     12 	.globl _ver
                                     13 	.globl _mode_select
                                     14 	.globl _motor_step
                                     15 	.globl _phone2
                                     16 	.globl _phone1
                                     17 	.globl _eep_gio4
                                     18 	.globl _eep_phut4
                                     19 	.globl _eep_gio3
                                     20 	.globl _eep_phut3
                                     21 	.globl _eep_gio2
                                     22 	.globl _eep_phut2
                                     23 	.globl _eep_gio1
                                     24 	.globl _eep_phut1
                                     25 	.globl _eep_cam
                                     26 	.globl _eep_debug
                                     27 	.globl _eep_loithesim
                                     28 	.globl _eep_phonephu
                                     29 	.globl _eep_mp3
                                     30 	.globl _eep_tatmoden
                                     31 	.globl _eep_giosacxa
                                     32 	.globl _eep_norreset
                                     33 	.globl _eep_gioreset
                                     34 	.globl _eep_ngayreset
                                     35 	.globl _eep_gpson
                                     36 	.globl _eep_baocao
                                     37 	.globl _eep_motor
                                     38 	.globl _adc_isr
                                     39 	.globl _mp3_serial_interupt
                                     40 	.globl _main
                                     41 	.globl _xu_ly_tin_nhan
                                     42 	.globl _gsm_serial_interrupt
                                     43 	.globl _gsm_laygio_gps
                                     44 	.globl _gsm_thietlapnhantin1
                                     45 	.globl _gsm_thietlapnhantin
                                     46 	.globl _gsm_thietlapgoidien
                                     47 	.globl _gsm_thietlapngaygiothuc
                                     48 	.globl _gsm_thietlapsim800
                                     49 	.globl _gui_huong_dan
                                     50 	.globl _baocaoden
                                     51 	.globl _send_thong_so_den
                                     52 	.globl _baocaosms
                                     53 	.globl _send_thong_so
                                     54 	.globl _send_gio_thuc
                                     55 	.globl _send_gio_kim
                                     56 	.globl _send_thong_so_rut_gon
                                     57 	.globl _kiemtratinhieu
                                     58 	.globl _kiemtrasodienthoai
                                     59 	.globl _kiemtrataikhoan
                                     60 	.globl _send_sms
                                     61 	.globl _gsm_quay_so
                                     62 	.globl _gsm_sendandcheck
                                     63 	.globl _clear_sms_buffer
                                     64 	.globl _cam_phim
                                     65 	.globl _PCA_Handler
                                     66 	.globl _clock_servide
                                     67 	.globl _xunggiay
                                     68 	.globl _motor_step_int_init
                                     69 	.globl _PCA_Timer_init
                                     70 	.globl _luu_gio_kim
                                     71 	.globl _motor_run_check2
                                     72 	.globl _motor_run_check
                                     73 	.globl _kiem_tra_nhac
                                     74 	.globl _kiem_tra_den
                                     75 	.globl _mp3_play
                                     76 	.globl _mp3_serial_init
                                     77 	.globl _send_gsm_cmd
                                     78 	.globl _send_gsm_byte
                                     79 	.globl _gsm_init
                                     80 	.globl _IAP_xoasector
                                     81 	.globl _IAP_docxoasector1
                                     82 	.globl _IAP_ghisector1
                                     83 	.globl _IAP_ghibyte
                                     84 	.globl _LCD_noblink
                                     85 	.globl _LCD_blinkXY
                                     86 	.globl _LCD_chop
                                     87 	.globl _LCD_xoa
                                     88 	.globl _delay_ms
                                     89 	.globl _LCD_guigio
                                     90 	.globl _LCD_Init
                                     91 	.globl _LCD_guidulieu
                                     92 	.globl _LCD_guilenh
                                     93 	.globl _LCD_guichuoi
                                     94 	.globl _rtc_settime
                                     95 	.globl _rtc_gettime
                                     96 	.globl _rtc_setdate
                                     97 	.globl _rtc_getdate
                                     98 	.globl _rtc_init
                                     99 	.globl _CCF0
                                    100 	.globl _CCF1
                                    101 	.globl _CCF2
                                    102 	.globl _CR
                                    103 	.globl _CF
                                    104 	.globl _RI
                                    105 	.globl _TI
                                    106 	.globl _RB8
                                    107 	.globl _TB8
                                    108 	.globl _REN
                                    109 	.globl _SM2
                                    110 	.globl _SM1
                                    111 	.globl _SM0
                                    112 	.globl _IT0
                                    113 	.globl _IE0
                                    114 	.globl _IT1
                                    115 	.globl _IE1
                                    116 	.globl _TR0
                                    117 	.globl _TF0
                                    118 	.globl _TR1
                                    119 	.globl _TF1
                                    120 	.globl _PX0
                                    121 	.globl _PT0
                                    122 	.globl _PX1
                                    123 	.globl _PT1
                                    124 	.globl _PS
                                    125 	.globl _PADC
                                    126 	.globl _PLVD
                                    127 	.globl _PPCA
                                    128 	.globl _EX0
                                    129 	.globl _ET0
                                    130 	.globl _EX1
                                    131 	.globl _ET1
                                    132 	.globl _ES
                                    133 	.globl _EADC
                                    134 	.globl _ELVD
                                    135 	.globl _EA
                                    136 	.globl _P77
                                    137 	.globl _P76
                                    138 	.globl _P75
                                    139 	.globl _P74
                                    140 	.globl _P73
                                    141 	.globl _P72
                                    142 	.globl _P71
                                    143 	.globl _P70
                                    144 	.globl _P67
                                    145 	.globl _P66
                                    146 	.globl _P65
                                    147 	.globl _P64
                                    148 	.globl _P63
                                    149 	.globl _P62
                                    150 	.globl _P61
                                    151 	.globl _P60
                                    152 	.globl _P57
                                    153 	.globl _P56
                                    154 	.globl _P55
                                    155 	.globl _P54
                                    156 	.globl _P53
                                    157 	.globl _P52
                                    158 	.globl _P51
                                    159 	.globl _P50
                                    160 	.globl _P47
                                    161 	.globl _P46
                                    162 	.globl _P45
                                    163 	.globl _P44
                                    164 	.globl _P43
                                    165 	.globl _P42
                                    166 	.globl _P41
                                    167 	.globl _P40
                                    168 	.globl _P37
                                    169 	.globl _P36
                                    170 	.globl _P35
                                    171 	.globl _P34
                                    172 	.globl _P33
                                    173 	.globl _P32
                                    174 	.globl _P31
                                    175 	.globl _P30
                                    176 	.globl _P27
                                    177 	.globl _P26
                                    178 	.globl _P25
                                    179 	.globl _P24
                                    180 	.globl _P23
                                    181 	.globl _P22
                                    182 	.globl _P21
                                    183 	.globl _P20
                                    184 	.globl _P17
                                    185 	.globl _P16
                                    186 	.globl _P15
                                    187 	.globl _P14
                                    188 	.globl _P13
                                    189 	.globl _P12
                                    190 	.globl _P11
                                    191 	.globl _P10
                                    192 	.globl _P07
                                    193 	.globl _P06
                                    194 	.globl _P05
                                    195 	.globl _P04
                                    196 	.globl _P03
                                    197 	.globl _P02
                                    198 	.globl _P01
                                    199 	.globl _P00
                                    200 	.globl _P
                                    201 	.globl _F1
                                    202 	.globl _OV
                                    203 	.globl _RS0
                                    204 	.globl _RS1
                                    205 	.globl _F0
                                    206 	.globl _AC
                                    207 	.globl _CY
                                    208 	.globl _PWMFDCR
                                    209 	.globl _PWMIF
                                    210 	.globl _PWMCR
                                    211 	.globl _PWMCFG
                                    212 	.globl _CMPCR2
                                    213 	.globl _CMPCR1
                                    214 	.globl _CCAP2H
                                    215 	.globl _CCAP1H
                                    216 	.globl _CCAP0H
                                    217 	.globl _PCA_PWM2
                                    218 	.globl _PCA_PWM1
                                    219 	.globl _PCA_PWM0
                                    220 	.globl _CCAP2L
                                    221 	.globl _CCAP1L
                                    222 	.globl _CCAP0L
                                    223 	.globl _CCAPM2
                                    224 	.globl _CCAPM1
                                    225 	.globl _CCAPM0
                                    226 	.globl _CH
                                    227 	.globl _CL
                                    228 	.globl _CMOD
                                    229 	.globl _CCON
                                    230 	.globl _IAP_CONTR
                                    231 	.globl _IAP_TRIG
                                    232 	.globl _IAP_CMD
                                    233 	.globl _IAP_ADDRL
                                    234 	.globl _IAP_ADDRH
                                    235 	.globl _IAP_DATA
                                    236 	.globl _SPDAT
                                    237 	.globl _SPCTL
                                    238 	.globl _SPSTAT
                                    239 	.globl _ADC_RESL
                                    240 	.globl _ADC_RES
                                    241 	.globl _ADC_CONTR
                                    242 	.globl _SADEN
                                    243 	.globl _SADDR
                                    244 	.globl _S4BUF
                                    245 	.globl _S4CON
                                    246 	.globl _S3BUF
                                    247 	.globl _S3CON
                                    248 	.globl _S2BUF
                                    249 	.globl _S2CON
                                    250 	.globl _SBUF
                                    251 	.globl _SCON
                                    252 	.globl _WDT_CONTR
                                    253 	.globl _WKTCH
                                    254 	.globl _WKTCL
                                    255 	.globl _T2L
                                    256 	.globl _T2H
                                    257 	.globl _T3L
                                    258 	.globl _T3H
                                    259 	.globl _T4L
                                    260 	.globl _T4H
                                    261 	.globl _T4T3M
                                    262 	.globl _TH1
                                    263 	.globl _TH0
                                    264 	.globl _TL1
                                    265 	.globl _TL0
                                    266 	.globl _TMOD
                                    267 	.globl _TCON
                                    268 	.globl _INT_CLKO
                                    269 	.globl _IP2
                                    270 	.globl _IE2
                                    271 	.globl _IP
                                    272 	.globl _IE
                                    273 	.globl _P_SW2
                                    274 	.globl _P1ASF
                                    275 	.globl _BUS_SPEED
                                    276 	.globl _CLK_DIV
                                    277 	.globl _P_SW1
                                    278 	.globl _AUXR1
                                    279 	.globl _AUXR
                                    280 	.globl _PCON
                                    281 	.globl _P7M1
                                    282 	.globl _P7M0
                                    283 	.globl _P6M1
                                    284 	.globl _P6M0
                                    285 	.globl _P5M1
                                    286 	.globl _P5M0
                                    287 	.globl _P4M1
                                    288 	.globl _P4M0
                                    289 	.globl _P3M1
                                    290 	.globl _P3M0
                                    291 	.globl _P2M1
                                    292 	.globl _P2M0
                                    293 	.globl _P1M1
                                    294 	.globl _P1M0
                                    295 	.globl _P0M1
                                    296 	.globl _P0M0
                                    297 	.globl _P7
                                    298 	.globl _P6
                                    299 	.globl _P5
                                    300 	.globl _P4
                                    301 	.globl _P3
                                    302 	.globl _P2
                                    303 	.globl _P1
                                    304 	.globl _P0
                                    305 	.globl _DPH
                                    306 	.globl _DPL
                                    307 	.globl _SP
                                    308 	.globl _PSW
                                    309 	.globl _B
                                    310 	.globl _ACC
                                    311 	.globl _counter_xung_giay
                                    312 	.globl _cnt
                                    313 	.globl _phut_sac_xa_acqui_con_lai
                                    314 	.globl _sms_on
                                    315 	.globl _sim_test_sec
                                    316 	.globl _max_second
                                    317 	.globl _so_motor
                                    318 	.globl _date_str
                                    319 	.globl _gsm_receive_buf
                                    320 	.globl _date_pointer
                                    321 	.globl _gsm_receive_pointer
                                    322 	.globl _have_time
                                    323 	.globl _gsm_serial_cmd
                                    324 	.globl _total_try_time_out
                                    325 	.globl _connect_time_out
                                    326 	.globl _connect
                                    327 	.globl _signal
                                    328 	.globl _nha_mang
                                    329 	.globl _song_name
                                    330 	.globl _mode_wait
                                    331 	.globl _sub_mode
                                    332 	.globl _mode
                                    333 	.globl _phim_cong_doi
                                    334 	.globl _phim_back_doi
                                    335 	.globl _phim_mode_doi
                                    336 	.globl _lcd_data_index
                                    337 	.globl _lcd_process_index
                                    338 	.globl _lcd_index
                                    339 	.globl _toc_do_motor_step
                                    340 	.globl _thoi_gian_doi_cam_chuan
                                    341 	.globl _thoi_gian_doi_doc_cam
                                    342 	.globl _xung_giay_check
                                    343 	.globl _ngay_reset_con_lai
                                    344 	.globl _PCA_Timer0
                                    345 	.globl _delay_ve_kim
                                    346 	.globl _may_canh_kim
                                    347 	.globl _canhkim
                                    348 	.globl _year
                                    349 	.globl _month
                                    350 	.globl _day
                                    351 	.globl _date
                                    352 	.globl _eeprom_buf
                                    353 	.globl _message_index
                                    354 	.globl _sms_index
                                    355 	.globl _delay_cuoc_goi_ke_tiep
                                    356 	.globl _so_lan_goi_dien
                                    357 	.globl _gsm_delay_reset
                                    358 	.globl _lenh_sms
                                    359 	.globl _phone
                                    360 	.globl _phone_chinh
                                    361 	.globl _baocaoden_PARM_1
                                    362 	.globl _baocaosms_PARM_1
                                    363 	.globl _send_thong_so_PARM_1
                                    364 	.globl _send_gio_thuc_PARM_1
                                    365 	.globl _send_thong_so_rut_gon_PARM_1
                                    366 	.globl _send_sms_PARM_1
                                    367 	.globl _lcd_update_chop
                                    368 	.globl _bao_cao_dien_ap_thap
                                    369 	.globl _loi_eeprom_tat_mo_den
                                    370 	.globl _loi_cam_motor4
                                    371 	.globl _loi_cam_motor3
                                    372 	.globl _loi_cam_motor2
                                    373 	.globl _loi_cam_motor1
                                    374 	.globl _mat_xung_giay
                                    375 	.globl _motor_debug
                                    376 	.globl _motor_dung
                                    377 	.globl _atmel_phat
                                    378 	.globl _may_dc
                                    379 	.globl _test_gps
                                    380 	.globl _skip_gsm_cmd
                                    381 	.globl _error
                                    382 	.globl _nosim
                                    383 	.globl _have_not
                                    384 	.globl _gui_lenh_thanh_cong
                                    385 	.globl _chop
                                    386 	.globl _phim_cong_giu
                                    387 	.globl _phim_cong_cu
                                    388 	.globl _phim_cong_nhan
                                    389 	.globl _phim_cong_xuong
                                    390 	.globl _phim_back_giu
                                    391 	.globl _phim_back_cu
                                    392 	.globl _phim_back_nhan
                                    393 	.globl _phim_back_xuong
                                    394 	.globl _phim_mode_giu
                                    395 	.globl _phim_mode_cu
                                    396 	.globl _phim_mode_nhan
                                    397 	.globl _phim_mode_xuong
                                    398 	.globl _flip_pulse
                                    399 	.globl _phut_out
                                    400 	.globl _giay_out
                                    401 	.globl _GPS_time
                                    402 	.globl _cam_ra2
                                    403 	.globl _cam_ra
                                    404 	.globl _cam_vao_han2
                                    405 	.globl _cam_vao_han
                                    406 	.globl _cam_vao2
                                    407 	.globl _cam_vao
                                    408 	.globl _trang_thai_cam2
                                    409 	.globl _trang_thai_cam
                                    410 	.globl _motorDir2
                                    411 	.globl _motorDir1
                                    412 	.globl _motorDir
                                    413 	.globl _have_quote
                                    414 	.globl _lenh_khong_hop_le
                                    415 	.globl _have_cusd
                                    416 	.globl _sms_dang_xu_ly
                                    417 	.globl _pin_chinh_xac
                                    418 	.globl _co_tin_nhan_moi
                                    419 	.globl _phone_header
                                    420 	.globl _bat_phone_phu
                                    421 	.globl _phone_phu_so_sanh_that_bai
                                    422 	.globl _phone_chinh_so_sanh_that_bai
                                    423 	.globl _goi_dien_thoai
                                    424 	.globl _co_cuoc_goi_toi
                                    425 	.globl _gsm_reset
                                    426 	.globl _da_gui_bao_cao_thang
                                    427 	.globl _da_gui_bao_cao
                                    428 	.globl _dien_ap_thap
                                    429 	.globl _mp3_doi_start
                                    430 	.globl _mp3_minute
                                    431 	.globl _mp3_hour
                                    432 	.globl _mp3_date
                                    433 	.globl _mp3_status
                                    434 	.globl _dien_ap_nguon
                                    435 	.globl _gsm_sendandcheck_PARM_4
                                    436 	.globl _gsm_sendandcheck_PARM_3
                                    437 	.globl _gsm_sendandcheck_PARM_2
                                    438 	.globl _motor_index2
                                    439 	.globl _motor_index
                                    440 	.globl _step_index
                                    441 	.globl _phut
                                    442 	.globl _gio
                                    443 	.globl _hour12
                                    444 	.globl _hour
                                    445 	.globl _minute
                                    446 	.globl _second
                                    447 ;--------------------------------------------------------
                                    448 ; special function registers
                                    449 ;--------------------------------------------------------
                                    450 	.area RSEG    (ABS,DATA)
      000000                        451 	.org 0x0000
                           0000E0   452 _ACC	=	0x00e0
                           0000F0   453 _B	=	0x00f0
                           0000D0   454 _PSW	=	0x00d0
                           000081   455 _SP	=	0x0081
                           000082   456 _DPL	=	0x0082
                           000083   457 _DPH	=	0x0083
                           000080   458 _P0	=	0x0080
                           000090   459 _P1	=	0x0090
                           0000A0   460 _P2	=	0x00a0
                           0000B0   461 _P3	=	0x00b0
                           0000C0   462 _P4	=	0x00c0
                           0000C8   463 _P5	=	0x00c8
                           0000E8   464 _P6	=	0x00e8
                           0000F8   465 _P7	=	0x00f8
                           000094   466 _P0M0	=	0x0094
                           000093   467 _P0M1	=	0x0093
                           000092   468 _P1M0	=	0x0092
                           000091   469 _P1M1	=	0x0091
                           000096   470 _P2M0	=	0x0096
                           000095   471 _P2M1	=	0x0095
                           0000B2   472 _P3M0	=	0x00b2
                           0000B1   473 _P3M1	=	0x00b1
                           0000B4   474 _P4M0	=	0x00b4
                           0000B3   475 _P4M1	=	0x00b3
                           0000CA   476 _P5M0	=	0x00ca
                           0000C9   477 _P5M1	=	0x00c9
                           0000CC   478 _P6M0	=	0x00cc
                           0000CB   479 _P6M1	=	0x00cb
                           0000E2   480 _P7M0	=	0x00e2
                           0000E1   481 _P7M1	=	0x00e1
                           000087   482 _PCON	=	0x0087
                           00008E   483 _AUXR	=	0x008e
                           0000A2   484 _AUXR1	=	0x00a2
                           0000A2   485 _P_SW1	=	0x00a2
                           000097   486 _CLK_DIV	=	0x0097
                           0000A1   487 _BUS_SPEED	=	0x00a1
                           00009D   488 _P1ASF	=	0x009d
                           0000BA   489 _P_SW2	=	0x00ba
                           0000A8   490 _IE	=	0x00a8
                           0000B8   491 _IP	=	0x00b8
                           0000AF   492 _IE2	=	0x00af
                           0000B5   493 _IP2	=	0x00b5
                           00008F   494 _INT_CLKO	=	0x008f
                           000088   495 _TCON	=	0x0088
                           000089   496 _TMOD	=	0x0089
                           00008A   497 _TL0	=	0x008a
                           00008B   498 _TL1	=	0x008b
                           00008C   499 _TH0	=	0x008c
                           00008D   500 _TH1	=	0x008d
                           0000D1   501 _T4T3M	=	0x00d1
                           0000D2   502 _T4H	=	0x00d2
                           0000D3   503 _T4L	=	0x00d3
                           0000D4   504 _T3H	=	0x00d4
                           0000D5   505 _T3L	=	0x00d5
                           0000D6   506 _T2H	=	0x00d6
                           0000D7   507 _T2L	=	0x00d7
                           0000AA   508 _WKTCL	=	0x00aa
                           0000AB   509 _WKTCH	=	0x00ab
                           0000C1   510 _WDT_CONTR	=	0x00c1
                           000098   511 _SCON	=	0x0098
                           000099   512 _SBUF	=	0x0099
                           00009A   513 _S2CON	=	0x009a
                           00009B   514 _S2BUF	=	0x009b
                           0000AC   515 _S3CON	=	0x00ac
                           0000AD   516 _S3BUF	=	0x00ad
                           000084   517 _S4CON	=	0x0084
                           000085   518 _S4BUF	=	0x0085
                           0000A9   519 _SADDR	=	0x00a9
                           0000B9   520 _SADEN	=	0x00b9
                           0000BC   521 _ADC_CONTR	=	0x00bc
                           0000BD   522 _ADC_RES	=	0x00bd
                           0000BE   523 _ADC_RESL	=	0x00be
                           0000CD   524 _SPSTAT	=	0x00cd
                           0000CE   525 _SPCTL	=	0x00ce
                           0000CF   526 _SPDAT	=	0x00cf
                           0000C2   527 _IAP_DATA	=	0x00c2
                           0000C3   528 _IAP_ADDRH	=	0x00c3
                           0000C4   529 _IAP_ADDRL	=	0x00c4
                           0000C5   530 _IAP_CMD	=	0x00c5
                           0000C6   531 _IAP_TRIG	=	0x00c6
                           0000C7   532 _IAP_CONTR	=	0x00c7
                           0000D8   533 _CCON	=	0x00d8
                           0000D9   534 _CMOD	=	0x00d9
                           0000E9   535 _CL	=	0x00e9
                           0000F9   536 _CH	=	0x00f9
                           0000DA   537 _CCAPM0	=	0x00da
                           0000DB   538 _CCAPM1	=	0x00db
                           0000DC   539 _CCAPM2	=	0x00dc
                           0000EA   540 _CCAP0L	=	0x00ea
                           0000EB   541 _CCAP1L	=	0x00eb
                           0000EC   542 _CCAP2L	=	0x00ec
                           0000F2   543 _PCA_PWM0	=	0x00f2
                           0000F3   544 _PCA_PWM1	=	0x00f3
                           0000F4   545 _PCA_PWM2	=	0x00f4
                           0000FA   546 _CCAP0H	=	0x00fa
                           0000FB   547 _CCAP1H	=	0x00fb
                           0000FC   548 _CCAP2H	=	0x00fc
                           0000E6   549 _CMPCR1	=	0x00e6
                           0000E7   550 _CMPCR2	=	0x00e7
                           0000F1   551 _PWMCFG	=	0x00f1
                           0000F5   552 _PWMCR	=	0x00f5
                           0000F6   553 _PWMIF	=	0x00f6
                           0000F7   554 _PWMFDCR	=	0x00f7
                                    555 ;--------------------------------------------------------
                                    556 ; special function bits
                                    557 ;--------------------------------------------------------
                                    558 	.area RSEG    (ABS,DATA)
      000000                        559 	.org 0x0000
                           0000D7   560 _CY	=	0x00d7
                           0000D6   561 _AC	=	0x00d6
                           0000D5   562 _F0	=	0x00d5
                           0000D4   563 _RS1	=	0x00d4
                           0000D3   564 _RS0	=	0x00d3
                           0000D2   565 _OV	=	0x00d2
                           0000D1   566 _F1	=	0x00d1
                           0000D0   567 _P	=	0x00d0
                           000080   568 _P00	=	0x0080
                           000081   569 _P01	=	0x0081
                           000082   570 _P02	=	0x0082
                           000083   571 _P03	=	0x0083
                           000084   572 _P04	=	0x0084
                           000085   573 _P05	=	0x0085
                           000086   574 _P06	=	0x0086
                           000087   575 _P07	=	0x0087
                           000090   576 _P10	=	0x0090
                           000091   577 _P11	=	0x0091
                           000092   578 _P12	=	0x0092
                           000093   579 _P13	=	0x0093
                           000094   580 _P14	=	0x0094
                           000095   581 _P15	=	0x0095
                           000096   582 _P16	=	0x0096
                           000097   583 _P17	=	0x0097
                           0000A0   584 _P20	=	0x00a0
                           0000A1   585 _P21	=	0x00a1
                           0000A2   586 _P22	=	0x00a2
                           0000A3   587 _P23	=	0x00a3
                           0000A4   588 _P24	=	0x00a4
                           0000A5   589 _P25	=	0x00a5
                           0000A6   590 _P26	=	0x00a6
                           0000A7   591 _P27	=	0x00a7
                           0000B0   592 _P30	=	0x00b0
                           0000B1   593 _P31	=	0x00b1
                           0000B2   594 _P32	=	0x00b2
                           0000B3   595 _P33	=	0x00b3
                           0000B4   596 _P34	=	0x00b4
                           0000B5   597 _P35	=	0x00b5
                           0000B6   598 _P36	=	0x00b6
                           0000B7   599 _P37	=	0x00b7
                           0000C0   600 _P40	=	0x00c0
                           0000C1   601 _P41	=	0x00c1
                           0000C2   602 _P42	=	0x00c2
                           0000C3   603 _P43	=	0x00c3
                           0000C4   604 _P44	=	0x00c4
                           0000C5   605 _P45	=	0x00c5
                           0000C6   606 _P46	=	0x00c6
                           0000C7   607 _P47	=	0x00c7
                           0000C8   608 _P50	=	0x00c8
                           0000C9   609 _P51	=	0x00c9
                           0000CA   610 _P52	=	0x00ca
                           0000CB   611 _P53	=	0x00cb
                           0000CC   612 _P54	=	0x00cc
                           0000CD   613 _P55	=	0x00cd
                           0000CE   614 _P56	=	0x00ce
                           0000CF   615 _P57	=	0x00cf
                           0000E8   616 _P60	=	0x00e8
                           0000E9   617 _P61	=	0x00e9
                           0000EA   618 _P62	=	0x00ea
                           0000EB   619 _P63	=	0x00eb
                           0000EC   620 _P64	=	0x00ec
                           0000ED   621 _P65	=	0x00ed
                           0000EE   622 _P66	=	0x00ee
                           0000EF   623 _P67	=	0x00ef
                           0000F8   624 _P70	=	0x00f8
                           0000F9   625 _P71	=	0x00f9
                           0000FA   626 _P72	=	0x00fa
                           0000FB   627 _P73	=	0x00fb
                           0000FC   628 _P74	=	0x00fc
                           0000FD   629 _P75	=	0x00fd
                           0000FE   630 _P76	=	0x00fe
                           0000FF   631 _P77	=	0x00ff
                           0000AF   632 _EA	=	0x00af
                           0000AE   633 _ELVD	=	0x00ae
                           0000AD   634 _EADC	=	0x00ad
                           0000AC   635 _ES	=	0x00ac
                           0000AB   636 _ET1	=	0x00ab
                           0000AA   637 _EX1	=	0x00aa
                           0000A9   638 _ET0	=	0x00a9
                           0000A8   639 _EX0	=	0x00a8
                           0000BF   640 _PPCA	=	0x00bf
                           0000BE   641 _PLVD	=	0x00be
                           0000BD   642 _PADC	=	0x00bd
                           0000BC   643 _PS	=	0x00bc
                           0000BB   644 _PT1	=	0x00bb
                           0000BA   645 _PX1	=	0x00ba
                           0000B9   646 _PT0	=	0x00b9
                           0000B8   647 _PX0	=	0x00b8
                           00008F   648 _TF1	=	0x008f
                           00008E   649 _TR1	=	0x008e
                           00008D   650 _TF0	=	0x008d
                           00008C   651 _TR0	=	0x008c
                           00008B   652 _IE1	=	0x008b
                           00008A   653 _IT1	=	0x008a
                           000089   654 _IE0	=	0x0089
                           000088   655 _IT0	=	0x0088
                           00009F   656 _SM0	=	0x009f
                           00009E   657 _SM1	=	0x009e
                           00009D   658 _SM2	=	0x009d
                           00009C   659 _REN	=	0x009c
                           00009B   660 _TB8	=	0x009b
                           00009A   661 _RB8	=	0x009a
                           000099   662 _TI	=	0x0099
                           000098   663 _RI	=	0x0098
                           0000DF   664 _CF	=	0x00df
                           0000DE   665 _CR	=	0x00de
                           0000DA   666 _CCF2	=	0x00da
                           0000D9   667 _CCF1	=	0x00d9
                           0000D8   668 _CCF0	=	0x00d8
                                    669 ;--------------------------------------------------------
                                    670 ; overlayable register banks
                                    671 ;--------------------------------------------------------
                                    672 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        673 	.ds 8
                                    674 	.area REG_BANK_1	(REL,OVR,DATA)
      000008                        675 	.ds 8
                                    676 	.area REG_BANK_2	(REL,OVR,DATA)
      000010                        677 	.ds 8
                                    678 ;--------------------------------------------------------
                                    679 ; overlayable bit register bank
                                    680 ;--------------------------------------------------------
                                    681 	.area BIT_BANK	(REL,OVR,DATA)
      00002A                        682 bits:
      00002A                        683 	.ds 1
                           008000   684 	b0 = bits[0]
                           008100   685 	b1 = bits[1]
                           008200   686 	b2 = bits[2]
                           008300   687 	b3 = bits[3]
                           008400   688 	b4 = bits[4]
                           008500   689 	b5 = bits[5]
                           008600   690 	b6 = bits[6]
                           008700   691 	b7 = bits[7]
                                    692 ;--------------------------------------------------------
                                    693 ; internal ram data
                                    694 ;--------------------------------------------------------
                                    695 	.area DSEG    (DATA)
      000049                        696 _second::
      000049                        697 	.ds 1
      00004A                        698 _minute::
      00004A                        699 	.ds 1
      00004B                        700 _hour::
      00004B                        701 	.ds 1
      00004C                        702 _hour12::
      00004C                        703 	.ds 1
      00004D                        704 _gio::
      00004D                        705 	.ds 4
      000051                        706 _phut::
      000051                        707 	.ds 4
      000055                        708 _step_index::
      000055                        709 	.ds 1
      000056                        710 _motor_index::
      000056                        711 	.ds 1
      000057                        712 _motor_index2::
      000057                        713 	.ds 1
      000058                        714 _kiem_tra_den_now_65536_19:
      000058                        715 	.ds 1
      000059                        716 _gsm_sendandcheck_PARM_2:
      000059                        717 	.ds 1
      00005A                        718 _gsm_sendandcheck_PARM_3:
      00005A                        719 	.ds 1
      00005B                        720 _gsm_sendandcheck_PARM_4:
      00005B                        721 	.ds 3
      00005E                        722 _gsm_sendandcheck_cmd_65536_79:
      00005E                        723 	.ds 3
      000061                        724 _gsm_sendandcheck_sloc0_1_0:
      000061                        725 	.ds 3
      000064                        726 _gsm_sendandcheck_sloc1_1_0:
      000064                        727 	.ds 3
      000067                        728 _xu_ly_tin_nhan_phutdelta_65537_185:
      000067                        729 	.ds 1
      000068                        730 _xu_ly_tin_nhan_kim_index_65537_185:
      000068                        731 	.ds 1
      000069                        732 _xu_ly_tin_nhan_sloc0_1_0:
      000069                        733 	.ds 1
      00006A                        734 _xu_ly_tin_nhan_sloc1_1_0:
      00006A                        735 	.ds 1
      00006B                        736 _xu_ly_tin_nhan_sloc2_1_0:
      00006B                        737 	.ds 1
      00006C                        738 _xu_ly_tin_nhan_sloc3_1_0:
      00006C                        739 	.ds 1
      00006D                        740 _xu_ly_tin_nhan_sloc4_1_0:
      00006D                        741 	.ds 1
      00006E                        742 _xu_ly_tin_nhan_sloc5_1_0:
      00006E                        743 	.ds 1
      00006F                        744 _xu_ly_tin_nhan_sloc6_1_0:
      00006F                        745 	.ds 2
      000071                        746 _xu_ly_tin_nhan_sloc7_1_0:
      000071                        747 	.ds 2
      000073                        748 _main_giotemp_65536_253:
      000073                        749 	.ds 1
      000074                        750 _main_debug_dem_131073_263:
      000074                        751 	.ds 1
      000075                        752 _main_mp3temp_131073_263:
      000075                        753 	.ds 1
      000076                        754 _main_retry_131073_284:
      000076                        755 	.ds 1
      000077                        756 _main_retry_131073_287:
      000077                        757 	.ds 1
      000078                        758 _main_sloc0_1_0:
      000078                        759 	.ds 2
      00007A                        760 _main_sloc1_1_0:
      00007A                        761 	.ds 1
      00007B                        762 _main_sloc2_1_0:
      00007B                        763 	.ds 2
                                    764 ;--------------------------------------------------------
                                    765 ; overlayable items in internal ram
                                    766 ;--------------------------------------------------------
                                    767 	.area	OSEG    (OVR,DATA)
                                    768 ;--------------------------------------------------------
                                    769 ; Stack segment in internal ram
                                    770 ;--------------------------------------------------------
                                    771 	.area	SSEG
      000083                        772 __start__stack:
      000083                        773 	.ds	1
                                    774 
                                    775 ;--------------------------------------------------------
                                    776 ; indirectly addressable internal ram data
                                    777 ;--------------------------------------------------------
                                    778 	.area ISEG    (DATA)
      00007D                        779 _dien_ap_nguon::
      00007D                        780 	.ds 1
      00007E                        781 _mp3_status::
      00007E                        782 	.ds 1
      00007F                        783 _mp3_date::
      00007F                        784 	.ds 1
      000080                        785 _mp3_hour::
      000080                        786 	.ds 1
      000081                        787 _mp3_minute::
      000081                        788 	.ds 1
      000082                        789 _mp3_doi_start::
      000082                        790 	.ds 1
                                    791 ;--------------------------------------------------------
                                    792 ; absolute internal ram data
                                    793 ;--------------------------------------------------------
                                    794 	.area IABS    (ABS,DATA)
                                    795 	.area IABS    (ABS,DATA)
                                    796 ;--------------------------------------------------------
                                    797 ; bit data
                                    798 ;--------------------------------------------------------
                                    799 	.area BSEG    (BIT)
      000002                        800 _dien_ap_thap::
      000002                        801 	.ds 1
      000003                        802 _da_gui_bao_cao::
      000003                        803 	.ds 1
      000004                        804 _da_gui_bao_cao_thang::
      000004                        805 	.ds 1
      000005                        806 _gsm_reset::
      000005                        807 	.ds 1
      000006                        808 _co_cuoc_goi_toi::
      000006                        809 	.ds 1
      000007                        810 _goi_dien_thoai::
      000007                        811 	.ds 1
      000008                        812 _phone_chinh_so_sanh_that_bai::
      000008                        813 	.ds 1
      000009                        814 _phone_phu_so_sanh_that_bai::
      000009                        815 	.ds 1
      00000A                        816 _bat_phone_phu::
      00000A                        817 	.ds 1
      00000B                        818 _phone_header::
      00000B                        819 	.ds 1
      00000C                        820 _co_tin_nhan_moi::
      00000C                        821 	.ds 1
      00000D                        822 _pin_chinh_xac::
      00000D                        823 	.ds 1
      00000E                        824 _sms_dang_xu_ly::
      00000E                        825 	.ds 1
      00000F                        826 _have_cusd::
      00000F                        827 	.ds 1
      000010                        828 _lenh_khong_hop_le::
      000010                        829 	.ds 1
      000011                        830 _have_quote::
      000011                        831 	.ds 1
      000012                        832 _motorDir::
      000012                        833 	.ds 1
      000013                        834 _motorDir1::
      000013                        835 	.ds 1
      000014                        836 _motorDir2::
      000014                        837 	.ds 1
      000015                        838 _trang_thai_cam::
      000015                        839 	.ds 1
      000016                        840 _trang_thai_cam2::
      000016                        841 	.ds 1
      000017                        842 _cam_vao::
      000017                        843 	.ds 1
      000018                        844 _cam_vao2::
      000018                        845 	.ds 1
      000019                        846 _cam_vao_han::
      000019                        847 	.ds 1
      00001A                        848 _cam_vao_han2::
      00001A                        849 	.ds 1
      00001B                        850 _cam_ra::
      00001B                        851 	.ds 1
      00001C                        852 _cam_ra2::
      00001C                        853 	.ds 1
      00001D                        854 _GPS_time::
      00001D                        855 	.ds 1
      00001E                        856 _giay_out::
      00001E                        857 	.ds 1
      00001F                        858 _phut_out::
      00001F                        859 	.ds 1
      000020                        860 _flip_pulse::
      000020                        861 	.ds 1
      000021                        862 _phim_mode_xuong::
      000021                        863 	.ds 1
      000022                        864 _phim_mode_nhan::
      000022                        865 	.ds 1
      000023                        866 _phim_mode_cu::
      000023                        867 	.ds 1
      000024                        868 _phim_mode_giu::
      000024                        869 	.ds 1
      000025                        870 _phim_back_xuong::
      000025                        871 	.ds 1
      000026                        872 _phim_back_nhan::
      000026                        873 	.ds 1
      000027                        874 _phim_back_cu::
      000027                        875 	.ds 1
      000028                        876 _phim_back_giu::
      000028                        877 	.ds 1
      000029                        878 _phim_cong_xuong::
      000029                        879 	.ds 1
      00002A                        880 _phim_cong_nhan::
      00002A                        881 	.ds 1
      00002B                        882 _phim_cong_cu::
      00002B                        883 	.ds 1
      00002C                        884 _phim_cong_giu::
      00002C                        885 	.ds 1
      00002D                        886 _chop::
      00002D                        887 	.ds 1
      00002E                        888 _gui_lenh_thanh_cong::
      00002E                        889 	.ds 1
      00002F                        890 _have_not::
      00002F                        891 	.ds 1
      000030                        892 _nosim::
      000030                        893 	.ds 1
      000031                        894 _error::
      000031                        895 	.ds 1
      000032                        896 _skip_gsm_cmd::
      000032                        897 	.ds 1
      000033                        898 _test_gps::
      000033                        899 	.ds 1
      000034                        900 _may_dc::
      000034                        901 	.ds 1
      000035                        902 _atmel_phat::
      000035                        903 	.ds 1
      000036                        904 _motor_dung::
      000036                        905 	.ds 1
      000037                        906 _motor_debug::
      000037                        907 	.ds 1
      000038                        908 _mat_xung_giay::
      000038                        909 	.ds 1
      000039                        910 _loi_cam_motor1::
      000039                        911 	.ds 1
      00003A                        912 _loi_cam_motor2::
      00003A                        913 	.ds 1
      00003B                        914 _loi_cam_motor3::
      00003B                        915 	.ds 1
      00003C                        916 _loi_cam_motor4::
      00003C                        917 	.ds 1
      00003D                        918 _loi_eeprom_tat_mo_den::
      00003D                        919 	.ds 1
      00003E                        920 _bao_cao_dien_ap_thap::
      00003E                        921 	.ds 1
      00003F                        922 _lcd_update_chop::
      00003F                        923 	.ds 1
      000040                        924 _PCA_Handler_sloc0_1_0:
      000040                        925 	.ds 1
      000041                        926 _cam_phim_sloc0_1_0:
      000041                        927 	.ds 1
      000042                        928 _send_sms_PARM_1:
      000042                        929 	.ds 1
      000043                        930 _send_thong_so_rut_gon_PARM_1:
      000043                        931 	.ds 1
      000044                        932 _send_gio_thuc_PARM_1:
      000044                        933 	.ds 1
      000045                        934 _send_thong_so_PARM_1:
      000045                        935 	.ds 1
      000046                        936 _baocaosms_PARM_1:
      000046                        937 	.ds 1
      000047                        938 _baocaoden_PARM_1:
      000047                        939 	.ds 1
      000048                        940 _gsm_thietlapngaygiothuc_GPS_time_temp_65536_124:
      000048                        941 	.ds 1
      000049                        942 _gsm_thietlapngaygiothuc_sloc0_1_0:
      000049                        943 	.ds 1
      00004A                        944 _gsm_laygio_gps_GPS_time_temp_65536_141:
      00004A                        945 	.ds 1
      00004B                        946 _gsm_serial_interrupt_sloc0_1_0:
      00004B                        947 	.ds 1
      00004C                        948 _xu_ly_tin_nhan_sloc8_1_0:
      00004C                        949 	.ds 1
      00004D                        950 _main_debug_131073_263:
      00004D                        951 	.ds 1
      00004E                        952 _main_sloc3_1_0:
      00004E                        953 	.ds 1
                                    954 ;--------------------------------------------------------
                                    955 ; paged external ram data
                                    956 ;--------------------------------------------------------
                                    957 	.area PSEG    (PAG,XDATA)
                                    958 ;--------------------------------------------------------
                                    959 ; external ram data
                                    960 ;--------------------------------------------------------
                                    961 	.area XSEG    (XDATA)
      000001                        962 _phone_chinh::
      000001                        963 	.ds 11
      00000C                        964 _phone::
      00000C                        965 	.ds 11
      000017                        966 _lenh_sms::
      000017                        967 	.ds 161
      0000B8                        968 _gsm_delay_reset::
      0000B8                        969 	.ds 1
      0000B9                        970 _so_lan_goi_dien::
      0000B9                        971 	.ds 1
      0000BA                        972 _delay_cuoc_goi_ke_tiep::
      0000BA                        973 	.ds 1
      0000BB                        974 _sms_index::
      0000BB                        975 	.ds 1
      0000BC                        976 _message_index::
      0000BC                        977 	.ds 1
      0000BD                        978 _eeprom_buf::
      0000BD                        979 	.ds 32
      0000DD                        980 _date::
      0000DD                        981 	.ds 1
      0000DE                        982 _day::
      0000DE                        983 	.ds 1
      0000DF                        984 _month::
      0000DF                        985 	.ds 1
      0000E0                        986 _year::
      0000E0                        987 	.ds 1
      0000E1                        988 _canhkim::
      0000E1                        989 	.ds 1
      0000E2                        990 _may_canh_kim::
      0000E2                        991 	.ds 1
      0000E3                        992 _delay_ve_kim::
      0000E3                        993 	.ds 1
      0000E4                        994 _PCA_Timer0::
      0000E4                        995 	.ds 2
      0000E6                        996 _ngay_reset_con_lai::
      0000E6                        997 	.ds 1
      0000E7                        998 _xung_giay_check::
      0000E7                        999 	.ds 1
      0000E8                       1000 _thoi_gian_doi_doc_cam::
      0000E8                       1001 	.ds 4
      0000EC                       1002 _thoi_gian_doi_cam_chuan::
      0000EC                       1003 	.ds 1
      0000ED                       1004 _toc_do_motor_step::
      0000ED                       1005 	.ds 1
      0000EE                       1006 _lcd_index::
      0000EE                       1007 	.ds 1
      0000EF                       1008 _lcd_process_index::
      0000EF                       1009 	.ds 1
      0000F0                       1010 _lcd_data_index::
      0000F0                       1011 	.ds 1
      0000F1                       1012 _phim_mode_doi::
      0000F1                       1013 	.ds 1
      0000F2                       1014 _phim_back_doi::
      0000F2                       1015 	.ds 1
      0000F3                       1016 _phim_cong_doi::
      0000F3                       1017 	.ds 1
      0000F4                       1018 _mode::
      0000F4                       1019 	.ds 1
      0000F5                       1020 _sub_mode::
      0000F5                       1021 	.ds 1
      0000F6                       1022 _mode_wait::
      0000F6                       1023 	.ds 1
      0000F7                       1024 _song_name::
      0000F7                       1025 	.ds 2
      0000F9                       1026 _nha_mang::
      0000F9                       1027 	.ds 1
      0000FA                       1028 _signal::
      0000FA                       1029 	.ds 1
      0000FB                       1030 _connect::
      0000FB                       1031 	.ds 1
      0000FC                       1032 _connect_time_out::
      0000FC                       1033 	.ds 1
      0000FD                       1034 _total_try_time_out::
      0000FD                       1035 	.ds 1
      0000FE                       1036 _gsm_serial_cmd::
      0000FE                       1037 	.ds 1
      0000FF                       1038 _have_time::
      0000FF                       1039 	.ds 1
      000100                       1040 _gsm_receive_pointer::
      000100                       1041 	.ds 1
      000101                       1042 _date_pointer::
      000101                       1043 	.ds 1
      000102                       1044 _gsm_receive_buf::
      000102                       1045 	.ds 15
      000111                       1046 _date_str::
      000111                       1047 	.ds 30
      00012F                       1048 _so_motor::
      00012F                       1049 	.ds 1
      000130                       1050 _max_second::
      000130                       1051 	.ds 1
      000131                       1052 _sim_test_sec::
      000131                       1053 	.ds 1
      000132                       1054 _sms_on::
      000132                       1055 	.ds 1
      000133                       1056 _phut_sac_xa_acqui_con_lai::
      000133                       1057 	.ds 1
      000134                       1058 _xu_ly_tin_nhan_i_65537_185:
      000134                       1059 	.ds 1
      000135                       1060 _main_ngaytemp_65536_253:
      000135                       1061 	.ds 1
      000136                       1062 _main_thangtemp_65536_253:
      000136                       1063 	.ds 1
      000137                       1064 _main_namtemp_65536_253:
      000137                       1065 	.ds 1
      000138                       1066 _main_thutemp_65536_253:
      000138                       1067 	.ds 1
      000139                       1068 _main_i_65537_254:
      000139                       1069 	.ds 1
                                   1070 ;--------------------------------------------------------
                                   1071 ; absolute external ram data
                                   1072 ;--------------------------------------------------------
                                   1073 	.area XABS    (ABS,XDATA)
                                   1074 ;--------------------------------------------------------
                                   1075 ; external initialized ram data
                                   1076 ;--------------------------------------------------------
                                   1077 	.area XISEG   (XDATA)
      000144                       1078 _cnt::
      000144                       1079 	.ds 1
      000145                       1080 _counter_xung_giay::
      000145                       1081 	.ds 1
                                   1082 	.area HOME    (CODE)
                                   1083 	.area GSINIT0 (CODE)
                                   1084 	.area GSINIT1 (CODE)
                                   1085 	.area GSINIT2 (CODE)
                                   1086 	.area GSINIT3 (CODE)
                                   1087 	.area GSINIT4 (CODE)
                                   1088 	.area GSINIT5 (CODE)
                                   1089 	.area GSINIT  (CODE)
                                   1090 	.area GSFINAL (CODE)
                                   1091 	.area CSEG    (CODE)
                                   1092 ;--------------------------------------------------------
                                   1093 ; interrupt vector
                                   1094 ;--------------------------------------------------------
                                   1095 	.area HOME    (CODE)
      000000                       1096 __interrupt_vect:
      000000 02 00 49         [24] 1097 	ljmp	__sdcc_gsinit_startup
      000003 02 10 E3         [24] 1098 	ljmp	_clock_servide
      000006                       1099 	.ds	5
      00000B 02 14 A2         [24] 1100 	ljmp	_cam_phim
      00000E                       1101 	.ds	5
      000013 32               [24] 1102 	reti
      000014                       1103 	.ds	7
      00001B 32               [24] 1104 	reti
      00001C                       1105 	.ds	7
      000023 02 2A 65         [24] 1106 	ljmp	_gsm_serial_interrupt
      000026                       1107 	.ds	5
      00002B 02 82 39         [24] 1108 	ljmp	_adc_isr
      00002E                       1109 	.ds	5
      000033 32               [24] 1110 	reti
      000034                       1111 	.ds	7
      00003B 02 11 33         [24] 1112 	ljmp	_PCA_Handler
      00003E                       1113 	.ds	5
      000043 02 82 29         [24] 1114 	ljmp	_mp3_serial_interupt
                                   1115 ;--------------------------------------------------------
                                   1116 ; global & static initialisations
                                   1117 ;--------------------------------------------------------
                                   1118 	.area HOME    (CODE)
                                   1119 	.area GSINIT  (CODE)
                                   1120 	.area GSFINAL (CODE)
                                   1121 	.area GSINIT  (CODE)
                                   1122 	.globl __sdcc_gsinit_startup
                                   1123 	.globl __sdcc_program_startup
                                   1124 	.globl __start__stack
                                   1125 	.globl __mcs51_genXINIT
                                   1126 	.globl __mcs51_genXRAMCLEAR
                                   1127 	.globl __mcs51_genRAMCLEAR
                                   1128 ;	include/motor_cam_phim.c:146: __bit lcd_update_chop = 0;
                                   1129 ;	assignBit
      0000A2 C2 3F            [12] 1130 	clr	_lcd_update_chop
                                   1131 	.area GSFINAL (CODE)
      0000A4 02 00 46         [24] 1132 	ljmp	__sdcc_program_startup
                                   1133 ;--------------------------------------------------------
                                   1134 ; Home
                                   1135 ;--------------------------------------------------------
                                   1136 	.area HOME    (CODE)
                                   1137 	.area HOME    (CODE)
      000046                       1138 __sdcc_program_startup:
      000046 02 57 21         [24] 1139 	ljmp	_main
                                   1140 ;	return from main will return to caller
                                   1141 ;--------------------------------------------------------
                                   1142 ; code
                                   1143 ;--------------------------------------------------------
                                   1144 	.area CSEG    (CODE)
                                   1145 ;------------------------------------------------------------
                                   1146 ;Allocation info for local variables in function 'kiem_tra_den'
                                   1147 ;------------------------------------------------------------
                                   1148 ;i                         Allocated to registers r6 
                                   1149 ;now                       Allocated with name '_kiem_tra_den_now_65536_19'
                                   1150 ;------------------------------------------------------------
                                   1151 ;	include/chuong_trinh.c:3: void kiem_tra_den(){
                                   1152 ;	-----------------------------------------
                                   1153 ;	 function kiem_tra_den
                                   1154 ;	-----------------------------------------
      0008A4                       1155 _kiem_tra_den:
                           000007  1156 	ar7 = 0x07
                           000006  1157 	ar6 = 0x06
                           000005  1158 	ar5 = 0x05
                           000004  1159 	ar4 = 0x04
                           000003  1160 	ar3 = 0x03
                           000002  1161 	ar2 = 0x02
                           000001  1162 	ar1 = 0x01
                           000000  1163 	ar0 = 0x00
                                   1164 ;	include/chuong_trinh.c:4: u8 __data i,now = hour*6+minute/10;
      0008A4 E5 4B            [12] 1165 	mov	a,_hour
      0008A6 75 F0 06         [24] 1166 	mov	b,#0x06
      0008A9 A4               [48] 1167 	mul	ab
      0008AA FF               [12] 1168 	mov	r7,a
      0008AB AD 4A            [24] 1169 	mov	r5,_minute
      0008AD 7E 00            [12] 1170 	mov	r6,#0x00
      0008AF 75 1B 0A         [24] 1171 	mov	__divsint_PARM_2,#0x0a
                                   1172 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      0008B2 8E 1C            [24] 1173 	mov	(__divsint_PARM_2 + 1),r6
      0008B4 8D 82            [24] 1174 	mov	dpl,r5
      0008B6 8E 83            [24] 1175 	mov	dph,r6
      0008B8 C0 07            [24] 1176 	push	ar7
      0008BA 12 84 9D         [24] 1177 	lcall	__divsint
      0008BD AD 82            [24] 1178 	mov	r5,dpl
      0008BF D0 07            [24] 1179 	pop	ar7
      0008C1 ED               [12] 1180 	mov	a,r5
      0008C2 2F               [12] 1181 	add	a,r7
      0008C3 F5 58            [12] 1182 	mov	_kiem_tra_den_now_65536_19,a
                                   1183 ;	include/chuong_trinh.c:5: for(i=1;i<eep_tatmoden[0];i++)
      0008C5 7E 01            [12] 1184 	mov	r6,#0x01
      0008C7 7D 01            [12] 1185 	mov	r5,#0x01
      0008C9                       1186 00108$:
      0008C9 90 F0 07         [24] 1187 	mov	dptr,#_eep_tatmoden
      0008CC E4               [12] 1188 	clr	a
      0008CD 93               [24] 1189 	movc	a,@a+dptr
      0008CE FC               [12] 1190 	mov	r4,a
      0008CF C3               [12] 1191 	clr	c
      0008D0 ED               [12] 1192 	mov	a,r5
      0008D1 9C               [12] 1193 	subb	a,r4
      0008D2 40 03            [24] 1194 	jc	00132$
      0008D4 02 09 6E         [24] 1195 	ljmp	00103$
      0008D7                       1196 00132$:
                                   1197 ;	include/chuong_trinh.c:6: if((1+(eep_tatmoden[i]<eep_tatmoden[i+1]) + (now<eep_tatmoden[i]) + (now<eep_tatmoden[i+1]))%2){
      0008D7 ED               [12] 1198 	mov	a,r5
      0008D8 90 F0 07         [24] 1199 	mov	dptr,#_eep_tatmoden
      0008DB 93               [24] 1200 	movc	a,@a+dptr
      0008DC FC               [12] 1201 	mov	r4,a
      0008DD 8D 03            [24] 1202 	mov	ar3,r5
      0008DF 0B               [12] 1203 	inc	r3
      0008E0 EB               [12] 1204 	mov	a,r3
      0008E1 33               [12] 1205 	rlc	a
      0008E2 95 E0            [12] 1206 	subb	a,acc
      0008E4 FA               [12] 1207 	mov	r2,a
      0008E5 EB               [12] 1208 	mov	a,r3
      0008E6 24 07            [12] 1209 	add	a,#_eep_tatmoden
      0008E8 F5 82            [12] 1210 	mov	dpl,a
      0008EA EA               [12] 1211 	mov	a,r2
      0008EB 34 F0            [12] 1212 	addc	a,#(_eep_tatmoden >> 8)
      0008ED F5 83            [12] 1213 	mov	dph,a
      0008EF E4               [12] 1214 	clr	a
      0008F0 93               [24] 1215 	movc	a,@a+dptr
      0008F1 F9               [12] 1216 	mov	r1,a
      0008F2 C3               [12] 1217 	clr	c
      0008F3 EC               [12] 1218 	mov	a,r4
      0008F4 99               [12] 1219 	subb	a,r1
      0008F5 E4               [12] 1220 	clr	a
      0008F6 33               [12] 1221 	rlc	a
      0008F7 F9               [12] 1222 	mov	r1,a
      0008F8 7C 00            [12] 1223 	mov	r4,#0x00
      0008FA 09               [12] 1224 	inc	r1
      0008FB B9 00 01         [24] 1225 	cjne	r1,#0x00,00133$
      0008FE 0C               [12] 1226 	inc	r4
      0008FF                       1227 00133$:
      0008FF ED               [12] 1228 	mov	a,r5
      000900 90 F0 07         [24] 1229 	mov	dptr,#_eep_tatmoden
      000903 93               [24] 1230 	movc	a,@a+dptr
      000904 F8               [12] 1231 	mov	r0,a
      000905 C3               [12] 1232 	clr	c
      000906 E5 58            [12] 1233 	mov	a,_kiem_tra_den_now_65536_19
      000908 98               [12] 1234 	subb	a,r0
      000909 E4               [12] 1235 	clr	a
      00090A 33               [12] 1236 	rlc	a
      00090B 7F 00            [12] 1237 	mov	r7,#0x00
      00090D 29               [12] 1238 	add	a,r1
      00090E F9               [12] 1239 	mov	r1,a
      00090F EF               [12] 1240 	mov	a,r7
      000910 3C               [12] 1241 	addc	a,r4
      000911 FC               [12] 1242 	mov	r4,a
      000912 EB               [12] 1243 	mov	a,r3
      000913 24 07            [12] 1244 	add	a,#_eep_tatmoden
      000915 F5 82            [12] 1245 	mov	dpl,a
      000917 EA               [12] 1246 	mov	a,r2
      000918 34 F0            [12] 1247 	addc	a,#(_eep_tatmoden >> 8)
      00091A F5 83            [12] 1248 	mov	dph,a
      00091C E4               [12] 1249 	clr	a
      00091D 93               [24] 1250 	movc	a,@a+dptr
      00091E FF               [12] 1251 	mov	r7,a
      00091F C3               [12] 1252 	clr	c
      000920 E5 58            [12] 1253 	mov	a,_kiem_tra_den_now_65536_19
      000922 9F               [12] 1254 	subb	a,r7
      000923 E4               [12] 1255 	clr	a
      000924 33               [12] 1256 	rlc	a
      000925 7B 00            [12] 1257 	mov	r3,#0x00
      000927 29               [12] 1258 	add	a,r1
      000928 F5 82            [12] 1259 	mov	dpl,a
      00092A EB               [12] 1260 	mov	a,r3
      00092B 3C               [12] 1261 	addc	a,r4
      00092C F5 83            [12] 1262 	mov	dph,a
      00092E 75 1B 02         [24] 1263 	mov	__modsint_PARM_2,#0x02
                                   1264 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      000931 8B 1C            [24] 1265 	mov	(__modsint_PARM_2 + 1),r3
      000933 C0 06            [24] 1266 	push	ar6
      000935 C0 05            [24] 1267 	push	ar5
      000937 12 84 67         [24] 1268 	lcall	__modsint
      00093A E5 82            [12] 1269 	mov	a,dpl
      00093C 85 83 F0         [24] 1270 	mov	b,dph
      00093F D0 05            [24] 1271 	pop	ar5
      000941 D0 06            [24] 1272 	pop	ar6
      000943 45 F0            [12] 1273 	orl	a,b
      000945 60 21            [24] 1274 	jz	00109$
                                   1275 ;	include/chuong_trinh.c:7: DenRelay = (i+1)%2; break;
      000947 8E 04            [24] 1276 	mov	ar4,r6
      000949 7F 00            [12] 1277 	mov	r7,#0x00
      00094B 8C 82            [24] 1278 	mov	dpl,r4
      00094D 8F 83            [24] 1279 	mov	dph,r7
      00094F A3               [24] 1280 	inc	dptr
      000950 75 1B 02         [24] 1281 	mov	__modsint_PARM_2,#0x02
                                   1282 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      000953 8F 1C            [24] 1283 	mov	(__modsint_PARM_2 + 1),r7
      000955 C0 06            [24] 1284 	push	ar6
      000957 12 84 67         [24] 1285 	lcall	__modsint
      00095A AC 82            [24] 1286 	mov	r4,dpl
      00095C AF 83            [24] 1287 	mov	r7,dph
      00095E D0 06            [24] 1288 	pop	ar6
                                   1289 ;	assignBit
      000960 EC               [12] 1290 	mov	a,r4
      000961 4F               [12] 1291 	orl	a,r7
      000962 24 FF            [12] 1292 	add	a,#0xff
      000964 92 A1            [24] 1293 	mov	_P21,c
      000966 80 06            [24] 1294 	sjmp	00103$
      000968                       1295 00109$:
                                   1296 ;	include/chuong_trinh.c:5: for(i=1;i<eep_tatmoden[0];i++)
      000968 0D               [12] 1297 	inc	r5
      000969 8D 06            [24] 1298 	mov	ar6,r5
      00096B 02 08 C9         [24] 1299 	ljmp	00108$
      00096E                       1300 00103$:
                                   1301 ;	include/chuong_trinh.c:10: if( i==eep_tatmoden[0] && (1+(eep_tatmoden[i]<eep_tatmoden[1]) + (now<eep_tatmoden[i]) + (now<eep_tatmoden[1]))%2)
      00096E 90 F0 07         [24] 1302 	mov	dptr,#_eep_tatmoden
      000971 E4               [12] 1303 	clr	a
      000972 93               [24] 1304 	movc	a,@a+dptr
      000973 FF               [12] 1305 	mov	r7,a
      000974 EE               [12] 1306 	mov	a,r6
      000975 B5 07 02         [24] 1307 	cjne	a,ar7,00135$
      000978 80 01            [24] 1308 	sjmp	00136$
      00097A                       1309 00135$:
      00097A 22               [24] 1310 	ret
      00097B                       1311 00136$:
      00097B EE               [12] 1312 	mov	a,r6
      00097C 90 F0 07         [24] 1313 	mov	dptr,#_eep_tatmoden
      00097F 93               [24] 1314 	movc	a,@a+dptr
      000980 FF               [12] 1315 	mov	r7,a
      000981 90 F0 08         [24] 1316 	mov	dptr,#(_eep_tatmoden + 0x0001)
      000984 E4               [12] 1317 	clr	a
      000985 93               [24] 1318 	movc	a,@a+dptr
      000986 FD               [12] 1319 	mov	r5,a
      000987 C3               [12] 1320 	clr	c
      000988 EF               [12] 1321 	mov	a,r7
      000989 9D               [12] 1322 	subb	a,r5
      00098A E4               [12] 1323 	clr	a
      00098B 33               [12] 1324 	rlc	a
      00098C FF               [12] 1325 	mov	r7,a
      00098D 7D 00            [12] 1326 	mov	r5,#0x00
      00098F 0F               [12] 1327 	inc	r7
      000990 BF 00 01         [24] 1328 	cjne	r7,#0x00,00137$
      000993 0D               [12] 1329 	inc	r5
      000994                       1330 00137$:
      000994 EE               [12] 1331 	mov	a,r6
      000995 90 F0 07         [24] 1332 	mov	dptr,#_eep_tatmoden
      000998 93               [24] 1333 	movc	a,@a+dptr
      000999 FC               [12] 1334 	mov	r4,a
      00099A C3               [12] 1335 	clr	c
      00099B E5 58            [12] 1336 	mov	a,_kiem_tra_den_now_65536_19
      00099D 9C               [12] 1337 	subb	a,r4
      00099E E4               [12] 1338 	clr	a
      00099F 33               [12] 1339 	rlc	a
      0009A0 7B 00            [12] 1340 	mov	r3,#0x00
      0009A2 2F               [12] 1341 	add	a,r7
      0009A3 FF               [12] 1342 	mov	r7,a
      0009A4 EB               [12] 1343 	mov	a,r3
      0009A5 3D               [12] 1344 	addc	a,r5
      0009A6 FD               [12] 1345 	mov	r5,a
      0009A7 90 F0 08         [24] 1346 	mov	dptr,#(_eep_tatmoden + 0x0001)
      0009AA E4               [12] 1347 	clr	a
      0009AB 93               [24] 1348 	movc	a,@a+dptr
      0009AC FC               [12] 1349 	mov	r4,a
      0009AD C3               [12] 1350 	clr	c
      0009AE E5 58            [12] 1351 	mov	a,_kiem_tra_den_now_65536_19
      0009B0 9C               [12] 1352 	subb	a,r4
      0009B1 E4               [12] 1353 	clr	a
      0009B2 33               [12] 1354 	rlc	a
      0009B3 7B 00            [12] 1355 	mov	r3,#0x00
      0009B5 2F               [12] 1356 	add	a,r7
      0009B6 F5 82            [12] 1357 	mov	dpl,a
      0009B8 EB               [12] 1358 	mov	a,r3
      0009B9 3D               [12] 1359 	addc	a,r5
      0009BA F5 83            [12] 1360 	mov	dph,a
      0009BC 75 1B 02         [24] 1361 	mov	__modsint_PARM_2,#0x02
                                   1362 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0009BF 8B 1C            [24] 1363 	mov	(__modsint_PARM_2 + 1),r3
      0009C1 C0 06            [24] 1364 	push	ar6
      0009C3 12 84 67         [24] 1365 	lcall	__modsint
      0009C6 E5 82            [12] 1366 	mov	a,dpl
      0009C8 85 83 F0         [24] 1367 	mov	b,dph
      0009CB D0 06            [24] 1368 	pop	ar6
      0009CD 45 F0            [12] 1369 	orl	a,b
      0009CF 60 19            [24] 1370 	jz	00110$
                                   1371 ;	include/chuong_trinh.c:11: DenRelay = (i+1)%2;   
      0009D1 7F 00            [12] 1372 	mov	r7,#0x00
      0009D3 8E 82            [24] 1373 	mov	dpl,r6
      0009D5 8F 83            [24] 1374 	mov	dph,r7
      0009D7 A3               [24] 1375 	inc	dptr
      0009D8 75 1B 02         [24] 1376 	mov	__modsint_PARM_2,#0x02
                                   1377 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0009DB 8F 1C            [24] 1378 	mov	(__modsint_PARM_2 + 1),r7
      0009DD 12 84 67         [24] 1379 	lcall	__modsint
      0009E0 AE 82            [24] 1380 	mov	r6,dpl
      0009E2 AF 83            [24] 1381 	mov	r7,dph
                                   1382 ;	assignBit
      0009E4 EE               [12] 1383 	mov	a,r6
      0009E5 4F               [12] 1384 	orl	a,r7
      0009E6 24 FF            [12] 1385 	add	a,#0xff
      0009E8 92 A1            [24] 1386 	mov	_P21,c
      0009EA                       1387 00110$:
                                   1388 ;	include/chuong_trinh.c:12: }
      0009EA 22               [24] 1389 	ret
                                   1390 ;------------------------------------------------------------
                                   1391 ;Allocation info for local variables in function 'kiem_tra_nhac'
                                   1392 ;------------------------------------------------------------
                                   1393 ;	include/chuong_trinh.c:14: void kiem_tra_nhac(){
                                   1394 ;	-----------------------------------------
                                   1395 ;	 function kiem_tra_nhac
                                   1396 ;	-----------------------------------------
      0009EB                       1397 _kiem_tra_nhac:
                                   1398 ;	include/chuong_trinh.c:15: switch(mp3_status){
      0009EB 78 7E            [12] 1399 	mov	r0,#_mp3_status
      0009ED B6 00 02         [24] 1400 	cjne	@r0,#0x00,00154$
      0009F0 80 10            [24] 1401 	sjmp	00101$
      0009F2                       1402 00154$:
      0009F2 78 7E            [12] 1403 	mov	r0,#_mp3_status
      0009F4 B6 01 03         [24] 1404 	cjne	@r0,#0x01,00155$
      0009F7 02 0A 82         [24] 1405 	ljmp	00116$
      0009FA                       1406 00155$:
      0009FA 78 7E            [12] 1407 	mov	r0,#_mp3_status
      0009FC B6 02 02         [24] 1408 	cjne	@r0,#0x02,00156$
      0009FF 80 67            [24] 1409 	sjmp	00110$
      000A01                       1410 00156$:
      000A01 22               [24] 1411 	ret
                                   1412 ;	include/chuong_trinh.c:16: case mp3_IDLE:
      000A02                       1413 00101$:
                                   1414 ;	include/chuong_trinh.c:17: if( mp3_hour != hour || mp3_minute!=minute ){
      000A02 78 80            [12] 1415 	mov	r0,#_mp3_hour
      000A04 E6               [12] 1416 	mov	a,@r0
      000A05 B5 4B 07         [24] 1417 	cjne	a,_hour,00107$
      000A08 78 81            [12] 1418 	mov	r0,#_mp3_minute
      000A0A E6               [12] 1419 	mov	a,@r0
      000A0B B5 4A 01         [24] 1420 	cjne	a,_minute,00159$
      000A0E 22               [24] 1421 	ret
      000A0F                       1422 00159$:
      000A0F                       1423 00107$:
                                   1424 ;	include/chuong_trinh.c:18: mp3_hour = hour;
      000A0F AF 4B            [24] 1425 	mov	r7,_hour
      000A11 78 80            [12] 1426 	mov	r0,#_mp3_hour
      000A13 A6 07            [24] 1427 	mov	@r0,ar7
                                   1428 ;	include/chuong_trinh.c:19: mp3_minute = minute;
      000A15 AE 4A            [24] 1429 	mov	r6,_minute
      000A17 78 81            [12] 1430 	mov	r0,#_mp3_minute
      000A19 A6 06            [24] 1431 	mov	@r0,ar6
                                   1432 ;	include/chuong_trinh.c:21: if(eep_mp3==2)mp3_play(10, mp3_hour,mp3_minute);
      000A1B 90 F0 10         [24] 1433 	mov	dptr,#_eep_mp3
      000A1E E4               [12] 1434 	clr	a
      000A1F 93               [24] 1435 	movc	a,@a+dptr
      000A20 FD               [12] 1436 	mov	r5,a
      000A21 BD 02 0C         [24] 1437 	cjne	r5,#0x02,00105$
      000A24 8F 19            [24] 1438 	mov	_mp3_play_PARM_2,r7
      000A26 8E 1A            [24] 1439 	mov	_mp3_play_PARM_3,r6
      000A28 75 82 0A         [24] 1440 	mov	dpl,#0x0a
      000A2B 12 82 9E         [24] 1441 	lcall	_mp3_play
      000A2E 80 2F            [24] 1442 	sjmp	00106$
      000A30                       1443 00105$:
                                   1444 ;	include/chuong_trinh.c:22: else if(!(mp3_minute%5))mp3_play(date, mp3_hour,mp3_minute);
      000A30 8E 04            [24] 1445 	mov	ar4,r6
      000A32 7D 00            [12] 1446 	mov	r5,#0x00
      000A34 75 1B 05         [24] 1447 	mov	__modsint_PARM_2,#0x05
                                   1448 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      000A37 8D 1C            [24] 1449 	mov	(__modsint_PARM_2 + 1),r5
      000A39 8C 82            [24] 1450 	mov	dpl,r4
      000A3B 8D 83            [24] 1451 	mov	dph,r5
      000A3D C0 07            [24] 1452 	push	ar7
      000A3F C0 06            [24] 1453 	push	ar6
      000A41 12 84 67         [24] 1454 	lcall	__modsint
      000A44 E5 82            [12] 1455 	mov	a,dpl
      000A46 85 83 F0         [24] 1456 	mov	b,dph
      000A49 D0 06            [24] 1457 	pop	ar6
      000A4B D0 07            [24] 1458 	pop	ar7
      000A4D 45 F0            [12] 1459 	orl	a,b
      000A4F 70 0E            [24] 1460 	jnz	00106$
      000A51 90 00 DD         [24] 1461 	mov	dptr,#_date
      000A54 E0               [24] 1462 	movx	a,@dptr
      000A55 FD               [12] 1463 	mov	r5,a
      000A56 8F 19            [24] 1464 	mov	_mp3_play_PARM_2,r7
      000A58 8E 1A            [24] 1465 	mov	_mp3_play_PARM_3,r6
      000A5A 8D 82            [24] 1466 	mov	dpl,r5
      000A5C 12 82 9E         [24] 1467 	lcall	_mp3_play
      000A5F                       1468 00106$:
                                   1469 ;	include/chuong_trinh.c:23: mp3_doi_start = 90;
      000A5F 78 82            [12] 1470 	mov	r0,#_mp3_doi_start
      000A61 76 5A            [12] 1471 	mov	@r0,#0x5a
                                   1472 ;	include/chuong_trinh.c:24: mp3_status = mp3_START;
      000A63 78 7E            [12] 1473 	mov	r0,#_mp3_status
      000A65 76 02            [12] 1474 	mov	@r0,#0x02
                                   1475 ;	include/chuong_trinh.c:26: break;
                                   1476 ;	include/chuong_trinh.c:27: case mp3_START:
      000A67 22               [24] 1477 	ret
      000A68                       1478 00110$:
                                   1479 ;	include/chuong_trinh.c:28: if(mp3_playing) mp3_status = AmplyRelay = mp3_END;
      000A68 30 92 0B         [24] 1480 	jnb	_P12,00114$
                                   1481 ;	assignBit
      000A6B D2 C2            [12] 1482 	setb	_P42
      000A6D 78 7E            [12] 1483 	mov	r0,#_mp3_status
      000A6F A2 C2            [12] 1484 	mov	c,_P42
      000A71 E4               [12] 1485 	clr	a
      000A72 33               [12] 1486 	rlc	a
      000A73 F6               [12] 1487 	mov	@r0,a
      000A74 80 0C            [24] 1488 	sjmp	00116$
      000A76                       1489 00114$:
                                   1490 ;	include/chuong_trinh.c:29: else if(mp3_doi_start--) break;
      000A76 78 82            [12] 1491 	mov	r0,#_mp3_doi_start
      000A78 86 07            [24] 1492 	mov	ar7,@r0
      000A7A 78 82            [12] 1493 	mov	r0,#_mp3_doi_start
      000A7C EF               [12] 1494 	mov	a,r7
      000A7D 14               [12] 1495 	dec	a
      000A7E F6               [12] 1496 	mov	@r0,a
      000A7F EF               [12] 1497 	mov	a,r7
      000A80 70 09            [24] 1498 	jnz	00120$
                                   1499 ;	include/chuong_trinh.c:30: case mp3_END:
      000A82                       1500 00116$:
                                   1501 ;	include/chuong_trinh.c:31: if(!mp3_playing) AmplyRelay = mp3_status = mp3_IDLE;
      000A82 20 92 06         [24] 1502 	jb	_P12,00120$
      000A85 78 7E            [12] 1503 	mov	r0,#_mp3_status
      000A87 76 00            [12] 1504 	mov	@r0,#0x00
                                   1505 ;	assignBit
      000A89 C2 C2            [12] 1506 	clr	_P42
                                   1507 ;	include/chuong_trinh.c:32: }
      000A8B                       1508 00120$:
                                   1509 ;	include/chuong_trinh.c:34: }
      000A8B 22               [24] 1510 	ret
                                   1511 ;------------------------------------------------------------
                                   1512 ;Allocation info for local variables in function 'motor_run_check'
                                   1513 ;------------------------------------------------------------
                                   1514 ;	include/motor_cam_phim.c:3: u8 motor_run_check() __reentrant {
                                   1515 ;	-----------------------------------------
                                   1516 ;	 function motor_run_check
                                   1517 ;	-----------------------------------------
      000A8C                       1518 _motor_run_check:
                                   1519 ;	include/motor_cam_phim.c:7: if (dien_ap_thap || motor_dung || mode ){ motorDir1 = 0; return 5;}
      000A8C 20 02 09         [24] 1520 	jb	_dien_ap_thap,00101$
      000A8F 20 36 06         [24] 1521 	jb	_motor_dung,00101$
      000A92 90 00 F4         [24] 1522 	mov	dptr,#_mode
      000A95 E0               [24] 1523 	movx	a,@dptr
      000A96 60 06            [24] 1524 	jz	00102$
      000A98                       1525 00101$:
                                   1526 ;	assignBit
      000A98 C2 13            [12] 1527 	clr	_motorDir1
      000A9A 75 82 05         [24] 1528 	mov	dpl,#0x05
      000A9D 22               [24] 1529 	ret
      000A9E                       1530 00102$:
                                   1531 ;	include/motor_cam_phim.c:8: if(may_canh_kim)return (canhkim && (may_canh_kim & 1))?may_canh_kim-1:5;
      000A9E 90 00 E2         [24] 1532 	mov	dptr,#_may_canh_kim
      000AA1 E0               [24] 1533 	movx	a,@dptr
      000AA2 FF               [12] 1534 	mov	r7,a
      000AA3 60 1C            [24] 1535 	jz	00106$
      000AA5 90 00 E1         [24] 1536 	mov	dptr,#_canhkim
      000AA8 E0               [24] 1537 	movx	a,@dptr
      000AA9 60 0F            [24] 1538 	jz	00132$
      000AAB EF               [12] 1539 	mov	a,r7
      000AAC 54 01            [12] 1540 	anl	a,#0x01
      000AAE FE               [12] 1541 	mov	r6,a
      000AAF 60 09            [24] 1542 	jz	00132$
      000AB1 1F               [12] 1543 	dec	r7
      000AB2 EF               [12] 1544 	mov	a,r7
      000AB3 FE               [12] 1545 	mov	r6,a
      000AB4 33               [12] 1546 	rlc	a
      000AB5 95 E0            [12] 1547 	subb	a,acc
      000AB7 FF               [12] 1548 	mov	r7,a
      000AB8 80 04            [24] 1549 	sjmp	00133$
      000ABA                       1550 00132$:
      000ABA 7E 05            [12] 1551 	mov	r6,#0x05
      000ABC 7F 00            [12] 1552 	mov	r7,#0x00
      000ABE                       1553 00133$:
      000ABE 8E 82            [24] 1554 	mov	dpl,r6
      000AC0 22               [24] 1555 	ret
      000AC1                       1556 00106$:
                                   1557 ;	include/motor_cam_phim.c:10: if(so_motor<3){
      000AC1 90 01 2F         [24] 1558 	mov	dptr,#_so_motor
      000AC4 E0               [24] 1559 	movx	a,@dptr
      000AC5 FF               [12] 1560 	mov	r7,a
      000AC6 BF 03 00         [24] 1561 	cjne	r7,#0x03,00206$
      000AC9                       1562 00206$:
      000AC9 40 03            [24] 1563 	jc	00207$
      000ACB 02 0B 5A         [24] 1564 	ljmp	00113$
      000ACE                       1565 00207$:
                                   1566 ;	include/motor_cam_phim.c:11: if(thoi_gian_doi_doc_cam[0] && (phut[0]!=minute || gio[0]!=hour12)){
      000ACE 90 00 E8         [24] 1567 	mov	dptr,#_thoi_gian_doi_doc_cam
      000AD1 E0               [24] 1568 	movx	a,@dptr
      000AD2 70 03            [24] 1569 	jnz	00208$
      000AD4 02 0B 54         [24] 1570 	ljmp	00108$
      000AD7                       1571 00208$:
      000AD7 E5 51            [12] 1572 	mov	a,_phut
      000AD9 FF               [12] 1573 	mov	r7,a
      000ADA B5 4A 07         [24] 1574 	cjne	a,_minute,00107$
      000ADD E5 4C            [12] 1575 	mov	a,_hour12
      000ADF B5 4D 02         [24] 1576 	cjne	a,_gio,00211$
      000AE2 80 70            [24] 1577 	sjmp	00108$
      000AE4                       1578 00211$:
      000AE4                       1579 00107$:
                                   1580 ;	include/motor_cam_phim.c:12: motorDir1 = (720 + gio[0]*60 + phut[0] - hour12*60 - minute) % 720 > 360;
      000AE4 85 4D 1B         [24] 1581 	mov	__mulint_PARM_2,_gio
      000AE7 75 1C 00         [24] 1582 	mov	(__mulint_PARM_2 + 1),#0x00
      000AEA 90 00 3C         [24] 1583 	mov	dptr,#0x003c
      000AED C0 07            [24] 1584 	push	ar7
      000AEF 12 83 E1         [24] 1585 	lcall	__mulint
      000AF2 E5 82            [12] 1586 	mov	a,dpl
      000AF4 85 83 F0         [24] 1587 	mov	b,dph
      000AF7 D0 07            [24] 1588 	pop	ar7
      000AF9 24 D0            [12] 1589 	add	a,#0xd0
      000AFB FD               [12] 1590 	mov	r5,a
      000AFC 74 02            [12] 1591 	mov	a,#0x02
      000AFE 35 F0            [12] 1592 	addc	a,b
      000B00 FE               [12] 1593 	mov	r6,a
      000B01 7C 00            [12] 1594 	mov	r4,#0x00
      000B03 EF               [12] 1595 	mov	a,r7
      000B04 2D               [12] 1596 	add	a,r5
      000B05 FD               [12] 1597 	mov	r5,a
      000B06 EC               [12] 1598 	mov	a,r4
      000B07 3E               [12] 1599 	addc	a,r6
      000B08 FE               [12] 1600 	mov	r6,a
      000B09 85 4C 1B         [24] 1601 	mov	__mulint_PARM_2,_hour12
                                   1602 ;	1-genFromRTrack replaced	mov	(__mulint_PARM_2 + 1),#0x00
      000B0C 8C 1C            [24] 1603 	mov	(__mulint_PARM_2 + 1),r4
      000B0E 90 00 3C         [24] 1604 	mov	dptr,#0x003c
      000B11 C0 06            [24] 1605 	push	ar6
      000B13 C0 05            [24] 1606 	push	ar5
      000B15 12 83 E1         [24] 1607 	lcall	__mulint
      000B18 AC 82            [24] 1608 	mov	r4,dpl
      000B1A AF 83            [24] 1609 	mov	r7,dph
      000B1C D0 05            [24] 1610 	pop	ar5
      000B1E D0 06            [24] 1611 	pop	ar6
      000B20 ED               [12] 1612 	mov	a,r5
      000B21 C3               [12] 1613 	clr	c
      000B22 9C               [12] 1614 	subb	a,r4
      000B23 FD               [12] 1615 	mov	r5,a
      000B24 EE               [12] 1616 	mov	a,r6
      000B25 9F               [12] 1617 	subb	a,r7
      000B26 FE               [12] 1618 	mov	r6,a
      000B27 AC 4A            [24] 1619 	mov	r4,_minute
      000B29 7F 00            [12] 1620 	mov	r7,#0x00
      000B2B ED               [12] 1621 	mov	a,r5
      000B2C C3               [12] 1622 	clr	c
      000B2D 9C               [12] 1623 	subb	a,r4
      000B2E F5 82            [12] 1624 	mov	dpl,a
      000B30 EE               [12] 1625 	mov	a,r6
      000B31 9F               [12] 1626 	subb	a,r7
      000B32 F5 83            [12] 1627 	mov	dph,a
      000B34 75 1B D0         [24] 1628 	mov	__modsint_PARM_2,#0xd0
      000B37 75 1C 02         [24] 1629 	mov	(__modsint_PARM_2 + 1),#0x02
      000B3A 12 84 67         [24] 1630 	lcall	__modsint
      000B3D AE 82            [24] 1631 	mov	r6,dpl
      000B3F AF 83            [24] 1632 	mov	r7,dph
      000B41 C3               [12] 1633 	clr	c
      000B42 74 68            [12] 1634 	mov	a,#0x68
      000B44 9E               [12] 1635 	subb	a,r6
      000B45 74 81            [12] 1636 	mov	a,#(0x01 ^ 0x80)
      000B47 8F F0            [24] 1637 	mov	b,r7
      000B49 63 F0 80         [24] 1638 	xrl	b,#0x80
      000B4C 95 F0            [12] 1639 	subb	a,b
      000B4E 92 13            [24] 1640 	mov	_motorDir1,c
                                   1641 ;	include/motor_cam_phim.c:15: return 0;
      000B50 75 82 00         [24] 1642 	mov	dpl,#0x00
      000B53 22               [24] 1643 	ret
      000B54                       1644 00108$:
                                   1645 ;	include/motor_cam_phim.c:17: }else {motorDir1 = 0; return 5;}
                                   1646 ;	assignBit
      000B54 C2 13            [12] 1647 	clr	_motorDir1
      000B56 75 82 05         [24] 1648 	mov	dpl,#0x05
      000B59 22               [24] 1649 	ret
      000B5A                       1650 00113$:
                                   1651 ;	include/motor_cam_phim.c:20: if(motor_index>1){
      000B5A E5 56            [12] 1652 	mov	a,_motor_index
      000B5C 24 FE            [12] 1653 	add	a,#0xff - 0x01
      000B5E 40 03            [24] 1654 	jc	00212$
      000B60 02 0B E9         [24] 1655 	ljmp	00119$
      000B63                       1656 00212$:
                                   1657 ;	include/motor_cam_phim.c:21: if(thoi_gian_doi_doc_cam[0] && (phut[0]!=minute || gio[0]!=hour12)){
      000B63 90 00 E8         [24] 1658 	mov	dptr,#_thoi_gian_doi_doc_cam
      000B66 E0               [24] 1659 	movx	a,@dptr
      000B67 70 03            [24] 1660 	jnz	00213$
      000B69 02 0B E9         [24] 1661 	ljmp	00119$
      000B6C                       1662 00213$:
      000B6C E5 51            [12] 1663 	mov	a,_phut
      000B6E FF               [12] 1664 	mov	r7,a
      000B6F B5 4A 07         [24] 1665 	cjne	a,_minute,00114$
      000B72 E5 4C            [12] 1666 	mov	a,_hour12
      000B74 B5 4D 02         [24] 1667 	cjne	a,_gio,00216$
      000B77 80 70            [24] 1668 	sjmp	00119$
      000B79                       1669 00216$:
      000B79                       1670 00114$:
                                   1671 ;	include/motor_cam_phim.c:22: motorDir1 = (720 + gio[0]*60 + phut[0] - hour12*60 - minute) % 720 > 360;
      000B79 85 4D 1B         [24] 1672 	mov	__mulint_PARM_2,_gio
      000B7C 75 1C 00         [24] 1673 	mov	(__mulint_PARM_2 + 1),#0x00
      000B7F 90 00 3C         [24] 1674 	mov	dptr,#0x003c
      000B82 C0 07            [24] 1675 	push	ar7
      000B84 12 83 E1         [24] 1676 	lcall	__mulint
      000B87 E5 82            [12] 1677 	mov	a,dpl
      000B89 85 83 F0         [24] 1678 	mov	b,dph
      000B8C D0 07            [24] 1679 	pop	ar7
      000B8E 24 D0            [12] 1680 	add	a,#0xd0
      000B90 FD               [12] 1681 	mov	r5,a
      000B91 74 02            [12] 1682 	mov	a,#0x02
      000B93 35 F0            [12] 1683 	addc	a,b
      000B95 FE               [12] 1684 	mov	r6,a
      000B96 7C 00            [12] 1685 	mov	r4,#0x00
      000B98 EF               [12] 1686 	mov	a,r7
      000B99 2D               [12] 1687 	add	a,r5
      000B9A FD               [12] 1688 	mov	r5,a
      000B9B EC               [12] 1689 	mov	a,r4
      000B9C 3E               [12] 1690 	addc	a,r6
      000B9D FE               [12] 1691 	mov	r6,a
      000B9E 85 4C 1B         [24] 1692 	mov	__mulint_PARM_2,_hour12
                                   1693 ;	1-genFromRTrack replaced	mov	(__mulint_PARM_2 + 1),#0x00
      000BA1 8C 1C            [24] 1694 	mov	(__mulint_PARM_2 + 1),r4
      000BA3 90 00 3C         [24] 1695 	mov	dptr,#0x003c
      000BA6 C0 06            [24] 1696 	push	ar6
      000BA8 C0 05            [24] 1697 	push	ar5
      000BAA 12 83 E1         [24] 1698 	lcall	__mulint
      000BAD AC 82            [24] 1699 	mov	r4,dpl
      000BAF AF 83            [24] 1700 	mov	r7,dph
      000BB1 D0 05            [24] 1701 	pop	ar5
      000BB3 D0 06            [24] 1702 	pop	ar6
      000BB5 ED               [12] 1703 	mov	a,r5
      000BB6 C3               [12] 1704 	clr	c
      000BB7 9C               [12] 1705 	subb	a,r4
      000BB8 FD               [12] 1706 	mov	r5,a
      000BB9 EE               [12] 1707 	mov	a,r6
      000BBA 9F               [12] 1708 	subb	a,r7
      000BBB FE               [12] 1709 	mov	r6,a
      000BBC AC 4A            [24] 1710 	mov	r4,_minute
      000BBE 7F 00            [12] 1711 	mov	r7,#0x00
      000BC0 ED               [12] 1712 	mov	a,r5
      000BC1 C3               [12] 1713 	clr	c
      000BC2 9C               [12] 1714 	subb	a,r4
      000BC3 F5 82            [12] 1715 	mov	dpl,a
      000BC5 EE               [12] 1716 	mov	a,r6
      000BC6 9F               [12] 1717 	subb	a,r7
      000BC7 F5 83            [12] 1718 	mov	dph,a
      000BC9 75 1B D0         [24] 1719 	mov	__modsint_PARM_2,#0xd0
      000BCC 75 1C 02         [24] 1720 	mov	(__modsint_PARM_2 + 1),#0x02
      000BCF 12 84 67         [24] 1721 	lcall	__modsint
      000BD2 AE 82            [24] 1722 	mov	r6,dpl
      000BD4 AF 83            [24] 1723 	mov	r7,dph
      000BD6 C3               [12] 1724 	clr	c
      000BD7 74 68            [12] 1725 	mov	a,#0x68
      000BD9 9E               [12] 1726 	subb	a,r6
      000BDA 74 81            [12] 1727 	mov	a,#(0x01 ^ 0x80)
      000BDC 8F F0            [24] 1728 	mov	b,r7
      000BDE 63 F0 80         [24] 1729 	xrl	b,#0x80
      000BE1 95 F0            [12] 1730 	subb	a,b
      000BE3 92 13            [24] 1731 	mov	_motorDir1,c
                                   1732 ;	include/motor_cam_phim.c:23: return 0;
      000BE5 75 82 00         [24] 1733 	mov	dpl,#0x00
      000BE8 22               [24] 1734 	ret
      000BE9                       1735 00119$:
                                   1736 ;	include/motor_cam_phim.c:26: if(thoi_gian_doi_doc_cam[2] && (phut[2]!=minute || gio[2]!=hour12)){
      000BE9 90 00 EA         [24] 1737 	mov	dptr,#(_thoi_gian_doi_doc_cam + 0x0002)
      000BEC E0               [24] 1738 	movx	a,@dptr
      000BED 70 03            [24] 1739 	jnz	00217$
      000BEF 02 0C 6F         [24] 1740 	ljmp	00121$
      000BF2                       1741 00217$:
      000BF2 E5 53            [12] 1742 	mov	a,(_phut + 0x0002)
      000BF4 FF               [12] 1743 	mov	r7,a
      000BF5 B5 4A 07         [24] 1744 	cjne	a,_minute,00120$
      000BF8 E5 4C            [12] 1745 	mov	a,_hour12
      000BFA B5 4F 02         [24] 1746 	cjne	a,(_gio + 0x0002),00220$
      000BFD 80 70            [24] 1747 	sjmp	00121$
      000BFF                       1748 00220$:
      000BFF                       1749 00120$:
                                   1750 ;	include/motor_cam_phim.c:27: motorDir1 = (720 + gio[2]*60 + phut[2] - hour12*60 - minute) % 720 > 360;
      000BFF 85 4F 1B         [24] 1751 	mov	__mulint_PARM_2,(_gio + 0x0002)
      000C02 75 1C 00         [24] 1752 	mov	(__mulint_PARM_2 + 1),#0x00
      000C05 90 00 3C         [24] 1753 	mov	dptr,#0x003c
      000C08 C0 07            [24] 1754 	push	ar7
      000C0A 12 83 E1         [24] 1755 	lcall	__mulint
      000C0D E5 82            [12] 1756 	mov	a,dpl
      000C0F 85 83 F0         [24] 1757 	mov	b,dph
      000C12 D0 07            [24] 1758 	pop	ar7
      000C14 24 D0            [12] 1759 	add	a,#0xd0
      000C16 FD               [12] 1760 	mov	r5,a
      000C17 74 02            [12] 1761 	mov	a,#0x02
      000C19 35 F0            [12] 1762 	addc	a,b
      000C1B FE               [12] 1763 	mov	r6,a
      000C1C 7C 00            [12] 1764 	mov	r4,#0x00
      000C1E EF               [12] 1765 	mov	a,r7
      000C1F 2D               [12] 1766 	add	a,r5
      000C20 FD               [12] 1767 	mov	r5,a
      000C21 EC               [12] 1768 	mov	a,r4
      000C22 3E               [12] 1769 	addc	a,r6
      000C23 FE               [12] 1770 	mov	r6,a
      000C24 85 4C 1B         [24] 1771 	mov	__mulint_PARM_2,_hour12
                                   1772 ;	1-genFromRTrack replaced	mov	(__mulint_PARM_2 + 1),#0x00
      000C27 8C 1C            [24] 1773 	mov	(__mulint_PARM_2 + 1),r4
      000C29 90 00 3C         [24] 1774 	mov	dptr,#0x003c
      000C2C C0 06            [24] 1775 	push	ar6
      000C2E C0 05            [24] 1776 	push	ar5
      000C30 12 83 E1         [24] 1777 	lcall	__mulint
      000C33 AC 82            [24] 1778 	mov	r4,dpl
      000C35 AF 83            [24] 1779 	mov	r7,dph
      000C37 D0 05            [24] 1780 	pop	ar5
      000C39 D0 06            [24] 1781 	pop	ar6
      000C3B ED               [12] 1782 	mov	a,r5
      000C3C C3               [12] 1783 	clr	c
      000C3D 9C               [12] 1784 	subb	a,r4
      000C3E FD               [12] 1785 	mov	r5,a
      000C3F EE               [12] 1786 	mov	a,r6
      000C40 9F               [12] 1787 	subb	a,r7
      000C41 FE               [12] 1788 	mov	r6,a
      000C42 AC 4A            [24] 1789 	mov	r4,_minute
      000C44 7F 00            [12] 1790 	mov	r7,#0x00
      000C46 ED               [12] 1791 	mov	a,r5
      000C47 C3               [12] 1792 	clr	c
      000C48 9C               [12] 1793 	subb	a,r4
      000C49 F5 82            [12] 1794 	mov	dpl,a
      000C4B EE               [12] 1795 	mov	a,r6
      000C4C 9F               [12] 1796 	subb	a,r7
      000C4D F5 83            [12] 1797 	mov	dph,a
      000C4F 75 1B D0         [24] 1798 	mov	__modsint_PARM_2,#0xd0
      000C52 75 1C 02         [24] 1799 	mov	(__modsint_PARM_2 + 1),#0x02
      000C55 12 84 67         [24] 1800 	lcall	__modsint
      000C58 AE 82            [24] 1801 	mov	r6,dpl
      000C5A AF 83            [24] 1802 	mov	r7,dph
      000C5C C3               [12] 1803 	clr	c
      000C5D 74 68            [12] 1804 	mov	a,#0x68
      000C5F 9E               [12] 1805 	subb	a,r6
      000C60 74 81            [12] 1806 	mov	a,#(0x01 ^ 0x80)
      000C62 8F F0            [24] 1807 	mov	b,r7
      000C64 63 F0 80         [24] 1808 	xrl	b,#0x80
      000C67 95 F0            [12] 1809 	subb	a,b
      000C69 92 13            [24] 1810 	mov	_motorDir1,c
                                   1811 ;	include/motor_cam_phim.c:28: return 2;
      000C6B 75 82 02         [24] 1812 	mov	dpl,#0x02
      000C6E 22               [24] 1813 	ret
      000C6F                       1814 00121$:
                                   1815 ;	include/motor_cam_phim.c:30: if(motor_index<2){
      000C6F 74 FE            [12] 1816 	mov	a,#0x100 - 0x02
      000C71 25 56            [12] 1817 	add	a,_motor_index
      000C73 50 03            [24] 1818 	jnc	00221$
      000C75 02 0C FE         [24] 1819 	ljmp	00129$
      000C78                       1820 00221$:
                                   1821 ;	include/motor_cam_phim.c:31: if(thoi_gian_doi_doc_cam[0] && (phut[0]!=minute || gio[0]!=hour12)){
      000C78 90 00 E8         [24] 1822 	mov	dptr,#_thoi_gian_doi_doc_cam
      000C7B E0               [24] 1823 	movx	a,@dptr
      000C7C 70 03            [24] 1824 	jnz	00222$
      000C7E 02 0C FE         [24] 1825 	ljmp	00129$
      000C81                       1826 00222$:
      000C81 E5 51            [12] 1827 	mov	a,_phut
      000C83 FF               [12] 1828 	mov	r7,a
      000C84 B5 4A 07         [24] 1829 	cjne	a,_minute,00124$
      000C87 E5 4C            [12] 1830 	mov	a,_hour12
      000C89 B5 4D 02         [24] 1831 	cjne	a,_gio,00225$
      000C8C 80 70            [24] 1832 	sjmp	00129$
      000C8E                       1833 00225$:
      000C8E                       1834 00124$:
                                   1835 ;	include/motor_cam_phim.c:32: motorDir1 = (720 + gio[0]*60 + phut[0] - hour12*60 - minute) % 720 > 360;
      000C8E 85 4D 1B         [24] 1836 	mov	__mulint_PARM_2,_gio
      000C91 75 1C 00         [24] 1837 	mov	(__mulint_PARM_2 + 1),#0x00
      000C94 90 00 3C         [24] 1838 	mov	dptr,#0x003c
      000C97 C0 07            [24] 1839 	push	ar7
      000C99 12 83 E1         [24] 1840 	lcall	__mulint
      000C9C E5 82            [12] 1841 	mov	a,dpl
      000C9E 85 83 F0         [24] 1842 	mov	b,dph
      000CA1 D0 07            [24] 1843 	pop	ar7
      000CA3 24 D0            [12] 1844 	add	a,#0xd0
      000CA5 FD               [12] 1845 	mov	r5,a
      000CA6 74 02            [12] 1846 	mov	a,#0x02
      000CA8 35 F0            [12] 1847 	addc	a,b
      000CAA FE               [12] 1848 	mov	r6,a
      000CAB 7C 00            [12] 1849 	mov	r4,#0x00
      000CAD EF               [12] 1850 	mov	a,r7
      000CAE 2D               [12] 1851 	add	a,r5
      000CAF FD               [12] 1852 	mov	r5,a
      000CB0 EC               [12] 1853 	mov	a,r4
      000CB1 3E               [12] 1854 	addc	a,r6
      000CB2 FE               [12] 1855 	mov	r6,a
      000CB3 85 4C 1B         [24] 1856 	mov	__mulint_PARM_2,_hour12
                                   1857 ;	1-genFromRTrack replaced	mov	(__mulint_PARM_2 + 1),#0x00
      000CB6 8C 1C            [24] 1858 	mov	(__mulint_PARM_2 + 1),r4
      000CB8 90 00 3C         [24] 1859 	mov	dptr,#0x003c
      000CBB C0 06            [24] 1860 	push	ar6
      000CBD C0 05            [24] 1861 	push	ar5
      000CBF 12 83 E1         [24] 1862 	lcall	__mulint
      000CC2 AC 82            [24] 1863 	mov	r4,dpl
      000CC4 AF 83            [24] 1864 	mov	r7,dph
      000CC6 D0 05            [24] 1865 	pop	ar5
      000CC8 D0 06            [24] 1866 	pop	ar6
      000CCA ED               [12] 1867 	mov	a,r5
      000CCB C3               [12] 1868 	clr	c
      000CCC 9C               [12] 1869 	subb	a,r4
      000CCD FD               [12] 1870 	mov	r5,a
      000CCE EE               [12] 1871 	mov	a,r6
      000CCF 9F               [12] 1872 	subb	a,r7
      000CD0 FE               [12] 1873 	mov	r6,a
      000CD1 AC 4A            [24] 1874 	mov	r4,_minute
      000CD3 7F 00            [12] 1875 	mov	r7,#0x00
      000CD5 ED               [12] 1876 	mov	a,r5
      000CD6 C3               [12] 1877 	clr	c
      000CD7 9C               [12] 1878 	subb	a,r4
      000CD8 F5 82            [12] 1879 	mov	dpl,a
      000CDA EE               [12] 1880 	mov	a,r6
      000CDB 9F               [12] 1881 	subb	a,r7
      000CDC F5 83            [12] 1882 	mov	dph,a
      000CDE 75 1B D0         [24] 1883 	mov	__modsint_PARM_2,#0xd0
      000CE1 75 1C 02         [24] 1884 	mov	(__modsint_PARM_2 + 1),#0x02
      000CE4 12 84 67         [24] 1885 	lcall	__modsint
      000CE7 AE 82            [24] 1886 	mov	r6,dpl
      000CE9 AF 83            [24] 1887 	mov	r7,dph
      000CEB C3               [12] 1888 	clr	c
      000CEC 74 68            [12] 1889 	mov	a,#0x68
      000CEE 9E               [12] 1890 	subb	a,r6
      000CEF 74 81            [12] 1891 	mov	a,#(0x01 ^ 0x80)
      000CF1 8F F0            [24] 1892 	mov	b,r7
      000CF3 63 F0 80         [24] 1893 	xrl	b,#0x80
      000CF6 95 F0            [12] 1894 	subb	a,b
      000CF8 92 13            [24] 1895 	mov	_motorDir1,c
                                   1896 ;	include/motor_cam_phim.c:33: return 0;
      000CFA 75 82 00         [24] 1897 	mov	dpl,#0x00
      000CFD 22               [24] 1898 	ret
      000CFE                       1899 00129$:
                                   1900 ;	include/motor_cam_phim.c:37: motorDir1 = 0;
                                   1901 ;	assignBit
      000CFE C2 13            [12] 1902 	clr	_motorDir1
                                   1903 ;	include/motor_cam_phim.c:39: return 5;
      000D00 75 82 05         [24] 1904 	mov	dpl,#0x05
                                   1905 ;	include/motor_cam_phim.c:40: }
      000D03 22               [24] 1906 	ret
                                   1907 ;------------------------------------------------------------
                                   1908 ;Allocation info for local variables in function 'motor_run_check2'
                                   1909 ;------------------------------------------------------------
                                   1910 ;	include/motor_cam_phim.c:41: u8 motor_run_check2(){
                                   1911 ;	-----------------------------------------
                                   1912 ;	 function motor_run_check2
                                   1913 ;	-----------------------------------------
      000D04                       1914 _motor_run_check2:
                                   1915 ;	include/motor_cam_phim.c:45: if (so_motor==1 || dien_ap_thap || motor_dung || mode ) {motorDir2 = 0;return 5;}
      000D04 90 01 2F         [24] 1916 	mov	dptr,#_so_motor
      000D07 E0               [24] 1917 	movx	a,@dptr
      000D08 FF               [12] 1918 	mov	r7,a
      000D09 BF 01 02         [24] 1919 	cjne	r7,#0x01,00205$
      000D0C 80 0C            [24] 1920 	sjmp	00101$
      000D0E                       1921 00205$:
      000D0E 20 02 09         [24] 1922 	jb	_dien_ap_thap,00101$
      000D11 20 36 06         [24] 1923 	jb	_motor_dung,00101$
      000D14 90 00 F4         [24] 1924 	mov	dptr,#_mode
      000D17 E0               [24] 1925 	movx	a,@dptr
      000D18 60 06            [24] 1926 	jz	00102$
      000D1A                       1927 00101$:
                                   1928 ;	assignBit
      000D1A C2 14            [12] 1929 	clr	_motorDir2
      000D1C 75 82 05         [24] 1930 	mov	dpl,#0x05
      000D1F 22               [24] 1931 	ret
      000D20                       1932 00102$:
                                   1933 ;	include/motor_cam_phim.c:46: if(may_canh_kim)return (canhkim && !(may_canh_kim & 1))?may_canh_kim-1:5;
      000D20 90 00 E2         [24] 1934 	mov	dptr,#_may_canh_kim
      000D23 E0               [24] 1935 	movx	a,@dptr
      000D24 FE               [12] 1936 	mov	r6,a
      000D25 60 1C            [24] 1937 	jz	00107$
      000D27 90 00 E1         [24] 1938 	mov	dptr,#_canhkim
      000D2A E0               [24] 1939 	movx	a,@dptr
      000D2B 60 0F            [24] 1940 	jz	00133$
      000D2D EE               [12] 1941 	mov	a,r6
      000D2E 54 01            [12] 1942 	anl	a,#0x01
      000D30 FD               [12] 1943 	mov	r5,a
      000D31 70 09            [24] 1944 	jnz	00133$
      000D33 1E               [12] 1945 	dec	r6
      000D34 EE               [12] 1946 	mov	a,r6
      000D35 FD               [12] 1947 	mov	r5,a
      000D36 33               [12] 1948 	rlc	a
      000D37 95 E0            [12] 1949 	subb	a,acc
      000D39 FE               [12] 1950 	mov	r6,a
      000D3A 80 04            [24] 1951 	sjmp	00134$
      000D3C                       1952 00133$:
      000D3C 7D 05            [12] 1953 	mov	r5,#0x05
      000D3E 7E 00            [12] 1954 	mov	r6,#0x00
      000D40                       1955 00134$:
      000D40 8D 82            [24] 1956 	mov	dpl,r5
      000D42 22               [24] 1957 	ret
      000D43                       1958 00107$:
                                   1959 ;	include/motor_cam_phim.c:47: if(so_motor<4){
      000D43 BF 04 00         [24] 1960 	cjne	r7,#0x04,00212$
      000D46                       1961 00212$:
      000D46 40 03            [24] 1962 	jc	00213$
      000D48 02 0D D7         [24] 1963 	ljmp	00114$
      000D4B                       1964 00213$:
                                   1965 ;	include/motor_cam_phim.c:48: if(thoi_gian_doi_doc_cam[1] && (phut[1]!=minute || gio[1]!=hour12)){
      000D4B 90 00 E9         [24] 1966 	mov	dptr,#(_thoi_gian_doi_doc_cam + 0x0001)
      000D4E E0               [24] 1967 	movx	a,@dptr
      000D4F 70 03            [24] 1968 	jnz	00214$
      000D51 02 0D D1         [24] 1969 	ljmp	00109$
      000D54                       1970 00214$:
      000D54 E5 52            [12] 1971 	mov	a,(_phut + 0x0001)
      000D56 FF               [12] 1972 	mov	r7,a
      000D57 B5 4A 07         [24] 1973 	cjne	a,_minute,00108$
      000D5A E5 4C            [12] 1974 	mov	a,_hour12
      000D5C B5 4E 02         [24] 1975 	cjne	a,(_gio + 0x0001),00217$
      000D5F 80 70            [24] 1976 	sjmp	00109$
      000D61                       1977 00217$:
      000D61                       1978 00108$:
                                   1979 ;	include/motor_cam_phim.c:49: motorDir2 = (720 + gio[1]*60 + phut[1] - hour12*60 - minute) % 720 > 360;
      000D61 85 4E 1B         [24] 1980 	mov	__mulint_PARM_2,(_gio + 0x0001)
      000D64 75 1C 00         [24] 1981 	mov	(__mulint_PARM_2 + 1),#0x00
      000D67 90 00 3C         [24] 1982 	mov	dptr,#0x003c
      000D6A C0 07            [24] 1983 	push	ar7
      000D6C 12 83 E1         [24] 1984 	lcall	__mulint
      000D6F E5 82            [12] 1985 	mov	a,dpl
      000D71 85 83 F0         [24] 1986 	mov	b,dph
      000D74 D0 07            [24] 1987 	pop	ar7
      000D76 24 D0            [12] 1988 	add	a,#0xd0
      000D78 FD               [12] 1989 	mov	r5,a
      000D79 74 02            [12] 1990 	mov	a,#0x02
      000D7B 35 F0            [12] 1991 	addc	a,b
      000D7D FE               [12] 1992 	mov	r6,a
      000D7E 7C 00            [12] 1993 	mov	r4,#0x00
      000D80 EF               [12] 1994 	mov	a,r7
      000D81 2D               [12] 1995 	add	a,r5
      000D82 FD               [12] 1996 	mov	r5,a
      000D83 EC               [12] 1997 	mov	a,r4
      000D84 3E               [12] 1998 	addc	a,r6
      000D85 FE               [12] 1999 	mov	r6,a
      000D86 85 4C 1B         [24] 2000 	mov	__mulint_PARM_2,_hour12
                                   2001 ;	1-genFromRTrack replaced	mov	(__mulint_PARM_2 + 1),#0x00
      000D89 8C 1C            [24] 2002 	mov	(__mulint_PARM_2 + 1),r4
      000D8B 90 00 3C         [24] 2003 	mov	dptr,#0x003c
      000D8E C0 06            [24] 2004 	push	ar6
      000D90 C0 05            [24] 2005 	push	ar5
      000D92 12 83 E1         [24] 2006 	lcall	__mulint
      000D95 AC 82            [24] 2007 	mov	r4,dpl
      000D97 AF 83            [24] 2008 	mov	r7,dph
      000D99 D0 05            [24] 2009 	pop	ar5
      000D9B D0 06            [24] 2010 	pop	ar6
      000D9D ED               [12] 2011 	mov	a,r5
      000D9E C3               [12] 2012 	clr	c
      000D9F 9C               [12] 2013 	subb	a,r4
      000DA0 FD               [12] 2014 	mov	r5,a
      000DA1 EE               [12] 2015 	mov	a,r6
      000DA2 9F               [12] 2016 	subb	a,r7
      000DA3 FE               [12] 2017 	mov	r6,a
      000DA4 AC 4A            [24] 2018 	mov	r4,_minute
      000DA6 7F 00            [12] 2019 	mov	r7,#0x00
      000DA8 ED               [12] 2020 	mov	a,r5
      000DA9 C3               [12] 2021 	clr	c
      000DAA 9C               [12] 2022 	subb	a,r4
      000DAB F5 82            [12] 2023 	mov	dpl,a
      000DAD EE               [12] 2024 	mov	a,r6
      000DAE 9F               [12] 2025 	subb	a,r7
      000DAF F5 83            [12] 2026 	mov	dph,a
      000DB1 75 1B D0         [24] 2027 	mov	__modsint_PARM_2,#0xd0
      000DB4 75 1C 02         [24] 2028 	mov	(__modsint_PARM_2 + 1),#0x02
      000DB7 12 84 67         [24] 2029 	lcall	__modsint
      000DBA AE 82            [24] 2030 	mov	r6,dpl
      000DBC AF 83            [24] 2031 	mov	r7,dph
      000DBE C3               [12] 2032 	clr	c
      000DBF 74 68            [12] 2033 	mov	a,#0x68
      000DC1 9E               [12] 2034 	subb	a,r6
      000DC2 74 81            [12] 2035 	mov	a,#(0x01 ^ 0x80)
      000DC4 8F F0            [24] 2036 	mov	b,r7
      000DC6 63 F0 80         [24] 2037 	xrl	b,#0x80
      000DC9 95 F0            [12] 2038 	subb	a,b
      000DCB 92 14            [24] 2039 	mov	_motorDir2,c
                                   2040 ;	include/motor_cam_phim.c:50: return 1;
      000DCD 75 82 01         [24] 2041 	mov	dpl,#0x01
      000DD0 22               [24] 2042 	ret
      000DD1                       2043 00109$:
                                   2044 ;	include/motor_cam_phim.c:51: }else {motorDir2 = 0; return 5;}
                                   2045 ;	assignBit
      000DD1 C2 14            [12] 2046 	clr	_motorDir2
      000DD3 75 82 05         [24] 2047 	mov	dpl,#0x05
      000DD6 22               [24] 2048 	ret
      000DD7                       2049 00114$:
                                   2050 ;	include/motor_cam_phim.c:53: if(motor_index2>1){
      000DD7 E5 57            [12] 2051 	mov	a,_motor_index2
      000DD9 24 FE            [12] 2052 	add	a,#0xff - 0x01
      000DDB 40 03            [24] 2053 	jc	00218$
      000DDD 02 0E 66         [24] 2054 	ljmp	00120$
      000DE0                       2055 00218$:
                                   2056 ;	include/motor_cam_phim.c:54: if(thoi_gian_doi_doc_cam[1] && (phut[1]!=minute || gio[1]!=hour12)){
      000DE0 90 00 E9         [24] 2057 	mov	dptr,#(_thoi_gian_doi_doc_cam + 0x0001)
      000DE3 E0               [24] 2058 	movx	a,@dptr
      000DE4 70 03            [24] 2059 	jnz	00219$
      000DE6 02 0E 66         [24] 2060 	ljmp	00120$
      000DE9                       2061 00219$:
      000DE9 E5 52            [12] 2062 	mov	a,(_phut + 0x0001)
      000DEB FF               [12] 2063 	mov	r7,a
      000DEC B5 4A 07         [24] 2064 	cjne	a,_minute,00115$
      000DEF E5 4C            [12] 2065 	mov	a,_hour12
      000DF1 B5 4E 02         [24] 2066 	cjne	a,(_gio + 0x0001),00222$
      000DF4 80 70            [24] 2067 	sjmp	00120$
      000DF6                       2068 00222$:
      000DF6                       2069 00115$:
                                   2070 ;	include/motor_cam_phim.c:55: motorDir2 = (720 + gio[1]*60 + phut[1] - hour12*60 - minute) % 720 > 360;
      000DF6 85 4E 1B         [24] 2071 	mov	__mulint_PARM_2,(_gio + 0x0001)
      000DF9 75 1C 00         [24] 2072 	mov	(__mulint_PARM_2 + 1),#0x00
      000DFC 90 00 3C         [24] 2073 	mov	dptr,#0x003c
      000DFF C0 07            [24] 2074 	push	ar7
      000E01 12 83 E1         [24] 2075 	lcall	__mulint
      000E04 E5 82            [12] 2076 	mov	a,dpl
      000E06 85 83 F0         [24] 2077 	mov	b,dph
      000E09 D0 07            [24] 2078 	pop	ar7
      000E0B 24 D0            [12] 2079 	add	a,#0xd0
      000E0D FD               [12] 2080 	mov	r5,a
      000E0E 74 02            [12] 2081 	mov	a,#0x02
      000E10 35 F0            [12] 2082 	addc	a,b
      000E12 FE               [12] 2083 	mov	r6,a
      000E13 7C 00            [12] 2084 	mov	r4,#0x00
      000E15 EF               [12] 2085 	mov	a,r7
      000E16 2D               [12] 2086 	add	a,r5
      000E17 FD               [12] 2087 	mov	r5,a
      000E18 EC               [12] 2088 	mov	a,r4
      000E19 3E               [12] 2089 	addc	a,r6
      000E1A FE               [12] 2090 	mov	r6,a
      000E1B 85 4C 1B         [24] 2091 	mov	__mulint_PARM_2,_hour12
                                   2092 ;	1-genFromRTrack replaced	mov	(__mulint_PARM_2 + 1),#0x00
      000E1E 8C 1C            [24] 2093 	mov	(__mulint_PARM_2 + 1),r4
      000E20 90 00 3C         [24] 2094 	mov	dptr,#0x003c
      000E23 C0 06            [24] 2095 	push	ar6
      000E25 C0 05            [24] 2096 	push	ar5
      000E27 12 83 E1         [24] 2097 	lcall	__mulint
      000E2A AC 82            [24] 2098 	mov	r4,dpl
      000E2C AF 83            [24] 2099 	mov	r7,dph
      000E2E D0 05            [24] 2100 	pop	ar5
      000E30 D0 06            [24] 2101 	pop	ar6
      000E32 ED               [12] 2102 	mov	a,r5
      000E33 C3               [12] 2103 	clr	c
      000E34 9C               [12] 2104 	subb	a,r4
      000E35 FD               [12] 2105 	mov	r5,a
      000E36 EE               [12] 2106 	mov	a,r6
      000E37 9F               [12] 2107 	subb	a,r7
      000E38 FE               [12] 2108 	mov	r6,a
      000E39 AC 4A            [24] 2109 	mov	r4,_minute
      000E3B 7F 00            [12] 2110 	mov	r7,#0x00
      000E3D ED               [12] 2111 	mov	a,r5
      000E3E C3               [12] 2112 	clr	c
      000E3F 9C               [12] 2113 	subb	a,r4
      000E40 F5 82            [12] 2114 	mov	dpl,a
      000E42 EE               [12] 2115 	mov	a,r6
      000E43 9F               [12] 2116 	subb	a,r7
      000E44 F5 83            [12] 2117 	mov	dph,a
      000E46 75 1B D0         [24] 2118 	mov	__modsint_PARM_2,#0xd0
      000E49 75 1C 02         [24] 2119 	mov	(__modsint_PARM_2 + 1),#0x02
      000E4C 12 84 67         [24] 2120 	lcall	__modsint
      000E4F AE 82            [24] 2121 	mov	r6,dpl
      000E51 AF 83            [24] 2122 	mov	r7,dph
      000E53 C3               [12] 2123 	clr	c
      000E54 74 68            [12] 2124 	mov	a,#0x68
      000E56 9E               [12] 2125 	subb	a,r6
      000E57 74 81            [12] 2126 	mov	a,#(0x01 ^ 0x80)
      000E59 8F F0            [24] 2127 	mov	b,r7
      000E5B 63 F0 80         [24] 2128 	xrl	b,#0x80
      000E5E 95 F0            [12] 2129 	subb	a,b
      000E60 92 14            [24] 2130 	mov	_motorDir2,c
                                   2131 ;	include/motor_cam_phim.c:56: return 1;
      000E62 75 82 01         [24] 2132 	mov	dpl,#0x01
      000E65 22               [24] 2133 	ret
      000E66                       2134 00120$:
                                   2135 ;	include/motor_cam_phim.c:59: if(thoi_gian_doi_doc_cam[3] && (phut[3]!=minute || gio[3]!=hour12)){
      000E66 90 00 EB         [24] 2136 	mov	dptr,#(_thoi_gian_doi_doc_cam + 0x0003)
      000E69 E0               [24] 2137 	movx	a,@dptr
      000E6A 70 03            [24] 2138 	jnz	00223$
      000E6C 02 0E EC         [24] 2139 	ljmp	00122$
      000E6F                       2140 00223$:
      000E6F E5 54            [12] 2141 	mov	a,(_phut + 0x0003)
      000E71 FF               [12] 2142 	mov	r7,a
      000E72 B5 4A 07         [24] 2143 	cjne	a,_minute,00121$
      000E75 E5 4C            [12] 2144 	mov	a,_hour12
      000E77 B5 50 02         [24] 2145 	cjne	a,(_gio + 0x0003),00226$
      000E7A 80 70            [24] 2146 	sjmp	00122$
      000E7C                       2147 00226$:
      000E7C                       2148 00121$:
                                   2149 ;	include/motor_cam_phim.c:60: motorDir2 = (720 + gio[3]*60 + phut[3] - hour12*60 - minute) % 720 > 360;
      000E7C 85 50 1B         [24] 2150 	mov	__mulint_PARM_2,(_gio + 0x0003)
      000E7F 75 1C 00         [24] 2151 	mov	(__mulint_PARM_2 + 1),#0x00
      000E82 90 00 3C         [24] 2152 	mov	dptr,#0x003c
      000E85 C0 07            [24] 2153 	push	ar7
      000E87 12 83 E1         [24] 2154 	lcall	__mulint
      000E8A E5 82            [12] 2155 	mov	a,dpl
      000E8C 85 83 F0         [24] 2156 	mov	b,dph
      000E8F D0 07            [24] 2157 	pop	ar7
      000E91 24 D0            [12] 2158 	add	a,#0xd0
      000E93 FD               [12] 2159 	mov	r5,a
      000E94 74 02            [12] 2160 	mov	a,#0x02
      000E96 35 F0            [12] 2161 	addc	a,b
      000E98 FE               [12] 2162 	mov	r6,a
      000E99 7C 00            [12] 2163 	mov	r4,#0x00
      000E9B EF               [12] 2164 	mov	a,r7
      000E9C 2D               [12] 2165 	add	a,r5
      000E9D FD               [12] 2166 	mov	r5,a
      000E9E EC               [12] 2167 	mov	a,r4
      000E9F 3E               [12] 2168 	addc	a,r6
      000EA0 FE               [12] 2169 	mov	r6,a
      000EA1 85 4C 1B         [24] 2170 	mov	__mulint_PARM_2,_hour12
                                   2171 ;	1-genFromRTrack replaced	mov	(__mulint_PARM_2 + 1),#0x00
      000EA4 8C 1C            [24] 2172 	mov	(__mulint_PARM_2 + 1),r4
      000EA6 90 00 3C         [24] 2173 	mov	dptr,#0x003c
      000EA9 C0 06            [24] 2174 	push	ar6
      000EAB C0 05            [24] 2175 	push	ar5
      000EAD 12 83 E1         [24] 2176 	lcall	__mulint
      000EB0 AC 82            [24] 2177 	mov	r4,dpl
      000EB2 AF 83            [24] 2178 	mov	r7,dph
      000EB4 D0 05            [24] 2179 	pop	ar5
      000EB6 D0 06            [24] 2180 	pop	ar6
      000EB8 ED               [12] 2181 	mov	a,r5
      000EB9 C3               [12] 2182 	clr	c
      000EBA 9C               [12] 2183 	subb	a,r4
      000EBB FD               [12] 2184 	mov	r5,a
      000EBC EE               [12] 2185 	mov	a,r6
      000EBD 9F               [12] 2186 	subb	a,r7
      000EBE FE               [12] 2187 	mov	r6,a
      000EBF AC 4A            [24] 2188 	mov	r4,_minute
      000EC1 7F 00            [12] 2189 	mov	r7,#0x00
      000EC3 ED               [12] 2190 	mov	a,r5
      000EC4 C3               [12] 2191 	clr	c
      000EC5 9C               [12] 2192 	subb	a,r4
      000EC6 F5 82            [12] 2193 	mov	dpl,a
      000EC8 EE               [12] 2194 	mov	a,r6
      000EC9 9F               [12] 2195 	subb	a,r7
      000ECA F5 83            [12] 2196 	mov	dph,a
      000ECC 75 1B D0         [24] 2197 	mov	__modsint_PARM_2,#0xd0
      000ECF 75 1C 02         [24] 2198 	mov	(__modsint_PARM_2 + 1),#0x02
      000ED2 12 84 67         [24] 2199 	lcall	__modsint
      000ED5 AE 82            [24] 2200 	mov	r6,dpl
      000ED7 AF 83            [24] 2201 	mov	r7,dph
      000ED9 C3               [12] 2202 	clr	c
      000EDA 74 68            [12] 2203 	mov	a,#0x68
      000EDC 9E               [12] 2204 	subb	a,r6
      000EDD 74 81            [12] 2205 	mov	a,#(0x01 ^ 0x80)
      000EDF 8F F0            [24] 2206 	mov	b,r7
      000EE1 63 F0 80         [24] 2207 	xrl	b,#0x80
      000EE4 95 F0            [12] 2208 	subb	a,b
      000EE6 92 14            [24] 2209 	mov	_motorDir2,c
                                   2210 ;	include/motor_cam_phim.c:61: return 3;
      000EE8 75 82 03         [24] 2211 	mov	dpl,#0x03
      000EEB 22               [24] 2212 	ret
      000EEC                       2213 00122$:
                                   2214 ;	include/motor_cam_phim.c:63: if(motor_index2<2){
      000EEC 74 FE            [12] 2215 	mov	a,#0x100 - 0x02
      000EEE 25 57            [12] 2216 	add	a,_motor_index2
      000EF0 50 03            [24] 2217 	jnc	00227$
      000EF2 02 0F 7B         [24] 2218 	ljmp	00130$
      000EF5                       2219 00227$:
                                   2220 ;	include/motor_cam_phim.c:64: if(thoi_gian_doi_doc_cam[1] && (phut[1]!=minute || gio[1]!=hour12)){
      000EF5 90 00 E9         [24] 2221 	mov	dptr,#(_thoi_gian_doi_doc_cam + 0x0001)
      000EF8 E0               [24] 2222 	movx	a,@dptr
      000EF9 70 03            [24] 2223 	jnz	00228$
      000EFB 02 0F 7B         [24] 2224 	ljmp	00130$
      000EFE                       2225 00228$:
      000EFE E5 52            [12] 2226 	mov	a,(_phut + 0x0001)
      000F00 FF               [12] 2227 	mov	r7,a
      000F01 B5 4A 07         [24] 2228 	cjne	a,_minute,00125$
      000F04 E5 4C            [12] 2229 	mov	a,_hour12
      000F06 B5 4E 02         [24] 2230 	cjne	a,(_gio + 0x0001),00231$
      000F09 80 70            [24] 2231 	sjmp	00130$
      000F0B                       2232 00231$:
      000F0B                       2233 00125$:
                                   2234 ;	include/motor_cam_phim.c:65: motorDir2 = (720 + gio[1]*60 + phut[1] - hour12*60 - minute) % 720 > 360;
      000F0B 85 4E 1B         [24] 2235 	mov	__mulint_PARM_2,(_gio + 0x0001)
      000F0E 75 1C 00         [24] 2236 	mov	(__mulint_PARM_2 + 1),#0x00
      000F11 90 00 3C         [24] 2237 	mov	dptr,#0x003c
      000F14 C0 07            [24] 2238 	push	ar7
      000F16 12 83 E1         [24] 2239 	lcall	__mulint
      000F19 E5 82            [12] 2240 	mov	a,dpl
      000F1B 85 83 F0         [24] 2241 	mov	b,dph
      000F1E D0 07            [24] 2242 	pop	ar7
      000F20 24 D0            [12] 2243 	add	a,#0xd0
      000F22 FD               [12] 2244 	mov	r5,a
      000F23 74 02            [12] 2245 	mov	a,#0x02
      000F25 35 F0            [12] 2246 	addc	a,b
      000F27 FE               [12] 2247 	mov	r6,a
      000F28 7C 00            [12] 2248 	mov	r4,#0x00
      000F2A EF               [12] 2249 	mov	a,r7
      000F2B 2D               [12] 2250 	add	a,r5
      000F2C FD               [12] 2251 	mov	r5,a
      000F2D EC               [12] 2252 	mov	a,r4
      000F2E 3E               [12] 2253 	addc	a,r6
      000F2F FE               [12] 2254 	mov	r6,a
      000F30 85 4C 1B         [24] 2255 	mov	__mulint_PARM_2,_hour12
                                   2256 ;	1-genFromRTrack replaced	mov	(__mulint_PARM_2 + 1),#0x00
      000F33 8C 1C            [24] 2257 	mov	(__mulint_PARM_2 + 1),r4
      000F35 90 00 3C         [24] 2258 	mov	dptr,#0x003c
      000F38 C0 06            [24] 2259 	push	ar6
      000F3A C0 05            [24] 2260 	push	ar5
      000F3C 12 83 E1         [24] 2261 	lcall	__mulint
      000F3F AC 82            [24] 2262 	mov	r4,dpl
      000F41 AF 83            [24] 2263 	mov	r7,dph
      000F43 D0 05            [24] 2264 	pop	ar5
      000F45 D0 06            [24] 2265 	pop	ar6
      000F47 ED               [12] 2266 	mov	a,r5
      000F48 C3               [12] 2267 	clr	c
      000F49 9C               [12] 2268 	subb	a,r4
      000F4A FD               [12] 2269 	mov	r5,a
      000F4B EE               [12] 2270 	mov	a,r6
      000F4C 9F               [12] 2271 	subb	a,r7
      000F4D FE               [12] 2272 	mov	r6,a
      000F4E AC 4A            [24] 2273 	mov	r4,_minute
      000F50 7F 00            [12] 2274 	mov	r7,#0x00
      000F52 ED               [12] 2275 	mov	a,r5
      000F53 C3               [12] 2276 	clr	c
      000F54 9C               [12] 2277 	subb	a,r4
      000F55 F5 82            [12] 2278 	mov	dpl,a
      000F57 EE               [12] 2279 	mov	a,r6
      000F58 9F               [12] 2280 	subb	a,r7
      000F59 F5 83            [12] 2281 	mov	dph,a
      000F5B 75 1B D0         [24] 2282 	mov	__modsint_PARM_2,#0xd0
      000F5E 75 1C 02         [24] 2283 	mov	(__modsint_PARM_2 + 1),#0x02
      000F61 12 84 67         [24] 2284 	lcall	__modsint
      000F64 AE 82            [24] 2285 	mov	r6,dpl
      000F66 AF 83            [24] 2286 	mov	r7,dph
      000F68 C3               [12] 2287 	clr	c
      000F69 74 68            [12] 2288 	mov	a,#0x68
      000F6B 9E               [12] 2289 	subb	a,r6
      000F6C 74 81            [12] 2290 	mov	a,#(0x01 ^ 0x80)
      000F6E 8F F0            [24] 2291 	mov	b,r7
      000F70 63 F0 80         [24] 2292 	xrl	b,#0x80
      000F73 95 F0            [12] 2293 	subb	a,b
      000F75 92 14            [24] 2294 	mov	_motorDir2,c
                                   2295 ;	include/motor_cam_phim.c:66: return 1;
      000F77 75 82 01         [24] 2296 	mov	dpl,#0x01
      000F7A 22               [24] 2297 	ret
      000F7B                       2298 00130$:
                                   2299 ;	include/motor_cam_phim.c:69: motorDir2 = 0;
                                   2300 ;	assignBit
      000F7B C2 14            [12] 2301 	clr	_motorDir2
                                   2302 ;	include/motor_cam_phim.c:70: return 5;
      000F7D 75 82 05         [24] 2303 	mov	dpl,#0x05
                                   2304 ;	include/motor_cam_phim.c:71: }
      000F80 22               [24] 2305 	ret
                                   2306 ;------------------------------------------------------------
                                   2307 ;Allocation info for local variables in function 'luu_gio_kim'
                                   2308 ;------------------------------------------------------------
                                   2309 ;	include/motor_cam_phim.c:73: void luu_gio_kim(){
                                   2310 ;	-----------------------------------------
                                   2311 ;	 function luu_gio_kim
                                   2312 ;	-----------------------------------------
      000F81                       2313 _luu_gio_kim:
                                   2314 ;	include/motor_cam_phim.c:74: IAP_xoasector(SECTOR2);
      000F81 90 02 00         [24] 2315 	mov	dptr,#0x0200
      000F84 12 03 1C         [24] 2316 	lcall	_IAP_xoasector
                                   2317 ;	include/motor_cam_phim.c:75: switch(so_motor){
      000F87 90 01 2F         [24] 2318 	mov	dptr,#_so_motor
      000F8A E0               [24] 2319 	movx	a,@dptr
      000F8B FF               [12] 2320 	mov	r7,a
      000F8C BF 01 02         [24] 2321 	cjne	r7,#0x01,00125$
      000F8F 80 43            [24] 2322 	sjmp	00104$
      000F91                       2323 00125$:
      000F91 BF 02 02         [24] 2324 	cjne	r7,#0x02,00126$
      000F94 80 2C            [24] 2325 	sjmp	00103$
      000F96                       2326 00126$:
      000F96 BF 03 02         [24] 2327 	cjne	r7,#0x03,00127$
      000F99 80 15            [24] 2328 	sjmp	00102$
      000F9B                       2329 00127$:
      000F9B BF 04 48         [24] 2330 	cjne	r7,#0x04,00107$
                                   2331 ;	include/motor_cam_phim.c:76: case 4:IAP_ghibyte(PHUT4_EEPROM,phut[3]);IAP_ghibyte(GIO4_EEPROM,gio[3]);
      000F9E 85 54 18         [24] 2332 	mov	_IAP_ghibyte_PARM_2,(_phut + 0x0003)
      000FA1 90 02 06         [24] 2333 	mov	dptr,#0x0206
      000FA4 12 03 01         [24] 2334 	lcall	_IAP_ghibyte
      000FA7 85 50 18         [24] 2335 	mov	_IAP_ghibyte_PARM_2,(_gio + 0x0003)
      000FAA 90 02 07         [24] 2336 	mov	dptr,#0x0207
      000FAD 12 03 01         [24] 2337 	lcall	_IAP_ghibyte
                                   2338 ;	include/motor_cam_phim.c:77: case 3:IAP_ghibyte(PHUT3_EEPROM,phut[2]);IAP_ghibyte(GIO3_EEPROM,gio[2]);
      000FB0                       2339 00102$:
      000FB0 85 53 18         [24] 2340 	mov	_IAP_ghibyte_PARM_2,(_phut + 0x0002)
      000FB3 90 02 04         [24] 2341 	mov	dptr,#0x0204
      000FB6 12 03 01         [24] 2342 	lcall	_IAP_ghibyte
      000FB9 85 4F 18         [24] 2343 	mov	_IAP_ghibyte_PARM_2,(_gio + 0x0002)
      000FBC 90 02 05         [24] 2344 	mov	dptr,#0x0205
      000FBF 12 03 01         [24] 2345 	lcall	_IAP_ghibyte
                                   2346 ;	include/motor_cam_phim.c:78: case 2:IAP_ghibyte(PHUT2_EEPROM,phut[1]);IAP_ghibyte(GIO2_EEPROM,gio[1]);
      000FC2                       2347 00103$:
      000FC2 85 52 18         [24] 2348 	mov	_IAP_ghibyte_PARM_2,(_phut + 0x0001)
      000FC5 90 02 02         [24] 2349 	mov	dptr,#0x0202
      000FC8 12 03 01         [24] 2350 	lcall	_IAP_ghibyte
      000FCB 85 4E 18         [24] 2351 	mov	_IAP_ghibyte_PARM_2,(_gio + 0x0001)
      000FCE 90 02 03         [24] 2352 	mov	dptr,#0x0203
      000FD1 12 03 01         [24] 2353 	lcall	_IAP_ghibyte
                                   2354 ;	include/motor_cam_phim.c:79: case 1:IAP_ghibyte(PHUT1_EEPROM,phut[0]);IAP_ghibyte(GIO1_EEPROM,gio[0]);
      000FD4                       2355 00104$:
      000FD4 85 51 18         [24] 2356 	mov	_IAP_ghibyte_PARM_2,_phut
      000FD7 90 02 00         [24] 2357 	mov	dptr,#0x0200
      000FDA 12 03 01         [24] 2358 	lcall	_IAP_ghibyte
      000FDD 85 4D 18         [24] 2359 	mov	_IAP_ghibyte_PARM_2,_gio
      000FE0 90 02 01         [24] 2360 	mov	dptr,#0x0201
                                   2361 ;	include/motor_cam_phim.c:81: }
                                   2362 ;	include/motor_cam_phim.c:83: }
      000FE3 02 03 01         [24] 2363 	ljmp	_IAP_ghibyte
      000FE6                       2364 00107$:
      000FE6 22               [24] 2365 	ret
                                   2366 ;------------------------------------------------------------
                                   2367 ;Allocation info for local variables in function 'PCA_Timer_init'
                                   2368 ;------------------------------------------------------------
                                   2369 ;	include/motor_cam_phim.c:84: void PCA_Timer_init(){
                                   2370 ;	-----------------------------------------
                                   2371 ;	 function PCA_Timer_init
                                   2372 ;	-----------------------------------------
      000FE7                       2373 _PCA_Timer_init:
                                   2374 ;	include/motor_cam_phim.c:85: CCAP0L = CCAP0H = 0;
      000FE7 75 FA 00         [24] 2375 	mov	_CCAP0H,#0x00
      000FEA 75 EA 00         [24] 2376 	mov	_CCAP0L,#0x00
                                   2377 ;	include/motor_cam_phim.c:86: PCA_Timer0 = 25000;
      000FED 90 00 E4         [24] 2378 	mov	dptr,#_PCA_Timer0
      000FF0 74 A8            [12] 2379 	mov	a,#0xa8
      000FF2 F0               [24] 2380 	movx	@dptr,a
      000FF3 74 61            [12] 2381 	mov	a,#0x61
      000FF5 A3               [24] 2382 	inc	dptr
      000FF6 F0               [24] 2383 	movx	@dptr,a
                                   2384 ;	include/motor_cam_phim.c:87: CCAPM0 = 0x49;
      000FF7 75 DA 49         [24] 2385 	mov	_CCAPM0,#0x49
                                   2386 ;	include/motor_cam_phim.c:88: CR=1;
                                   2387 ;	assignBit
      000FFA D2 DE            [12] 2388 	setb	_CR
                                   2389 ;	include/motor_cam_phim.c:89: }
      000FFC 22               [24] 2390 	ret
                                   2391 ;------------------------------------------------------------
                                   2392 ;Allocation info for local variables in function 'motor_step_int_init'
                                   2393 ;------------------------------------------------------------
                                   2394 ;	include/motor_cam_phim.c:91: void motor_step_int_init(){
                                   2395 ;	-----------------------------------------
                                   2396 ;	 function motor_step_int_init
                                   2397 ;	-----------------------------------------
      000FFD                       2398 _motor_step_int_init:
                                   2399 ;	include/motor_cam_phim.c:92: AUXR &=0x7F;	//Timer clock is 12T mode
      000FFD 53 8E 7F         [24] 2400 	anl	_AUXR,#0x7f
                                   2401 ;	include/motor_cam_phim.c:93: TMOD = 0;		//Set timer work mode
      001000 75 89 00         [24] 2402 	mov	_TMOD,#0x00
                                   2403 ;	include/motor_cam_phim.c:100: TH0 = (63536 - (toc_do_motor_step * 2000)) >> 8;
      001003 90 00 ED         [24] 2404 	mov	dptr,#_toc_do_motor_step
      001006 E0               [24] 2405 	movx	a,@dptr
      001007 FF               [12] 2406 	mov	r7,a
      001008 8F 1B            [24] 2407 	mov	__mulint_PARM_2,r7
      00100A 75 1C 00         [24] 2408 	mov	(__mulint_PARM_2 + 1),#0x00
      00100D 90 07 D0         [24] 2409 	mov	dptr,#0x07d0
      001010 C0 07            [24] 2410 	push	ar7
      001012 12 83 E1         [24] 2411 	lcall	__mulint
      001015 AD 82            [24] 2412 	mov	r5,dpl
      001017 AE 83            [24] 2413 	mov	r6,dph
      001019 D0 07            [24] 2414 	pop	ar7
      00101B EE               [12] 2415 	mov	a,r6
      00101C 33               [12] 2416 	rlc	a
      00101D 95 E0            [12] 2417 	subb	a,acc
      00101F FC               [12] 2418 	mov	r4,a
      001020 FB               [12] 2419 	mov	r3,a
      001021 74 30            [12] 2420 	mov	a,#0x30
      001023 C3               [12] 2421 	clr	c
      001024 9D               [12] 2422 	subb	a,r5
      001025 74 F8            [12] 2423 	mov	a,#0xf8
      001027 9E               [12] 2424 	subb	a,r6
      001028 FE               [12] 2425 	mov	r6,a
      001029 E4               [12] 2426 	clr	a
      00102A 9C               [12] 2427 	subb	a,r4
      00102B E4               [12] 2428 	clr	a
      00102C 9B               [12] 2429 	subb	a,r3
      00102D 8E 8C            [24] 2430 	mov	_TH0,r6
                                   2431 ;	include/motor_cam_phim.c:101: TL0 = (63536 - (toc_do_motor_step * 2000));
      00102F EF               [12] 2432 	mov	a,r7
      001030 75 F0 D0         [24] 2433 	mov	b,#0xd0
      001033 A4               [48] 2434 	mul	ab
      001034 D3               [12] 2435 	setb	c
      001035 94 30            [12] 2436 	subb	a,#0x30
      001037 F4               [12] 2437 	cpl	a
      001038 F5 8A            [12] 2438 	mov	_TL0,a
                                   2439 ;	include/motor_cam_phim.c:102: TF0 = 0;
                                   2440 ;	assignBit
      00103A C2 8D            [12] 2441 	clr	_TF0
                                   2442 ;	include/motor_cam_phim.c:103: TR0 = 1;
                                   2443 ;	assignBit
      00103C D2 8C            [12] 2444 	setb	_TR0
                                   2445 ;	include/motor_cam_phim.c:104: ET0 = 1;
                                   2446 ;	assignBit
      00103E D2 A9            [12] 2447 	setb	_ET0
                                   2448 ;	include/motor_cam_phim.c:105: }
      001040 22               [24] 2449 	ret
                                   2450 ;------------------------------------------------------------
                                   2451 ;Allocation info for local variables in function 'xunggiay'
                                   2452 ;------------------------------------------------------------
                                   2453 ;	include/motor_cam_phim.c:107: void xunggiay(){
                                   2454 ;	-----------------------------------------
                                   2455 ;	 function xunggiay
                                   2456 ;	-----------------------------------------
      001041                       2457 _xunggiay:
                                   2458 ;	include/motor_cam_phim.c:108: WATCHDOG;
      001041 43 C1 10         [24] 2459 	orl	_WDT_CONTR,#0x10
                                   2460 ;	include/motor_cam_phim.c:109: flip_pulse^=1;
      001044 B2 20            [12] 2461 	cpl	_flip_pulse
                                   2462 ;	include/motor_cam_phim.c:110: over_cur_led = flip_pulse;
                                   2463 ;	assignBit
      001046 A2 20            [12] 2464 	mov	c,_flip_pulse
      001048 92 87            [24] 2465 	mov	_P07,c
                                   2466 ;	include/motor_cam_phim.c:111: giay_out=1;	
                                   2467 ;	assignBit
      00104A D2 1E            [12] 2468 	setb	_giay_out
                                   2469 ;	include/motor_cam_phim.c:112: if(connect) connect--;
      00104C 90 00 FB         [24] 2470 	mov	dptr,#_connect
      00104F E0               [24] 2471 	movx	a,@dptr
      001050 FF               [12] 2472 	mov	r7,a
      001051 E0               [24] 2473 	movx	a,@dptr
      001052 60 06            [24] 2474 	jz	00102$
      001054 EF               [12] 2475 	mov	a,r7
      001055 14               [12] 2476 	dec	a
      001056 90 00 FB         [24] 2477 	mov	dptr,#_connect
      001059 F0               [24] 2478 	movx	@dptr,a
      00105A                       2479 00102$:
                                   2480 ;	include/motor_cam_phim.c:113: if(total_try_time_out) total_try_time_out--;
      00105A 90 00 FD         [24] 2481 	mov	dptr,#_total_try_time_out
      00105D E0               [24] 2482 	movx	a,@dptr
      00105E FF               [12] 2483 	mov	r7,a
      00105F E0               [24] 2484 	movx	a,@dptr
      001060 60 06            [24] 2485 	jz	00104$
      001062 EF               [12] 2486 	mov	a,r7
      001063 14               [12] 2487 	dec	a
      001064 90 00 FD         [24] 2488 	mov	dptr,#_total_try_time_out
      001067 F0               [24] 2489 	movx	@dptr,a
      001068                       2490 00104$:
                                   2491 ;	include/motor_cam_phim.c:115: if(mode!=2 && ++second>max_second-1){
      001068 90 00 F4         [24] 2492 	mov	dptr,#_mode
      00106B E0               [24] 2493 	movx	a,@dptr
      00106C FF               [12] 2494 	mov	r7,a
      00106D BF 02 01         [24] 2495 	cjne	r7,#0x02,00163$
      001070 22               [24] 2496 	ret
      001071                       2497 00163$:
      001071 05 49            [12] 2498 	inc	_second
      001073 90 01 30         [24] 2499 	mov	dptr,#_max_second
      001076 E0               [24] 2500 	movx	a,@dptr
      001077 FF               [12] 2501 	mov	r7,a
      001078 7E 00            [12] 2502 	mov	r6,#0x00
      00107A 1F               [12] 2503 	dec	r7
      00107B BF FF 01         [24] 2504 	cjne	r7,#0xff,00164$
      00107E 1E               [12] 2505 	dec	r6
      00107F                       2506 00164$:
      00107F AC 49            [24] 2507 	mov	r4,_second
      001081 7D 00            [12] 2508 	mov	r5,#0x00
      001083 C3               [12] 2509 	clr	c
      001084 EF               [12] 2510 	mov	a,r7
      001085 9C               [12] 2511 	subb	a,r4
      001086 EE               [12] 2512 	mov	a,r6
      001087 64 80            [12] 2513 	xrl	a,#0x80
      001089 8D F0            [24] 2514 	mov	b,r5
      00108B 63 F0 80         [24] 2515 	xrl	b,#0x80
      00108E 95 F0            [12] 2516 	subb	a,b
      001090 50 50            [24] 2517 	jnc	00119$
                                   2518 ;	include/motor_cam_phim.c:116: second=0;
      001092 75 49 00         [24] 2519 	mov	_second,#0x00
                                   2520 ;	include/motor_cam_phim.c:117: if(so_lan_goi_dien && !--delay_cuoc_goi_ke_tiep) so_lan_goi_dien = 0;
      001095 90 00 B9         [24] 2521 	mov	dptr,#_so_lan_goi_dien
      001098 E0               [24] 2522 	movx	a,@dptr
      001099 60 0E            [24] 2523 	jz	00106$
      00109B 90 00 BA         [24] 2524 	mov	dptr,#_delay_cuoc_goi_ke_tiep
      00109E E0               [24] 2525 	movx	a,@dptr
      00109F 14               [12] 2526 	dec	a
      0010A0 F0               [24] 2527 	movx	@dptr,a
      0010A1 E0               [24] 2528 	movx	a,@dptr
      0010A2 70 05            [24] 2529 	jnz	00106$
      0010A4 90 00 B9         [24] 2530 	mov	dptr,#_so_lan_goi_dien
      0010A7 E4               [12] 2531 	clr	a
      0010A8 F0               [24] 2532 	movx	@dptr,a
      0010A9                       2533 00106$:
                                   2534 ;	include/motor_cam_phim.c:118: phut_out = 1;
                                   2535 ;	assignBit
      0010A9 D2 1F            [12] 2536 	setb	_phut_out
                                   2537 ;	include/motor_cam_phim.c:119: if(++minute>59){
      0010AB 05 4A            [12] 2538 	inc	_minute
      0010AD E5 4A            [12] 2539 	mov	a,_minute
      0010AF 24 C4            [12] 2540 	add	a,#0xff - 0x3b
      0010B1 50 2F            [24] 2541 	jnc	00119$
                                   2542 ;	include/motor_cam_phim.c:120: da_gui_bao_cao = 0;
                                   2543 ;	assignBit
      0010B3 C2 03            [12] 2544 	clr	_da_gui_bao_cao
                                   2545 ;	include/motor_cam_phim.c:121: minute=0;
      0010B5 75 4A 00         [24] 2546 	mov	_minute,#0x00
                                   2547 ;	include/motor_cam_phim.c:122: if(++hour>23){
      0010B8 05 4B            [12] 2548 	inc	_hour
      0010BA E5 4B            [12] 2549 	mov	a,_hour
      0010BC 24 E8            [12] 2550 	add	a,#0xff - 0x17
      0010BE 50 17            [24] 2551 	jnc	00111$
                                   2552 ;	include/motor_cam_phim.c:123: mp3_hour = 24;
      0010C0 78 80            [12] 2553 	mov	r0,#_mp3_hour
      0010C2 76 18            [12] 2554 	mov	@r0,#0x18
                                   2555 ;	include/motor_cam_phim.c:124: hour=0;
      0010C4 75 4B 00         [24] 2556 	mov	_hour,#0x00
                                   2557 ;	include/motor_cam_phim.c:125: if(ngay_reset_con_lai)
      0010C7 90 00 E6         [24] 2558 	mov	dptr,#_ngay_reset_con_lai
      0010CA E0               [24] 2559 	movx	a,@dptr
      0010CB FF               [12] 2560 	mov	r7,a
      0010CC E0               [24] 2561 	movx	a,@dptr
      0010CD 60 06            [24] 2562 	jz	00109$
                                   2563 ;	include/motor_cam_phim.c:126: ngay_reset_con_lai--;
      0010CF EF               [12] 2564 	mov	a,r7
      0010D0 14               [12] 2565 	dec	a
      0010D1 90 00 E6         [24] 2566 	mov	dptr,#_ngay_reset_con_lai
      0010D4 F0               [24] 2567 	movx	@dptr,a
      0010D5                       2568 00109$:
                                   2569 ;	include/motor_cam_phim.c:127: da_gui_bao_cao_thang = 0;
                                   2570 ;	assignBit
      0010D5 C2 04            [12] 2571 	clr	_da_gui_bao_cao_thang
      0010D7                       2572 00111$:
                                   2573 ;	include/motor_cam_phim.c:129: if(++hour12>11) hour12 = 0;
      0010D7 05 4C            [12] 2574 	inc	_hour12
      0010D9 E5 4C            [12] 2575 	mov	a,_hour12
      0010DB 24 F4            [12] 2576 	add	a,#0xff - 0x0b
      0010DD 50 03            [24] 2577 	jnc	00119$
      0010DF 75 4C 00         [24] 2578 	mov	_hour12,#0x00
      0010E2                       2579 00119$:
                                   2580 ;	include/motor_cam_phim.c:133: }
      0010E2 22               [24] 2581 	ret
                                   2582 ;------------------------------------------------------------
                                   2583 ;Allocation info for local variables in function 'clock_servide'
                                   2584 ;------------------------------------------------------------
                                   2585 ;	include/motor_cam_phim.c:135: void clock_servide () __interrupt INT_DONG_HO __using MEM_DONG_HO {
                                   2586 ;	-----------------------------------------
                                   2587 ;	 function clock_servide
                                   2588 ;	-----------------------------------------
      0010E3                       2589 _clock_servide:
                           00000F  2590 	ar7 = 0x0f
                           00000E  2591 	ar6 = 0x0e
                           00000D  2592 	ar5 = 0x0d
                           00000C  2593 	ar4 = 0x0c
                           00000B  2594 	ar3 = 0x0b
                           00000A  2595 	ar2 = 0x0a
                           000009  2596 	ar1 = 0x09
                           000008  2597 	ar0 = 0x08
      0010E3 C0 2A            [24] 2598 	push	bits
      0010E5 C0 E0            [24] 2599 	push	acc
      0010E7 C0 F0            [24] 2600 	push	b
      0010E9 C0 82            [24] 2601 	push	dpl
      0010EB C0 83            [24] 2602 	push	dph
      0010ED C0 07            [24] 2603 	push	(0+7)
      0010EF C0 06            [24] 2604 	push	(0+6)
      0010F1 C0 05            [24] 2605 	push	(0+5)
      0010F3 C0 04            [24] 2606 	push	(0+4)
      0010F5 C0 03            [24] 2607 	push	(0+3)
      0010F7 C0 02            [24] 2608 	push	(0+2)
      0010F9 C0 01            [24] 2609 	push	(0+1)
      0010FB C0 00            [24] 2610 	push	(0+0)
      0010FD C0 D0            [24] 2611 	push	psw
      0010FF 75 D0 08         [24] 2612 	mov	psw,#0x08
                                   2613 ;	include/motor_cam_phim.c:136: WATCHDOG;
      001102 43 C1 10         [24] 2614 	orl	_WDT_CONTR,#0x10
                                   2615 ;	include/motor_cam_phim.c:137: xung_giay_check=250;
      001105 90 00 E7         [24] 2616 	mov	dptr,#_xung_giay_check
      001108 74 FA            [12] 2617 	mov	a,#0xfa
      00110A F0               [24] 2618 	movx	@dptr,a
                                   2619 ;	include/motor_cam_phim.c:138: mat_xung_giay=0;
                                   2620 ;	assignBit
      00110B C2 38            [12] 2621 	clr	_mat_xung_giay
                                   2622 ;	include/motor_cam_phim.c:139: xunggiay();
      00110D 75 D0 00         [24] 2623 	mov	psw,#0x00
      001110 12 10 41         [24] 2624 	lcall	_xunggiay
      001113 75 D0 08         [24] 2625 	mov	psw,#0x08
                                   2626 ;	include/motor_cam_phim.c:141: }
      001116 D0 D0            [24] 2627 	pop	psw
      001118 D0 00            [24] 2628 	pop	(0+0)
      00111A D0 01            [24] 2629 	pop	(0+1)
      00111C D0 02            [24] 2630 	pop	(0+2)
      00111E D0 03            [24] 2631 	pop	(0+3)
      001120 D0 04            [24] 2632 	pop	(0+4)
      001122 D0 05            [24] 2633 	pop	(0+5)
      001124 D0 06            [24] 2634 	pop	(0+6)
      001126 D0 07            [24] 2635 	pop	(0+7)
      001128 D0 83            [24] 2636 	pop	dph
      00112A D0 82            [24] 2637 	pop	dpl
      00112C D0 F0            [24] 2638 	pop	b
      00112E D0 E0            [24] 2639 	pop	acc
      001130 D0 2A            [24] 2640 	pop	bits
      001132 32               [24] 2641 	reti
                                   2642 ;------------------------------------------------------------
                                   2643 ;Allocation info for local variables in function 'PCA_Handler'
                                   2644 ;------------------------------------------------------------
                                   2645 ;	include/motor_cam_phim.c:147: void	PCA_Handler (void) __interrupt PCA_VECTOR __using MEM_DONG_HO{
                                   2646 ;	-----------------------------------------
                                   2647 ;	 function PCA_Handler
                                   2648 ;	-----------------------------------------
      001133                       2649 _PCA_Handler:
      001133 C0 2A            [24] 2650 	push	bits
      001135 C0 E0            [24] 2651 	push	acc
      001137 C0 F0            [24] 2652 	push	b
      001139 C0 82            [24] 2653 	push	dpl
      00113B C0 83            [24] 2654 	push	dph
      00113D C0 07            [24] 2655 	push	(0+7)
      00113F C0 06            [24] 2656 	push	(0+6)
      001141 C0 05            [24] 2657 	push	(0+5)
      001143 C0 04            [24] 2658 	push	(0+4)
      001145 C0 03            [24] 2659 	push	(0+3)
      001147 C0 02            [24] 2660 	push	(0+2)
      001149 C0 01            [24] 2661 	push	(0+1)
      00114B C0 00            [24] 2662 	push	(0+0)
      00114D C0 D0            [24] 2663 	push	psw
      00114F 75 D0 08         [24] 2664 	mov	psw,#0x08
                                   2665 ;	include/motor_cam_phim.c:148: WATCHDOG;
      001152 43 C1 10         [24] 2666 	orl	_WDT_CONTR,#0x10
                                   2667 ;	include/motor_cam_phim.c:149: if(CCF0){
                                   2668 ;	include/motor_cam_phim.c:150: CCF0=0;//tat co PCA timer 0
                                   2669 ;	assignBit
      001155 10 D8 03         [24] 2670 	jbc	_CCF0,00479$
      001158 02 14 85         [24] 2671 	ljmp	00193$
      00115B                       2672 00479$:
                                   2673 ;	include/motor_cam_phim.c:151: CCAP0L = PCA_Timer0; //nap vao vi tri timer tiep theo
      00115B 90 00 E4         [24] 2674 	mov	dptr,#_PCA_Timer0
      00115E E0               [24] 2675 	movx	a,@dptr
      00115F FE               [12] 2676 	mov	r6,a
      001160 A3               [24] 2677 	inc	dptr
      001161 E0               [24] 2678 	movx	a,@dptr
      001162 FF               [12] 2679 	mov	r7,a
      001163 8E EA            [24] 2680 	mov	_CCAP0L,r6
                                   2681 ;	include/motor_cam_phim.c:152: CCAP0H = PCA_Timer0 >> 8;
      001165 8F FA            [24] 2682 	mov	_CCAP0H,r7
                                   2683 ;	include/motor_cam_phim.c:153: PCA_Timer0 += 25000; //tang bien nap vao len 25ms
      001167 90 00 E4         [24] 2684 	mov	dptr,#_PCA_Timer0
      00116A 74 A8            [12] 2685 	mov	a,#0xa8
      00116C 2E               [12] 2686 	add	a,r6
      00116D F0               [24] 2687 	movx	@dptr,a
      00116E 74 61            [12] 2688 	mov	a,#0x61
      001170 3F               [12] 2689 	addc	a,r7
      001171 A3               [24] 2690 	inc	dptr
      001172 F0               [24] 2691 	movx	@dptr,a
                                   2692 ;	include/motor_cam_phim.c:155: if(eep_cam){
      001173 90 F0 1F         [24] 2693 	mov	dptr,#_eep_cam
      001176 E4               [12] 2694 	clr	a
      001177 93               [24] 2695 	movc	a,@a+dptr
      001178 60 0C            [24] 2696 	jz	00102$
                                   2697 ;	include/motor_cam_phim.c:156: trang_thai_cam = !cam_che;
      00117A A2 B6            [12] 2698 	mov	c,_P36
      00117C B3               [12] 2699 	cpl	c
      00117D 92 15            [24] 2700 	mov	_trang_thai_cam,c
                                   2701 ;	include/motor_cam_phim.c:157: trang_thai_cam2 = !cam_che2;
      00117F A2 B7            [12] 2702 	mov	c,_P37
      001181 B3               [12] 2703 	cpl	c
      001182 92 16            [24] 2704 	mov	_trang_thai_cam2,c
      001184 80 08            [24] 2705 	sjmp	00103$
      001186                       2706 00102$:
                                   2707 ;	include/motor_cam_phim.c:159: trang_thai_cam = cam_che;
                                   2708 ;	assignBit
      001186 A2 B6            [12] 2709 	mov	c,_P36
      001188 92 15            [24] 2710 	mov	_trang_thai_cam,c
                                   2711 ;	include/motor_cam_phim.c:160: trang_thai_cam2 = cam_che2;
                                   2712 ;	assignBit
      00118A A2 B7            [12] 2713 	mov	c,_P37
      00118C 92 16            [24] 2714 	mov	_trang_thai_cam2,c
      00118E                       2715 00103$:
                                   2716 ;	include/motor_cam_phim.c:162: if(so_motor == 1){
      00118E 90 01 2F         [24] 2717 	mov	dptr,#_so_motor
      001191 E0               [24] 2718 	movx	a,@dptr
      001192 FF               [12] 2719 	mov	r7,a
      001193 BF 01 53         [24] 2720 	cjne	r7,#0x01,00114$
                                   2721 ;	include/motor_cam_phim.c:163: if(eep_cam){
      001196 90 F0 1F         [24] 2722 	mov	dptr,#_eep_cam
      001199 E4               [12] 2723 	clr	a
      00119A 93               [24] 2724 	movc	a,@a+dptr
      00119B 60 27            [24] 2725 	jz	00111$
                                   2726 ;	include/motor_cam_phim.c:164: if(may_dc) trang_thai_cam = !trang_thai_cam && !trang_thai_cam2;  
      00119D 30 34 12         [24] 2727 	jnb	_may_dc,00105$
      0011A0 20 15 03         [24] 2728 	jb	_trang_thai_cam,00195$
      0011A3 30 16 04         [24] 2729 	jnb	_trang_thai_cam2,00196$
      0011A6                       2730 00195$:
                                   2731 ;	assignBit
      0011A6 C2 40            [12] 2732 	clr	_PCA_Handler_sloc0_1_0
      0011A8 80 02            [24] 2733 	sjmp	00197$
      0011AA                       2734 00196$:
                                   2735 ;	assignBit
      0011AA D2 40            [12] 2736 	setb	_PCA_Handler_sloc0_1_0
      0011AC                       2737 00197$:
                                   2738 ;	assignBit
      0011AC A2 40            [12] 2739 	mov	c,_PCA_Handler_sloc0_1_0
      0011AE 92 15            [24] 2740 	mov	_trang_thai_cam,c
      0011B0 80 37            [24] 2741 	sjmp	00114$
      0011B2                       2742 00105$:
                                   2743 ;	include/motor_cam_phim.c:165: else trang_thai_cam = trang_thai_cam || trang_thai_cam2;
      0011B2 20 15 07         [24] 2744 	jb	_trang_thai_cam,00199$
      0011B5 20 16 04         [24] 2745 	jb	_trang_thai_cam2,00199$
                                   2746 ;	assignBit
      0011B8 C2 40            [12] 2747 	clr	_PCA_Handler_sloc0_1_0
      0011BA 80 02            [24] 2748 	sjmp	00200$
      0011BC                       2749 00199$:
                                   2750 ;	assignBit
      0011BC D2 40            [12] 2751 	setb	_PCA_Handler_sloc0_1_0
      0011BE                       2752 00200$:
                                   2753 ;	assignBit
      0011BE A2 40            [12] 2754 	mov	c,_PCA_Handler_sloc0_1_0
      0011C0 92 15            [24] 2755 	mov	_trang_thai_cam,c
      0011C2 80 25            [24] 2756 	sjmp	00114$
      0011C4                       2757 00111$:
                                   2758 ;	include/motor_cam_phim.c:167: if(may_dc) trang_thai_cam = !trang_thai_cam || !trang_thai_cam2;  
      0011C4 30 34 12         [24] 2759 	jnb	_may_dc,00108$
      0011C7 30 15 07         [24] 2760 	jnb	_trang_thai_cam,00202$
      0011CA 30 16 04         [24] 2761 	jnb	_trang_thai_cam2,00202$
                                   2762 ;	assignBit
      0011CD C2 40            [12] 2763 	clr	_PCA_Handler_sloc0_1_0
      0011CF 80 02            [24] 2764 	sjmp	00203$
      0011D1                       2765 00202$:
                                   2766 ;	assignBit
      0011D1 D2 40            [12] 2767 	setb	_PCA_Handler_sloc0_1_0
      0011D3                       2768 00203$:
                                   2769 ;	assignBit
      0011D3 A2 40            [12] 2770 	mov	c,_PCA_Handler_sloc0_1_0
      0011D5 92 15            [24] 2771 	mov	_trang_thai_cam,c
      0011D7 80 10            [24] 2772 	sjmp	00114$
      0011D9                       2773 00108$:
                                   2774 ;	include/motor_cam_phim.c:168: else trang_thai_cam = trang_thai_cam && trang_thai_cam2;
      0011D9 30 15 03         [24] 2775 	jnb	_trang_thai_cam,00204$
      0011DC 20 16 04         [24] 2776 	jb	_trang_thai_cam2,00205$
      0011DF                       2777 00204$:
                                   2778 ;	assignBit
      0011DF C2 40            [12] 2779 	clr	_PCA_Handler_sloc0_1_0
      0011E1 80 02            [24] 2780 	sjmp	00206$
      0011E3                       2781 00205$:
                                   2782 ;	assignBit
      0011E3 D2 40            [12] 2783 	setb	_PCA_Handler_sloc0_1_0
      0011E5                       2784 00206$:
                                   2785 ;	assignBit
      0011E5 A2 40            [12] 2786 	mov	c,_PCA_Handler_sloc0_1_0
      0011E7 92 15            [24] 2787 	mov	_trang_thai_cam,c
      0011E9                       2788 00114$:
                                   2789 ;	include/motor_cam_phim.c:172: if(motor_index!=5){
      0011E9 74 05            [12] 2790 	mov	a,#0x05
      0011EB B5 56 03         [24] 2791 	cjne	a,_motor_index,00494$
      0011EE 02 12 B2         [24] 2792 	ljmp	00144$
      0011F1                       2793 00494$:
                                   2794 ;	include/motor_cam_phim.c:174: if(trang_thai_cam)
      0011F1 30 15 0D         [24] 2795 	jnb	_trang_thai_cam,00141$
                                   2796 ;	include/motor_cam_phim.c:175: if(cam_vao) cam_vao_han = 1;				
      0011F4 30 17 05         [24] 2797 	jnb	_cam_vao,00116$
                                   2798 ;	assignBit
      0011F7 D2 19            [12] 2799 	setb	_cam_vao_han
      0011F9 02 12 B2         [24] 2800 	ljmp	00144$
      0011FC                       2801 00116$:
                                   2802 ;	include/motor_cam_phim.c:176: else cam_vao = 1;
                                   2803 ;	assignBit
      0011FC D2 17            [12] 2804 	setb	_cam_vao
      0011FE 02 12 B2         [24] 2805 	ljmp	00144$
      001201                       2806 00141$:
                                   2807 ;	include/motor_cam_phim.c:177: else if(cam_ra){
      001201 20 1B 03         [24] 2808 	jb	_cam_ra,00497$
      001204 02 12 A6         [24] 2809 	ljmp	00138$
      001207                       2810 00497$:
                                   2811 ;	include/motor_cam_phim.c:178: thoi_gian_doi_doc_cam[motor_index] = thoi_gian_doi_cam_chuan;
      001207 E5 56            [12] 2812 	mov	a,_motor_index
      001209 24 E8            [12] 2813 	add	a,#_thoi_gian_doi_doc_cam
      00120B FE               [12] 2814 	mov	r6,a
      00120C E4               [12] 2815 	clr	a
      00120D 34 00            [12] 2816 	addc	a,#(_thoi_gian_doi_doc_cam >> 8)
      00120F FF               [12] 2817 	mov	r7,a
      001210 90 00 EC         [24] 2818 	mov	dptr,#_thoi_gian_doi_cam_chuan
      001213 E0               [24] 2819 	movx	a,@dptr
      001214 8E 82            [24] 2820 	mov	dpl,r6
      001216 8F 83            [24] 2821 	mov	dph,r7
      001218 F0               [24] 2822 	movx	@dptr,a
                                   2823 ;	include/motor_cam_phim.c:179: if(canhkim) canhkim--;
      001219 90 00 E1         [24] 2824 	mov	dptr,#_canhkim
      00121C E0               [24] 2825 	movx	a,@dptr
      00121D FF               [12] 2826 	mov	r7,a
      00121E E0               [24] 2827 	movx	a,@dptr
      00121F 60 08            [24] 2828 	jz	00130$
      001221 EF               [12] 2829 	mov	a,r7
      001222 14               [12] 2830 	dec	a
      001223 90 00 E1         [24] 2831 	mov	dptr,#_canhkim
      001226 F0               [24] 2832 	movx	@dptr,a
      001227 80 60            [24] 2833 	sjmp	00131$
      001229                       2834 00130$:
                                   2835 ;	include/motor_cam_phim.c:180: else if(motorDir && ++phut[motor_index]>59){
      001229 30 12 2E         [24] 2836 	jnb	_motorDir,00126$
      00122C E5 56            [12] 2837 	mov	a,_motor_index
      00122E 24 51            [12] 2838 	add	a,#_phut
      001230 F9               [12] 2839 	mov	r1,a
      001231 87 0F            [24] 2840 	mov	ar7,@r1
      001233 0F               [12] 2841 	inc	r7
      001234 A7 0F            [24] 2842 	mov	@r1,ar7
      001236 EF               [12] 2843 	mov	a,r7
      001237 24 C4            [12] 2844 	add	a,#0xff - 0x3b
      001239 50 1F            [24] 2845 	jnc	00126$
                                   2846 ;	include/motor_cam_phim.c:181: phut[motor_index] = 0;
      00123B E5 56            [12] 2847 	mov	a,_motor_index
      00123D 24 51            [12] 2848 	add	a,#_phut
      00123F F8               [12] 2849 	mov	r0,a
      001240 76 00            [12] 2850 	mov	@r0,#0x00
                                   2851 ;	include/motor_cam_phim.c:182: if(++gio[motor_index]>11) gio[motor_index] = 0;
      001242 E5 56            [12] 2852 	mov	a,_motor_index
      001244 24 4D            [12] 2853 	add	a,#_gio
      001246 F9               [12] 2854 	mov	r1,a
      001247 87 0F            [24] 2855 	mov	ar7,@r1
      001249 0F               [12] 2856 	inc	r7
      00124A A7 0F            [24] 2857 	mov	@r1,ar7
      00124C EF               [12] 2858 	mov	a,r7
      00124D 24 F4            [12] 2859 	add	a,#0xff - 0x0b
      00124F 50 38            [24] 2860 	jnc	00131$
      001251 E5 56            [12] 2861 	mov	a,_motor_index
      001253 24 4D            [12] 2862 	add	a,#_gio
      001255 F8               [12] 2863 	mov	r0,a
      001256 76 00            [12] 2864 	mov	@r0,#0x00
      001258 80 2F            [24] 2865 	sjmp	00131$
      00125A                       2866 00126$:
                                   2867 ;	include/motor_cam_phim.c:183: }else if(!motorDir && --phut[motor_index]>60){
      00125A 20 12 2C         [24] 2868 	jb	_motorDir,00131$
      00125D E5 56            [12] 2869 	mov	a,_motor_index
      00125F 24 51            [12] 2870 	add	a,#_phut
      001261 F9               [12] 2871 	mov	r1,a
      001262 87 0F            [24] 2872 	mov	ar7,@r1
      001264 1F               [12] 2873 	dec	r7
      001265 A7 0F            [24] 2874 	mov	@r1,ar7
      001267 EF               [12] 2875 	mov	a,r7
      001268 24 C3            [12] 2876 	add	a,#0xff - 0x3c
      00126A 50 1D            [24] 2877 	jnc	00131$
                                   2878 ;	include/motor_cam_phim.c:184: phut[motor_index] = 59;
      00126C E5 56            [12] 2879 	mov	a,_motor_index
      00126E 24 51            [12] 2880 	add	a,#_phut
      001270 F8               [12] 2881 	mov	r0,a
      001271 76 3B            [12] 2882 	mov	@r0,#0x3b
                                   2883 ;	include/motor_cam_phim.c:185: if(--gio[motor_index]>12) gio[motor_index] = 11;
      001273 E5 56            [12] 2884 	mov	a,_motor_index
      001275 24 4D            [12] 2885 	add	a,#_gio
      001277 F9               [12] 2886 	mov	r1,a
      001278 87 0F            [24] 2887 	mov	ar7,@r1
      00127A 1F               [12] 2888 	dec	r7
      00127B A7 0F            [24] 2889 	mov	@r1,ar7
      00127D EF               [12] 2890 	mov	a,r7
      00127E 24 F3            [12] 2891 	add	a,#0xff - 0x0c
      001280 50 07            [24] 2892 	jnc	00131$
      001282 E5 56            [12] 2893 	mov	a,_motor_index
      001284 24 4D            [12] 2894 	add	a,#_gio
      001286 F8               [12] 2895 	mov	r0,a
      001287 76 0B            [12] 2896 	mov	@r0,#0x0b
      001289                       2897 00131$:
                                   2898 ;	include/motor_cam_phim.c:187: cam_ra = cam_vao = cam_vao_han = 0;
                                   2899 ;	assignBit
      001289 C2 19            [12] 2900 	clr	_cam_vao_han
                                   2901 ;	assignBit
      00128B C2 17            [12] 2902 	clr	_cam_vao
                                   2903 ;	assignBit
      00128D C2 1B            [12] 2904 	clr	_cam_ra
                                   2905 ;	include/motor_cam_phim.c:188: motor_index = motor_run_check();
      00128F 75 D0 00         [24] 2906 	mov	psw,#0x00
      001292 12 0A 8C         [24] 2907 	lcall	_motor_run_check
      001295 75 D0 08         [24] 2908 	mov	psw,#0x08
      001298 85 82 56         [24] 2909 	mov	_motor_index,dpl
                                   2910 ;	include/motor_cam_phim.c:190: luu_gio_kim();				
      00129B 75 D0 00         [24] 2911 	mov	psw,#0x00
      00129E 12 0F 81         [24] 2912 	lcall	_luu_gio_kim
      0012A1 75 D0 08         [24] 2913 	mov	psw,#0x08
      0012A4 80 0C            [24] 2914 	sjmp	00144$
      0012A6                       2915 00138$:
                                   2916 ;	include/motor_cam_phim.c:191: }else if(cam_vao_han) cam_ra = 1;
      0012A6 30 19 04         [24] 2917 	jnb	_cam_vao_han,00135$
                                   2918 ;	assignBit
      0012A9 D2 1B            [12] 2919 	setb	_cam_ra
      0012AB 80 05            [24] 2920 	sjmp	00144$
      0012AD                       2921 00135$:
                                   2922 ;	include/motor_cam_phim.c:192: else if(cam_vao) cam_vao = 0;
                                   2923 ;	assignBit
      0012AD 10 17 02         [24] 2924 	jbc	_cam_vao,00506$
      0012B0 80 00            [24] 2925 	sjmp	00144$
      0012B2                       2926 00506$:
      0012B2                       2927 00144$:
                                   2928 ;	include/motor_cam_phim.c:195: if(motor_index2!=5){
      0012B2 74 05            [12] 2929 	mov	a,#0x05
      0012B4 B5 57 03         [24] 2930 	cjne	a,_motor_index2,00507$
      0012B7 02 13 7B         [24] 2931 	ljmp	00174$
      0012BA                       2932 00507$:
                                   2933 ;	include/motor_cam_phim.c:196: if(trang_thai_cam2)
      0012BA 30 16 0D         [24] 2934 	jnb	_trang_thai_cam2,00171$
                                   2935 ;	include/motor_cam_phim.c:197: if(cam_vao2) cam_vao_han2 = 1;				
      0012BD 30 18 05         [24] 2936 	jnb	_cam_vao2,00146$
                                   2937 ;	assignBit
      0012C0 D2 1A            [12] 2938 	setb	_cam_vao_han2
      0012C2 02 13 7B         [24] 2939 	ljmp	00174$
      0012C5                       2940 00146$:
                                   2941 ;	include/motor_cam_phim.c:198: else cam_vao2 = 1;
                                   2942 ;	assignBit
      0012C5 D2 18            [12] 2943 	setb	_cam_vao2
      0012C7 02 13 7B         [24] 2944 	ljmp	00174$
      0012CA                       2945 00171$:
                                   2946 ;	include/motor_cam_phim.c:199: else if(cam_ra2){
      0012CA 20 1C 03         [24] 2947 	jb	_cam_ra2,00510$
      0012CD 02 13 6F         [24] 2948 	ljmp	00168$
      0012D0                       2949 00510$:
                                   2950 ;	include/motor_cam_phim.c:200: thoi_gian_doi_doc_cam[motor_index2] = thoi_gian_doi_cam_chuan;
      0012D0 E5 57            [12] 2951 	mov	a,_motor_index2
      0012D2 24 E8            [12] 2952 	add	a,#_thoi_gian_doi_doc_cam
      0012D4 FE               [12] 2953 	mov	r6,a
      0012D5 E4               [12] 2954 	clr	a
      0012D6 34 00            [12] 2955 	addc	a,#(_thoi_gian_doi_doc_cam >> 8)
      0012D8 FF               [12] 2956 	mov	r7,a
      0012D9 90 00 EC         [24] 2957 	mov	dptr,#_thoi_gian_doi_cam_chuan
      0012DC E0               [24] 2958 	movx	a,@dptr
      0012DD 8E 82            [24] 2959 	mov	dpl,r6
      0012DF 8F 83            [24] 2960 	mov	dph,r7
      0012E1 F0               [24] 2961 	movx	@dptr,a
                                   2962 ;	include/motor_cam_phim.c:201: if(canhkim) canhkim--;
      0012E2 90 00 E1         [24] 2963 	mov	dptr,#_canhkim
      0012E5 E0               [24] 2964 	movx	a,@dptr
      0012E6 FF               [12] 2965 	mov	r7,a
      0012E7 E0               [24] 2966 	movx	a,@dptr
      0012E8 60 08            [24] 2967 	jz	00160$
      0012EA EF               [12] 2968 	mov	a,r7
      0012EB 14               [12] 2969 	dec	a
      0012EC 90 00 E1         [24] 2970 	mov	dptr,#_canhkim
      0012EF F0               [24] 2971 	movx	@dptr,a
      0012F0 80 60            [24] 2972 	sjmp	00161$
      0012F2                       2973 00160$:
                                   2974 ;	include/motor_cam_phim.c:202: else if(motorDir && ++phut[motor_index2]>59){
      0012F2 30 12 2E         [24] 2975 	jnb	_motorDir,00156$
      0012F5 E5 57            [12] 2976 	mov	a,_motor_index2
      0012F7 24 51            [12] 2977 	add	a,#_phut
      0012F9 F9               [12] 2978 	mov	r1,a
      0012FA 87 0F            [24] 2979 	mov	ar7,@r1
      0012FC 0F               [12] 2980 	inc	r7
      0012FD A7 0F            [24] 2981 	mov	@r1,ar7
      0012FF EF               [12] 2982 	mov	a,r7
      001300 24 C4            [12] 2983 	add	a,#0xff - 0x3b
      001302 50 1F            [24] 2984 	jnc	00156$
                                   2985 ;	include/motor_cam_phim.c:203: phut[motor_index2] = 0;
      001304 E5 57            [12] 2986 	mov	a,_motor_index2
      001306 24 51            [12] 2987 	add	a,#_phut
      001308 F8               [12] 2988 	mov	r0,a
      001309 76 00            [12] 2989 	mov	@r0,#0x00
                                   2990 ;	include/motor_cam_phim.c:204: if(++gio[motor_index2]>11) gio[motor_index2] = 0;
      00130B E5 57            [12] 2991 	mov	a,_motor_index2
      00130D 24 4D            [12] 2992 	add	a,#_gio
      00130F F9               [12] 2993 	mov	r1,a
      001310 87 0F            [24] 2994 	mov	ar7,@r1
      001312 0F               [12] 2995 	inc	r7
      001313 A7 0F            [24] 2996 	mov	@r1,ar7
      001315 EF               [12] 2997 	mov	a,r7
      001316 24 F4            [12] 2998 	add	a,#0xff - 0x0b
      001318 50 38            [24] 2999 	jnc	00161$
      00131A E5 57            [12] 3000 	mov	a,_motor_index2
      00131C 24 4D            [12] 3001 	add	a,#_gio
      00131E F8               [12] 3002 	mov	r0,a
      00131F 76 00            [12] 3003 	mov	@r0,#0x00
      001321 80 2F            [24] 3004 	sjmp	00161$
      001323                       3005 00156$:
                                   3006 ;	include/motor_cam_phim.c:205: }else if(!motorDir && --phut[motor_index2]>60){
      001323 20 12 2C         [24] 3007 	jb	_motorDir,00161$
      001326 E5 57            [12] 3008 	mov	a,_motor_index2
      001328 24 51            [12] 3009 	add	a,#_phut
      00132A F9               [12] 3010 	mov	r1,a
      00132B 87 0F            [24] 3011 	mov	ar7,@r1
      00132D 1F               [12] 3012 	dec	r7
      00132E A7 0F            [24] 3013 	mov	@r1,ar7
      001330 EF               [12] 3014 	mov	a,r7
      001331 24 C3            [12] 3015 	add	a,#0xff - 0x3c
      001333 50 1D            [24] 3016 	jnc	00161$
                                   3017 ;	include/motor_cam_phim.c:206: phut[motor_index2] = 59;
      001335 E5 57            [12] 3018 	mov	a,_motor_index2
      001337 24 51            [12] 3019 	add	a,#_phut
      001339 F8               [12] 3020 	mov	r0,a
      00133A 76 3B            [12] 3021 	mov	@r0,#0x3b
                                   3022 ;	include/motor_cam_phim.c:207: if(--gio[motor_index2]>12) gio[motor_index2] = 11;
      00133C E5 57            [12] 3023 	mov	a,_motor_index2
      00133E 24 4D            [12] 3024 	add	a,#_gio
      001340 F9               [12] 3025 	mov	r1,a
      001341 87 0F            [24] 3026 	mov	ar7,@r1
      001343 1F               [12] 3027 	dec	r7
      001344 A7 0F            [24] 3028 	mov	@r1,ar7
      001346 EF               [12] 3029 	mov	a,r7
      001347 24 F3            [12] 3030 	add	a,#0xff - 0x0c
      001349 50 07            [24] 3031 	jnc	00161$
      00134B E5 57            [12] 3032 	mov	a,_motor_index2
      00134D 24 4D            [12] 3033 	add	a,#_gio
      00134F F8               [12] 3034 	mov	r0,a
      001350 76 0B            [12] 3035 	mov	@r0,#0x0b
      001352                       3036 00161$:
                                   3037 ;	include/motor_cam_phim.c:209: cam_ra2 = cam_vao2 = cam_vao_han2 = 0;
                                   3038 ;	assignBit
      001352 C2 1A            [12] 3039 	clr	_cam_vao_han2
                                   3040 ;	assignBit
      001354 C2 18            [12] 3041 	clr	_cam_vao2
                                   3042 ;	assignBit
      001356 C2 1C            [12] 3043 	clr	_cam_ra2
                                   3044 ;	include/motor_cam_phim.c:210: motor_index2 = motor_run_check2();
      001358 75 D0 00         [24] 3045 	mov	psw,#0x00
      00135B 12 0D 04         [24] 3046 	lcall	_motor_run_check2
      00135E 75 D0 08         [24] 3047 	mov	psw,#0x08
      001361 85 82 57         [24] 3048 	mov	_motor_index2,dpl
                                   3049 ;	include/motor_cam_phim.c:211: luu_gio_kim();				
      001364 75 D0 00         [24] 3050 	mov	psw,#0x00
      001367 12 0F 81         [24] 3051 	lcall	_luu_gio_kim
      00136A 75 D0 08         [24] 3052 	mov	psw,#0x08
      00136D 80 0C            [24] 3053 	sjmp	00174$
      00136F                       3054 00168$:
                                   3055 ;	include/motor_cam_phim.c:212: }else if(cam_vao_han2) cam_ra2 = 1;
      00136F 30 1A 04         [24] 3056 	jnb	_cam_vao_han2,00165$
                                   3057 ;	assignBit
      001372 D2 1C            [12] 3058 	setb	_cam_ra2
      001374 80 05            [24] 3059 	sjmp	00174$
      001376                       3060 00165$:
                                   3061 ;	include/motor_cam_phim.c:213: else if(cam_vao2) cam_vao2 = 0;
                                   3062 ;	assignBit
      001376 10 18 02         [24] 3063 	jbc	_cam_vao2,00519$
      001379 80 00            [24] 3064 	sjmp	00174$
      00137B                       3065 00519$:
      00137B                       3066 00174$:
                                   3067 ;	include/motor_cam_phim.c:218: if(phim_mode_xuong && phim_mode_vao) phim_mode_doi = 2;
      00137B 30 21 09         [24] 3068 	jnb	_phim_mode_xuong,00176$
      00137E 30 B5 06         [24] 3069 	jnb	_P35,00176$
      001381 90 00 F1         [24] 3070 	mov	dptr,#_phim_mode_doi
      001384 74 02            [12] 3071 	mov	a,#0x02
      001386 F0               [24] 3072 	movx	@dptr,a
      001387                       3073 00176$:
                                   3074 ;	include/motor_cam_phim.c:219: phim_mode_giu = phim_mode_xuong && !phim_mode_vao;
      001387 30 21 03         [24] 3075 	jnb	_phim_mode_xuong,00207$
      00138A 30 B5 04         [24] 3076 	jnb	_P35,00208$
      00138D                       3077 00207$:
                                   3078 ;	assignBit
      00138D C2 40            [12] 3079 	clr	_PCA_Handler_sloc0_1_0
      00138F 80 02            [24] 3080 	sjmp	00209$
      001391                       3081 00208$:
                                   3082 ;	assignBit
      001391 D2 40            [12] 3083 	setb	_PCA_Handler_sloc0_1_0
      001393                       3084 00209$:
                                   3085 ;	assignBit
      001393 A2 40            [12] 3086 	mov	c,_PCA_Handler_sloc0_1_0
      001395 92 24            [24] 3087 	mov	_phim_mode_giu,c
                                   3088 ;	include/motor_cam_phim.c:220: phim_mode_xuong = !phim_mode_cu && !phim_mode_vao;
      001397 20 23 03         [24] 3089 	jb	_phim_mode_cu,00210$
      00139A 30 B5 04         [24] 3090 	jnb	_P35,00211$
      00139D                       3091 00210$:
                                   3092 ;	assignBit
      00139D C2 40            [12] 3093 	clr	_PCA_Handler_sloc0_1_0
      00139F 80 02            [24] 3094 	sjmp	00212$
      0013A1                       3095 00211$:
                                   3096 ;	assignBit
      0013A1 D2 40            [12] 3097 	setb	_PCA_Handler_sloc0_1_0
      0013A3                       3098 00212$:
                                   3099 ;	assignBit
      0013A3 A2 40            [12] 3100 	mov	c,_PCA_Handler_sloc0_1_0
      0013A5 92 21            [24] 3101 	mov	_phim_mode_xuong,c
                                   3102 ;	include/motor_cam_phim.c:221: phim_mode_nhan = phim_mode_nhan || (!phim_mode_giu && phim_mode_xuong);
      0013A7 20 22 0A         [24] 3103 	jb	_phim_mode_nhan,00214$
      0013AA 20 24 03         [24] 3104 	jb	_phim_mode_giu,00213$
      0013AD 20 21 04         [24] 3105 	jb	_phim_mode_xuong,00214$
      0013B0                       3106 00213$:
                                   3107 ;	assignBit
      0013B0 C2 40            [12] 3108 	clr	_PCA_Handler_sloc0_1_0
      0013B2 80 02            [24] 3109 	sjmp	00215$
      0013B4                       3110 00214$:
                                   3111 ;	assignBit
      0013B4 D2 40            [12] 3112 	setb	_PCA_Handler_sloc0_1_0
      0013B6                       3113 00215$:
                                   3114 ;	assignBit
      0013B6 A2 40            [12] 3115 	mov	c,_PCA_Handler_sloc0_1_0
      0013B8 92 22            [24] 3116 	mov	_phim_mode_nhan,c
                                   3117 ;	include/motor_cam_phim.c:222: phim_mode_cu = phim_mode_vao;
                                   3118 ;	assignBit
      0013BA A2 B5            [12] 3119 	mov	c,_P35
      0013BC 92 23            [24] 3120 	mov	_phim_mode_cu,c
                                   3121 ;	include/motor_cam_phim.c:224: if(phim_back_xuong && key_in2) phim_back_doi = 2;
      0013BE 30 25 09         [24] 3122 	jnb	_phim_back_xuong,00179$
      0013C1 30 B3 06         [24] 3123 	jnb	_P33,00179$
      0013C4 90 00 F2         [24] 3124 	mov	dptr,#_phim_back_doi
      0013C7 74 02            [12] 3125 	mov	a,#0x02
      0013C9 F0               [24] 3126 	movx	@dptr,a
      0013CA                       3127 00179$:
                                   3128 ;	include/motor_cam_phim.c:225: phim_back_giu = phim_back_xuong && !key_in2;
      0013CA 30 25 03         [24] 3129 	jnb	_phim_back_xuong,00219$
      0013CD 30 B3 04         [24] 3130 	jnb	_P33,00220$
      0013D0                       3131 00219$:
                                   3132 ;	assignBit
      0013D0 C2 40            [12] 3133 	clr	_PCA_Handler_sloc0_1_0
      0013D2 80 02            [24] 3134 	sjmp	00221$
      0013D4                       3135 00220$:
                                   3136 ;	assignBit
      0013D4 D2 40            [12] 3137 	setb	_PCA_Handler_sloc0_1_0
      0013D6                       3138 00221$:
                                   3139 ;	assignBit
      0013D6 A2 40            [12] 3140 	mov	c,_PCA_Handler_sloc0_1_0
      0013D8 92 28            [24] 3141 	mov	_phim_back_giu,c
                                   3142 ;	include/motor_cam_phim.c:226: phim_back_xuong = !phim_back_cu && !key_in2;
      0013DA 20 27 03         [24] 3143 	jb	_phim_back_cu,00222$
      0013DD 30 B3 04         [24] 3144 	jnb	_P33,00223$
      0013E0                       3145 00222$:
                                   3146 ;	assignBit
      0013E0 C2 40            [12] 3147 	clr	_PCA_Handler_sloc0_1_0
      0013E2 80 02            [24] 3148 	sjmp	00224$
      0013E4                       3149 00223$:
                                   3150 ;	assignBit
      0013E4 D2 40            [12] 3151 	setb	_PCA_Handler_sloc0_1_0
      0013E6                       3152 00224$:
                                   3153 ;	assignBit
      0013E6 A2 40            [12] 3154 	mov	c,_PCA_Handler_sloc0_1_0
      0013E8 92 25            [24] 3155 	mov	_phim_back_xuong,c
                                   3156 ;	include/motor_cam_phim.c:227: phim_back_nhan = phim_back_nhan || (!phim_back_giu && phim_back_xuong);
      0013EA 20 26 0A         [24] 3157 	jb	_phim_back_nhan,00226$
      0013ED 20 28 03         [24] 3158 	jb	_phim_back_giu,00225$
      0013F0 20 25 04         [24] 3159 	jb	_phim_back_xuong,00226$
      0013F3                       3160 00225$:
                                   3161 ;	assignBit
      0013F3 C2 40            [12] 3162 	clr	_PCA_Handler_sloc0_1_0
      0013F5 80 02            [24] 3163 	sjmp	00227$
      0013F7                       3164 00226$:
                                   3165 ;	assignBit
      0013F7 D2 40            [12] 3166 	setb	_PCA_Handler_sloc0_1_0
      0013F9                       3167 00227$:
                                   3168 ;	assignBit
      0013F9 A2 40            [12] 3169 	mov	c,_PCA_Handler_sloc0_1_0
      0013FB 92 26            [24] 3170 	mov	_phim_back_nhan,c
                                   3171 ;	include/motor_cam_phim.c:228: phim_back_cu = key_in2;
                                   3172 ;	assignBit
      0013FD A2 B3            [12] 3173 	mov	c,_P33
      0013FF 92 27            [24] 3174 	mov	_phim_back_cu,c
                                   3175 ;	include/motor_cam_phim.c:230: if(phim_cong_xuong && key_in3) phim_cong_doi = 2;
      001401 30 29 09         [24] 3176 	jnb	_phim_cong_xuong,00182$
      001404 30 B4 06         [24] 3177 	jnb	_P34,00182$
      001407 90 00 F3         [24] 3178 	mov	dptr,#_phim_cong_doi
      00140A 74 02            [12] 3179 	mov	a,#0x02
      00140C F0               [24] 3180 	movx	@dptr,a
      00140D                       3181 00182$:
                                   3182 ;	include/motor_cam_phim.c:231: phim_cong_giu = phim_cong_xuong && !key_in3;
      00140D 30 29 03         [24] 3183 	jnb	_phim_cong_xuong,00231$
      001410 30 B4 04         [24] 3184 	jnb	_P34,00232$
      001413                       3185 00231$:
                                   3186 ;	assignBit
      001413 C2 40            [12] 3187 	clr	_PCA_Handler_sloc0_1_0
      001415 80 02            [24] 3188 	sjmp	00233$
      001417                       3189 00232$:
                                   3190 ;	assignBit
      001417 D2 40            [12] 3191 	setb	_PCA_Handler_sloc0_1_0
      001419                       3192 00233$:
                                   3193 ;	assignBit
      001419 A2 40            [12] 3194 	mov	c,_PCA_Handler_sloc0_1_0
      00141B 92 2C            [24] 3195 	mov	_phim_cong_giu,c
                                   3196 ;	include/motor_cam_phim.c:232: phim_cong_xuong = !phim_cong_cu && !key_in3;
      00141D 20 2B 03         [24] 3197 	jb	_phim_cong_cu,00234$
      001420 30 B4 04         [24] 3198 	jnb	_P34,00235$
      001423                       3199 00234$:
                                   3200 ;	assignBit
      001423 C2 40            [12] 3201 	clr	_PCA_Handler_sloc0_1_0
      001425 80 02            [24] 3202 	sjmp	00236$
      001427                       3203 00235$:
                                   3204 ;	assignBit
      001427 D2 40            [12] 3205 	setb	_PCA_Handler_sloc0_1_0
      001429                       3206 00236$:
                                   3207 ;	assignBit
      001429 A2 40            [12] 3208 	mov	c,_PCA_Handler_sloc0_1_0
      00142B 92 29            [24] 3209 	mov	_phim_cong_xuong,c
                                   3210 ;	include/motor_cam_phim.c:233: phim_cong_nhan = phim_cong_nhan || (!phim_cong_giu && phim_cong_xuong);
      00142D 20 2A 0A         [24] 3211 	jb	_phim_cong_nhan,00238$
      001430 20 2C 03         [24] 3212 	jb	_phim_cong_giu,00237$
      001433 20 29 04         [24] 3213 	jb	_phim_cong_xuong,00238$
      001436                       3214 00237$:
                                   3215 ;	assignBit
      001436 C2 40            [12] 3216 	clr	_PCA_Handler_sloc0_1_0
      001438 80 02            [24] 3217 	sjmp	00239$
      00143A                       3218 00238$:
                                   3219 ;	assignBit
      00143A D2 40            [12] 3220 	setb	_PCA_Handler_sloc0_1_0
      00143C                       3221 00239$:
                                   3222 ;	assignBit
      00143C A2 40            [12] 3223 	mov	c,_PCA_Handler_sloc0_1_0
      00143E 92 2A            [24] 3224 	mov	_phim_cong_nhan,c
                                   3225 ;	include/motor_cam_phim.c:234: phim_cong_cu = key_in3;
                                   3226 ;	assignBit
      001440 A2 B4            [12] 3227 	mov	c,_P34
      001442 92 2B            [24] 3228 	mov	_phim_cong_cu,c
                                   3229 ;	include/motor_cam_phim.c:236: if(!--cnt){
      001444 90 01 44         [24] 3230 	mov	dptr,#_cnt
      001447 E0               [24] 3231 	movx	a,@dptr
      001448 14               [12] 3232 	dec	a
      001449 F0               [24] 3233 	movx	@dptr,a
      00144A E0               [24] 3234 	movx	a,@dptr
      00144B 70 0A            [24] 3235 	jnz	00185$
                                   3236 ;	include/motor_cam_phim.c:237: lcd_update_chop = 1;
                                   3237 ;	assignBit
      00144D D2 3F            [12] 3238 	setb	_lcd_update_chop
                                   3239 ;	include/motor_cam_phim.c:238: cnt=20;
      00144F 90 01 44         [24] 3240 	mov	dptr,#_cnt
      001452 74 14            [12] 3241 	mov	a,#0x14
      001454 F0               [24] 3242 	movx	@dptr,a
                                   3243 ;	include/motor_cam_phim.c:239: chop=!chop;
      001455 B2 2D            [12] 3244 	cpl	_chop
      001457                       3245 00185$:
                                   3246 ;	include/motor_cam_phim.c:242: if(xung_giay_check){
      001457 90 00 E7         [24] 3247 	mov	dptr,#_xung_giay_check
      00145A E0               [24] 3248 	movx	a,@dptr
      00145B FF               [12] 3249 	mov	r7,a
      00145C E0               [24] 3250 	movx	a,@dptr
      00145D 60 0E            [24] 3251 	jz	00189$
                                   3252 ;	include/motor_cam_phim.c:243: xung_giay_check--;
      00145F EF               [12] 3253 	mov	a,r7
      001460 14               [12] 3254 	dec	a
      001461 90 00 E7         [24] 3255 	mov	dptr,#_xung_giay_check
      001464 F0               [24] 3256 	movx	@dptr,a
                                   3257 ;	include/motor_cam_phim.c:244: counter_xung_giay=40;
      001465 90 01 45         [24] 3258 	mov	dptr,#_counter_xung_giay
      001468 74 28            [12] 3259 	mov	a,#0x28
      00146A F0               [24] 3260 	movx	@dptr,a
      00146B 80 18            [24] 3261 	sjmp	00193$
      00146D                       3262 00189$:
                                   3263 ;	include/motor_cam_phim.c:245: }else if(!--counter_xung_giay){
      00146D 90 01 45         [24] 3264 	mov	dptr,#_counter_xung_giay
      001470 E0               [24] 3265 	movx	a,@dptr
      001471 14               [12] 3266 	dec	a
      001472 F0               [24] 3267 	movx	@dptr,a
      001473 E0               [24] 3268 	movx	a,@dptr
      001474 70 0F            [24] 3269 	jnz	00193$
                                   3270 ;	include/motor_cam_phim.c:246: counter_xung_giay=40;
      001476 90 01 45         [24] 3271 	mov	dptr,#_counter_xung_giay
      001479 74 28            [12] 3272 	mov	a,#0x28
      00147B F0               [24] 3273 	movx	@dptr,a
                                   3274 ;	include/motor_cam_phim.c:247: xunggiay();
      00147C 75 D0 00         [24] 3275 	mov	psw,#0x00
      00147F 12 10 41         [24] 3276 	lcall	_xunggiay
      001482 75 D0 08         [24] 3277 	mov	psw,#0x08
      001485                       3278 00193$:
                                   3279 ;	include/motor_cam_phim.c:252: }
      001485 D0 D0            [24] 3280 	pop	psw
      001487 D0 00            [24] 3281 	pop	(0+0)
      001489 D0 01            [24] 3282 	pop	(0+1)
      00148B D0 02            [24] 3283 	pop	(0+2)
      00148D D0 03            [24] 3284 	pop	(0+3)
      00148F D0 04            [24] 3285 	pop	(0+4)
      001491 D0 05            [24] 3286 	pop	(0+5)
      001493 D0 06            [24] 3287 	pop	(0+6)
      001495 D0 07            [24] 3288 	pop	(0+7)
      001497 D0 83            [24] 3289 	pop	dph
      001499 D0 82            [24] 3290 	pop	dpl
      00149B D0 F0            [24] 3291 	pop	b
      00149D D0 E0            [24] 3292 	pop	acc
      00149F D0 2A            [24] 3293 	pop	bits
      0014A1 32               [24] 3294 	reti
                                   3295 ;------------------------------------------------------------
                                   3296 ;Allocation info for local variables in function 'cam_phim'
                                   3297 ;------------------------------------------------------------
                                   3298 ;	include/motor_cam_phim.c:254: void cam_phim() __interrupt 1 __using 2 {
                                   3299 ;	-----------------------------------------
                                   3300 ;	 function cam_phim
                                   3301 ;	-----------------------------------------
      0014A2                       3302 _cam_phim:
                           000017  3303 	ar7 = 0x17
                           000016  3304 	ar6 = 0x16
                           000015  3305 	ar5 = 0x15
                           000014  3306 	ar4 = 0x14
                           000013  3307 	ar3 = 0x13
                           000012  3308 	ar2 = 0x12
                           000011  3309 	ar1 = 0x11
                           000010  3310 	ar0 = 0x10
      0014A2 C0 E0            [24] 3311 	push	acc
      0014A4 C0 82            [24] 3312 	push	dpl
      0014A6 C0 83            [24] 3313 	push	dph
      0014A8 C0 D0            [24] 3314 	push	psw
      0014AA 75 D0 10         [24] 3315 	mov	psw,#0x10
                                   3316 ;	include/motor_cam_phim.c:255: WATCHDOG;
      0014AD 43 C1 10         [24] 3317 	orl	_WDT_CONTR,#0x10
                                   3318 ;	include/motor_cam_phim.c:256: if(atmel_phat){
      0014B0 30 35 43         [24] 3319 	jnb	_atmel_phat,00113$
                                   3320 ;	include/motor_cam_phim.c:257: motor1 = motor_index == 0; motor2 = motor_index2 == 1;
      0014B3 E5 56            [12] 3321 	mov	a,_motor_index
      0014B5 B4 01 00         [24] 3322 	cjne	a,#0x01,00180$
      0014B8                       3323 00180$:
      0014B8 92 41            [24] 3324 	mov  _cam_phim_sloc0_1_0,c
      0014BA E4               [12] 3325 	clr	a
      0014BB 33               [12] 3326 	rlc	a
      0014BC 24 FF            [12] 3327 	add	a,#0xff
      0014BE 92 A7            [24] 3328 	mov	_P27,c
      0014C0 74 01            [12] 3329 	mov	a,#0x01
      0014C2 B5 57 03         [24] 3330 	cjne	a,_motor_index2,00181$
      0014C5 D3               [12] 3331 	setb	c
      0014C6 80 01            [24] 3332 	sjmp	00182$
      0014C8                       3333 00181$:
      0014C8 C3               [12] 3334 	clr	c
      0014C9                       3335 00182$:
      0014C9 92 41            [24] 3336 	mov  _cam_phim_sloc0_1_0,c
      0014CB E4               [12] 3337 	clr	a
      0014CC 33               [12] 3338 	rlc	a
      0014CD 24 FF            [12] 3339 	add	a,#0xff
      0014CF 92 A5            [24] 3340 	mov	_P25,c
                                   3341 ;	include/motor_cam_phim.c:258: motor3 = motor_index == 2; motor4 = motor_index2 == 3;
      0014D1 74 02            [12] 3342 	mov	a,#0x02
      0014D3 B5 56 03         [24] 3343 	cjne	a,_motor_index,00183$
      0014D6 D3               [12] 3344 	setb	c
      0014D7 80 01            [24] 3345 	sjmp	00184$
      0014D9                       3346 00183$:
      0014D9 C3               [12] 3347 	clr	c
      0014DA                       3348 00184$:
      0014DA 92 41            [24] 3349 	mov  _cam_phim_sloc0_1_0,c
      0014DC E4               [12] 3350 	clr	a
      0014DD 33               [12] 3351 	rlc	a
      0014DE 24 FF            [12] 3352 	add	a,#0xff
      0014E0 92 A6            [24] 3353 	mov	_P26,c
      0014E2 74 03            [12] 3354 	mov	a,#0x03
      0014E4 B5 57 03         [24] 3355 	cjne	a,_motor_index2,00185$
      0014E7 D3               [12] 3356 	setb	c
      0014E8 80 01            [24] 3357 	sjmp	00186$
      0014EA                       3358 00185$:
      0014EA C3               [12] 3359 	clr	c
      0014EB                       3360 00186$:
      0014EB 92 41            [24] 3361 	mov  _cam_phim_sloc0_1_0,c
      0014ED E4               [12] 3362 	clr	a
      0014EE 33               [12] 3363 	rlc	a
      0014EF 24 FF            [12] 3364 	add	a,#0xff
      0014F1 92 A4            [24] 3365 	mov	_P24,c
      0014F3 02 15 85         [24] 3366 	ljmp	00115$
      0014F6                       3367 00113$:
                                   3368 ;	include/motor_cam_phim.c:260: motorS1 = !motor_index && (eep_motor & 7) ; motorS2 = motor_index2 == 1;
      0014F6 E5 56            [12] 3369 	mov	a,_motor_index
      0014F8 70 0B            [24] 3370 	jnz	00117$
      0014FA 90 F0 00         [24] 3371 	mov	dptr,#_eep_motor
      0014FD E4               [12] 3372 	clr	a
      0014FE 93               [24] 3373 	movc	a,@a+dptr
      0014FF 54 07            [12] 3374 	anl	a,#0x07
      001501 60 02            [24] 3375 	jz	00189$
      001503 80 04            [24] 3376 	sjmp	00118$
      001505                       3377 00189$:
      001505                       3378 00117$:
                                   3379 ;	assignBit
      001505 C2 41            [12] 3380 	clr	_cam_phim_sloc0_1_0
      001507 80 02            [24] 3381 	sjmp	00119$
      001509                       3382 00118$:
                                   3383 ;	assignBit
      001509 D2 41            [12] 3384 	setb	_cam_phim_sloc0_1_0
      00150B                       3385 00119$:
      00150B A2 41            [12] 3386 	mov	c,_cam_phim_sloc0_1_0
      00150D E4               [12] 3387 	clr	a
      00150E 33               [12] 3388 	rlc	a
      00150F 24 FF            [12] 3389 	add	a,#0xff
      001511 92 C4            [24] 3390 	mov	_P44,c
      001513 74 01            [12] 3391 	mov	a,#0x01
      001515 B5 57 03         [24] 3392 	cjne	a,_motor_index2,00190$
      001518 D3               [12] 3393 	setb	c
      001519 80 01            [24] 3394 	sjmp	00191$
      00151B                       3395 00190$:
      00151B C3               [12] 3396 	clr	c
      00151C                       3397 00191$:
      00151C 92 41            [24] 3398 	mov  _cam_phim_sloc0_1_0,c
      00151E E4               [12] 3399 	clr	a
      00151F 33               [12] 3400 	rlc	a
      001520 24 FF            [12] 3401 	add	a,#0xff
      001522 92 C3            [24] 3402 	mov	_P43,c
                                   3403 ;	include/motor_cam_phim.c:261: motorDir = may_dc || may_canh_kim || motorDir1 || motorDir2;
      001524 20 34 10         [24] 3404 	jb	_may_dc,00121$
      001527 90 00 E2         [24] 3405 	mov	dptr,#_may_canh_kim
      00152A E0               [24] 3406 	movx	a,@dptr
      00152B 70 0A            [24] 3407 	jnz	00121$
      00152D 20 13 07         [24] 3408 	jb	_motorDir1,00121$
      001530 20 14 04         [24] 3409 	jb	_motorDir2,00121$
                                   3410 ;	assignBit
      001533 C2 41            [12] 3411 	clr	_cam_phim_sloc0_1_0
      001535 80 02            [24] 3412 	sjmp	00122$
      001537                       3413 00121$:
                                   3414 ;	assignBit
      001537 D2 41            [12] 3415 	setb	_cam_phim_sloc0_1_0
      001539                       3416 00122$:
                                   3417 ;	assignBit
      001539 A2 41            [12] 3418 	mov	c,_cam_phim_sloc0_1_0
      00153B 92 12            [24] 3419 	mov	_motorDir,c
                                   3420 ;	include/motor_cam_phim.c:262: if(!may_dc && (motor_index!=5 || motor_index2!=5 || !motor_index) ){
      00153D 20 34 42         [24] 3421 	jb	_may_dc,00107$
      001540 74 05            [12] 3422 	mov	a,#0x05
      001542 B5 56 09         [24] 3423 	cjne	a,_motor_index,00106$
      001545 74 05            [12] 3424 	mov	a,#0x05
      001547 B5 57 04         [24] 3425 	cjne	a,_motor_index2,00106$
      00154A E5 56            [12] 3426 	mov	a,_motor_index
      00154C 70 34            [24] 3427 	jnz	00107$
      00154E                       3428 00106$:
                                   3429 ;	include/motor_cam_phim.c:263: P2=(P2&0x0f)|motor_step[step_index];
      00154E E5 A0            [12] 3430 	mov	a,_P2
      001550 54 0F            [12] 3431 	anl	a,#0x0f
      001552 FF               [12] 3432 	mov	r7,a
      001553 E5 55            [12] 3433 	mov	a,_step_index
      001555 90 85 00         [24] 3434 	mov	dptr,#_motor_step
      001558 93               [24] 3435 	movc	a,@a+dptr
      001559 4F               [12] 3436 	orl	a,r7
      00155A F5 A0            [12] 3437 	mov	_P2,a
                                   3438 ;	include/motor_cam_phim.c:264: step_index+= motorDir?1:-1; 
      00155C 30 12 06         [24] 3439 	jnb	_motorDir,00129$
      00155F 7E 01            [12] 3440 	mov	r6,#0x01
      001561 7F 00            [12] 3441 	mov	r7,#0x00
      001563 80 04            [24] 3442 	sjmp	00130$
      001565                       3443 00129$:
      001565 7E FF            [12] 3444 	mov	r6,#0xff
      001567 7F FF            [12] 3445 	mov	r7,#0xff
      001569                       3446 00130$:
      001569 AF 55            [24] 3447 	mov	r7,_step_index
      00156B EE               [12] 3448 	mov	a,r6
      00156C 2F               [12] 3449 	add	a,r7
                                   3450 ;	include/motor_cam_phim.c:265: if(step_index>8) step_index=7;
      00156D F5 55            [12] 3451 	mov  _step_index,a
      00156F 24 F7            [12] 3452 	add	a,#0xff - 0x08
      001571 50 05            [24] 3453 	jnc	00104$
      001573 75 55 07         [24] 3454 	mov	_step_index,#0x07
      001576 80 0D            [24] 3455 	sjmp	00115$
      001578                       3456 00104$:
                                   3457 ;	include/motor_cam_phim.c:266: else if(step_index==8) step_index=0;
      001578 74 08            [12] 3458 	mov	a,#0x08
      00157A B5 55 08         [24] 3459 	cjne	a,_step_index,00115$
      00157D 75 55 00         [24] 3460 	mov	_step_index,#0x00
      001580 80 03            [24] 3461 	sjmp	00115$
      001582                       3462 00107$:
                                   3463 ;	include/motor_cam_phim.c:267: } else P2 &= 0x0f;
      001582 53 A0 0F         [24] 3464 	anl	_P2,#0x0f
      001585                       3465 00115$:
                                   3466 ;	include/motor_cam_phim.c:270: }
      001585 D0 D0            [24] 3467 	pop	psw
      001587 D0 83            [24] 3468 	pop	dph
      001589 D0 82            [24] 3469 	pop	dpl
      00158B D0 E0            [24] 3470 	pop	acc
      00158D 32               [24] 3471 	reti
                                   3472 ;	eliminated unneeded push/pop b
                                   3473 ;------------------------------------------------------------
                                   3474 ;Allocation info for local variables in function 'clear_sms_buffer'
                                   3475 ;------------------------------------------------------------
                                   3476 ;index_dau                 Allocated to registers 
                                   3477 ;------------------------------------------------------------
                                   3478 ;	include/gsm_serial.c:3: void clear_sms_buffer(u8 index_dau){
                                   3479 ;	-----------------------------------------
                                   3480 ;	 function clear_sms_buffer
                                   3481 ;	-----------------------------------------
      00158E                       3482 _clear_sms_buffer:
                           000007  3483 	ar7 = 0x07
                           000006  3484 	ar6 = 0x06
                           000005  3485 	ar5 = 0x05
                           000004  3486 	ar4 = 0x04
                           000003  3487 	ar3 = 0x03
                           000002  3488 	ar2 = 0x02
                           000001  3489 	ar1 = 0x01
                           000000  3490 	ar0 = 0x00
      00158E AF 82            [24] 3491 	mov	r7,dpl
                                   3492 ;	include/gsm_serial.c:4: sms_index = 0;
      001590 90 00 BB         [24] 3493 	mov	dptr,#_sms_index
      001593 E4               [12] 3494 	clr	a
      001594 F0               [24] 3495 	movx	@dptr,a
                                   3496 ;	include/gsm_serial.c:5: while(index_dau<161)lenh_sms[index_dau++] = 0;
      001595                       3497 00101$:
      001595 BF A1 00         [24] 3498 	cjne	r7,#0xa1,00115$
      001598                       3499 00115$:
      001598 50 0F            [24] 3500 	jnc	00104$
      00159A EF               [12] 3501 	mov	a,r7
      00159B 24 17            [12] 3502 	add	a,#_lenh_sms
      00159D F5 82            [12] 3503 	mov	dpl,a
      00159F E4               [12] 3504 	clr	a
      0015A0 34 00            [12] 3505 	addc	a,#(_lenh_sms >> 8)
      0015A2 F5 83            [12] 3506 	mov	dph,a
      0015A4 0F               [12] 3507 	inc	r7
      0015A5 E4               [12] 3508 	clr	a
      0015A6 F0               [24] 3509 	movx	@dptr,a
      0015A7 80 EC            [24] 3510 	sjmp	00101$
      0015A9                       3511 00104$:
                                   3512 ;	include/gsm_serial.c:6: }
      0015A9 22               [24] 3513 	ret
                                   3514 ;------------------------------------------------------------
                                   3515 ;Allocation info for local variables in function 'gsm_sendandcheck'
                                   3516 ;------------------------------------------------------------
                                   3517 ;retry                     Allocated with name '_gsm_sendandcheck_PARM_2'
                                   3518 ;delay                     Allocated with name '_gsm_sendandcheck_PARM_3'
                                   3519 ;display                   Allocated with name '_gsm_sendandcheck_PARM_4'
                                   3520 ;cmd                       Allocated with name '_gsm_sendandcheck_cmd_65536_79'
                                   3521 ;sloc0                     Allocated with name '_gsm_sendandcheck_sloc0_1_0'
                                   3522 ;sloc1                     Allocated with name '_gsm_sendandcheck_sloc1_1_0'
                                   3523 ;------------------------------------------------------------
                                   3524 ;	include/gsm_serial.c:8: __bit gsm_sendandcheck(u8 *cmd, u8 retry, u8 delay, u8 *display){
                                   3525 ;	-----------------------------------------
                                   3526 ;	 function gsm_sendandcheck
                                   3527 ;	-----------------------------------------
      0015AA                       3528 _gsm_sendandcheck:
      0015AA 85 82 5E         [24] 3529 	mov	_gsm_sendandcheck_cmd_65536_79,dpl
      0015AD 85 83 5F         [24] 3530 	mov	(_gsm_sendandcheck_cmd_65536_79 + 1),dph
      0015B0 85 F0 60         [24] 3531 	mov	(_gsm_sendandcheck_cmd_65536_79 + 2),b
                                   3532 ;	include/gsm_serial.c:9: connect_time_out = delay;
      0015B3 AC 5A            [24] 3533 	mov	r4,_gsm_sendandcheck_PARM_3
      0015B5 90 00 FC         [24] 3534 	mov	dptr,#_connect_time_out
      0015B8 EC               [12] 3535 	mov	a,r4
      0015B9 F0               [24] 3536 	movx	@dptr,a
                                   3537 ;	include/gsm_serial.c:10: total_try_time_out = retry*delay + 10;
      0015BA 85 59 F0         [24] 3538 	mov	b,_gsm_sendandcheck_PARM_2
      0015BD EC               [12] 3539 	mov	a,r4
      0015BE A4               [48] 3540 	mul	ab
      0015BF FB               [12] 3541 	mov	r3,a
      0015C0 90 00 FD         [24] 3542 	mov	dptr,#_total_try_time_out
      0015C3 74 0A            [12] 3543 	mov	a,#0x0a
      0015C5 2B               [12] 3544 	add	a,r3
      0015C6 F0               [24] 3545 	movx	@dptr,a
                                   3546 ;	include/gsm_serial.c:11: gui_lenh_thanh_cong = 0;
                                   3547 ;	assignBit
      0015C7 C2 2E            [12] 3548 	clr	_gui_lenh_thanh_cong
                                   3549 ;	include/gsm_serial.c:12: send_gsm_cmd(cmd);
      0015C9 85 5E 82         [24] 3550 	mov	dpl,_gsm_sendandcheck_cmd_65536_79
      0015CC 85 5F 83         [24] 3551 	mov	dph,(_gsm_sendandcheck_cmd_65536_79 + 1)
      0015CF 85 60 F0         [24] 3552 	mov	b,(_gsm_sendandcheck_cmd_65536_79 + 2)
      0015D2 C0 04            [24] 3553 	push	ar4
      0015D4 12 03 CD         [24] 3554 	lcall	_send_gsm_cmd
      0015D7 D0 04            [24] 3555 	pop	ar4
                                   3556 ;	include/gsm_serial.c:13: while(!gui_lenh_thanh_cong && total_try_time_out && !nosim){ 
      0015D9 74 02            [12] 3557 	mov	a,#0x02
      0015DB 25 5E            [12] 3558 	add	a,_gsm_sendandcheck_cmd_65536_79
      0015DD F9               [12] 3559 	mov	r1,a
      0015DE E4               [12] 3560 	clr	a
      0015DF 35 5F            [12] 3561 	addc	a,(_gsm_sendandcheck_cmd_65536_79 + 1)
      0015E1 FA               [12] 3562 	mov	r2,a
      0015E2 AB 60            [24] 3563 	mov	r3,(_gsm_sendandcheck_cmd_65536_79 + 2)
      0015E4 74 07            [12] 3564 	mov	a,#0x07
      0015E6 25 5E            [12] 3565 	add	a,_gsm_sendandcheck_cmd_65536_79
      0015E8 F5 61            [12] 3566 	mov	_gsm_sendandcheck_sloc0_1_0,a
      0015EA E4               [12] 3567 	clr	a
      0015EB 35 5F            [12] 3568 	addc	a,(_gsm_sendandcheck_cmd_65536_79 + 1)
      0015ED F5 62            [12] 3569 	mov	(_gsm_sendandcheck_sloc0_1_0 + 1),a
      0015EF 85 60 63         [24] 3570 	mov	(_gsm_sendandcheck_sloc0_1_0 + 2),(_gsm_sendandcheck_cmd_65536_79 + 2)
      0015F2 74 08            [12] 3571 	mov	a,#0x08
      0015F4 25 5E            [12] 3572 	add	a,_gsm_sendandcheck_cmd_65536_79
      0015F6 F5 64            [12] 3573 	mov	_gsm_sendandcheck_sloc1_1_0,a
      0015F8 E4               [12] 3574 	clr	a
      0015F9 35 5F            [12] 3575 	addc	a,(_gsm_sendandcheck_cmd_65536_79 + 1)
      0015FB F5 65            [12] 3576 	mov	(_gsm_sendandcheck_sloc1_1_0 + 1),a
      0015FD 85 60 66         [24] 3577 	mov	(_gsm_sendandcheck_sloc1_1_0 + 2),(_gsm_sendandcheck_cmd_65536_79 + 2)
      001600 A8 59            [24] 3578 	mov	r0,_gsm_sendandcheck_PARM_2
      001602                       3579 00121$:
      001602 30 2E 03         [24] 3580 	jnb	_gui_lenh_thanh_cong,00174$
      001605 02 17 7A         [24] 3581 	ljmp	00123$
      001608                       3582 00174$:
      001608 90 00 FD         [24] 3583 	mov	dptr,#_total_try_time_out
      00160B E0               [24] 3584 	movx	a,@dptr
      00160C 70 03            [24] 3585 	jnz	00175$
      00160E 02 17 7A         [24] 3586 	ljmp	00123$
      001611                       3587 00175$:
      001611 30 30 03         [24] 3588 	jnb	_nosim,00176$
      001614 02 17 7A         [24] 3589 	ljmp	00123$
      001617                       3590 00176$:
                                   3591 ;	include/gsm_serial.c:14: WATCHDOG;
      001617 43 C1 10         [24] 3592 	orl	_WDT_CONTR,#0x10
                                   3593 ;	include/gsm_serial.c:15: LCD_guilenh(0x80);
      00161A 75 82 80         [24] 3594 	mov	dpl,#0x80
      00161D C0 04            [24] 3595 	push	ar4
      00161F C0 03            [24] 3596 	push	ar3
      001621 C0 02            [24] 3597 	push	ar2
      001623 C0 01            [24] 3598 	push	ar1
      001625 C0 00            [24] 3599 	push	ar0
      001627 12 05 71         [24] 3600 	lcall	_LCD_guilenh
                                   3601 ;	include/gsm_serial.c:16: LCD_guichuoi(display);
      00162A 85 5B 82         [24] 3602 	mov	dpl,_gsm_sendandcheck_PARM_4
      00162D 85 5C 83         [24] 3603 	mov	dph,(_gsm_sendandcheck_PARM_4 + 1)
      001630 85 5D F0         [24] 3604 	mov	b,(_gsm_sendandcheck_PARM_4 + 2)
      001633 12 05 F1         [24] 3605 	lcall	_LCD_guichuoi
      001636 D0 00            [24] 3606 	pop	ar0
      001638 D0 01            [24] 3607 	pop	ar1
      00163A D0 02            [24] 3608 	pop	ar2
      00163C D0 03            [24] 3609 	pop	ar3
      00163E D0 04            [24] 3610 	pop	ar4
                                   3611 ;	include/gsm_serial.c:17: if(GPS_time) LCD_guigio(0xc0,"  GPS  ",hour,minute,second,flip_pulse);
      001640 30 1D 32         [24] 3612 	jnb	_GPS_time,00105$
      001643 75 43 A6         [24] 3613 	mov	_LCD_guigio_PARM_2,#___str_0
      001646 75 44 88         [24] 3614 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_0 >> 8)
      001649 75 45 80         [24] 3615 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      00164C 85 4B 46         [24] 3616 	mov	_LCD_guigio_PARM_3,_hour
      00164F 85 4A 47         [24] 3617 	mov	_LCD_guigio_PARM_4,_minute
      001652 85 49 48         [24] 3618 	mov	_LCD_guigio_PARM_5,_second
                                   3619 ;	assignBit
      001655 A2 20            [12] 3620 	mov	c,_flip_pulse
      001657 92 01            [24] 3621 	mov	_LCD_guigio_PARM_6,c
      001659 75 82 C0         [24] 3622 	mov	dpl,#0xc0
      00165C C0 04            [24] 3623 	push	ar4
      00165E C0 03            [24] 3624 	push	ar3
      001660 C0 02            [24] 3625 	push	ar2
      001662 C0 01            [24] 3626 	push	ar1
      001664 C0 00            [24] 3627 	push	ar0
      001666 12 06 DC         [24] 3628 	lcall	_LCD_guigio
      001669 D0 00            [24] 3629 	pop	ar0
      00166B D0 01            [24] 3630 	pop	ar1
      00166D D0 02            [24] 3631 	pop	ar2
      00166F D0 03            [24] 3632 	pop	ar3
      001671 D0 04            [24] 3633 	pop	ar4
      001673 80 69            [24] 3634 	sjmp	00106$
      001675                       3635 00105$:
                                   3636 ;	include/gsm_serial.c:18: else if(!eep_gpson) LCD_guigio(0xc0," ASIA  ",hour,minute,second,flip_pulse);
      001675 90 F0 02         [24] 3637 	mov	dptr,#_eep_gpson
      001678 E4               [12] 3638 	clr	a
      001679 93               [24] 3639 	movc	a,@a+dptr
      00167A 70 32            [24] 3640 	jnz	00102$
      00167C 75 43 AE         [24] 3641 	mov	_LCD_guigio_PARM_2,#___str_1
      00167F 75 44 88         [24] 3642 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_1 >> 8)
      001682 75 45 80         [24] 3643 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      001685 85 4B 46         [24] 3644 	mov	_LCD_guigio_PARM_3,_hour
      001688 85 4A 47         [24] 3645 	mov	_LCD_guigio_PARM_4,_minute
      00168B 85 49 48         [24] 3646 	mov	_LCD_guigio_PARM_5,_second
                                   3647 ;	assignBit
      00168E A2 20            [12] 3648 	mov	c,_flip_pulse
      001690 92 01            [24] 3649 	mov	_LCD_guigio_PARM_6,c
      001692 75 82 C0         [24] 3650 	mov	dpl,#0xc0
      001695 C0 04            [24] 3651 	push	ar4
      001697 C0 03            [24] 3652 	push	ar3
      001699 C0 02            [24] 3653 	push	ar2
      00169B C0 01            [24] 3654 	push	ar1
      00169D C0 00            [24] 3655 	push	ar0
      00169F 12 06 DC         [24] 3656 	lcall	_LCD_guigio
      0016A2 D0 00            [24] 3657 	pop	ar0
      0016A4 D0 01            [24] 3658 	pop	ar1
      0016A6 D0 02            [24] 3659 	pop	ar2
      0016A8 D0 03            [24] 3660 	pop	ar3
      0016AA D0 04            [24] 3661 	pop	ar4
      0016AC 80 30            [24] 3662 	sjmp	00106$
      0016AE                       3663 00102$:
                                   3664 ;	include/gsm_serial.c:19: else LCD_guigio(0xc0,"   DS  ",hour,minute,second,flip_pulse);
      0016AE 75 43 B6         [24] 3665 	mov	_LCD_guigio_PARM_2,#___str_2
      0016B1 75 44 88         [24] 3666 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_2 >> 8)
      0016B4 75 45 80         [24] 3667 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      0016B7 85 4B 46         [24] 3668 	mov	_LCD_guigio_PARM_3,_hour
      0016BA 85 4A 47         [24] 3669 	mov	_LCD_guigio_PARM_4,_minute
      0016BD 85 49 48         [24] 3670 	mov	_LCD_guigio_PARM_5,_second
                                   3671 ;	assignBit
      0016C0 A2 20            [12] 3672 	mov	c,_flip_pulse
      0016C2 92 01            [24] 3673 	mov	_LCD_guigio_PARM_6,c
      0016C4 75 82 C0         [24] 3674 	mov	dpl,#0xc0
      0016C7 C0 04            [24] 3675 	push	ar4
      0016C9 C0 03            [24] 3676 	push	ar3
      0016CB C0 02            [24] 3677 	push	ar2
      0016CD C0 01            [24] 3678 	push	ar1
      0016CF C0 00            [24] 3679 	push	ar0
      0016D1 12 06 DC         [24] 3680 	lcall	_LCD_guigio
      0016D4 D0 00            [24] 3681 	pop	ar0
      0016D6 D0 01            [24] 3682 	pop	ar1
      0016D8 D0 02            [24] 3683 	pop	ar2
      0016DA D0 03            [24] 3684 	pop	ar3
      0016DC D0 04            [24] 3685 	pop	ar4
      0016DE                       3686 00106$:
                                   3687 ;	include/gsm_serial.c:20: if(skip_gsm_cmd){skip_gsm_cmd = 0;return 0;}
                                   3688 ;	assignBit
      0016DE 10 32 02         [24] 3689 	jbc	_skip_gsm_cmd,00179$
      0016E1 80 02            [24] 3690 	sjmp	00108$
      0016E3                       3691 00179$:
      0016E3 C3               [12] 3692 	clr	c
      0016E4 22               [24] 3693 	ret
      0016E5                       3694 00108$:
                                   3695 ;	include/gsm_serial.c:21: if(!connect || error){
      0016E5 90 00 FB         [24] 3696 	mov	dptr,#_connect
      0016E8 E0               [24] 3697 	movx	a,@dptr
      0016E9 60 06            [24] 3698 	jz	00116$
      0016EB 20 31 03         [24] 3699 	jb	_error,00181$
      0016EE 02 16 02         [24] 3700 	ljmp	00121$
      0016F1                       3701 00181$:
      0016F1                       3702 00116$:
                                   3703 ;	include/gsm_serial.c:22: error = 0;
                                   3704 ;	assignBit
      0016F1 C2 31            [12] 3705 	clr	_error
                                   3706 ;	include/gsm_serial.c:23: if(!retry--) break;
      0016F3 88 07            [24] 3707 	mov	ar7,r0
      0016F5 18               [12] 3708 	dec	r0
      0016F6 EF               [12] 3709 	mov	a,r7
      0016F7 70 03            [24] 3710 	jnz	00182$
      0016F9 02 17 7A         [24] 3711 	ljmp	00123$
      0016FC                       3712 00182$:
                                   3713 ;	include/gsm_serial.c:24: connect_time_out = connect = delay;
      0016FC 90 00 FB         [24] 3714 	mov	dptr,#_connect
      0016FF EC               [12] 3715 	mov	a,r4
      001700 F0               [24] 3716 	movx	@dptr,a
      001701 90 00 FC         [24] 3717 	mov	dptr,#_connect_time_out
      001704 EC               [12] 3718 	mov	a,r4
      001705 F0               [24] 3719 	movx	@dptr,a
                                   3720 ;	include/gsm_serial.c:25: if(*(cmd+2) == '+' && *(cmd+7)!='?' && *(cmd+8)!='?') send_gsm_cmd("A/\r"); 
      001706 89 82            [24] 3721 	mov	dpl,r1
      001708 8A 83            [24] 3722 	mov	dph,r2
      00170A 8B F0            [24] 3723 	mov	b,r3
      00170C 12 84 4B         [24] 3724 	lcall	__gptrget
      00170F FF               [12] 3725 	mov	r7,a
      001710 BF 2B 44         [24] 3726 	cjne	r7,#0x2b,00112$
      001713 85 61 82         [24] 3727 	mov	dpl,_gsm_sendandcheck_sloc0_1_0
      001716 85 62 83         [24] 3728 	mov	dph,(_gsm_sendandcheck_sloc0_1_0 + 1)
      001719 85 63 F0         [24] 3729 	mov	b,(_gsm_sendandcheck_sloc0_1_0 + 2)
      00171C 12 84 4B         [24] 3730 	lcall	__gptrget
      00171F FF               [12] 3731 	mov	r7,a
      001720 BF 3F 02         [24] 3732 	cjne	r7,#0x3f,00185$
      001723 80 32            [24] 3733 	sjmp	00112$
      001725                       3734 00185$:
      001725 85 64 82         [24] 3735 	mov	dpl,_gsm_sendandcheck_sloc1_1_0
      001728 85 65 83         [24] 3736 	mov	dph,(_gsm_sendandcheck_sloc1_1_0 + 1)
      00172B 85 66 F0         [24] 3737 	mov	b,(_gsm_sendandcheck_sloc1_1_0 + 2)
      00172E 12 84 4B         [24] 3738 	lcall	__gptrget
      001731 FF               [12] 3739 	mov	r7,a
      001732 BF 3F 02         [24] 3740 	cjne	r7,#0x3f,00186$
      001735 80 20            [24] 3741 	sjmp	00112$
      001737                       3742 00186$:
      001737 90 88 BE         [24] 3743 	mov	dptr,#___str_3
      00173A 75 F0 80         [24] 3744 	mov	b,#0x80
      00173D C0 04            [24] 3745 	push	ar4
      00173F C0 03            [24] 3746 	push	ar3
      001741 C0 02            [24] 3747 	push	ar2
      001743 C0 01            [24] 3748 	push	ar1
      001745 C0 00            [24] 3749 	push	ar0
      001747 12 03 CD         [24] 3750 	lcall	_send_gsm_cmd
      00174A D0 00            [24] 3751 	pop	ar0
      00174C D0 01            [24] 3752 	pop	ar1
      00174E D0 02            [24] 3753 	pop	ar2
      001750 D0 03            [24] 3754 	pop	ar3
      001752 D0 04            [24] 3755 	pop	ar4
      001754 02 16 02         [24] 3756 	ljmp	00121$
      001757                       3757 00112$:
                                   3758 ;	include/gsm_serial.c:26: else send_gsm_cmd(cmd);
      001757 85 5E 82         [24] 3759 	mov	dpl,_gsm_sendandcheck_cmd_65536_79
      00175A 85 5F 83         [24] 3760 	mov	dph,(_gsm_sendandcheck_cmd_65536_79 + 1)
      00175D 85 60 F0         [24] 3761 	mov	b,(_gsm_sendandcheck_cmd_65536_79 + 2)
      001760 C0 04            [24] 3762 	push	ar4
      001762 C0 03            [24] 3763 	push	ar3
      001764 C0 02            [24] 3764 	push	ar2
      001766 C0 01            [24] 3765 	push	ar1
      001768 C0 00            [24] 3766 	push	ar0
      00176A 12 03 CD         [24] 3767 	lcall	_send_gsm_cmd
      00176D D0 00            [24] 3768 	pop	ar0
      00176F D0 01            [24] 3769 	pop	ar1
      001771 D0 02            [24] 3770 	pop	ar2
      001773 D0 03            [24] 3771 	pop	ar3
      001775 D0 04            [24] 3772 	pop	ar4
      001777 02 16 02         [24] 3773 	ljmp	00121$
      00177A                       3774 00123$:
                                   3775 ;	include/gsm_serial.c:30: LCD_xoa(TREN);
      00177A 75 82 80         [24] 3776 	mov	dpl,#0x80
      00177D 12 05 D2         [24] 3777 	lcall	_LCD_xoa
                                   3778 ;	include/gsm_serial.c:31: gsm_serial_cmd = NORMAL;
      001780 90 00 FE         [24] 3779 	mov	dptr,#_gsm_serial_cmd
      001783 E4               [12] 3780 	clr	a
      001784 F0               [24] 3781 	movx	@dptr,a
                                   3782 ;	include/gsm_serial.c:32: return gui_lenh_thanh_cong;
      001785 A2 2E            [12] 3783 	mov	c,_gui_lenh_thanh_cong
                                   3784 ;	include/gsm_serial.c:33: }
      001787 22               [24] 3785 	ret
                                   3786 ;------------------------------------------------------------
                                   3787 ;Allocation info for local variables in function 'gsm_quay_so'
                                   3788 ;------------------------------------------------------------
                                   3789 ;phone                     Allocated to registers r5 r6 r7 
                                   3790 ;------------------------------------------------------------
                                   3791 ;	include/gsm_serial.c:36: __bit gsm_quay_so(u8 *phone){
                                   3792 ;	-----------------------------------------
                                   3793 ;	 function gsm_quay_so
                                   3794 ;	-----------------------------------------
      001788                       3795 _gsm_quay_so:
      001788 AD 82            [24] 3796 	mov	r5,dpl
      00178A AE 83            [24] 3797 	mov	r6,dph
      00178C AF F0            [24] 3798 	mov	r7,b
                                   3799 ;	include/gsm_serial.c:37: send_gsm_cmd("ATD");
      00178E 90 88 C2         [24] 3800 	mov	dptr,#___str_4
      001791 75 F0 80         [24] 3801 	mov	b,#0x80
      001794 C0 07            [24] 3802 	push	ar7
      001796 C0 06            [24] 3803 	push	ar6
      001798 C0 05            [24] 3804 	push	ar5
      00179A 12 03 CD         [24] 3805 	lcall	_send_gsm_cmd
      00179D D0 05            [24] 3806 	pop	ar5
      00179F D0 06            [24] 3807 	pop	ar6
      0017A1 D0 07            [24] 3808 	pop	ar7
                                   3809 ;	include/gsm_serial.c:38: send_gsm_cmd(phone);
      0017A3 8D 82            [24] 3810 	mov	dpl,r5
      0017A5 8E 83            [24] 3811 	mov	dph,r6
      0017A7 8F F0            [24] 3812 	mov	b,r7
      0017A9 12 03 CD         [24] 3813 	lcall	_send_gsm_cmd
                                   3814 ;	include/gsm_serial.c:39: return gsm_sendandcheck(";\r",1,60,"    CALLING     ");
      0017AC 75 5B C9         [24] 3815 	mov	_gsm_sendandcheck_PARM_4,#___str_6
      0017AF 75 5C 88         [24] 3816 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_6 >> 8)
      0017B2 75 5D 80         [24] 3817 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      0017B5 75 59 01         [24] 3818 	mov	_gsm_sendandcheck_PARM_2,#0x01
      0017B8 75 5A 3C         [24] 3819 	mov	_gsm_sendandcheck_PARM_3,#0x3c
      0017BB 90 88 C6         [24] 3820 	mov	dptr,#___str_5
      0017BE 75 F0 80         [24] 3821 	mov	b,#0x80
                                   3822 ;	include/gsm_serial.c:40: }
      0017C1 02 15 AA         [24] 3823 	ljmp	_gsm_sendandcheck
                                   3824 ;------------------------------------------------------------
                                   3825 ;Allocation info for local variables in function 'send_sms'
                                   3826 ;------------------------------------------------------------
                                   3827 ;	include/gsm_serial.c:43: __bit send_sms(__bit chinh){
                                   3828 ;	-----------------------------------------
                                   3829 ;	 function send_sms
                                   3830 ;	-----------------------------------------
      0017C4                       3831 _send_sms:
                                   3832 ;	include/gsm_serial.c:44: if(lenh_sms[0] && !lenh_sms[3]){gsm_sendandcheck("\032",3,1,"TK<1000 K BAOCAO"); return 0;}
      0017C4 90 00 17         [24] 3833 	mov	dptr,#_lenh_sms
      0017C7 E0               [24] 3834 	movx	a,@dptr
      0017C8 60 20            [24] 3835 	jz	00102$
      0017CA 90 00 1A         [24] 3836 	mov	dptr,#(_lenh_sms + 0x0003)
      0017CD E0               [24] 3837 	movx	a,@dptr
      0017CE 70 1A            [24] 3838 	jnz	00102$
      0017D0 75 5B DC         [24] 3839 	mov	_gsm_sendandcheck_PARM_4,#___str_8
      0017D3 75 5C 88         [24] 3840 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_8 >> 8)
      0017D6 75 5D 80         [24] 3841 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      0017D9 75 59 03         [24] 3842 	mov	_gsm_sendandcheck_PARM_2,#0x03
      0017DC 75 5A 01         [24] 3843 	mov	_gsm_sendandcheck_PARM_3,#0x01
      0017DF 90 88 DA         [24] 3844 	mov	dptr,#___str_7
      0017E2 75 F0 80         [24] 3845 	mov	b,#0x80
      0017E5 12 15 AA         [24] 3846 	lcall	_gsm_sendandcheck
      0017E8 C3               [12] 3847 	clr	c
      0017E9 22               [24] 3848 	ret
      0017EA                       3849 00102$:
                                   3850 ;	include/gsm_serial.c:45: send_gsm_cmd("AT+CMGS=\"");
      0017EA 90 88 ED         [24] 3851 	mov	dptr,#___str_9
      0017ED 75 F0 80         [24] 3852 	mov	b,#0x80
      0017F0 12 03 CD         [24] 3853 	lcall	_send_gsm_cmd
                                   3854 ;	include/gsm_serial.c:46: if(chinh) send_gsm_cmd(phone_chinh);
      0017F3 30 42 0B         [24] 3855 	jnb	_send_sms_PARM_1,00105$
      0017F6 90 00 01         [24] 3856 	mov	dptr,#_phone_chinh
      0017F9 75 F0 00         [24] 3857 	mov	b,#0x00
      0017FC 12 03 CD         [24] 3858 	lcall	_send_gsm_cmd
      0017FF 80 09            [24] 3859 	sjmp	00106$
      001801                       3860 00105$:
                                   3861 ;	include/gsm_serial.c:47: else send_gsm_cmd(eep_phonephu);
      001801 90 F0 11         [24] 3862 	mov	dptr,#_eep_phonephu
      001804 75 F0 80         [24] 3863 	mov	b,#0x80
      001807 12 03 CD         [24] 3864 	lcall	_send_gsm_cmd
      00180A                       3865 00106$:
                                   3866 ;	include/gsm_serial.c:48: gsm_serial_cmd = CMGS;
      00180A 90 00 FE         [24] 3867 	mov	dptr,#_gsm_serial_cmd
      00180D 74 08            [12] 3868 	mov	a,#0x08
      00180F F0               [24] 3869 	movx	@dptr,a
                                   3870 ;	include/gsm_serial.c:49: return gsm_sendandcheck("\"\r",5,61,"   SENDING   ");
      001810 75 5B FA         [24] 3871 	mov	_gsm_sendandcheck_PARM_4,#___str_11
      001813 75 5C 88         [24] 3872 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_11 >> 8)
      001816 75 5D 80         [24] 3873 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      001819 75 59 05         [24] 3874 	mov	_gsm_sendandcheck_PARM_2,#0x05
      00181C 75 5A 3D         [24] 3875 	mov	_gsm_sendandcheck_PARM_3,#0x3d
      00181F 90 88 F7         [24] 3876 	mov	dptr,#___str_10
      001822 75 F0 80         [24] 3877 	mov	b,#0x80
                                   3878 ;	include/gsm_serial.c:50: }
      001825 02 15 AA         [24] 3879 	ljmp	_gsm_sendandcheck
                                   3880 ;------------------------------------------------------------
                                   3881 ;Allocation info for local variables in function 'kiemtrataikhoan'
                                   3882 ;------------------------------------------------------------
                                   3883 ;	include/gsm_serial.c:52: __bit kiemtrataikhoan(){
                                   3884 ;	-----------------------------------------
                                   3885 ;	 function kiemtrataikhoan
                                   3886 ;	-----------------------------------------
      001828                       3887 _kiemtrataikhoan:
                                   3888 ;	include/gsm_serial.c:53: lenh_sms[0] = 0;
      001828 90 00 17         [24] 3889 	mov	dptr,#_lenh_sms
      00182B E4               [12] 3890 	clr	a
      00182C F0               [24] 3891 	movx	@dptr,a
                                   3892 ;	include/gsm_serial.c:54: have_cusd = 0;
                                   3893 ;	assignBit
      00182D C2 0F            [12] 3894 	clr	_have_cusd
                                   3895 ;	include/gsm_serial.c:55: gsm_serial_cmd = CUSD;
      00182F 90 00 FE         [24] 3896 	mov	dptr,#_gsm_serial_cmd
      001832 74 07            [12] 3897 	mov	a,#0x07
      001834 F0               [24] 3898 	movx	@dptr,a
                                   3899 ;	include/gsm_serial.c:56: gsm_sendandcheck("AT+CUSD=1,\"*101#\",\r",3,30,"  KIEM TRA TK   ");
      001835 75 5B 1C         [24] 3900 	mov	_gsm_sendandcheck_PARM_4,#___str_13
      001838 75 5C 89         [24] 3901 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_13 >> 8)
      00183B 75 5D 80         [24] 3902 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      00183E 75 59 03         [24] 3903 	mov	_gsm_sendandcheck_PARM_2,#0x03
      001841 75 5A 1E         [24] 3904 	mov	_gsm_sendandcheck_PARM_3,#0x1e
      001844 90 89 08         [24] 3905 	mov	dptr,#___str_12
      001847 75 F0 80         [24] 3906 	mov	b,#0x80
      00184A 12 15 AA         [24] 3907 	lcall	_gsm_sendandcheck
                                   3908 ;	include/gsm_serial.c:57: gsm_serial_cmd = NORMAL;
      00184D 90 00 FE         [24] 3909 	mov	dptr,#_gsm_serial_cmd
      001850 E4               [12] 3910 	clr	a
      001851 F0               [24] 3911 	movx	@dptr,a
                                   3912 ;	include/gsm_serial.c:58: return lenh_sms[0];
      001852 90 00 17         [24] 3913 	mov	dptr,#_lenh_sms
      001855 E0               [24] 3914 	movx	a,@dptr
                                   3915 ;	assignBit
      001856 24 FF            [12] 3916 	add	a,#0xff
                                   3917 ;	include/gsm_serial.c:59: }
      001858 22               [24] 3918 	ret
                                   3919 ;------------------------------------------------------------
                                   3920 ;Allocation info for local variables in function 'kiemtrasodienthoai'
                                   3921 ;------------------------------------------------------------
                                   3922 ;	include/gsm_serial.c:61: __bit kiemtrasodienthoai(){
                                   3923 ;	-----------------------------------------
                                   3924 ;	 function kiemtrasodienthoai
                                   3925 ;	-----------------------------------------
      001859                       3926 _kiemtrasodienthoai:
                                   3927 ;	include/gsm_serial.c:63: have_cusd = 0;
                                   3928 ;	assignBit
      001859 C2 0F            [12] 3929 	clr	_have_cusd
                                   3930 ;	include/gsm_serial.c:64: gsm_serial_cmd = SDT;
      00185B 90 00 FE         [24] 3931 	mov	dptr,#_gsm_serial_cmd
      00185E 74 0D            [12] 3932 	mov	a,#0x0d
      001860 F0               [24] 3933 	movx	@dptr,a
                                   3934 ;	include/gsm_serial.c:65: switch(nha_mang){
      001861 90 00 F9         [24] 3935 	mov	dptr,#_nha_mang
      001864 E0               [24] 3936 	movx	a,@dptr
      001865 FF               [12] 3937 	mov	r7,a
      001866 BF 50 02         [24] 3938 	cjne	r7,#0x50,00124$
      001869 80 25            [24] 3939 	sjmp	00102$
      00186B                       3940 00124$:
      00186B BF 66 02         [24] 3941 	cjne	r7,#0x66,00125$
      00186E 80 38            [24] 3942 	sjmp	00103$
      001870                       3943 00125$:
      001870 BF 6E 02         [24] 3944 	cjne	r7,#0x6e,00126$
      001873 80 4B            [24] 3945 	sjmp	00104$
      001875                       3946 00126$:
      001875 BF 74 60         [24] 3947 	cjne	r7,#0x74,00105$
                                   3948 ;	include/gsm_serial.c:67: return gsm_sendandcheck("AT+CUSD=1,\"*101#\",\r",3,30,"  KIEM TRA SDT   ");
      001878 75 5B 2D         [24] 3949 	mov	_gsm_sendandcheck_PARM_4,#___str_14
      00187B 75 5C 89         [24] 3950 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_14 >> 8)
      00187E 75 5D 80         [24] 3951 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      001881 75 59 03         [24] 3952 	mov	_gsm_sendandcheck_PARM_2,#0x03
      001884 75 5A 1E         [24] 3953 	mov	_gsm_sendandcheck_PARM_3,#0x1e
      001887 90 89 08         [24] 3954 	mov	dptr,#___str_12
      00188A 75 F0 80         [24] 3955 	mov	b,#0x80
                                   3956 ;	include/gsm_serial.c:68: case VINAPHONE:
      00188D 02 15 AA         [24] 3957 	ljmp	_gsm_sendandcheck
      001890                       3958 00102$:
                                   3959 ;	include/gsm_serial.c:69: return gsm_sendandcheck("AT+CUSD=1,\"*110#\",\r",3,30,"  KIEM TRA SDT   ");
      001890 75 5B 2D         [24] 3960 	mov	_gsm_sendandcheck_PARM_4,#___str_14
      001893 75 5C 89         [24] 3961 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_14 >> 8)
      001896 75 5D 80         [24] 3962 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      001899 75 59 03         [24] 3963 	mov	_gsm_sendandcheck_PARM_2,#0x03
      00189C 75 5A 1E         [24] 3964 	mov	_gsm_sendandcheck_PARM_3,#0x1e
      00189F 90 89 3F         [24] 3965 	mov	dptr,#___str_15
      0018A2 75 F0 80         [24] 3966 	mov	b,#0x80
                                   3967 ;	include/gsm_serial.c:70: case MOBIFONE:
      0018A5 02 15 AA         [24] 3968 	ljmp	_gsm_sendandcheck
      0018A8                       3969 00103$:
                                   3970 ;	include/gsm_serial.c:71: return gsm_sendandcheck("AT+CUSD=1,\"*0#\",\r",3,30,"  KIEM TRA SDT   ");
      0018A8 75 5B 2D         [24] 3971 	mov	_gsm_sendandcheck_PARM_4,#___str_14
      0018AB 75 5C 89         [24] 3972 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_14 >> 8)
      0018AE 75 5D 80         [24] 3973 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      0018B1 75 59 03         [24] 3974 	mov	_gsm_sendandcheck_PARM_2,#0x03
      0018B4 75 5A 1E         [24] 3975 	mov	_gsm_sendandcheck_PARM_3,#0x1e
      0018B7 90 89 53         [24] 3976 	mov	dptr,#___str_16
      0018BA 75 F0 80         [24] 3977 	mov	b,#0x80
                                   3978 ;	include/gsm_serial.c:72: case VIETNAM:
      0018BD 02 15 AA         [24] 3979 	ljmp	_gsm_sendandcheck
      0018C0                       3980 00104$:
                                   3981 ;	include/gsm_serial.c:73: return gsm_sendandcheck("AT+CUSD=1,\"*101#\",\r",3,30,"  KIEM TRA SDT   ");
      0018C0 75 5B 2D         [24] 3982 	mov	_gsm_sendandcheck_PARM_4,#___str_14
      0018C3 75 5C 89         [24] 3983 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_14 >> 8)
      0018C6 75 5D 80         [24] 3984 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      0018C9 75 59 03         [24] 3985 	mov	_gsm_sendandcheck_PARM_2,#0x03
      0018CC 75 5A 1E         [24] 3986 	mov	_gsm_sendandcheck_PARM_3,#0x1e
      0018CF 90 89 08         [24] 3987 	mov	dptr,#___str_12
      0018D2 75 F0 80         [24] 3988 	mov	b,#0x80
                                   3989 ;	include/gsm_serial.c:74: }
      0018D5 02 15 AA         [24] 3990 	ljmp	_gsm_sendandcheck
      0018D8                       3991 00105$:
                                   3992 ;	include/gsm_serial.c:77: return 0;
      0018D8 C3               [12] 3993 	clr	c
                                   3994 ;	include/gsm_serial.c:78: }
      0018D9 22               [24] 3995 	ret
                                   3996 ;------------------------------------------------------------
                                   3997 ;Allocation info for local variables in function 'kiemtratinhieu'
                                   3998 ;------------------------------------------------------------
                                   3999 ;i                         Allocated to registers r7 
                                   4000 ;------------------------------------------------------------
                                   4001 ;	include/gsm_serial.c:80: void kiemtratinhieu(){
                                   4002 ;	-----------------------------------------
                                   4003 ;	 function kiemtratinhieu
                                   4004 ;	-----------------------------------------
      0018DA                       4005 _kiemtratinhieu:
                                   4006 ;	include/gsm_serial.c:81: gsm_serial_cmd = CSQ;
      0018DA 90 00 FE         [24] 4007 	mov	dptr,#_gsm_serial_cmd
      0018DD 74 0E            [12] 4008 	mov	a,#0x0e
      0018DF F0               [24] 4009 	movx	@dptr,a
                                   4010 ;	include/gsm_serial.c:82: clear_sms_buffer(0);
      0018E0 75 82 00         [24] 4011 	mov	dpl,#0x00
      0018E3 12 15 8E         [24] 4012 	lcall	_clear_sms_buffer
                                   4013 ;	include/gsm_serial.c:83: sms_index  = 0;
      0018E6 90 00 BB         [24] 4014 	mov	dptr,#_sms_index
      0018E9 E4               [12] 4015 	clr	a
      0018EA F0               [24] 4016 	movx	@dptr,a
                                   4017 ;	include/gsm_serial.c:84: if(gsm_sendandcheck("AT+CSQ\r",15,1," SONG ")){
      0018EB 75 5B 6D         [24] 4018 	mov	_gsm_sendandcheck_PARM_4,#___str_18
      0018EE 75 5C 89         [24] 4019 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_18 >> 8)
      0018F1 75 5D 80         [24] 4020 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      0018F4 75 59 0F         [24] 4021 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      0018F7 75 5A 01         [24] 4022 	mov	_gsm_sendandcheck_PARM_3,#0x01
      0018FA 90 89 65         [24] 4023 	mov	dptr,#___str_17
      0018FD 75 F0 80         [24] 4024 	mov	b,#0x80
      001900 12 15 AA         [24] 4025 	lcall	_gsm_sendandcheck
      001903 50 33            [24] 4026 	jnc	00106$
                                   4027 ;	include/gsm_serial.c:86: signal = 0;
      001905 90 00 FA         [24] 4028 	mov	dptr,#_signal
      001908 E4               [12] 4029 	clr	a
      001909 F0               [24] 4030 	movx	@dptr,a
                                   4031 ;	include/gsm_serial.c:87: while(lenh_sms[i]!=',')signal = lenh_sms[i++]-48 + signal*10;    
      00190A 7F 00            [12] 4032 	mov	r7,#0x00
      00190C                       4033 00101$:
      00190C EF               [12] 4034 	mov	a,r7
      00190D 24 17            [12] 4035 	add	a,#_lenh_sms
      00190F F5 82            [12] 4036 	mov	dpl,a
      001911 E4               [12] 4037 	clr	a
      001912 34 00            [12] 4038 	addc	a,#(_lenh_sms >> 8)
      001914 F5 83            [12] 4039 	mov	dph,a
      001916 E0               [24] 4040 	movx	a,@dptr
      001917 FE               [12] 4041 	mov	r6,a
      001918 BE 2C 01         [24] 4042 	cjne	r6,#0x2c,00122$
      00191B 22               [24] 4043 	ret
      00191C                       4044 00122$:
      00191C EF               [12] 4045 	mov	a,r7
      00191D 24 17            [12] 4046 	add	a,#_lenh_sms
      00191F F5 82            [12] 4047 	mov	dpl,a
      001921 E4               [12] 4048 	clr	a
      001922 34 00            [12] 4049 	addc	a,#(_lenh_sms >> 8)
      001924 F5 83            [12] 4050 	mov	dph,a
      001926 0F               [12] 4051 	inc	r7
      001927 E0               [24] 4052 	movx	a,@dptr
      001928 24 D0            [12] 4053 	add	a,#0xd0
      00192A FE               [12] 4054 	mov	r6,a
      00192B 90 00 FA         [24] 4055 	mov	dptr,#_signal
      00192E E0               [24] 4056 	movx	a,@dptr
      00192F FD               [12] 4057 	mov	r5,a
      001930 75 F0 0A         [24] 4058 	mov	b,#0x0a
      001933 A4               [48] 4059 	mul	ab
      001934 2E               [12] 4060 	add	a,r6
      001935 F0               [24] 4061 	movx	@dptr,a
      001936 80 D4            [24] 4062 	sjmp	00101$
      001938                       4063 00106$:
                                   4064 ;	include/gsm_serial.c:89: }
      001938 22               [24] 4065 	ret
                                   4066 ;------------------------------------------------------------
                                   4067 ;Allocation info for local variables in function 'send_thong_so_rut_gon'
                                   4068 ;------------------------------------------------------------
                                   4069 ;i                         Allocated to registers r7 
                                   4070 ;dien_ap                   Allocated to registers r6 
                                   4071 ;------------------------------------------------------------
                                   4072 ;	include/gsm_serial.c:92: void send_thong_so_rut_gon(__bit chinh){
                                   4073 ;	-----------------------------------------
                                   4074 ;	 function send_thong_so_rut_gon
                                   4075 ;	-----------------------------------------
      001939                       4076 _send_thong_so_rut_gon:
                                   4077 ;	include/gsm_serial.c:94: u8 dien_ap = dien_ap_nguon*28/256;
      001939 78 7D            [12] 4078 	mov	r0,#_dien_ap_nguon
      00193B 86 1B            [24] 4079 	mov	__mulint_PARM_2,@r0
      00193D 75 1C 00         [24] 4080 	mov	(__mulint_PARM_2 + 1),#0x00
      001940 90 00 1C         [24] 4081 	mov	dptr,#0x001c
      001943 12 83 E1         [24] 4082 	lcall	__mulint
      001946 75 1B 00         [24] 4083 	mov	__divsint_PARM_2,#0x00
      001949 75 1C 01         [24] 4084 	mov	(__divsint_PARM_2 + 1),#0x01
      00194C 12 84 9D         [24] 4085 	lcall	__divsint
      00194F AE 82            [24] 4086 	mov	r6,dpl
                                   4087 ;	include/gsm_serial.c:95: send_gsm_byte(atmel_phat?'8':'S');
      001951 30 35 06         [24] 4088 	jnb	_atmel_phat,00115$
      001954 7D 38            [12] 4089 	mov	r5,#0x38
      001956 7F 00            [12] 4090 	mov	r7,#0x00
      001958 80 04            [24] 4091 	sjmp	00116$
      00195A                       4092 00115$:
      00195A 7D 53            [12] 4093 	mov	r5,#0x53
      00195C 7F 00            [12] 4094 	mov	r7,#0x00
      00195E                       4095 00116$:
      00195E 8D 82            [24] 4096 	mov	dpl,r5
      001960 C0 06            [24] 4097 	push	ar6
      001962 12 03 B8         [24] 4098 	lcall	_send_gsm_byte
      001965 D0 06            [24] 4099 	pop	ar6
                                   4100 ;	include/gsm_serial.c:96: send_gsm_byte((may_dc?'D':'S'));
      001967 30 34 06         [24] 4101 	jnb	_may_dc,00117$
      00196A 7D 44            [12] 4102 	mov	r5,#0x44
      00196C 7F 00            [12] 4103 	mov	r7,#0x00
      00196E 80 04            [24] 4104 	sjmp	00118$
      001970                       4105 00117$:
      001970 7D 53            [12] 4106 	mov	r5,#0x53
      001972 7F 00            [12] 4107 	mov	r7,#0x00
      001974                       4108 00118$:
      001974 8D 82            [24] 4109 	mov	dpl,r5
      001976 C0 06            [24] 4110 	push	ar6
      001978 12 03 B8         [24] 4111 	lcall	_send_gsm_byte
      00197B D0 06            [24] 4112 	pop	ar6
                                   4113 ;	include/gsm_serial.c:97: do{
      00197D 7F 00            [12] 4114 	mov	r7,#0x00
      00197F                       4115 00103$:
                                   4116 ;	include/gsm_serial.c:98: if(!thoi_gian_doi_doc_cam[i])send_gsm_byte('E');
      00197F EF               [12] 4117 	mov	a,r7
      001980 24 E8            [12] 4118 	add	a,#_thoi_gian_doi_doc_cam
      001982 FC               [12] 4119 	mov	r4,a
      001983 E4               [12] 4120 	clr	a
      001984 34 00            [12] 4121 	addc	a,#(_thoi_gian_doi_doc_cam >> 8)
      001986 FD               [12] 4122 	mov	r5,a
      001987 8C 82            [24] 4123 	mov	dpl,r4
      001989 8D 83            [24] 4124 	mov	dph,r5
      00198B E0               [24] 4125 	movx	a,@dptr
      00198C 70 0E            [24] 4126 	jnz	00102$
      00198E 75 82 45         [24] 4127 	mov	dpl,#0x45
      001991 C0 07            [24] 4128 	push	ar7
      001993 C0 06            [24] 4129 	push	ar6
      001995 12 03 B8         [24] 4130 	lcall	_send_gsm_byte
      001998 D0 06            [24] 4131 	pop	ar6
      00199A D0 07            [24] 4132 	pop	ar7
      00199C                       4133 00102$:
                                   4134 ;	include/gsm_serial.c:99: send_gsm_byte(gio[i]/10+'0');
      00199C EF               [12] 4135 	mov	a,r7
      00199D 24 4D            [12] 4136 	add	a,#_gio
      00199F F9               [12] 4137 	mov	r1,a
      0019A0 87 05            [24] 4138 	mov	ar5,@r1
      0019A2 7C 00            [12] 4139 	mov	r4,#0x00
      0019A4 75 1B 0A         [24] 4140 	mov	__divsint_PARM_2,#0x0a
                                   4141 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      0019A7 8C 1C            [24] 4142 	mov	(__divsint_PARM_2 + 1),r4
      0019A9 8D 82            [24] 4143 	mov	dpl,r5
      0019AB 8C 83            [24] 4144 	mov	dph,r4
      0019AD C0 07            [24] 4145 	push	ar7
      0019AF C0 06            [24] 4146 	push	ar6
      0019B1 C0 01            [24] 4147 	push	ar1
      0019B3 12 84 9D         [24] 4148 	lcall	__divsint
      0019B6 AC 82            [24] 4149 	mov	r4,dpl
      0019B8 74 30            [12] 4150 	mov	a,#0x30
      0019BA 2C               [12] 4151 	add	a,r4
      0019BB F5 82            [12] 4152 	mov	dpl,a
      0019BD 12 03 B8         [24] 4153 	lcall	_send_gsm_byte
      0019C0 D0 01            [24] 4154 	pop	ar1
                                   4155 ;	include/gsm_serial.c:100: send_gsm_byte(gio[i]%10+'0');
      0019C2 87 05            [24] 4156 	mov	ar5,@r1
      0019C4 7C 00            [12] 4157 	mov	r4,#0x00
      0019C6 75 1B 0A         [24] 4158 	mov	__modsint_PARM_2,#0x0a
                                   4159 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0019C9 8C 1C            [24] 4160 	mov	(__modsint_PARM_2 + 1),r4
      0019CB 8D 82            [24] 4161 	mov	dpl,r5
      0019CD 8C 83            [24] 4162 	mov	dph,r4
      0019CF 12 84 67         [24] 4163 	lcall	__modsint
      0019D2 AC 82            [24] 4164 	mov	r4,dpl
      0019D4 74 30            [12] 4165 	mov	a,#0x30
      0019D6 2C               [12] 4166 	add	a,r4
      0019D7 F5 82            [12] 4167 	mov	dpl,a
      0019D9 12 03 B8         [24] 4168 	lcall	_send_gsm_byte
      0019DC D0 06            [24] 4169 	pop	ar6
      0019DE D0 07            [24] 4170 	pop	ar7
                                   4171 ;	include/gsm_serial.c:101: send_gsm_byte(phut[i]/10+'0');
      0019E0 EF               [12] 4172 	mov	a,r7
      0019E1 24 51            [12] 4173 	add	a,#_phut
      0019E3 F9               [12] 4174 	mov	r1,a
      0019E4 87 05            [24] 4175 	mov	ar5,@r1
      0019E6 7C 00            [12] 4176 	mov	r4,#0x00
      0019E8 75 1B 0A         [24] 4177 	mov	__divsint_PARM_2,#0x0a
                                   4178 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      0019EB 8C 1C            [24] 4179 	mov	(__divsint_PARM_2 + 1),r4
      0019ED 8D 82            [24] 4180 	mov	dpl,r5
      0019EF 8C 83            [24] 4181 	mov	dph,r4
      0019F1 C0 07            [24] 4182 	push	ar7
      0019F3 C0 06            [24] 4183 	push	ar6
      0019F5 C0 01            [24] 4184 	push	ar1
      0019F7 12 84 9D         [24] 4185 	lcall	__divsint
      0019FA AC 82            [24] 4186 	mov	r4,dpl
      0019FC 74 30            [12] 4187 	mov	a,#0x30
      0019FE 2C               [12] 4188 	add	a,r4
      0019FF F5 82            [12] 4189 	mov	dpl,a
      001A01 12 03 B8         [24] 4190 	lcall	_send_gsm_byte
      001A04 D0 01            [24] 4191 	pop	ar1
                                   4192 ;	include/gsm_serial.c:102: send_gsm_byte(phut[i]%10+'0');
      001A06 87 05            [24] 4193 	mov	ar5,@r1
      001A08 7C 00            [12] 4194 	mov	r4,#0x00
      001A0A 75 1B 0A         [24] 4195 	mov	__modsint_PARM_2,#0x0a
                                   4196 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      001A0D 8C 1C            [24] 4197 	mov	(__modsint_PARM_2 + 1),r4
      001A0F 8D 82            [24] 4198 	mov	dpl,r5
      001A11 8C 83            [24] 4199 	mov	dph,r4
      001A13 12 84 67         [24] 4200 	lcall	__modsint
      001A16 AC 82            [24] 4201 	mov	r4,dpl
      001A18 74 30            [12] 4202 	mov	a,#0x30
      001A1A 2C               [12] 4203 	add	a,r4
      001A1B F5 82            [12] 4204 	mov	dpl,a
      001A1D 12 03 B8         [24] 4205 	lcall	_send_gsm_byte
      001A20 D0 06            [24] 4206 	pop	ar6
      001A22 D0 07            [24] 4207 	pop	ar7
                                   4208 ;	include/gsm_serial.c:103: }while(++i!=so_motor);
      001A24 0F               [12] 4209 	inc	r7
      001A25 90 01 2F         [24] 4210 	mov	dptr,#_so_motor
      001A28 E0               [24] 4211 	movx	a,@dptr
      001A29 FD               [12] 4212 	mov	r5,a
      001A2A EF               [12] 4213 	mov	a,r7
      001A2B B5 05 02         [24] 4214 	cjne	a,ar5,00191$
      001A2E 80 03            [24] 4215 	sjmp	00192$
      001A30                       4216 00191$:
      001A30 02 19 7F         [24] 4217 	ljmp	00103$
      001A33                       4218 00192$:
                                   4219 ;	include/gsm_serial.c:104: if(chinh){
      001A33 30 43 23         [24] 4220 	jnb	_send_thong_so_rut_gon_PARM_1,00107$
                                   4221 ;	include/gsm_serial.c:105: send_gsm_byte((GPS_time?(eep_gpson?'G':'D'):'d'));
      001A36 30 1D 13         [24] 4222 	jnb	_GPS_time,00119$
      001A39 90 F0 02         [24] 4223 	mov	dptr,#_eep_gpson
      001A3C E4               [12] 4224 	clr	a
      001A3D 93               [24] 4225 	movc	a,@a+dptr
      001A3E 60 06            [24] 4226 	jz	00121$
      001A40 7D 47            [12] 4227 	mov	r5,#0x47
      001A42 7F 00            [12] 4228 	mov	r7,#0x00
      001A44 80 0A            [24] 4229 	sjmp	00120$
      001A46                       4230 00121$:
      001A46 7D 44            [12] 4231 	mov	r5,#0x44
      001A48 7F 00            [12] 4232 	mov	r7,#0x00
      001A4A 80 04            [24] 4233 	sjmp	00120$
      001A4C                       4234 00119$:
      001A4C 7D 64            [12] 4235 	mov	r5,#0x64
      001A4E 7F 00            [12] 4236 	mov	r7,#0x00
      001A50                       4237 00120$:
      001A50 8D 82            [24] 4238 	mov	dpl,r5
      001A52 C0 06            [24] 4239 	push	ar6
      001A54 12 03 B8         [24] 4240 	lcall	_send_gsm_byte
      001A57 D0 06            [24] 4241 	pop	ar6
      001A59                       4242 00107$:
                                   4243 ;	include/gsm_serial.c:107: send_gsm_byte(hour/10+'0');
      001A59 AD 4B            [24] 4244 	mov	r5,_hour
      001A5B 7F 00            [12] 4245 	mov	r7,#0x00
      001A5D 75 1B 0A         [24] 4246 	mov	__divsint_PARM_2,#0x0a
                                   4247 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      001A60 8F 1C            [24] 4248 	mov	(__divsint_PARM_2 + 1),r7
      001A62 8D 82            [24] 4249 	mov	dpl,r5
      001A64 8F 83            [24] 4250 	mov	dph,r7
      001A66 C0 06            [24] 4251 	push	ar6
      001A68 12 84 9D         [24] 4252 	lcall	__divsint
      001A6B AD 82            [24] 4253 	mov	r5,dpl
      001A6D 74 30            [12] 4254 	mov	a,#0x30
      001A6F 2D               [12] 4255 	add	a,r5
      001A70 F5 82            [12] 4256 	mov	dpl,a
      001A72 12 03 B8         [24] 4257 	lcall	_send_gsm_byte
                                   4258 ;	include/gsm_serial.c:108: send_gsm_byte(hour%10+'0');
      001A75 AD 4B            [24] 4259 	mov	r5,_hour
      001A77 7F 00            [12] 4260 	mov	r7,#0x00
      001A79 75 1B 0A         [24] 4261 	mov	__modsint_PARM_2,#0x0a
                                   4262 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      001A7C 8F 1C            [24] 4263 	mov	(__modsint_PARM_2 + 1),r7
      001A7E 8D 82            [24] 4264 	mov	dpl,r5
      001A80 8F 83            [24] 4265 	mov	dph,r7
      001A82 12 84 67         [24] 4266 	lcall	__modsint
      001A85 AD 82            [24] 4267 	mov	r5,dpl
      001A87 74 30            [12] 4268 	mov	a,#0x30
      001A89 2D               [12] 4269 	add	a,r5
      001A8A F5 82            [12] 4270 	mov	dpl,a
      001A8C 12 03 B8         [24] 4271 	lcall	_send_gsm_byte
                                   4272 ;	include/gsm_serial.c:109: send_gsm_byte(minute/10+'0');
      001A8F AD 4A            [24] 4273 	mov	r5,_minute
      001A91 7F 00            [12] 4274 	mov	r7,#0x00
      001A93 75 1B 0A         [24] 4275 	mov	__divsint_PARM_2,#0x0a
                                   4276 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      001A96 8F 1C            [24] 4277 	mov	(__divsint_PARM_2 + 1),r7
      001A98 8D 82            [24] 4278 	mov	dpl,r5
      001A9A 8F 83            [24] 4279 	mov	dph,r7
      001A9C 12 84 9D         [24] 4280 	lcall	__divsint
      001A9F AD 82            [24] 4281 	mov	r5,dpl
      001AA1 74 30            [12] 4282 	mov	a,#0x30
      001AA3 2D               [12] 4283 	add	a,r5
      001AA4 F5 82            [12] 4284 	mov	dpl,a
      001AA6 12 03 B8         [24] 4285 	lcall	_send_gsm_byte
                                   4286 ;	include/gsm_serial.c:110: send_gsm_byte(minute%10+'0');
      001AA9 AD 4A            [24] 4287 	mov	r5,_minute
      001AAB 7F 00            [12] 4288 	mov	r7,#0x00
      001AAD 75 1B 0A         [24] 4289 	mov	__modsint_PARM_2,#0x0a
                                   4290 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      001AB0 8F 1C            [24] 4291 	mov	(__modsint_PARM_2 + 1),r7
      001AB2 8D 82            [24] 4292 	mov	dpl,r5
      001AB4 8F 83            [24] 4293 	mov	dph,r7
      001AB6 12 84 67         [24] 4294 	lcall	__modsint
      001AB9 AD 82            [24] 4295 	mov	r5,dpl
      001ABB 74 30            [12] 4296 	mov	a,#0x30
      001ABD 2D               [12] 4297 	add	a,r5
      001ABE F5 82            [12] 4298 	mov	dpl,a
      001AC0 12 03 B8         [24] 4299 	lcall	_send_gsm_byte
                                   4300 ;	include/gsm_serial.c:111: send_gsm_byte(date+'0');
      001AC3 90 00 DD         [24] 4301 	mov	dptr,#_date
      001AC6 E0               [24] 4302 	movx	a,@dptr
      001AC7 24 30            [12] 4303 	add	a,#0x30
      001AC9 F5 82            [12] 4304 	mov	dpl,a
      001ACB 12 03 B8         [24] 4305 	lcall	_send_gsm_byte
                                   4306 ;	include/gsm_serial.c:112: send_gsm_byte(' ');
      001ACE 75 82 20         [24] 4307 	mov	dpl,#0x20
      001AD1 12 03 B8         [24] 4308 	lcall	_send_gsm_byte
      001AD4 D0 06            [24] 4309 	pop	ar6
                                   4310 ;	include/gsm_serial.c:113: send_gsm_byte(motor_dung?'0':'1');
      001AD6 30 36 06         [24] 4311 	jnb	_motor_dung,00123$
      001AD9 7D 30            [12] 4312 	mov	r5,#0x30
      001ADB 7F 00            [12] 4313 	mov	r7,#0x00
      001ADD 80 04            [24] 4314 	sjmp	00124$
      001ADF                       4315 00123$:
      001ADF 7D 31            [12] 4316 	mov	r5,#0x31
      001AE1 7F 00            [12] 4317 	mov	r7,#0x00
      001AE3                       4318 00124$:
      001AE3 8D 82            [24] 4319 	mov	dpl,r5
      001AE5 C0 06            [24] 4320 	push	ar6
      001AE7 12 03 B8         [24] 4321 	lcall	_send_gsm_byte
      001AEA D0 06            [24] 4322 	pop	ar6
                                   4323 ;	include/gsm_serial.c:114: send_gsm_byte(xung_giay_check?'1':'0');
      001AEC 90 00 E7         [24] 4324 	mov	dptr,#_xung_giay_check
      001AEF E0               [24] 4325 	movx	a,@dptr
      001AF0 60 06            [24] 4326 	jz	00125$
      001AF2 7D 31            [12] 4327 	mov	r5,#0x31
      001AF4 7F 00            [12] 4328 	mov	r7,#0x00
      001AF6 80 04            [24] 4329 	sjmp	00126$
      001AF8                       4330 00125$:
      001AF8 7D 30            [12] 4331 	mov	r5,#0x30
      001AFA 7F 00            [12] 4332 	mov	r7,#0x00
      001AFC                       4333 00126$:
      001AFC 8D 82            [24] 4334 	mov	dpl,r5
      001AFE C0 06            [24] 4335 	push	ar6
      001B00 12 03 B8         [24] 4336 	lcall	_send_gsm_byte
      001B03 D0 06            [24] 4337 	pop	ar6
                                   4338 ;	include/gsm_serial.c:115: send_gsm_byte(DenRelay?'1':'0');
      001B05 30 A1 06         [24] 4339 	jnb	_P21,00127$
      001B08 7D 31            [12] 4340 	mov	r5,#0x31
      001B0A 7F 00            [12] 4341 	mov	r7,#0x00
      001B0C 80 04            [24] 4342 	sjmp	00128$
      001B0E                       4343 00127$:
      001B0E 7D 30            [12] 4344 	mov	r5,#0x30
      001B10 7F 00            [12] 4345 	mov	r7,#0x00
      001B12                       4346 00128$:
      001B12 8D 82            [24] 4347 	mov	dpl,r5
      001B14 C0 06            [24] 4348 	push	ar6
      001B16 12 03 B8         [24] 4349 	lcall	_send_gsm_byte
      001B19 D0 06            [24] 4350 	pop	ar6
                                   4351 ;	include/gsm_serial.c:116: if((eep_mp3%4) || chinh){
      001B1B 90 F0 10         [24] 4352 	mov	dptr,#_eep_mp3
      001B1E E4               [12] 4353 	clr	a
      001B1F 93               [24] 4354 	movc	a,@a+dptr
      001B20 54 03            [12] 4355 	anl	a,#0x03
      001B22 70 03            [24] 4356 	jnz	00108$
      001B24 30 43 1C         [24] 4357 	jnb	_send_thong_so_rut_gon_PARM_1,00109$
      001B27                       4358 00108$:
                                   4359 ;	include/gsm_serial.c:117: send_gsm_byte(eep_mp3+(mp3_playing?'0':47));
      001B27 30 92 06         [24] 4360 	jnb	_P12,00129$
      001B2A 7D 30            [12] 4361 	mov	r5,#0x30
      001B2C 7F 00            [12] 4362 	mov	r7,#0x00
      001B2E 80 04            [24] 4363 	sjmp	00130$
      001B30                       4364 00129$:
      001B30 7D 2F            [12] 4365 	mov	r5,#0x2f
      001B32 7F 00            [12] 4366 	mov	r7,#0x00
      001B34                       4367 00130$:
      001B34 90 F0 10         [24] 4368 	mov	dptr,#_eep_mp3
      001B37 E4               [12] 4369 	clr	a
      001B38 93               [24] 4370 	movc	a,@a+dptr
      001B39 2D               [12] 4371 	add	a,r5
      001B3A F5 82            [12] 4372 	mov	dpl,a
      001B3C C0 06            [24] 4373 	push	ar6
      001B3E 12 03 B8         [24] 4374 	lcall	_send_gsm_byte
      001B41 D0 06            [24] 4375 	pop	ar6
      001B43                       4376 00109$:
                                   4377 ;	include/gsm_serial.c:119: send_gsm_byte(' ');
      001B43 75 82 20         [24] 4378 	mov	dpl,#0x20
      001B46 C0 06            [24] 4379 	push	ar6
      001B48 12 03 B8         [24] 4380 	lcall	_send_gsm_byte
      001B4B D0 06            [24] 4381 	pop	ar6
                                   4382 ;	include/gsm_serial.c:120: send_gsm_byte(dien_ap/10+'0');
      001B4D 7F 00            [12] 4383 	mov	r7,#0x00
      001B4F 75 1B 0A         [24] 4384 	mov	__divsint_PARM_2,#0x0a
                                   4385 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      001B52 8F 1C            [24] 4386 	mov	(__divsint_PARM_2 + 1),r7
      001B54 8E 82            [24] 4387 	mov	dpl,r6
      001B56 8F 83            [24] 4388 	mov	dph,r7
      001B58 C0 07            [24] 4389 	push	ar7
      001B5A C0 06            [24] 4390 	push	ar6
      001B5C 12 84 9D         [24] 4391 	lcall	__divsint
      001B5F AC 82            [24] 4392 	mov	r4,dpl
      001B61 74 30            [12] 4393 	mov	a,#0x30
      001B63 2C               [12] 4394 	add	a,r4
      001B64 F5 82            [12] 4395 	mov	dpl,a
      001B66 12 03 B8         [24] 4396 	lcall	_send_gsm_byte
      001B69 D0 06            [24] 4397 	pop	ar6
      001B6B D0 07            [24] 4398 	pop	ar7
                                   4399 ;	include/gsm_serial.c:121: send_gsm_byte(dien_ap%10+'0');
      001B6D 75 1B 0A         [24] 4400 	mov	__modsint_PARM_2,#0x0a
      001B70 75 1C 00         [24] 4401 	mov	(__modsint_PARM_2 + 1),#0x00
      001B73 8E 82            [24] 4402 	mov	dpl,r6
      001B75 8F 83            [24] 4403 	mov	dph,r7
      001B77 12 84 67         [24] 4404 	lcall	__modsint
      001B7A AE 82            [24] 4405 	mov	r6,dpl
      001B7C 74 30            [12] 4406 	mov	a,#0x30
      001B7E 2E               [12] 4407 	add	a,r6
      001B7F F5 82            [12] 4408 	mov	dpl,a
      001B81 12 03 B8         [24] 4409 	lcall	_send_gsm_byte
                                   4410 ;	include/gsm_serial.c:122: if(!chinh) return;
      001B84 20 43 01         [24] 4411 	jb	_send_thong_so_rut_gon_PARM_1,00112$
      001B87 22               [24] 4412 	ret
      001B88                       4413 00112$:
                                   4414 ;	include/gsm_serial.c:124: send_gsm_byte(signal/10+'0');
      001B88 90 00 FA         [24] 4415 	mov	dptr,#_signal
      001B8B E0               [24] 4416 	movx	a,@dptr
      001B8C FF               [12] 4417 	mov	r7,a
      001B8D 7E 00            [12] 4418 	mov	r6,#0x00
      001B8F 75 1B 0A         [24] 4419 	mov	__divsint_PARM_2,#0x0a
                                   4420 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      001B92 8E 1C            [24] 4421 	mov	(__divsint_PARM_2 + 1),r6
      001B94 8F 82            [24] 4422 	mov	dpl,r7
      001B96 8E 83            [24] 4423 	mov	dph,r6
      001B98 12 84 9D         [24] 4424 	lcall	__divsint
      001B9B AE 82            [24] 4425 	mov	r6,dpl
      001B9D 74 30            [12] 4426 	mov	a,#0x30
      001B9F 2E               [12] 4427 	add	a,r6
      001BA0 F5 82            [12] 4428 	mov	dpl,a
      001BA2 12 03 B8         [24] 4429 	lcall	_send_gsm_byte
                                   4430 ;	include/gsm_serial.c:125: send_gsm_byte(signal%10+'0');
      001BA5 90 00 FA         [24] 4431 	mov	dptr,#_signal
      001BA8 E0               [24] 4432 	movx	a,@dptr
      001BA9 FF               [12] 4433 	mov	r7,a
      001BAA 7E 00            [12] 4434 	mov	r6,#0x00
      001BAC 75 1B 0A         [24] 4435 	mov	__modsint_PARM_2,#0x0a
                                   4436 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      001BAF 8E 1C            [24] 4437 	mov	(__modsint_PARM_2 + 1),r6
      001BB1 8F 82            [24] 4438 	mov	dpl,r7
      001BB3 8E 83            [24] 4439 	mov	dph,r6
      001BB5 12 84 67         [24] 4440 	lcall	__modsint
      001BB8 AE 82            [24] 4441 	mov	r6,dpl
      001BBA 74 30            [12] 4442 	mov	a,#0x30
      001BBC 2E               [12] 4443 	add	a,r6
      001BBD F5 82            [12] 4444 	mov	dpl,a
                                   4445 ;	include/gsm_serial.c:126: }
      001BBF 02 03 B8         [24] 4446 	ljmp	_send_gsm_byte
                                   4447 ;------------------------------------------------------------
                                   4448 ;Allocation info for local variables in function 'send_gio_kim'
                                   4449 ;------------------------------------------------------------
                                   4450 ;i                         Allocated to registers r7 
                                   4451 ;------------------------------------------------------------
                                   4452 ;	include/gsm_serial.c:128: void send_gio_kim(){
                                   4453 ;	-----------------------------------------
                                   4454 ;	 function send_gio_kim
                                   4455 ;	-----------------------------------------
      001BC2                       4456 _send_gio_kim:
                                   4457 ;	include/gsm_serial.c:130: send_gsm_cmd(atmel_phat?"\r89C55":"\rSTC15");
      001BC2 30 35 06         [24] 4458 	jnb	_atmel_phat,00108$
      001BC5 7E 74            [12] 4459 	mov	r6,#___str_19
      001BC7 7F 89            [12] 4460 	mov	r7,#(___str_19 >> 8)
      001BC9 80 04            [24] 4461 	sjmp	00109$
      001BCB                       4462 00108$:
      001BCB 7E 7B            [12] 4463 	mov	r6,#___str_20
      001BCD 7F 89            [12] 4464 	mov	r7,#(___str_20 >> 8)
      001BCF                       4465 00109$:
      001BCF 7D 80            [12] 4466 	mov	r5,#0x80
      001BD1 8E 82            [24] 4467 	mov	dpl,r6
      001BD3 8F 83            [24] 4468 	mov	dph,r7
      001BD5 8D F0            [24] 4469 	mov	b,r5
      001BD7 12 03 CD         [24] 4470 	lcall	_send_gsm_cmd
                                   4471 ;	include/gsm_serial.c:131: do{
      001BDA 7F 00            [12] 4472 	mov	r7,#0x00
      001BDC                       4473 00103$:
                                   4474 ;	include/gsm_serial.c:132: send_gsm_cmd(may_dc?" DC":" ST");
      001BDC 30 34 06         [24] 4475 	jnb	_may_dc,00110$
      001BDF 7D 82            [12] 4476 	mov	r5,#___str_21
      001BE1 7E 89            [12] 4477 	mov	r6,#(___str_21 >> 8)
      001BE3 80 04            [24] 4478 	sjmp	00111$
      001BE5                       4479 00110$:
      001BE5 7D 86            [12] 4480 	mov	r5,#___str_22
      001BE7 7E 89            [12] 4481 	mov	r6,#(___str_22 >> 8)
      001BE9                       4482 00111$:
      001BE9 7C 80            [12] 4483 	mov	r4,#0x80
      001BEB 8D 82            [24] 4484 	mov	dpl,r5
      001BED 8E 83            [24] 4485 	mov	dph,r6
      001BEF 8C F0            [24] 4486 	mov	b,r4
      001BF1 C0 07            [24] 4487 	push	ar7
      001BF3 12 03 CD         [24] 4488 	lcall	_send_gsm_cmd
      001BF6 D0 07            [24] 4489 	pop	ar7
                                   4490 ;	include/gsm_serial.c:133: send_gsm_byte(i+'1');
      001BF8 8F 06            [24] 4491 	mov	ar6,r7
      001BFA 74 31            [12] 4492 	mov	a,#0x31
      001BFC 2E               [12] 4493 	add	a,r6
      001BFD F5 82            [12] 4494 	mov	dpl,a
      001BFF C0 07            [24] 4495 	push	ar7
      001C01 12 03 B8         [24] 4496 	lcall	_send_gsm_byte
                                   4497 ;	include/gsm_serial.c:134: send_gsm_byte('=');
      001C04 75 82 3D         [24] 4498 	mov	dpl,#0x3d
      001C07 12 03 B8         [24] 4499 	lcall	_send_gsm_byte
      001C0A D0 07            [24] 4500 	pop	ar7
                                   4501 ;	include/gsm_serial.c:135: if(!thoi_gian_doi_doc_cam[i])send_gsm_byte('E');
      001C0C EF               [12] 4502 	mov	a,r7
      001C0D 24 E8            [12] 4503 	add	a,#_thoi_gian_doi_doc_cam
      001C0F FD               [12] 4504 	mov	r5,a
      001C10 E4               [12] 4505 	clr	a
      001C11 34 00            [12] 4506 	addc	a,#(_thoi_gian_doi_doc_cam >> 8)
      001C13 FE               [12] 4507 	mov	r6,a
      001C14 8D 82            [24] 4508 	mov	dpl,r5
      001C16 8E 83            [24] 4509 	mov	dph,r6
      001C18 E0               [24] 4510 	movx	a,@dptr
      001C19 70 0A            [24] 4511 	jnz	00102$
      001C1B 75 82 45         [24] 4512 	mov	dpl,#0x45
      001C1E C0 07            [24] 4513 	push	ar7
      001C20 12 03 B8         [24] 4514 	lcall	_send_gsm_byte
      001C23 D0 07            [24] 4515 	pop	ar7
      001C25                       4516 00102$:
                                   4517 ;	include/gsm_serial.c:136: send_gsm_byte(gio[i]/10+'0');
      001C25 EF               [12] 4518 	mov	a,r7
      001C26 24 4D            [12] 4519 	add	a,#_gio
      001C28 F9               [12] 4520 	mov	r1,a
      001C29 87 06            [24] 4521 	mov	ar6,@r1
      001C2B 7D 00            [12] 4522 	mov	r5,#0x00
      001C2D 75 1B 0A         [24] 4523 	mov	__divsint_PARM_2,#0x0a
                                   4524 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      001C30 8D 1C            [24] 4525 	mov	(__divsint_PARM_2 + 1),r5
      001C32 8E 82            [24] 4526 	mov	dpl,r6
      001C34 8D 83            [24] 4527 	mov	dph,r5
      001C36 C0 07            [24] 4528 	push	ar7
      001C38 C0 01            [24] 4529 	push	ar1
      001C3A 12 84 9D         [24] 4530 	lcall	__divsint
      001C3D AD 82            [24] 4531 	mov	r5,dpl
      001C3F 74 30            [12] 4532 	mov	a,#0x30
      001C41 2D               [12] 4533 	add	a,r5
      001C42 F5 82            [12] 4534 	mov	dpl,a
      001C44 12 03 B8         [24] 4535 	lcall	_send_gsm_byte
      001C47 D0 01            [24] 4536 	pop	ar1
                                   4537 ;	include/gsm_serial.c:137: send_gsm_byte(gio[i]%10+'0');
      001C49 87 06            [24] 4538 	mov	ar6,@r1
      001C4B 7D 00            [12] 4539 	mov	r5,#0x00
      001C4D 75 1B 0A         [24] 4540 	mov	__modsint_PARM_2,#0x0a
                                   4541 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      001C50 8D 1C            [24] 4542 	mov	(__modsint_PARM_2 + 1),r5
      001C52 8E 82            [24] 4543 	mov	dpl,r6
      001C54 8D 83            [24] 4544 	mov	dph,r5
      001C56 12 84 67         [24] 4545 	lcall	__modsint
      001C59 AD 82            [24] 4546 	mov	r5,dpl
      001C5B 74 30            [12] 4547 	mov	a,#0x30
      001C5D 2D               [12] 4548 	add	a,r5
      001C5E F5 82            [12] 4549 	mov	dpl,a
      001C60 12 03 B8         [24] 4550 	lcall	_send_gsm_byte
                                   4551 ;	include/gsm_serial.c:138: send_gsm_byte(':');
      001C63 75 82 3A         [24] 4552 	mov	dpl,#0x3a
      001C66 12 03 B8         [24] 4553 	lcall	_send_gsm_byte
      001C69 D0 07            [24] 4554 	pop	ar7
                                   4555 ;	include/gsm_serial.c:139: send_gsm_byte(phut[i]/10+'0');
      001C6B EF               [12] 4556 	mov	a,r7
      001C6C 24 51            [12] 4557 	add	a,#_phut
      001C6E F9               [12] 4558 	mov	r1,a
      001C6F 87 06            [24] 4559 	mov	ar6,@r1
      001C71 7D 00            [12] 4560 	mov	r5,#0x00
      001C73 75 1B 0A         [24] 4561 	mov	__divsint_PARM_2,#0x0a
                                   4562 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      001C76 8D 1C            [24] 4563 	mov	(__divsint_PARM_2 + 1),r5
      001C78 8E 82            [24] 4564 	mov	dpl,r6
      001C7A 8D 83            [24] 4565 	mov	dph,r5
      001C7C C0 07            [24] 4566 	push	ar7
      001C7E C0 01            [24] 4567 	push	ar1
      001C80 12 84 9D         [24] 4568 	lcall	__divsint
      001C83 AD 82            [24] 4569 	mov	r5,dpl
      001C85 74 30            [12] 4570 	mov	a,#0x30
      001C87 2D               [12] 4571 	add	a,r5
      001C88 F5 82            [12] 4572 	mov	dpl,a
      001C8A 12 03 B8         [24] 4573 	lcall	_send_gsm_byte
      001C8D D0 01            [24] 4574 	pop	ar1
                                   4575 ;	include/gsm_serial.c:140: send_gsm_byte(phut[i]%10+'0');
      001C8F 87 06            [24] 4576 	mov	ar6,@r1
      001C91 7D 00            [12] 4577 	mov	r5,#0x00
      001C93 75 1B 0A         [24] 4578 	mov	__modsint_PARM_2,#0x0a
                                   4579 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      001C96 8D 1C            [24] 4580 	mov	(__modsint_PARM_2 + 1),r5
      001C98 8E 82            [24] 4581 	mov	dpl,r6
      001C9A 8D 83            [24] 4582 	mov	dph,r5
      001C9C 12 84 67         [24] 4583 	lcall	__modsint
      001C9F AD 82            [24] 4584 	mov	r5,dpl
      001CA1 74 30            [12] 4585 	mov	a,#0x30
      001CA3 2D               [12] 4586 	add	a,r5
      001CA4 F5 82            [12] 4587 	mov	dpl,a
      001CA6 12 03 B8         [24] 4588 	lcall	_send_gsm_byte
      001CA9 D0 07            [24] 4589 	pop	ar7
                                   4590 ;	include/gsm_serial.c:141: }while(++i!=so_motor);
      001CAB 0F               [12] 4591 	inc	r7
      001CAC 90 01 2F         [24] 4592 	mov	dptr,#_so_motor
      001CAF E0               [24] 4593 	movx	a,@dptr
      001CB0 FE               [12] 4594 	mov	r6,a
      001CB1 EF               [12] 4595 	mov	a,r7
      001CB2 B5 06 01         [24] 4596 	cjne	a,ar6,00132$
      001CB5 22               [24] 4597 	ret
      001CB6                       4598 00132$:
      001CB6 02 1B DC         [24] 4599 	ljmp	00103$
                                   4600 ;	include/gsm_serial.c:142: }
      001CB9 22               [24] 4601 	ret
                                   4602 ;------------------------------------------------------------
                                   4603 ;Allocation info for local variables in function 'send_gio_thuc'
                                   4604 ;------------------------------------------------------------
                                   4605 ;	include/gsm_serial.c:144: void send_gio_thuc(__bit chinh){
                                   4606 ;	-----------------------------------------
                                   4607 ;	 function send_gio_thuc
                                   4608 ;	-----------------------------------------
      001CBA                       4609 _send_gio_thuc:
                                   4610 ;	include/gsm_serial.c:145: send_gsm_cmd(" T=");
      001CBA 90 89 8A         [24] 4611 	mov	dptr,#___str_23
      001CBD 75 F0 80         [24] 4612 	mov	b,#0x80
      001CC0 12 03 CD         [24] 4613 	lcall	_send_gsm_cmd
                                   4614 ;	include/gsm_serial.c:146: send_gsm_byte(hour/10+'0');
      001CC3 AE 4B            [24] 4615 	mov	r6,_hour
      001CC5 7F 00            [12] 4616 	mov	r7,#0x00
      001CC7 75 1B 0A         [24] 4617 	mov	__divsint_PARM_2,#0x0a
                                   4618 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      001CCA 8F 1C            [24] 4619 	mov	(__divsint_PARM_2 + 1),r7
      001CCC 8E 82            [24] 4620 	mov	dpl,r6
      001CCE 8F 83            [24] 4621 	mov	dph,r7
      001CD0 12 84 9D         [24] 4622 	lcall	__divsint
      001CD3 AE 82            [24] 4623 	mov	r6,dpl
      001CD5 74 30            [12] 4624 	mov	a,#0x30
      001CD7 2E               [12] 4625 	add	a,r6
      001CD8 F5 82            [12] 4626 	mov	dpl,a
      001CDA 12 03 B8         [24] 4627 	lcall	_send_gsm_byte
                                   4628 ;	include/gsm_serial.c:147: send_gsm_byte(hour%10+'0');
      001CDD AE 4B            [24] 4629 	mov	r6,_hour
      001CDF 7F 00            [12] 4630 	mov	r7,#0x00
      001CE1 75 1B 0A         [24] 4631 	mov	__modsint_PARM_2,#0x0a
                                   4632 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      001CE4 8F 1C            [24] 4633 	mov	(__modsint_PARM_2 + 1),r7
      001CE6 8E 82            [24] 4634 	mov	dpl,r6
      001CE8 8F 83            [24] 4635 	mov	dph,r7
      001CEA 12 84 67         [24] 4636 	lcall	__modsint
      001CED AE 82            [24] 4637 	mov	r6,dpl
      001CEF 74 30            [12] 4638 	mov	a,#0x30
      001CF1 2E               [12] 4639 	add	a,r6
      001CF2 F5 82            [12] 4640 	mov	dpl,a
      001CF4 12 03 B8         [24] 4641 	lcall	_send_gsm_byte
                                   4642 ;	include/gsm_serial.c:148: send_gsm_byte(':');
      001CF7 75 82 3A         [24] 4643 	mov	dpl,#0x3a
      001CFA 12 03 B8         [24] 4644 	lcall	_send_gsm_byte
                                   4645 ;	include/gsm_serial.c:149: send_gsm_byte(minute/10+'0');
      001CFD AE 4A            [24] 4646 	mov	r6,_minute
      001CFF 7F 00            [12] 4647 	mov	r7,#0x00
      001D01 75 1B 0A         [24] 4648 	mov	__divsint_PARM_2,#0x0a
                                   4649 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      001D04 8F 1C            [24] 4650 	mov	(__divsint_PARM_2 + 1),r7
      001D06 8E 82            [24] 4651 	mov	dpl,r6
      001D08 8F 83            [24] 4652 	mov	dph,r7
      001D0A 12 84 9D         [24] 4653 	lcall	__divsint
      001D0D AE 82            [24] 4654 	mov	r6,dpl
      001D0F 74 30            [12] 4655 	mov	a,#0x30
      001D11 2E               [12] 4656 	add	a,r6
      001D12 F5 82            [12] 4657 	mov	dpl,a
      001D14 12 03 B8         [24] 4658 	lcall	_send_gsm_byte
                                   4659 ;	include/gsm_serial.c:150: send_gsm_byte(minute%10+'0');
      001D17 AE 4A            [24] 4660 	mov	r6,_minute
      001D19 7F 00            [12] 4661 	mov	r7,#0x00
      001D1B 75 1B 0A         [24] 4662 	mov	__modsint_PARM_2,#0x0a
                                   4663 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      001D1E 8F 1C            [24] 4664 	mov	(__modsint_PARM_2 + 1),r7
      001D20 8E 82            [24] 4665 	mov	dpl,r6
      001D22 8F 83            [24] 4666 	mov	dph,r7
      001D24 12 84 67         [24] 4667 	lcall	__modsint
      001D27 AE 82            [24] 4668 	mov	r6,dpl
      001D29 74 30            [12] 4669 	mov	a,#0x30
      001D2B 2E               [12] 4670 	add	a,r6
      001D2C F5 82            [12] 4671 	mov	dpl,a
      001D2E 12 03 B8         [24] 4672 	lcall	_send_gsm_byte
                                   4673 ;	include/gsm_serial.c:151: if(date == 1) send_gsm_cmd(" CN,");
      001D31 90 00 DD         [24] 4674 	mov	dptr,#_date
      001D34 E0               [24] 4675 	movx	a,@dptr
      001D35 FF               [12] 4676 	mov	r7,a
      001D36 BF 01 0B         [24] 4677 	cjne	r7,#0x01,00102$
      001D39 90 89 8E         [24] 4678 	mov	dptr,#___str_24
      001D3C 75 F0 80         [24] 4679 	mov	b,#0x80
      001D3F 12 03 CD         [24] 4680 	lcall	_send_gsm_cmd
      001D42 80 1A            [24] 4681 	sjmp	00103$
      001D44                       4682 00102$:
                                   4683 ;	include/gsm_serial.c:153: send_gsm_cmd(" T");
      001D44 90 89 93         [24] 4684 	mov	dptr,#___str_25
      001D47 75 F0 80         [24] 4685 	mov	b,#0x80
      001D4A 12 03 CD         [24] 4686 	lcall	_send_gsm_cmd
                                   4687 ;	include/gsm_serial.c:154: send_gsm_byte(date+'0');
      001D4D 90 00 DD         [24] 4688 	mov	dptr,#_date
      001D50 E0               [24] 4689 	movx	a,@dptr
      001D51 24 30            [12] 4690 	add	a,#0x30
      001D53 F5 82            [12] 4691 	mov	dpl,a
      001D55 12 03 B8         [24] 4692 	lcall	_send_gsm_byte
                                   4693 ;	include/gsm_serial.c:155: send_gsm_byte(',');
      001D58 75 82 2C         [24] 4694 	mov	dpl,#0x2c
      001D5B 12 03 B8         [24] 4695 	lcall	_send_gsm_byte
      001D5E                       4696 00103$:
                                   4697 ;	include/gsm_serial.c:157: send_gsm_byte(day/10+'0');
      001D5E 90 00 DE         [24] 4698 	mov	dptr,#_day
      001D61 E0               [24] 4699 	movx	a,@dptr
      001D62 FF               [12] 4700 	mov	r7,a
      001D63 7E 00            [12] 4701 	mov	r6,#0x00
      001D65 75 1B 0A         [24] 4702 	mov	__divsint_PARM_2,#0x0a
                                   4703 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      001D68 8E 1C            [24] 4704 	mov	(__divsint_PARM_2 + 1),r6
      001D6A 8F 82            [24] 4705 	mov	dpl,r7
      001D6C 8E 83            [24] 4706 	mov	dph,r6
      001D6E 12 84 9D         [24] 4707 	lcall	__divsint
      001D71 AE 82            [24] 4708 	mov	r6,dpl
      001D73 74 30            [12] 4709 	mov	a,#0x30
      001D75 2E               [12] 4710 	add	a,r6
      001D76 F5 82            [12] 4711 	mov	dpl,a
      001D78 12 03 B8         [24] 4712 	lcall	_send_gsm_byte
                                   4713 ;	include/gsm_serial.c:158: send_gsm_byte(day%10+'0');
      001D7B 90 00 DE         [24] 4714 	mov	dptr,#_day
      001D7E E0               [24] 4715 	movx	a,@dptr
      001D7F FF               [12] 4716 	mov	r7,a
      001D80 7E 00            [12] 4717 	mov	r6,#0x00
      001D82 75 1B 0A         [24] 4718 	mov	__modsint_PARM_2,#0x0a
                                   4719 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      001D85 8E 1C            [24] 4720 	mov	(__modsint_PARM_2 + 1),r6
      001D87 8F 82            [24] 4721 	mov	dpl,r7
      001D89 8E 83            [24] 4722 	mov	dph,r6
      001D8B 12 84 67         [24] 4723 	lcall	__modsint
      001D8E AE 82            [24] 4724 	mov	r6,dpl
      001D90 74 30            [12] 4725 	mov	a,#0x30
      001D92 2E               [12] 4726 	add	a,r6
      001D93 F5 82            [12] 4727 	mov	dpl,a
      001D95 12 03 B8         [24] 4728 	lcall	_send_gsm_byte
                                   4729 ;	include/gsm_serial.c:159: send_gsm_byte('/');
      001D98 75 82 2F         [24] 4730 	mov	dpl,#0x2f
      001D9B 12 03 B8         [24] 4731 	lcall	_send_gsm_byte
                                   4732 ;	include/gsm_serial.c:160: send_gsm_byte(month/10+'0');
      001D9E 90 00 DF         [24] 4733 	mov	dptr,#_month
      001DA1 E0               [24] 4734 	movx	a,@dptr
      001DA2 FF               [12] 4735 	mov	r7,a
      001DA3 7E 00            [12] 4736 	mov	r6,#0x00
      001DA5 75 1B 0A         [24] 4737 	mov	__divsint_PARM_2,#0x0a
                                   4738 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      001DA8 8E 1C            [24] 4739 	mov	(__divsint_PARM_2 + 1),r6
      001DAA 8F 82            [24] 4740 	mov	dpl,r7
      001DAC 8E 83            [24] 4741 	mov	dph,r6
      001DAE 12 84 9D         [24] 4742 	lcall	__divsint
      001DB1 AE 82            [24] 4743 	mov	r6,dpl
      001DB3 74 30            [12] 4744 	mov	a,#0x30
      001DB5 2E               [12] 4745 	add	a,r6
      001DB6 F5 82            [12] 4746 	mov	dpl,a
      001DB8 12 03 B8         [24] 4747 	lcall	_send_gsm_byte
                                   4748 ;	include/gsm_serial.c:161: send_gsm_byte(month%10+'0');
      001DBB 90 00 DF         [24] 4749 	mov	dptr,#_month
      001DBE E0               [24] 4750 	movx	a,@dptr
      001DBF FF               [12] 4751 	mov	r7,a
      001DC0 7E 00            [12] 4752 	mov	r6,#0x00
      001DC2 75 1B 0A         [24] 4753 	mov	__modsint_PARM_2,#0x0a
                                   4754 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      001DC5 8E 1C            [24] 4755 	mov	(__modsint_PARM_2 + 1),r6
      001DC7 8F 82            [24] 4756 	mov	dpl,r7
      001DC9 8E 83            [24] 4757 	mov	dph,r6
      001DCB 12 84 67         [24] 4758 	lcall	__modsint
      001DCE AE 82            [24] 4759 	mov	r6,dpl
      001DD0 74 30            [12] 4760 	mov	a,#0x30
      001DD2 2E               [12] 4761 	add	a,r6
      001DD3 F5 82            [12] 4762 	mov	dpl,a
      001DD5 12 03 B8         [24] 4763 	lcall	_send_gsm_byte
                                   4764 ;	include/gsm_serial.c:162: send_gsm_byte('/');
      001DD8 75 82 2F         [24] 4765 	mov	dpl,#0x2f
      001DDB 12 03 B8         [24] 4766 	lcall	_send_gsm_byte
                                   4767 ;	include/gsm_serial.c:163: send_gsm_byte(year/10+'0');
      001DDE 90 00 E0         [24] 4768 	mov	dptr,#_year
      001DE1 E0               [24] 4769 	movx	a,@dptr
      001DE2 FF               [12] 4770 	mov	r7,a
      001DE3 7E 00            [12] 4771 	mov	r6,#0x00
      001DE5 75 1B 0A         [24] 4772 	mov	__divsint_PARM_2,#0x0a
                                   4773 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      001DE8 8E 1C            [24] 4774 	mov	(__divsint_PARM_2 + 1),r6
      001DEA 8F 82            [24] 4775 	mov	dpl,r7
      001DEC 8E 83            [24] 4776 	mov	dph,r6
      001DEE 12 84 9D         [24] 4777 	lcall	__divsint
      001DF1 AE 82            [24] 4778 	mov	r6,dpl
      001DF3 74 30            [12] 4779 	mov	a,#0x30
      001DF5 2E               [12] 4780 	add	a,r6
      001DF6 F5 82            [12] 4781 	mov	dpl,a
      001DF8 12 03 B8         [24] 4782 	lcall	_send_gsm_byte
                                   4783 ;	include/gsm_serial.c:164: send_gsm_byte(year%10+'0');
      001DFB 90 00 E0         [24] 4784 	mov	dptr,#_year
      001DFE E0               [24] 4785 	movx	a,@dptr
      001DFF FF               [12] 4786 	mov	r7,a
      001E00 7E 00            [12] 4787 	mov	r6,#0x00
      001E02 75 1B 0A         [24] 4788 	mov	__modsint_PARM_2,#0x0a
                                   4789 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      001E05 8E 1C            [24] 4790 	mov	(__modsint_PARM_2 + 1),r6
      001E07 8F 82            [24] 4791 	mov	dpl,r7
      001E09 8E 83            [24] 4792 	mov	dph,r6
      001E0B 12 84 67         [24] 4793 	lcall	__modsint
      001E0E AE 82            [24] 4794 	mov	r6,dpl
      001E10 74 30            [12] 4795 	mov	a,#0x30
      001E12 2E               [12] 4796 	add	a,r6
      001E13 F5 82            [12] 4797 	mov	dpl,a
      001E15 12 03 B8         [24] 4798 	lcall	_send_gsm_byte
                                   4799 ;	include/gsm_serial.c:166: if(chinh){
      001E18 30 44 21         [24] 4800 	jnb	_send_gio_thuc_PARM_1,00106$
                                   4801 ;	include/gsm_serial.c:167: send_gsm_cmd(" GPS=");
      001E1B 90 89 96         [24] 4802 	mov	dptr,#___str_26
      001E1E 75 F0 80         [24] 4803 	mov	b,#0x80
      001E21 12 03 CD         [24] 4804 	lcall	_send_gsm_cmd
                                   4805 ;	include/gsm_serial.c:168: send_gsm_byte((GPS_time?'1':'0')+eep_gpson);
      001E24 30 1D 06         [24] 4806 	jnb	_GPS_time,00108$
      001E27 7E 31            [12] 4807 	mov	r6,#0x31
      001E29 7F 00            [12] 4808 	mov	r7,#0x00
      001E2B 80 04            [24] 4809 	sjmp	00109$
      001E2D                       4810 00108$:
      001E2D 7E 30            [12] 4811 	mov	r6,#0x30
      001E2F 7F 00            [12] 4812 	mov	r7,#0x00
      001E31                       4813 00109$:
      001E31 90 F0 02         [24] 4814 	mov	dptr,#_eep_gpson
      001E34 E4               [12] 4815 	clr	a
      001E35 93               [24] 4816 	movc	a,@a+dptr
      001E36 2E               [12] 4817 	add	a,r6
      001E37 F5 82            [12] 4818 	mov	dpl,a
                                   4819 ;	include/gsm_serial.c:170: }
      001E39 02 03 B8         [24] 4820 	ljmp	_send_gsm_byte
      001E3C                       4821 00106$:
      001E3C 22               [24] 4822 	ret
                                   4823 ;------------------------------------------------------------
                                   4824 ;Allocation info for local variables in function 'send_thong_so'
                                   4825 ;------------------------------------------------------------
                                   4826 ;dien_ap                   Allocated to registers r6 
                                   4827 ;------------------------------------------------------------
                                   4828 ;	include/gsm_serial.c:172: void send_thong_so(__bit chinh){
                                   4829 ;	-----------------------------------------
                                   4830 ;	 function send_thong_so
                                   4831 ;	-----------------------------------------
      001E3D                       4832 _send_thong_so:
                                   4833 ;	include/gsm_serial.c:173: u8 dien_ap = dien_ap_nguon*28/256;
      001E3D 78 7D            [12] 4834 	mov	r0,#_dien_ap_nguon
      001E3F 86 1B            [24] 4835 	mov	__mulint_PARM_2,@r0
      001E41 75 1C 00         [24] 4836 	mov	(__mulint_PARM_2 + 1),#0x00
      001E44 90 00 1C         [24] 4837 	mov	dptr,#0x001c
      001E47 12 83 E1         [24] 4838 	lcall	__mulint
      001E4A 75 1B 00         [24] 4839 	mov	__divsint_PARM_2,#0x00
      001E4D 75 1C 01         [24] 4840 	mov	(__divsint_PARM_2 + 1),#0x01
      001E50 12 84 9D         [24] 4841 	lcall	__divsint
      001E53 AE 82            [24] 4842 	mov	r6,dpl
      001E55 AF 83            [24] 4843 	mov	r7,dph
                                   4844 ;	include/gsm_serial.c:174: if(chinh){
      001E57 20 45 03         [24] 4845 	jb	_send_thong_so_PARM_1,00152$
      001E5A 02 1F 2B         [24] 4846 	ljmp	00102$
      001E5D                       4847 00152$:
                                   4848 ;	include/gsm_serial.c:175: send_gsm_cmd(" DH=");
      001E5D 90 89 9C         [24] 4849 	mov	dptr,#___str_27
      001E60 75 F0 80         [24] 4850 	mov	b,#0x80
      001E63 C0 06            [24] 4851 	push	ar6
      001E65 12 03 CD         [24] 4852 	lcall	_send_gsm_cmd
      001E68 D0 06            [24] 4853 	pop	ar6
                                   4854 ;	include/gsm_serial.c:176: send_gsm_byte(motor_dung?'0':'1');
      001E6A 30 36 06         [24] 4855 	jnb	_motor_dung,00112$
      001E6D 7D 30            [12] 4856 	mov	r5,#0x30
      001E6F 7F 00            [12] 4857 	mov	r7,#0x00
      001E71 80 04            [24] 4858 	sjmp	00113$
      001E73                       4859 00112$:
      001E73 7D 31            [12] 4860 	mov	r5,#0x31
      001E75 7F 00            [12] 4861 	mov	r7,#0x00
      001E77                       4862 00113$:
      001E77 8D 82            [24] 4863 	mov	dpl,r5
      001E79 C0 06            [24] 4864 	push	ar6
      001E7B 12 03 B8         [24] 4865 	lcall	_send_gsm_byte
                                   4866 ;	include/gsm_serial.c:177: send_gsm_cmd(" BC=");
      001E7E 90 89 A1         [24] 4867 	mov	dptr,#___str_28
      001E81 75 F0 80         [24] 4868 	mov	b,#0x80
      001E84 12 03 CD         [24] 4869 	lcall	_send_gsm_cmd
                                   4870 ;	include/gsm_serial.c:178: send_gsm_byte(eep_baocao+'0');
      001E87 90 F0 01         [24] 4871 	mov	dptr,#_eep_baocao
      001E8A E4               [12] 4872 	clr	a
      001E8B 93               [24] 4873 	movc	a,@a+dptr
      001E8C 24 30            [12] 4874 	add	a,#0x30
      001E8E F5 82            [12] 4875 	mov	dpl,a
      001E90 12 03 B8         [24] 4876 	lcall	_send_gsm_byte
                                   4877 ;	include/gsm_serial.c:179: send_gsm_cmd(" XG=");
      001E93 90 89 A6         [24] 4878 	mov	dptr,#___str_29
      001E96 75 F0 80         [24] 4879 	mov	b,#0x80
      001E99 12 03 CD         [24] 4880 	lcall	_send_gsm_cmd
      001E9C D0 06            [24] 4881 	pop	ar6
                                   4882 ;	include/gsm_serial.c:180: send_gsm_byte(xung_giay_check?'1':'0');
      001E9E 90 00 E7         [24] 4883 	mov	dptr,#_xung_giay_check
      001EA1 E0               [24] 4884 	movx	a,@dptr
      001EA2 60 06            [24] 4885 	jz	00114$
      001EA4 7D 31            [12] 4886 	mov	r5,#0x31
      001EA6 7F 00            [12] 4887 	mov	r7,#0x00
      001EA8 80 04            [24] 4888 	sjmp	00115$
      001EAA                       4889 00114$:
      001EAA 7D 30            [12] 4890 	mov	r5,#0x30
      001EAC 7F 00            [12] 4891 	mov	r7,#0x00
      001EAE                       4892 00115$:
      001EAE 8D 82            [24] 4893 	mov	dpl,r5
      001EB0 C0 06            [24] 4894 	push	ar6
      001EB2 12 03 B8         [24] 4895 	lcall	_send_gsm_byte
                                   4896 ;	include/gsm_serial.c:181: send_gsm_cmd(" RS=");
      001EB5 90 89 AB         [24] 4897 	mov	dptr,#___str_30
      001EB8 75 F0 80         [24] 4898 	mov	b,#0x80
      001EBB 12 03 CD         [24] 4899 	lcall	_send_gsm_cmd
                                   4900 ;	include/gsm_serial.c:182: send_gsm_byte(ngay_reset_con_lai+'0');
      001EBE 90 00 E6         [24] 4901 	mov	dptr,#_ngay_reset_con_lai
      001EC1 E0               [24] 4902 	movx	a,@dptr
      001EC2 24 30            [12] 4903 	add	a,#0x30
      001EC4 F5 82            [12] 4904 	mov	dpl,a
      001EC6 12 03 B8         [24] 4905 	lcall	_send_gsm_byte
                                   4906 ;	include/gsm_serial.c:183: send_gsm_byte('/');
      001EC9 75 82 2F         [24] 4907 	mov	dpl,#0x2f
      001ECC 12 03 B8         [24] 4908 	lcall	_send_gsm_byte
                                   4909 ;	include/gsm_serial.c:184: send_gsm_byte(eep_ngayreset+'0');
      001ECF 90 F0 03         [24] 4910 	mov	dptr,#_eep_ngayreset
      001ED2 E4               [12] 4911 	clr	a
      001ED3 93               [24] 4912 	movc	a,@a+dptr
      001ED4 24 30            [12] 4913 	add	a,#0x30
      001ED6 F5 82            [12] 4914 	mov	dpl,a
      001ED8 12 03 B8         [24] 4915 	lcall	_send_gsm_byte
                                   4916 ;	include/gsm_serial.c:185: send_gsm_cmd(" TR=");
      001EDB 90 89 B0         [24] 4917 	mov	dptr,#___str_31
      001EDE 75 F0 80         [24] 4918 	mov	b,#0x80
      001EE1 12 03 CD         [24] 4919 	lcall	_send_gsm_cmd
                                   4920 ;	include/gsm_serial.c:186: send_gsm_byte(eep_gioreset/10+'0');
      001EE4 90 F0 04         [24] 4921 	mov	dptr,#_eep_gioreset
      001EE7 E4               [12] 4922 	clr	a
      001EE8 93               [24] 4923 	movc	a,@a+dptr
      001EE9 FF               [12] 4924 	mov	r7,a
      001EEA 7D 00            [12] 4925 	mov	r5,#0x00
      001EEC 75 1B 0A         [24] 4926 	mov	__divsint_PARM_2,#0x0a
                                   4927 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      001EEF 8D 1C            [24] 4928 	mov	(__divsint_PARM_2 + 1),r5
      001EF1 8F 82            [24] 4929 	mov	dpl,r7
      001EF3 8D 83            [24] 4930 	mov	dph,r5
      001EF5 12 84 9D         [24] 4931 	lcall	__divsint
      001EF8 AD 82            [24] 4932 	mov	r5,dpl
      001EFA 74 30            [12] 4933 	mov	a,#0x30
      001EFC 2D               [12] 4934 	add	a,r5
      001EFD F5 82            [12] 4935 	mov	dpl,a
      001EFF 12 03 B8         [24] 4936 	lcall	_send_gsm_byte
                                   4937 ;	include/gsm_serial.c:187: send_gsm_byte(eep_gioreset%10+'0');
      001F02 90 F0 04         [24] 4938 	mov	dptr,#_eep_gioreset
      001F05 E4               [12] 4939 	clr	a
      001F06 93               [24] 4940 	movc	a,@a+dptr
      001F07 FF               [12] 4941 	mov	r7,a
      001F08 7D 00            [12] 4942 	mov	r5,#0x00
      001F0A 75 1B 0A         [24] 4943 	mov	__modsint_PARM_2,#0x0a
                                   4944 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      001F0D 8D 1C            [24] 4945 	mov	(__modsint_PARM_2 + 1),r5
      001F0F 8F 82            [24] 4946 	mov	dpl,r7
      001F11 8D 83            [24] 4947 	mov	dph,r5
      001F13 12 84 67         [24] 4948 	lcall	__modsint
      001F16 AD 82            [24] 4949 	mov	r5,dpl
      001F18 74 30            [12] 4950 	mov	a,#0x30
      001F1A 2D               [12] 4951 	add	a,r5
      001F1B F5 82            [12] 4952 	mov	dpl,a
      001F1D 12 03 B8         [24] 4953 	lcall	_send_gsm_byte
                                   4954 ;	include/gsm_serial.c:188: send_gsm_cmd(":06");
      001F20 90 89 B5         [24] 4955 	mov	dptr,#___str_32
      001F23 75 F0 80         [24] 4956 	mov	b,#0x80
      001F26 12 03 CD         [24] 4957 	lcall	_send_gsm_cmd
      001F29 D0 06            [24] 4958 	pop	ar6
      001F2B                       4959 00102$:
                                   4960 ;	include/gsm_serial.c:190: send_gsm_cmd(" DEN=");
      001F2B 90 89 B9         [24] 4961 	mov	dptr,#___str_33
      001F2E 75 F0 80         [24] 4962 	mov	b,#0x80
      001F31 C0 06            [24] 4963 	push	ar6
      001F33 12 03 CD         [24] 4964 	lcall	_send_gsm_cmd
      001F36 D0 06            [24] 4965 	pop	ar6
                                   4966 ;	include/gsm_serial.c:191: send_gsm_byte(DenRelay?'1':'0');
      001F38 30 A1 06         [24] 4967 	jnb	_P21,00116$
      001F3B 7D 31            [12] 4968 	mov	r5,#0x31
      001F3D 7F 00            [12] 4969 	mov	r7,#0x00
      001F3F 80 04            [24] 4970 	sjmp	00117$
      001F41                       4971 00116$:
      001F41 7D 30            [12] 4972 	mov	r5,#0x30
      001F43 7F 00            [12] 4973 	mov	r7,#0x00
      001F45                       4974 00117$:
      001F45 8D 82            [24] 4975 	mov	dpl,r5
      001F47 C0 06            [24] 4976 	push	ar6
      001F49 12 03 B8         [24] 4977 	lcall	_send_gsm_byte
                                   4978 ;	include/gsm_serial.c:192: send_gsm_cmd(" VOL=");
      001F4C 90 89 BF         [24] 4979 	mov	dptr,#___str_34
      001F4F 75 F0 80         [24] 4980 	mov	b,#0x80
      001F52 12 03 CD         [24] 4981 	lcall	_send_gsm_cmd
      001F55 D0 06            [24] 4982 	pop	ar6
                                   4983 ;	include/gsm_serial.c:193: send_gsm_byte(dien_ap/10+'0');
      001F57 7F 00            [12] 4984 	mov	r7,#0x00
      001F59 75 1B 0A         [24] 4985 	mov	__divsint_PARM_2,#0x0a
                                   4986 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      001F5C 8F 1C            [24] 4987 	mov	(__divsint_PARM_2 + 1),r7
      001F5E 8E 82            [24] 4988 	mov	dpl,r6
      001F60 8F 83            [24] 4989 	mov	dph,r7
      001F62 C0 07            [24] 4990 	push	ar7
      001F64 C0 06            [24] 4991 	push	ar6
      001F66 12 84 9D         [24] 4992 	lcall	__divsint
      001F69 AC 82            [24] 4993 	mov	r4,dpl
      001F6B 74 30            [12] 4994 	mov	a,#0x30
      001F6D 2C               [12] 4995 	add	a,r4
      001F6E F5 82            [12] 4996 	mov	dpl,a
      001F70 12 03 B8         [24] 4997 	lcall	_send_gsm_byte
      001F73 D0 06            [24] 4998 	pop	ar6
      001F75 D0 07            [24] 4999 	pop	ar7
                                   5000 ;	include/gsm_serial.c:194: send_gsm_byte(dien_ap%10+'0');
      001F77 75 1B 0A         [24] 5001 	mov	__modsint_PARM_2,#0x0a
      001F7A 75 1C 00         [24] 5002 	mov	(__modsint_PARM_2 + 1),#0x00
      001F7D 8E 82            [24] 5003 	mov	dpl,r6
      001F7F 8F 83            [24] 5004 	mov	dph,r7
      001F81 12 84 67         [24] 5005 	lcall	__modsint
      001F84 AE 82            [24] 5006 	mov	r6,dpl
      001F86 74 30            [12] 5007 	mov	a,#0x30
      001F88 2E               [12] 5008 	add	a,r6
      001F89 F5 82            [12] 5009 	mov	dpl,a
      001F8B 12 03 B8         [24] 5010 	lcall	_send_gsm_byte
                                   5011 ;	include/gsm_serial.c:195: if((eep_mp3%4) || chinh){
      001F8E 90 F0 10         [24] 5012 	mov	dptr,#_eep_mp3
      001F91 E4               [12] 5013 	clr	a
      001F92 93               [24] 5014 	movc	a,@a+dptr
      001F93 54 03            [12] 5015 	anl	a,#0x03
      001F95 70 03            [24] 5016 	jnz	00103$
      001F97 30 45 21         [24] 5017 	jnb	_send_thong_so_PARM_1,00104$
      001F9A                       5018 00103$:
                                   5019 ;	include/gsm_serial.c:196: send_gsm_cmd(" MP3=");
      001F9A 90 89 C5         [24] 5020 	mov	dptr,#___str_35
      001F9D 75 F0 80         [24] 5021 	mov	b,#0x80
      001FA0 12 03 CD         [24] 5022 	lcall	_send_gsm_cmd
                                   5023 ;	include/gsm_serial.c:197: send_gsm_byte(eep_mp3+(mp3_playing?'0':47));
      001FA3 30 92 06         [24] 5024 	jnb	_P12,00118$
      001FA6 7E 30            [12] 5025 	mov	r6,#0x30
      001FA8 7F 00            [12] 5026 	mov	r7,#0x00
      001FAA 80 04            [24] 5027 	sjmp	00119$
      001FAC                       5028 00118$:
      001FAC 7E 2F            [12] 5029 	mov	r6,#0x2f
      001FAE 7F 00            [12] 5030 	mov	r7,#0x00
      001FB0                       5031 00119$:
      001FB0 90 F0 10         [24] 5032 	mov	dptr,#_eep_mp3
      001FB3 E4               [12] 5033 	clr	a
      001FB4 93               [24] 5034 	movc	a,@a+dptr
      001FB5 2E               [12] 5035 	add	a,r6
      001FB6 F5 82            [12] 5036 	mov	dpl,a
      001FB8 12 03 B8         [24] 5037 	lcall	_send_gsm_byte
      001FBB                       5038 00104$:
                                   5039 ;	include/gsm_serial.c:199: if(!chinh) return;
      001FBB 20 45 01         [24] 5040 	jb	_send_thong_so_PARM_1,00107$
      001FBE 22               [24] 5041 	ret
      001FBF                       5042 00107$:
                                   5043 ;	include/gsm_serial.c:201: send_gsm_cmd(" SIG=");
      001FBF 90 89 CB         [24] 5044 	mov	dptr,#___str_36
      001FC2 75 F0 80         [24] 5045 	mov	b,#0x80
      001FC5 12 03 CD         [24] 5046 	lcall	_send_gsm_cmd
                                   5047 ;	include/gsm_serial.c:202: send_gsm_byte(signal/10+'0');
      001FC8 90 00 FA         [24] 5048 	mov	dptr,#_signal
      001FCB E0               [24] 5049 	movx	a,@dptr
      001FCC FF               [12] 5050 	mov	r7,a
      001FCD 7E 00            [12] 5051 	mov	r6,#0x00
      001FCF 75 1B 0A         [24] 5052 	mov	__divsint_PARM_2,#0x0a
                                   5053 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      001FD2 8E 1C            [24] 5054 	mov	(__divsint_PARM_2 + 1),r6
      001FD4 8F 82            [24] 5055 	mov	dpl,r7
      001FD6 8E 83            [24] 5056 	mov	dph,r6
      001FD8 12 84 9D         [24] 5057 	lcall	__divsint
      001FDB AE 82            [24] 5058 	mov	r6,dpl
      001FDD 74 30            [12] 5059 	mov	a,#0x30
      001FDF 2E               [12] 5060 	add	a,r6
      001FE0 F5 82            [12] 5061 	mov	dpl,a
      001FE2 12 03 B8         [24] 5062 	lcall	_send_gsm_byte
                                   5063 ;	include/gsm_serial.c:203: send_gsm_byte(signal%10+'0');
      001FE5 90 00 FA         [24] 5064 	mov	dptr,#_signal
      001FE8 E0               [24] 5065 	movx	a,@dptr
      001FE9 FF               [12] 5066 	mov	r7,a
      001FEA 7E 00            [12] 5067 	mov	r6,#0x00
      001FEC 75 1B 0A         [24] 5068 	mov	__modsint_PARM_2,#0x0a
                                   5069 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      001FEF 8E 1C            [24] 5070 	mov	(__modsint_PARM_2 + 1),r6
      001FF1 8F 82            [24] 5071 	mov	dpl,r7
      001FF3 8E 83            [24] 5072 	mov	dph,r6
      001FF5 12 84 67         [24] 5073 	lcall	__modsint
      001FF8 AE 82            [24] 5074 	mov	r6,dpl
      001FFA 74 30            [12] 5075 	mov	a,#0x30
      001FFC 2E               [12] 5076 	add	a,r6
      001FFD F5 82            [12] 5077 	mov	dpl,a
      001FFF 12 03 B8         [24] 5078 	lcall	_send_gsm_byte
                                   5079 ;	include/gsm_serial.c:204: send_gsm_cmd(" DT=");
      002002 90 89 D1         [24] 5080 	mov	dptr,#___str_37
      002005 75 F0 80         [24] 5081 	mov	b,#0x80
      002008 12 03 CD         [24] 5082 	lcall	_send_gsm_cmd
                                   5083 ;	include/gsm_serial.c:205: send_gsm_byte(eep_phonephu[11]+'0');
      00200B 90 F0 1C         [24] 5084 	mov	dptr,#(_eep_phonephu + 0x000b)
      00200E E4               [12] 5085 	clr	a
      00200F 93               [24] 5086 	movc	a,@a+dptr
      002010 24 30            [12] 5087 	add	a,#0x30
      002012 F5 82            [12] 5088 	mov	dpl,a
      002014 12 03 B8         [24] 5089 	lcall	_send_gsm_byte
                                   5090 ;	include/gsm_serial.c:206: if(eep_phonephu[11]==2) return;
      002017 90 F0 1C         [24] 5091 	mov	dptr,#(_eep_phonephu + 0x000b)
      00201A E4               [12] 5092 	clr	a
      00201B 93               [24] 5093 	movc	a,@a+dptr
      00201C FF               [12] 5094 	mov	r7,a
      00201D BF 02 01         [24] 5095 	cjne	r7,#0x02,00109$
      002020 22               [24] 5096 	ret
      002021                       5097 00109$:
                                   5098 ;	include/gsm_serial.c:207: send_gsm_byte(',');
      002021 75 82 2C         [24] 5099 	mov	dpl,#0x2c
      002024 12 03 B8         [24] 5100 	lcall	_send_gsm_byte
                                   5101 ;	include/gsm_serial.c:208: send_gsm_cmd(eep_phonephu);
      002027 90 F0 11         [24] 5102 	mov	dptr,#_eep_phonephu
      00202A 75 F0 80         [24] 5103 	mov	b,#0x80
                                   5104 ;	include/gsm_serial.c:210: }
      00202D 02 03 CD         [24] 5105 	ljmp	_send_gsm_cmd
                                   5106 ;------------------------------------------------------------
                                   5107 ;Allocation info for local variables in function 'baocaosms'
                                   5108 ;------------------------------------------------------------
                                   5109 ;noidung                   Allocated to registers r5 r6 r7 
                                   5110 ;------------------------------------------------------------
                                   5111 ;	include/gsm_serial.c:214: void baocaosms(__bit chinh, u8  *noidung){
                                   5112 ;	-----------------------------------------
                                   5113 ;	 function baocaosms
                                   5114 ;	-----------------------------------------
      002030                       5115 _baocaosms:
      002030 AD 82            [24] 5116 	mov	r5,dpl
      002032 AE 83            [24] 5117 	mov	r6,dph
      002034 AF F0            [24] 5118 	mov	r7,b
                                   5119 ;	include/gsm_serial.c:215: if(!sms_on) return;
      002036 90 01 32         [24] 5120 	mov	dptr,#_sms_on
      002039 E0               [24] 5121 	movx	a,@dptr
      00203A 70 01            [24] 5122 	jnz	00102$
      00203C 22               [24] 5123 	ret
      00203D                       5124 00102$:
                                   5125 ;	include/gsm_serial.c:216: gsm_sendandcheck("AT\r", 15, 1,"BAT DAU BAO CAO ");
      00203D 75 5B DA         [24] 5126 	mov	_gsm_sendandcheck_PARM_4,#___str_39
      002040 75 5C 89         [24] 5127 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_39 >> 8)
      002043 75 5D 80         [24] 5128 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      002046 75 59 0F         [24] 5129 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      002049 75 5A 01         [24] 5130 	mov	_gsm_sendandcheck_PARM_3,#0x01
      00204C 90 89 D6         [24] 5131 	mov	dptr,#___str_38
      00204F 75 F0 80         [24] 5132 	mov	b,#0x80
      002052 C0 07            [24] 5133 	push	ar7
      002054 C0 06            [24] 5134 	push	ar6
      002056 C0 05            [24] 5135 	push	ar5
      002058 12 15 AA         [24] 5136 	lcall	_gsm_sendandcheck
                                   5137 ;	include/gsm_serial.c:217: kiemtratinhieu();    
      00205B 12 18 DA         [24] 5138 	lcall	_kiemtratinhieu
      00205E D0 05            [24] 5139 	pop	ar5
      002060 D0 06            [24] 5140 	pop	ar6
      002062 D0 07            [24] 5141 	pop	ar7
                                   5142 ;	include/gsm_serial.c:218: if(*(noidung+1)!='*') kiemtrataikhoan();
      002064 74 01            [12] 5143 	mov	a,#0x01
      002066 2D               [12] 5144 	add	a,r5
      002067 FA               [12] 5145 	mov	r2,a
      002068 E4               [12] 5146 	clr	a
      002069 3E               [12] 5147 	addc	a,r6
      00206A FB               [12] 5148 	mov	r3,a
      00206B 8F 04            [24] 5149 	mov	ar4,r7
      00206D 8A 82            [24] 5150 	mov	dpl,r2
      00206F 8B 83            [24] 5151 	mov	dph,r3
      002071 8C F0            [24] 5152 	mov	b,r4
      002073 12 84 4B         [24] 5153 	lcall	__gptrget
      002076 F9               [12] 5154 	mov	r1,a
      002077 B9 2A 02         [24] 5155 	cjne	r1,#0x2a,00159$
      00207A 80 1D            [24] 5156 	sjmp	00104$
      00207C                       5157 00159$:
      00207C C0 07            [24] 5158 	push	ar7
      00207E C0 06            [24] 5159 	push	ar6
      002080 C0 05            [24] 5160 	push	ar5
      002082 C0 04            [24] 5161 	push	ar4
      002084 C0 03            [24] 5162 	push	ar3
      002086 C0 02            [24] 5163 	push	ar2
      002088 12 18 28         [24] 5164 	lcall	_kiemtrataikhoan
      00208B D0 02            [24] 5165 	pop	ar2
      00208D D0 03            [24] 5166 	pop	ar3
      00208F D0 04            [24] 5167 	pop	ar4
      002091 D0 05            [24] 5168 	pop	ar5
      002093 D0 06            [24] 5169 	pop	ar6
      002095 D0 07            [24] 5170 	pop	ar7
      002097 80 05            [24] 5171 	sjmp	00105$
      002099                       5172 00104$:
                                   5173 ;	include/gsm_serial.c:219: else lenh_sms[0]=0;
      002099 90 00 17         [24] 5174 	mov	dptr,#_lenh_sms
      00209C E4               [12] 5175 	clr	a
      00209D F0               [24] 5176 	movx	@dptr,a
      00209E                       5177 00105$:
                                   5178 ;	include/gsm_serial.c:220: if(!send_sms(chinh)) return;
                                   5179 ;	assignBit
      00209E A2 46            [12] 5180 	mov	c,_baocaosms_PARM_1
      0020A0 92 42            [24] 5181 	mov	_send_sms_PARM_1,c
      0020A2 C0 07            [24] 5182 	push	ar7
      0020A4 C0 06            [24] 5183 	push	ar6
      0020A6 C0 05            [24] 5184 	push	ar5
      0020A8 C0 04            [24] 5185 	push	ar4
      0020AA C0 03            [24] 5186 	push	ar3
      0020AC C0 02            [24] 5187 	push	ar2
      0020AE 12 17 C4         [24] 5188 	lcall	_send_sms
      0020B1 D0 02            [24] 5189 	pop	ar2
      0020B3 D0 03            [24] 5190 	pop	ar3
      0020B5 D0 04            [24] 5191 	pop	ar4
      0020B7 D0 05            [24] 5192 	pop	ar5
      0020B9 D0 06            [24] 5193 	pop	ar6
      0020BB D0 07            [24] 5194 	pop	ar7
      0020BD 40 01            [24] 5195 	jc	00107$
      0020BF 22               [24] 5196 	ret
      0020C0                       5197 00107$:
                                   5198 ;	include/gsm_serial.c:222: if(sms_on>2){
      0020C0 90 01 32         [24] 5199 	mov	dptr,#_sms_on
      0020C3 E0               [24] 5200 	movx	a,@dptr
      0020C4 24 FD            [12] 5201 	add	a,#0xff - 0x02
      0020C6 50 16            [24] 5202 	jnc	00115$
                                   5203 ;	include/gsm_serial.c:223: send_thong_so_rut_gon(chinh);
                                   5204 ;	assignBit
      0020C8 A2 46            [12] 5205 	mov	c,_baocaosms_PARM_1
      0020CA 92 43            [24] 5206 	mov	_send_thong_so_rut_gon_PARM_1,c
      0020CC C0 07            [24] 5207 	push	ar7
      0020CE C0 06            [24] 5208 	push	ar6
      0020D0 C0 05            [24] 5209 	push	ar5
      0020D2 12 19 39         [24] 5210 	lcall	_send_thong_so_rut_gon
      0020D5 D0 05            [24] 5211 	pop	ar5
      0020D7 D0 06            [24] 5212 	pop	ar6
      0020D9 D0 07            [24] 5213 	pop	ar7
      0020DB 02 21 87         [24] 5214 	ljmp	00116$
      0020DE                       5215 00115$:
                                   5216 ;	include/gsm_serial.c:225: send_gsm_cmd(ver);
      0020DE 90 85 7F         [24] 5217 	mov	dptr,#_ver
      0020E1 75 F0 80         [24] 5218 	mov	b,#0x80
      0020E4 C0 07            [24] 5219 	push	ar7
      0020E6 C0 06            [24] 5220 	push	ar6
      0020E8 C0 05            [24] 5221 	push	ar5
      0020EA C0 04            [24] 5222 	push	ar4
      0020EC C0 03            [24] 5223 	push	ar3
      0020EE C0 02            [24] 5224 	push	ar2
      0020F0 12 03 CD         [24] 5225 	lcall	_send_gsm_cmd
                                   5226 ;	include/gsm_serial.c:227: send_gio_kim();
      0020F3 12 1B C2         [24] 5227 	lcall	_send_gio_kim
                                   5228 ;	include/gsm_serial.c:228: send_gio_thuc(chinh);
                                   5229 ;	assignBit
      0020F6 A2 46            [12] 5230 	mov	c,_baocaosms_PARM_1
      0020F8 92 44            [24] 5231 	mov	_send_gio_thuc_PARM_1,c
      0020FA 12 1C BA         [24] 5232 	lcall	_send_gio_thuc
                                   5233 ;	include/gsm_serial.c:229: send_thong_so(chinh);
                                   5234 ;	assignBit
      0020FD A2 46            [12] 5235 	mov	c,_baocaosms_PARM_1
      0020FF 92 45            [24] 5236 	mov	_send_thong_so_PARM_1,c
      002101 12 1E 3D         [24] 5237 	lcall	_send_thong_so
      002104 D0 02            [24] 5238 	pop	ar2
      002106 D0 03            [24] 5239 	pop	ar3
      002108 D0 04            [24] 5240 	pop	ar4
      00210A D0 05            [24] 5241 	pop	ar5
      00210C D0 06            [24] 5242 	pop	ar6
      00210E D0 07            [24] 5243 	pop	ar7
                                   5244 ;	include/gsm_serial.c:232: if(*(noidung+1)!='*' && lenh_sms[0]){
      002110 8A 82            [24] 5245 	mov	dpl,r2
      002112 8B 83            [24] 5246 	mov	dph,r3
      002114 8C F0            [24] 5247 	mov	b,r4
      002116 12 84 4B         [24] 5248 	lcall	__gptrget
      002119 FA               [12] 5249 	mov	r2,a
      00211A BA 2A 02         [24] 5250 	cjne	r2,#0x2a,00162$
      00211D 80 53            [24] 5251 	sjmp	00112$
      00211F                       5252 00162$:
      00211F 90 00 17         [24] 5253 	mov	dptr,#_lenh_sms
      002122 E0               [24] 5254 	movx	a,@dptr
      002123 60 4D            [24] 5255 	jz	00112$
                                   5256 ;	include/gsm_serial.c:233: send_gsm_cmd("\rTK Chinh=");
      002125 90 89 EB         [24] 5257 	mov	dptr,#___str_40
      002128 75 F0 80         [24] 5258 	mov	b,#0x80
      00212B C0 07            [24] 5259 	push	ar7
      00212D C0 06            [24] 5260 	push	ar6
      00212F C0 05            [24] 5261 	push	ar5
      002131 12 03 CD         [24] 5262 	lcall	_send_gsm_cmd
                                   5263 ;	include/gsm_serial.c:234: send_gsm_cmd(lenh_sms);
      002134 90 00 17         [24] 5264 	mov	dptr,#_lenh_sms
      002137 75 F0 00         [24] 5265 	mov	b,#0x00
      00213A 12 03 CD         [24] 5266 	lcall	_send_gsm_cmd
      00213D D0 05            [24] 5267 	pop	ar5
      00213F D0 06            [24] 5268 	pop	ar6
      002141 D0 07            [24] 5269 	pop	ar7
                                   5270 ;	include/gsm_serial.c:235: if(chinh && !lenh_sms[4]) send_gsm_cmd("\rTai khoan con duoi 10000");
      002143 30 46 1B         [24] 5271 	jnb	_baocaosms_PARM_1,00109$
      002146 90 00 1B         [24] 5272 	mov	dptr,#(_lenh_sms + 0x0004)
      002149 E0               [24] 5273 	movx	a,@dptr
      00214A 70 15            [24] 5274 	jnz	00109$
      00214C 90 89 F6         [24] 5275 	mov	dptr,#___str_41
      00214F 75 F0 80         [24] 5276 	mov	b,#0x80
      002152 C0 07            [24] 5277 	push	ar7
      002154 C0 06            [24] 5278 	push	ar6
      002156 C0 05            [24] 5279 	push	ar5
      002158 12 03 CD         [24] 5280 	lcall	_send_gsm_cmd
      00215B D0 05            [24] 5281 	pop	ar5
      00215D D0 06            [24] 5282 	pop	ar6
      00215F D0 07            [24] 5283 	pop	ar7
      002161                       5284 00109$:
                                   5285 ;	include/gsm_serial.c:236: lenh_sms[1] = lenh_sms[2] = lenh_sms[3] = lenh_sms[4] = 0;
      002161 90 00 1B         [24] 5286 	mov	dptr,#(_lenh_sms + 0x0004)
      002164 E4               [12] 5287 	clr	a
      002165 F0               [24] 5288 	movx	@dptr,a
      002166 90 00 1A         [24] 5289 	mov	dptr,#(_lenh_sms + 0x0003)
      002169 F0               [24] 5290 	movx	@dptr,a
      00216A 90 00 19         [24] 5291 	mov	dptr,#(_lenh_sms + 0x0002)
      00216D F0               [24] 5292 	movx	@dptr,a
      00216E 90 00 18         [24] 5293 	mov	dptr,#(_lenh_sms + 0x0001)
      002171 F0               [24] 5294 	movx	@dptr,a
      002172                       5295 00112$:
                                   5296 ;	include/gsm_serial.c:238: send_gsm_cmd(noidung);
      002172 8D 82            [24] 5297 	mov	dpl,r5
      002174 8E 83            [24] 5298 	mov	dph,r6
      002176 8F F0            [24] 5299 	mov	b,r7
      002178 C0 07            [24] 5300 	push	ar7
      00217A C0 06            [24] 5301 	push	ar6
      00217C C0 05            [24] 5302 	push	ar5
      00217E 12 03 CD         [24] 5303 	lcall	_send_gsm_cmd
      002181 D0 05            [24] 5304 	pop	ar5
      002183 D0 06            [24] 5305 	pop	ar6
      002185 D0 07            [24] 5306 	pop	ar7
      002187                       5307 00116$:
                                   5308 ;	include/gsm_serial.c:241: if(*(noidung+1)=='*') send_gsm_cmd("\032");
      002187 0D               [12] 5309 	inc	r5
      002188 BD 00 01         [24] 5310 	cjne	r5,#0x00,00166$
      00218B 0E               [12] 5311 	inc	r6
      00218C                       5312 00166$:
      00218C 8D 82            [24] 5313 	mov	dpl,r5
      00218E 8E 83            [24] 5314 	mov	dph,r6
      002190 8F F0            [24] 5315 	mov	b,r7
      002192 12 84 4B         [24] 5316 	lcall	__gptrget
      002195 FD               [12] 5317 	mov	r5,a
      002196 BD 2A 09         [24] 5318 	cjne	r5,#0x2a,00118$
      002199 90 88 DA         [24] 5319 	mov	dptr,#___str_7
      00219C 75 F0 80         [24] 5320 	mov	b,#0x80
      00219F 02 03 CD         [24] 5321 	ljmp	_send_gsm_cmd
      0021A2                       5322 00118$:
                                   5323 ;	include/gsm_serial.c:242: else gsm_sendandcheck("\032",50,1,"DANG GUI BAO CAO");
      0021A2 75 5B 10         [24] 5324 	mov	_gsm_sendandcheck_PARM_4,#___str_42
      0021A5 75 5C 8A         [24] 5325 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_42 >> 8)
      0021A8 75 5D 80         [24] 5326 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      0021AB 75 59 32         [24] 5327 	mov	_gsm_sendandcheck_PARM_2,#0x32
      0021AE 75 5A 01         [24] 5328 	mov	_gsm_sendandcheck_PARM_3,#0x01
      0021B1 90 88 DA         [24] 5329 	mov	dptr,#___str_7
      0021B4 75 F0 80         [24] 5330 	mov	b,#0x80
                                   5331 ;	include/gsm_serial.c:245: }
      0021B7 02 15 AA         [24] 5332 	ljmp	_gsm_sendandcheck
                                   5333 ;------------------------------------------------------------
                                   5334 ;Allocation info for local variables in function 'send_thong_so_den'
                                   5335 ;------------------------------------------------------------
                                   5336 ;i                         Allocated to registers r7 
                                   5337 ;------------------------------------------------------------
                                   5338 ;	include/gsm_serial.c:247: void send_thong_so_den(){
                                   5339 ;	-----------------------------------------
                                   5340 ;	 function send_thong_so_den
                                   5341 ;	-----------------------------------------
      0021BA                       5342 _send_thong_so_den:
                                   5343 ;	include/gsm_serial.c:249: send_gsm_cmd(" DEN=");
      0021BA 90 89 B9         [24] 5344 	mov	dptr,#___str_33
      0021BD 75 F0 80         [24] 5345 	mov	b,#0x80
      0021C0 12 03 CD         [24] 5346 	lcall	_send_gsm_cmd
                                   5347 ;	include/gsm_serial.c:250: send_gsm_byte(DenRelay?'1':'0');
      0021C3 30 A1 06         [24] 5348 	jnb	_P21,00109$
      0021C6 7E 31            [12] 5349 	mov	r6,#0x31
      0021C8 7F 00            [12] 5350 	mov	r7,#0x00
      0021CA 80 04            [24] 5351 	sjmp	00110$
      0021CC                       5352 00109$:
      0021CC 7E 30            [12] 5353 	mov	r6,#0x30
      0021CE 7F 00            [12] 5354 	mov	r7,#0x00
      0021D0                       5355 00110$:
      0021D0 8E 82            [24] 5356 	mov	dpl,r6
      0021D2 12 03 B8         [24] 5357 	lcall	_send_gsm_byte
                                   5358 ;	include/gsm_serial.c:251: send_gsm_cmd("\rMODEN=");
      0021D5 90 8A 21         [24] 5359 	mov	dptr,#___str_43
      0021D8 75 F0 80         [24] 5360 	mov	b,#0x80
      0021DB 12 03 CD         [24] 5361 	lcall	_send_gsm_cmd
                                   5362 ;	include/gsm_serial.c:252: send_gsm_byte(eep_tatmoden[0]+'0');
      0021DE 90 F0 07         [24] 5363 	mov	dptr,#_eep_tatmoden
      0021E1 E4               [12] 5364 	clr	a
      0021E2 93               [24] 5365 	movc	a,@a+dptr
      0021E3 24 30            [12] 5366 	add	a,#0x30
      0021E5 F5 82            [12] 5367 	mov	dpl,a
      0021E7 12 03 B8         [24] 5368 	lcall	_send_gsm_byte
                                   5369 ;	include/gsm_serial.c:253: if(!eep_tatmoden[0]){send_gsm_cmd("\rKhong co gio mo den"); return;}
      0021EA 90 F0 07         [24] 5370 	mov	dptr,#_eep_tatmoden
      0021ED E4               [12] 5371 	clr	a
      0021EE 93               [24] 5372 	movc	a,@a+dptr
      0021EF 70 09            [24] 5373 	jnz	00102$
      0021F1 90 8A 29         [24] 5374 	mov	dptr,#___str_44
      0021F4 75 F0 80         [24] 5375 	mov	b,#0x80
      0021F7 02 03 CD         [24] 5376 	ljmp	_send_gsm_cmd
      0021FA                       5377 00102$:
                                   5378 ;	include/gsm_serial.c:254: send_gsm_cmd("\rGio Mo Den:");
      0021FA 90 8A 3E         [24] 5379 	mov	dptr,#___str_45
      0021FD 75 F0 80         [24] 5380 	mov	b,#0x80
      002200 12 03 CD         [24] 5381 	lcall	_send_gsm_cmd
                                   5382 ;	include/gsm_serial.c:255: i = eep_tatmoden[0];
      002203 90 F0 07         [24] 5383 	mov	dptr,#_eep_tatmoden
      002206 E4               [12] 5384 	clr	a
      002207 93               [24] 5385 	movc	a,@a+dptr
      002208 FF               [12] 5386 	mov	r7,a
                                   5387 ;	include/gsm_serial.c:256: send_gsm_byte('\r');
      002209 75 82 0D         [24] 5388 	mov	dpl,#0x0d
      00220C C0 07            [24] 5389 	push	ar7
      00220E 12 03 B8         [24] 5390 	lcall	_send_gsm_byte
      002211 D0 07            [24] 5391 	pop	ar7
                                   5392 ;	include/gsm_serial.c:257: send_gsm_byte(eep_tatmoden[i]/60 +'0');
      002213 EF               [12] 5393 	mov	a,r7
      002214 90 F0 07         [24] 5394 	mov	dptr,#_eep_tatmoden
      002217 93               [24] 5395 	movc	a,@a+dptr
      002218 FE               [12] 5396 	mov	r6,a
      002219 7D 00            [12] 5397 	mov	r5,#0x00
      00221B 75 1B 3C         [24] 5398 	mov	__divsint_PARM_2,#0x3c
                                   5399 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      00221E 8D 1C            [24] 5400 	mov	(__divsint_PARM_2 + 1),r5
      002220 8E 82            [24] 5401 	mov	dpl,r6
      002222 8D 83            [24] 5402 	mov	dph,r5
      002224 C0 07            [24] 5403 	push	ar7
      002226 12 84 9D         [24] 5404 	lcall	__divsint
      002229 AD 82            [24] 5405 	mov	r5,dpl
      00222B 74 30            [12] 5406 	mov	a,#0x30
      00222D 2D               [12] 5407 	add	a,r5
      00222E F5 82            [12] 5408 	mov	dpl,a
      002230 12 03 B8         [24] 5409 	lcall	_send_gsm_byte
      002233 D0 07            [24] 5410 	pop	ar7
                                   5411 ;	include/gsm_serial.c:258: send_gsm_byte(eep_tatmoden[i]/6%10 +'0');
      002235 EF               [12] 5412 	mov	a,r7
      002236 90 F0 07         [24] 5413 	mov	dptr,#_eep_tatmoden
      002239 93               [24] 5414 	movc	a,@a+dptr
      00223A FE               [12] 5415 	mov	r6,a
      00223B 7D 00            [12] 5416 	mov	r5,#0x00
      00223D 75 1B 06         [24] 5417 	mov	__divsint_PARM_2,#0x06
                                   5418 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      002240 8D 1C            [24] 5419 	mov	(__divsint_PARM_2 + 1),r5
      002242 8E 82            [24] 5420 	mov	dpl,r6
      002244 8D 83            [24] 5421 	mov	dph,r5
      002246 C0 07            [24] 5422 	push	ar7
      002248 12 84 9D         [24] 5423 	lcall	__divsint
      00224B 75 1B 0A         [24] 5424 	mov	__modsint_PARM_2,#0x0a
      00224E 75 1C 00         [24] 5425 	mov	(__modsint_PARM_2 + 1),#0x00
      002251 12 84 67         [24] 5426 	lcall	__modsint
      002254 AD 82            [24] 5427 	mov	r5,dpl
      002256 74 30            [12] 5428 	mov	a,#0x30
      002258 2D               [12] 5429 	add	a,r5
      002259 F5 82            [12] 5430 	mov	dpl,a
      00225B 12 03 B8         [24] 5431 	lcall	_send_gsm_byte
                                   5432 ;	include/gsm_serial.c:259: send_gsm_byte(':');
      00225E 75 82 3A         [24] 5433 	mov	dpl,#0x3a
      002261 12 03 B8         [24] 5434 	lcall	_send_gsm_byte
      002264 D0 07            [24] 5435 	pop	ar7
                                   5436 ;	include/gsm_serial.c:260: send_gsm_byte(eep_tatmoden[i]%6 +'0');
      002266 EF               [12] 5437 	mov	a,r7
      002267 90 F0 07         [24] 5438 	mov	dptr,#_eep_tatmoden
      00226A 93               [24] 5439 	movc	a,@a+dptr
      00226B FF               [12] 5440 	mov	r7,a
      00226C 7E 00            [12] 5441 	mov	r6,#0x00
      00226E 75 1B 06         [24] 5442 	mov	__modsint_PARM_2,#0x06
                                   5443 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      002271 8E 1C            [24] 5444 	mov	(__modsint_PARM_2 + 1),r6
      002273 8F 82            [24] 5445 	mov	dpl,r7
      002275 8E 83            [24] 5446 	mov	dph,r6
      002277 12 84 67         [24] 5447 	lcall	__modsint
      00227A AE 82            [24] 5448 	mov	r6,dpl
      00227C 74 30            [12] 5449 	mov	a,#0x30
      00227E 2E               [12] 5450 	add	a,r6
      00227F F5 82            [12] 5451 	mov	dpl,a
      002281 12 03 B8         [24] 5452 	lcall	_send_gsm_byte
                                   5453 ;	include/gsm_serial.c:261: send_gsm_cmd("0 - ");
      002284 90 8A 4B         [24] 5454 	mov	dptr,#___str_46
      002287 75 F0 80         [24] 5455 	mov	b,#0x80
      00228A 12 03 CD         [24] 5456 	lcall	_send_gsm_cmd
                                   5457 ;	include/gsm_serial.c:262: send_gsm_byte(eep_tatmoden[1]/60 +'0');
      00228D 90 F0 08         [24] 5458 	mov	dptr,#(_eep_tatmoden + 0x0001)
      002290 E4               [12] 5459 	clr	a
      002291 93               [24] 5460 	movc	a,@a+dptr
      002292 FF               [12] 5461 	mov	r7,a
      002293 7E 00            [12] 5462 	mov	r6,#0x00
      002295 75 1B 3C         [24] 5463 	mov	__divsint_PARM_2,#0x3c
                                   5464 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      002298 8E 1C            [24] 5465 	mov	(__divsint_PARM_2 + 1),r6
      00229A 8F 82            [24] 5466 	mov	dpl,r7
      00229C 8E 83            [24] 5467 	mov	dph,r6
      00229E 12 84 9D         [24] 5468 	lcall	__divsint
      0022A1 AE 82            [24] 5469 	mov	r6,dpl
      0022A3 74 30            [12] 5470 	mov	a,#0x30
      0022A5 2E               [12] 5471 	add	a,r6
      0022A6 F5 82            [12] 5472 	mov	dpl,a
      0022A8 12 03 B8         [24] 5473 	lcall	_send_gsm_byte
                                   5474 ;	include/gsm_serial.c:263: send_gsm_byte(eep_tatmoden[1]/6%10 +'0');
      0022AB 90 F0 08         [24] 5475 	mov	dptr,#(_eep_tatmoden + 0x0001)
      0022AE E4               [12] 5476 	clr	a
      0022AF 93               [24] 5477 	movc	a,@a+dptr
      0022B0 FF               [12] 5478 	mov	r7,a
      0022B1 7E 00            [12] 5479 	mov	r6,#0x00
      0022B3 75 1B 06         [24] 5480 	mov	__divsint_PARM_2,#0x06
                                   5481 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      0022B6 8E 1C            [24] 5482 	mov	(__divsint_PARM_2 + 1),r6
      0022B8 8F 82            [24] 5483 	mov	dpl,r7
      0022BA 8E 83            [24] 5484 	mov	dph,r6
      0022BC 12 84 9D         [24] 5485 	lcall	__divsint
      0022BF 75 1B 0A         [24] 5486 	mov	__modsint_PARM_2,#0x0a
      0022C2 75 1C 00         [24] 5487 	mov	(__modsint_PARM_2 + 1),#0x00
      0022C5 12 84 67         [24] 5488 	lcall	__modsint
      0022C8 AE 82            [24] 5489 	mov	r6,dpl
      0022CA 74 30            [12] 5490 	mov	a,#0x30
      0022CC 2E               [12] 5491 	add	a,r6
      0022CD F5 82            [12] 5492 	mov	dpl,a
      0022CF 12 03 B8         [24] 5493 	lcall	_send_gsm_byte
                                   5494 ;	include/gsm_serial.c:264: send_gsm_byte(':');
      0022D2 75 82 3A         [24] 5495 	mov	dpl,#0x3a
      0022D5 12 03 B8         [24] 5496 	lcall	_send_gsm_byte
                                   5497 ;	include/gsm_serial.c:265: send_gsm_byte(eep_tatmoden[1]%6 +'0');
      0022D8 90 F0 08         [24] 5498 	mov	dptr,#(_eep_tatmoden + 0x0001)
      0022DB E4               [12] 5499 	clr	a
      0022DC 93               [24] 5500 	movc	a,@a+dptr
      0022DD FF               [12] 5501 	mov	r7,a
      0022DE 7E 00            [12] 5502 	mov	r6,#0x00
      0022E0 75 1B 06         [24] 5503 	mov	__modsint_PARM_2,#0x06
                                   5504 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0022E3 8E 1C            [24] 5505 	mov	(__modsint_PARM_2 + 1),r6
      0022E5 8F 82            [24] 5506 	mov	dpl,r7
      0022E7 8E 83            [24] 5507 	mov	dph,r6
      0022E9 12 84 67         [24] 5508 	lcall	__modsint
      0022EC AE 82            [24] 5509 	mov	r6,dpl
      0022EE 74 30            [12] 5510 	mov	a,#0x30
      0022F0 2E               [12] 5511 	add	a,r6
      0022F1 F5 82            [12] 5512 	mov	dpl,a
      0022F3 12 03 B8         [24] 5513 	lcall	_send_gsm_byte
                                   5514 ;	include/gsm_serial.c:266: send_gsm_byte('0');
      0022F6 75 82 30         [24] 5515 	mov	dpl,#0x30
      0022F9 12 03 B8         [24] 5516 	lcall	_send_gsm_byte
                                   5517 ;	include/gsm_serial.c:267: for(i=2;i<eep_tatmoden[0];i+=2){
      0022FC 7F 02            [12] 5518 	mov	r7,#0x02
      0022FE                       5519 00105$:
      0022FE 90 F0 07         [24] 5520 	mov	dptr,#_eep_tatmoden
      002301 E4               [12] 5521 	clr	a
      002302 93               [24] 5522 	movc	a,@a+dptr
      002303 FE               [12] 5523 	mov	r6,a
      002304 C3               [12] 5524 	clr	c
      002305 EF               [12] 5525 	mov	a,r7
      002306 9E               [12] 5526 	subb	a,r6
      002307 40 01            [24] 5527 	jc	00133$
      002309 22               [24] 5528 	ret
      00230A                       5529 00133$:
                                   5530 ;	include/gsm_serial.c:268: send_gsm_byte('\r');
      00230A 75 82 0D         [24] 5531 	mov	dpl,#0x0d
      00230D C0 07            [24] 5532 	push	ar7
      00230F 12 03 B8         [24] 5533 	lcall	_send_gsm_byte
      002312 D0 07            [24] 5534 	pop	ar7
                                   5535 ;	include/gsm_serial.c:269: send_gsm_byte(eep_tatmoden[i]/60 +'0');
      002314 EF               [12] 5536 	mov	a,r7
      002315 90 F0 07         [24] 5537 	mov	dptr,#_eep_tatmoden
      002318 93               [24] 5538 	movc	a,@a+dptr
      002319 FE               [12] 5539 	mov	r6,a
      00231A 7D 00            [12] 5540 	mov	r5,#0x00
      00231C 75 1B 3C         [24] 5541 	mov	__divsint_PARM_2,#0x3c
                                   5542 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      00231F 8D 1C            [24] 5543 	mov	(__divsint_PARM_2 + 1),r5
      002321 8E 82            [24] 5544 	mov	dpl,r6
      002323 8D 83            [24] 5545 	mov	dph,r5
      002325 C0 07            [24] 5546 	push	ar7
      002327 12 84 9D         [24] 5547 	lcall	__divsint
      00232A AD 82            [24] 5548 	mov	r5,dpl
      00232C 74 30            [12] 5549 	mov	a,#0x30
      00232E 2D               [12] 5550 	add	a,r5
      00232F F5 82            [12] 5551 	mov	dpl,a
      002331 12 03 B8         [24] 5552 	lcall	_send_gsm_byte
      002334 D0 07            [24] 5553 	pop	ar7
                                   5554 ;	include/gsm_serial.c:270: send_gsm_byte(eep_tatmoden[i]/6%10 +'0');
      002336 EF               [12] 5555 	mov	a,r7
      002337 90 F0 07         [24] 5556 	mov	dptr,#_eep_tatmoden
      00233A 93               [24] 5557 	movc	a,@a+dptr
      00233B FE               [12] 5558 	mov	r6,a
      00233C 7D 00            [12] 5559 	mov	r5,#0x00
      00233E 75 1B 06         [24] 5560 	mov	__divsint_PARM_2,#0x06
                                   5561 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      002341 8D 1C            [24] 5562 	mov	(__divsint_PARM_2 + 1),r5
      002343 8E 82            [24] 5563 	mov	dpl,r6
      002345 8D 83            [24] 5564 	mov	dph,r5
      002347 C0 07            [24] 5565 	push	ar7
      002349 12 84 9D         [24] 5566 	lcall	__divsint
      00234C 75 1B 0A         [24] 5567 	mov	__modsint_PARM_2,#0x0a
      00234F 75 1C 00         [24] 5568 	mov	(__modsint_PARM_2 + 1),#0x00
      002352 12 84 67         [24] 5569 	lcall	__modsint
      002355 AD 82            [24] 5570 	mov	r5,dpl
      002357 74 30            [12] 5571 	mov	a,#0x30
      002359 2D               [12] 5572 	add	a,r5
      00235A F5 82            [12] 5573 	mov	dpl,a
      00235C 12 03 B8         [24] 5574 	lcall	_send_gsm_byte
                                   5575 ;	include/gsm_serial.c:271: send_gsm_byte(':');
      00235F 75 82 3A         [24] 5576 	mov	dpl,#0x3a
      002362 12 03 B8         [24] 5577 	lcall	_send_gsm_byte
      002365 D0 07            [24] 5578 	pop	ar7
                                   5579 ;	include/gsm_serial.c:272: send_gsm_byte(eep_tatmoden[i]%6 +'0');
      002367 EF               [12] 5580 	mov	a,r7
      002368 90 F0 07         [24] 5581 	mov	dptr,#_eep_tatmoden
      00236B 93               [24] 5582 	movc	a,@a+dptr
      00236C FE               [12] 5583 	mov	r6,a
      00236D 7D 00            [12] 5584 	mov	r5,#0x00
      00236F 75 1B 06         [24] 5585 	mov	__modsint_PARM_2,#0x06
                                   5586 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      002372 8D 1C            [24] 5587 	mov	(__modsint_PARM_2 + 1),r5
      002374 8E 82            [24] 5588 	mov	dpl,r6
      002376 8D 83            [24] 5589 	mov	dph,r5
      002378 C0 07            [24] 5590 	push	ar7
      00237A 12 84 67         [24] 5591 	lcall	__modsint
      00237D AD 82            [24] 5592 	mov	r5,dpl
      00237F 74 30            [12] 5593 	mov	a,#0x30
      002381 2D               [12] 5594 	add	a,r5
      002382 F5 82            [12] 5595 	mov	dpl,a
      002384 12 03 B8         [24] 5596 	lcall	_send_gsm_byte
                                   5597 ;	include/gsm_serial.c:273: send_gsm_cmd("0 - ");
      002387 90 8A 4B         [24] 5598 	mov	dptr,#___str_46
      00238A 75 F0 80         [24] 5599 	mov	b,#0x80
      00238D 12 03 CD         [24] 5600 	lcall	_send_gsm_cmd
      002390 D0 07            [24] 5601 	pop	ar7
                                   5602 ;	include/gsm_serial.c:274: send_gsm_byte(eep_tatmoden[i+1]/60 +'0');
      002392 8F 06            [24] 5603 	mov	ar6,r7
      002394 EE               [12] 5604 	mov	a,r6
      002395 04               [12] 5605 	inc	a
      002396 FD               [12] 5606 	mov	r5,a
      002397 33               [12] 5607 	rlc	a
      002398 95 E0            [12] 5608 	subb	a,acc
      00239A FC               [12] 5609 	mov	r4,a
      00239B ED               [12] 5610 	mov	a,r5
      00239C 24 07            [12] 5611 	add	a,#_eep_tatmoden
      00239E F5 82            [12] 5612 	mov	dpl,a
      0023A0 EC               [12] 5613 	mov	a,r4
      0023A1 34 F0            [12] 5614 	addc	a,#(_eep_tatmoden >> 8)
      0023A3 F5 83            [12] 5615 	mov	dph,a
      0023A5 E4               [12] 5616 	clr	a
      0023A6 93               [24] 5617 	movc	a,@a+dptr
      0023A7 FB               [12] 5618 	mov	r3,a
      0023A8 7A 00            [12] 5619 	mov	r2,#0x00
      0023AA 75 1B 3C         [24] 5620 	mov	__divsint_PARM_2,#0x3c
                                   5621 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      0023AD 8A 1C            [24] 5622 	mov	(__divsint_PARM_2 + 1),r2
      0023AF 8B 82            [24] 5623 	mov	dpl,r3
      0023B1 8A 83            [24] 5624 	mov	dph,r2
      0023B3 C0 06            [24] 5625 	push	ar6
      0023B5 C0 05            [24] 5626 	push	ar5
      0023B7 C0 04            [24] 5627 	push	ar4
      0023B9 12 84 9D         [24] 5628 	lcall	__divsint
      0023BC AA 82            [24] 5629 	mov	r2,dpl
      0023BE 74 30            [12] 5630 	mov	a,#0x30
      0023C0 2A               [12] 5631 	add	a,r2
      0023C1 F5 82            [12] 5632 	mov	dpl,a
      0023C3 12 03 B8         [24] 5633 	lcall	_send_gsm_byte
      0023C6 D0 04            [24] 5634 	pop	ar4
      0023C8 D0 05            [24] 5635 	pop	ar5
                                   5636 ;	include/gsm_serial.c:275: send_gsm_byte(eep_tatmoden[i+1]/6%10 +'0');
      0023CA ED               [12] 5637 	mov	a,r5
      0023CB 24 07            [12] 5638 	add	a,#_eep_tatmoden
      0023CD F5 82            [12] 5639 	mov	dpl,a
      0023CF EC               [12] 5640 	mov	a,r4
      0023D0 34 F0            [12] 5641 	addc	a,#(_eep_tatmoden >> 8)
      0023D2 F5 83            [12] 5642 	mov	dph,a
      0023D4 E4               [12] 5643 	clr	a
      0023D5 93               [24] 5644 	movc	a,@a+dptr
      0023D6 FB               [12] 5645 	mov	r3,a
      0023D7 7A 00            [12] 5646 	mov	r2,#0x00
      0023D9 75 1B 06         [24] 5647 	mov	__divsint_PARM_2,#0x06
                                   5648 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      0023DC 8A 1C            [24] 5649 	mov	(__divsint_PARM_2 + 1),r2
      0023DE 8B 82            [24] 5650 	mov	dpl,r3
      0023E0 8A 83            [24] 5651 	mov	dph,r2
      0023E2 C0 05            [24] 5652 	push	ar5
      0023E4 C0 04            [24] 5653 	push	ar4
      0023E6 12 84 9D         [24] 5654 	lcall	__divsint
      0023E9 75 1B 0A         [24] 5655 	mov	__modsint_PARM_2,#0x0a
      0023EC 75 1C 00         [24] 5656 	mov	(__modsint_PARM_2 + 1),#0x00
      0023EF 12 84 67         [24] 5657 	lcall	__modsint
      0023F2 AA 82            [24] 5658 	mov	r2,dpl
      0023F4 74 30            [12] 5659 	mov	a,#0x30
      0023F6 2A               [12] 5660 	add	a,r2
      0023F7 F5 82            [12] 5661 	mov	dpl,a
      0023F9 12 03 B8         [24] 5662 	lcall	_send_gsm_byte
                                   5663 ;	include/gsm_serial.c:276: send_gsm_byte(':');
      0023FC 75 82 3A         [24] 5664 	mov	dpl,#0x3a
      0023FF 12 03 B8         [24] 5665 	lcall	_send_gsm_byte
      002402 D0 04            [24] 5666 	pop	ar4
      002404 D0 05            [24] 5667 	pop	ar5
                                   5668 ;	include/gsm_serial.c:277: send_gsm_byte(eep_tatmoden[i+1]%6 +'0');
      002406 ED               [12] 5669 	mov	a,r5
      002407 24 07            [12] 5670 	add	a,#_eep_tatmoden
      002409 F5 82            [12] 5671 	mov	dpl,a
      00240B EC               [12] 5672 	mov	a,r4
      00240C 34 F0            [12] 5673 	addc	a,#(_eep_tatmoden >> 8)
      00240E F5 83            [12] 5674 	mov	dph,a
      002410 E4               [12] 5675 	clr	a
      002411 93               [24] 5676 	movc	a,@a+dptr
      002412 FD               [12] 5677 	mov	r5,a
      002413 7C 00            [12] 5678 	mov	r4,#0x00
      002415 75 1B 06         [24] 5679 	mov	__modsint_PARM_2,#0x06
                                   5680 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      002418 8C 1C            [24] 5681 	mov	(__modsint_PARM_2 + 1),r4
      00241A 8D 82            [24] 5682 	mov	dpl,r5
      00241C 8C 83            [24] 5683 	mov	dph,r4
      00241E 12 84 67         [24] 5684 	lcall	__modsint
      002421 AC 82            [24] 5685 	mov	r4,dpl
      002423 74 30            [12] 5686 	mov	a,#0x30
      002425 2C               [12] 5687 	add	a,r4
      002426 F5 82            [12] 5688 	mov	dpl,a
      002428 12 03 B8         [24] 5689 	lcall	_send_gsm_byte
                                   5690 ;	include/gsm_serial.c:278: send_gsm_byte('0');
      00242B 75 82 30         [24] 5691 	mov	dpl,#0x30
      00242E 12 03 B8         [24] 5692 	lcall	_send_gsm_byte
      002431 D0 06            [24] 5693 	pop	ar6
                                   5694 ;	include/gsm_serial.c:267: for(i=2;i<eep_tatmoden[0];i+=2){
      002433 74 02            [12] 5695 	mov	a,#0x02
      002435 2E               [12] 5696 	add	a,r6
      002436 FF               [12] 5697 	mov	r7,a
                                   5698 ;	include/gsm_serial.c:280: }
      002437 02 22 FE         [24] 5699 	ljmp	00105$
                                   5700 ;------------------------------------------------------------
                                   5701 ;Allocation info for local variables in function 'baocaoden'
                                   5702 ;------------------------------------------------------------
                                   5703 ;noidung                   Allocated to registers r5 r6 r7 
                                   5704 ;------------------------------------------------------------
                                   5705 ;	include/gsm_serial.c:282: void baocaoden(__bit chinh, u8 *noidung){
                                   5706 ;	-----------------------------------------
                                   5707 ;	 function baocaoden
                                   5708 ;	-----------------------------------------
      00243A                       5709 _baocaoden:
      00243A AD 82            [24] 5710 	mov	r5,dpl
      00243C AE 83            [24] 5711 	mov	r6,dph
      00243E AF F0            [24] 5712 	mov	r7,b
                                   5713 ;	include/gsm_serial.c:283: if(!sms_on) return;
      002440 90 01 32         [24] 5714 	mov	dptr,#_sms_on
      002443 E0               [24] 5715 	movx	a,@dptr
      002444 70 01            [24] 5716 	jnz	00102$
      002446 22               [24] 5717 	ret
      002447                       5718 00102$:
                                   5719 ;	include/gsm_serial.c:284: gsm_sendandcheck("AT\r", 15, 1,"BAT DAU BAO CAO ");
      002447 75 5B DA         [24] 5720 	mov	_gsm_sendandcheck_PARM_4,#___str_39
      00244A 75 5C 89         [24] 5721 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_39 >> 8)
      00244D 75 5D 80         [24] 5722 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      002450 75 59 0F         [24] 5723 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      002453 75 5A 01         [24] 5724 	mov	_gsm_sendandcheck_PARM_3,#0x01
      002456 90 89 D6         [24] 5725 	mov	dptr,#___str_38
      002459 75 F0 80         [24] 5726 	mov	b,#0x80
      00245C C0 07            [24] 5727 	push	ar7
      00245E C0 06            [24] 5728 	push	ar6
      002460 C0 05            [24] 5729 	push	ar5
      002462 12 15 AA         [24] 5730 	lcall	_gsm_sendandcheck
                                   5731 ;	include/gsm_serial.c:285: if(!send_sms(chinh)) return;
                                   5732 ;	assignBit
      002465 A2 47            [12] 5733 	mov	c,_baocaoden_PARM_1
      002467 92 42            [24] 5734 	mov	_send_sms_PARM_1,c
      002469 12 17 C4         [24] 5735 	lcall	_send_sms
      00246C D0 05            [24] 5736 	pop	ar5
      00246E D0 06            [24] 5737 	pop	ar6
      002470 D0 07            [24] 5738 	pop	ar7
      002472 40 01            [24] 5739 	jc	00104$
      002474 22               [24] 5740 	ret
      002475                       5741 00104$:
                                   5742 ;	include/gsm_serial.c:286: send_gio_thuc(chinh);
                                   5743 ;	assignBit
      002475 A2 47            [12] 5744 	mov	c,_baocaoden_PARM_1
      002477 92 44            [24] 5745 	mov	_send_gio_thuc_PARM_1,c
      002479 C0 07            [24] 5746 	push	ar7
      00247B C0 06            [24] 5747 	push	ar6
      00247D C0 05            [24] 5748 	push	ar5
      00247F 12 1C BA         [24] 5749 	lcall	_send_gio_thuc
                                   5750 ;	include/gsm_serial.c:287: send_thong_so(chinh);
                                   5751 ;	assignBit
      002482 A2 47            [12] 5752 	mov	c,_baocaoden_PARM_1
      002484 92 45            [24] 5753 	mov	_send_thong_so_PARM_1,c
      002486 12 1E 3D         [24] 5754 	lcall	_send_thong_so
                                   5755 ;	include/gsm_serial.c:288: send_thong_so_den();
      002489 12 21 BA         [24] 5756 	lcall	_send_thong_so_den
      00248C D0 05            [24] 5757 	pop	ar5
      00248E D0 06            [24] 5758 	pop	ar6
      002490 D0 07            [24] 5759 	pop	ar7
                                   5760 ;	include/gsm_serial.c:289: send_gsm_cmd(noidung);
      002492 8D 82            [24] 5761 	mov	dpl,r5
      002494 8E 83            [24] 5762 	mov	dph,r6
      002496 8F F0            [24] 5763 	mov	b,r7
      002498 12 03 CD         [24] 5764 	lcall	_send_gsm_cmd
                                   5765 ;	include/gsm_serial.c:290: gsm_sendandcheck("\032",50,1,"GUI BAO CAO DEN ");
      00249B 75 5B 50         [24] 5766 	mov	_gsm_sendandcheck_PARM_4,#___str_47
      00249E 75 5C 8A         [24] 5767 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_47 >> 8)
      0024A1 75 5D 80         [24] 5768 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      0024A4 75 59 32         [24] 5769 	mov	_gsm_sendandcheck_PARM_2,#0x32
      0024A7 75 5A 01         [24] 5770 	mov	_gsm_sendandcheck_PARM_3,#0x01
      0024AA 90 88 DA         [24] 5771 	mov	dptr,#___str_7
      0024AD 75 F0 80         [24] 5772 	mov	b,#0x80
                                   5773 ;	include/gsm_serial.c:291: }
      0024B0 02 15 AA         [24] 5774 	ljmp	_gsm_sendandcheck
                                   5775 ;------------------------------------------------------------
                                   5776 ;Allocation info for local variables in function 'gui_huong_dan'
                                   5777 ;------------------------------------------------------------
                                   5778 ;	include/gsm_serial.c:293: void gui_huong_dan(){
                                   5779 ;	-----------------------------------------
                                   5780 ;	 function gui_huong_dan
                                   5781 ;	-----------------------------------------
      0024B3                       5782 _gui_huong_dan:
                                   5783 ;	include/gsm_serial.c:294: lenh_sms[0]=0;
      0024B3 90 00 17         [24] 5784 	mov	dptr,#_lenh_sms
      0024B6 E4               [12] 5785 	clr	a
      0024B7 F0               [24] 5786 	movx	@dptr,a
                                   5787 ;	include/gsm_serial.c:295: if(!send_sms(CHINH)) return;
                                   5788 ;	assignBit
      0024B8 D2 42            [12] 5789 	setb	_send_sms_PARM_1
      0024BA 12 17 C4         [24] 5790 	lcall	_send_sms
      0024BD 40 01            [24] 5791 	jc	00102$
      0024BF 22               [24] 5792 	ret
      0024C0                       5793 00102$:
                                   5794 ;	include/gsm_serial.c:296: send_gsm_cmd(huongdan);
      0024C0 90 85 90         [24] 5795 	mov	dptr,#_huongdan
      0024C3 75 F0 80         [24] 5796 	mov	b,#0x80
      0024C6 12 03 CD         [24] 5797 	lcall	_send_gsm_cmd
                                   5798 ;	include/gsm_serial.c:297: gsm_sendandcheck("\032",50,1," GUI HUONG DAN  ");
      0024C9 75 5B 61         [24] 5799 	mov	_gsm_sendandcheck_PARM_4,#___str_48
      0024CC 75 5C 8A         [24] 5800 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_48 >> 8)
      0024CF 75 5D 80         [24] 5801 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      0024D2 75 59 32         [24] 5802 	mov	_gsm_sendandcheck_PARM_2,#0x32
      0024D5 75 5A 01         [24] 5803 	mov	_gsm_sendandcheck_PARM_3,#0x01
      0024D8 90 88 DA         [24] 5804 	mov	dptr,#___str_7
      0024DB 75 F0 80         [24] 5805 	mov	b,#0x80
                                   5806 ;	include/gsm_serial.c:298: }
      0024DE 02 15 AA         [24] 5807 	ljmp	_gsm_sendandcheck
                                   5808 ;------------------------------------------------------------
                                   5809 ;Allocation info for local variables in function 'gsm_thietlapsim800'
                                   5810 ;------------------------------------------------------------
                                   5811 ;	include/gsm_serial.c:300: __bit gsm_thietlapsim800(){
                                   5812 ;	-----------------------------------------
                                   5813 ;	 function gsm_thietlapsim800
                                   5814 ;	-----------------------------------------
      0024E1                       5815 _gsm_thietlapsim800:
                                   5816 ;	include/gsm_serial.c:301: if(gsm_sendandcheck("AT\r", 15, 1,"THIET LAP SIM800")){      
      0024E1 75 5B 72         [24] 5817 	mov	_gsm_sendandcheck_PARM_4,#___str_49
      0024E4 75 5C 8A         [24] 5818 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_49 >> 8)
      0024E7 75 5D 80         [24] 5819 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      0024EA 75 59 0F         [24] 5820 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      0024ED 75 5A 01         [24] 5821 	mov	_gsm_sendandcheck_PARM_3,#0x01
      0024F0 90 89 D6         [24] 5822 	mov	dptr,#___str_38
      0024F3 75 F0 80         [24] 5823 	mov	b,#0x80
      0024F6 12 15 AA         [24] 5824 	lcall	_gsm_sendandcheck
      0024F9 50 36            [24] 5825 	jnc	00104$
                                   5826 ;	include/gsm_serial.c:302: clear_sms_buffer(0);
      0024FB 75 82 00         [24] 5827 	mov	dpl,#0x00
      0024FE 12 15 8E         [24] 5828 	lcall	_clear_sms_buffer
                                   5829 ;	include/gsm_serial.c:303: sms_index = 0;
      002501 90 00 BB         [24] 5830 	mov	dptr,#_sms_index
      002504 E4               [12] 5831 	clr	a
      002505 F0               [24] 5832 	movx	@dptr,a
                                   5833 ;	include/gsm_serial.c:304: gsm_serial_cmd = CSPN;
      002506 90 00 FE         [24] 5834 	mov	dptr,#_gsm_serial_cmd
      002509 74 0A            [12] 5835 	mov	a,#0x0a
      00250B F0               [24] 5836 	movx	@dptr,a
                                   5837 ;	include/gsm_serial.c:305: if(gsm_sendandcheck("AT+CSPN?\r",15,1," TEN TONG DAI  ")){
      00250C 75 5B 8D         [24] 5838 	mov	_gsm_sendandcheck_PARM_4,#___str_51
      00250F 75 5C 8A         [24] 5839 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_51 >> 8)
      002512 75 5D 80         [24] 5840 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      002515 75 59 0F         [24] 5841 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      002518 75 5A 01         [24] 5842 	mov	_gsm_sendandcheck_PARM_3,#0x01
      00251B 90 8A 83         [24] 5843 	mov	dptr,#___str_50
      00251E 75 F0 80         [24] 5844 	mov	b,#0x80
      002521 12 15 AA         [24] 5845 	lcall	_gsm_sendandcheck
      002524 50 09            [24] 5846 	jnc	00102$
                                   5847 ;	include/gsm_serial.c:306: nha_mang = lenh_sms[4];
      002526 90 00 1B         [24] 5848 	mov	dptr,#(_lenh_sms + 0x0004)
      002529 E0               [24] 5849 	movx	a,@dptr
      00252A FF               [12] 5850 	mov	r7,a
      00252B 90 00 F9         [24] 5851 	mov	dptr,#_nha_mang
      00252E F0               [24] 5852 	movx	@dptr,a
      00252F                       5853 00102$:
                                   5854 ;	include/gsm_serial.c:308: return 1;
      00252F D3               [12] 5855 	setb	c
      002530 22               [24] 5856 	ret
      002531                       5857 00104$:
                                   5858 ;	include/gsm_serial.c:310: return 0;
      002531 C3               [12] 5859 	clr	c
                                   5860 ;	include/gsm_serial.c:311: }
      002532 22               [24] 5861 	ret
                                   5862 ;------------------------------------------------------------
                                   5863 ;Allocation info for local variables in function 'gsm_thietlapngaygiothuc'
                                   5864 ;------------------------------------------------------------
                                   5865 ;check                     Allocated to registers 
                                   5866 ;------------------------------------------------------------
                                   5867 ;	include/gsm_serial.c:313: void gsm_thietlapngaygiothuc(){
                                   5868 ;	-----------------------------------------
                                   5869 ;	 function gsm_thietlapngaygiothuc
                                   5870 ;	-----------------------------------------
      002533                       5871 _gsm_thietlapngaygiothuc:
                                   5872 ;	include/gsm_serial.c:314: __bit GPS_time_temp = 0;
                                   5873 ;	assignBit
      002533 C2 48            [12] 5874 	clr	_gsm_thietlapngaygiothuc_GPS_time_temp_65536_124
                                   5875 ;	include/gsm_serial.c:315: if(sim_test_sec==61) return;
      002535 90 01 31         [24] 5876 	mov	dptr,#_sim_test_sec
      002538 E0               [24] 5877 	movx	a,@dptr
      002539 FF               [12] 5878 	mov	r7,a
      00253A BF 3D 01         [24] 5879 	cjne	r7,#0x3d,00102$
      00253D 22               [24] 5880 	ret
      00253E                       5881 00102$:
                                   5882 ;	include/gsm_serial.c:316: if(gsm_sendandcheck("AT+CLTS=1\r",15,1,"BAT CHE DO GPS ")){
      00253E 75 5B A8         [24] 5883 	mov	_gsm_sendandcheck_PARM_4,#___str_53
      002541 75 5C 8A         [24] 5884 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_53 >> 8)
      002544 75 5D 80         [24] 5885 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      002547 75 59 0F         [24] 5886 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      00254A 75 5A 01         [24] 5887 	mov	_gsm_sendandcheck_PARM_3,#0x01
      00254D 90 8A 9D         [24] 5888 	mov	dptr,#___str_52
      002550 75 F0 80         [24] 5889 	mov	b,#0x80
      002553 12 15 AA         [24] 5890 	lcall	_gsm_sendandcheck
      002556 40 03            [24] 5891 	jc	00141$
      002558 02 27 00         [24] 5892 	ljmp	00110$
      00255B                       5893 00141$:
                                   5894 ;	include/gsm_serial.c:317: if(gsm_sendandcheck("AT+COPS=2\r",15,1," KHOI DONG GPS ")){
      00255B 75 5B C3         [24] 5895 	mov	_gsm_sendandcheck_PARM_4,#___str_55
      00255E 75 5C 8A         [24] 5896 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_55 >> 8)
      002561 75 5D 80         [24] 5897 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      002564 75 59 0F         [24] 5898 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      002567 75 5A 01         [24] 5899 	mov	_gsm_sendandcheck_PARM_3,#0x01
      00256A 90 8A B8         [24] 5900 	mov	dptr,#___str_54
      00256D 75 F0 80         [24] 5901 	mov	b,#0x80
      002570 12 15 AA         [24] 5902 	lcall	_gsm_sendandcheck
      002573 40 03            [24] 5903 	jc	00142$
      002575 02 27 00         [24] 5904 	ljmp	00110$
      002578                       5905 00142$:
                                   5906 ;	include/gsm_serial.c:318: gsm_serial_cmd = COPS;
      002578 90 00 FE         [24] 5907 	mov	dptr,#_gsm_serial_cmd
      00257B 74 0C            [12] 5908 	mov	a,#0x0c
      00257D F0               [24] 5909 	movx	@dptr,a
                                   5910 ;	include/gsm_serial.c:319: if(gsm_sendandcheck("AT+COPS=0\r",10,60,"  KET NOI GPS  ")){
      00257E 75 5B DE         [24] 5911 	mov	_gsm_sendandcheck_PARM_4,#___str_57
      002581 75 5C 8A         [24] 5912 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_57 >> 8)
      002584 75 5D 80         [24] 5913 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      002587 75 59 0A         [24] 5914 	mov	_gsm_sendandcheck_PARM_2,#0x0a
      00258A 75 5A 3C         [24] 5915 	mov	_gsm_sendandcheck_PARM_3,#0x3c
      00258D 90 8A D3         [24] 5916 	mov	dptr,#___str_56
      002590 75 F0 80         [24] 5917 	mov	b,#0x80
      002593 12 15 AA         [24] 5918 	lcall	_gsm_sendandcheck
      002596 40 03            [24] 5919 	jc	00143$
      002598 02 27 00         [24] 5920 	ljmp	00110$
      00259B                       5921 00143$:
                                   5922 ;	include/gsm_serial.c:320: clear_sms_buffer(0);
      00259B 75 82 00         [24] 5923 	mov	dpl,#0x00
      00259E 12 15 8E         [24] 5924 	lcall	_clear_sms_buffer
                                   5925 ;	include/gsm_serial.c:321: sms_index = 0;
      0025A1 90 00 BB         [24] 5926 	mov	dptr,#_sms_index
      0025A4 E4               [12] 5927 	clr	a
      0025A5 F0               [24] 5928 	movx	@dptr,a
                                   5929 ;	include/gsm_serial.c:322: gsm_serial_cmd = CLK;
      0025A6 90 00 FE         [24] 5930 	mov	dptr,#_gsm_serial_cmd
      0025A9 74 02            [12] 5931 	mov	a,#0x02
      0025AB F0               [24] 5932 	movx	@dptr,a
                                   5933 ;	include/gsm_serial.c:323: if(gsm_sendandcheck("AT+CCLK?\r",15,1," LAY TIME GPS  ")){
      0025AC 75 5B F8         [24] 5934 	mov	_gsm_sendandcheck_PARM_4,#___str_59
      0025AF 75 5C 8A         [24] 5935 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_59 >> 8)
      0025B2 75 5D 80         [24] 5936 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      0025B5 75 59 0F         [24] 5937 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      0025B8 75 5A 01         [24] 5938 	mov	_gsm_sendandcheck_PARM_3,#0x01
      0025BB 90 8A EE         [24] 5939 	mov	dptr,#___str_58
      0025BE 75 F0 80         [24] 5940 	mov	b,#0x80
      0025C1 12 15 AA         [24] 5941 	lcall	_gsm_sendandcheck
      0025C4 40 03            [24] 5942 	jc	00144$
      0025C6 02 27 00         [24] 5943 	ljmp	00110$
      0025C9                       5944 00144$:
                                   5945 ;	include/gsm_serial.c:324: year   = (lenh_sms[3] -48)*10 + lenh_sms[4]  - 48;
      0025C9 90 00 1A         [24] 5946 	mov	dptr,#(_lenh_sms + 0x0003)
      0025CC E0               [24] 5947 	movx	a,@dptr
      0025CD 24 D0            [12] 5948 	add	a,#0xd0
      0025CF 75 F0 0A         [24] 5949 	mov	b,#0x0a
      0025D2 A4               [48] 5950 	mul	ab
      0025D3 FF               [12] 5951 	mov	r7,a
      0025D4 90 00 1B         [24] 5952 	mov	dptr,#(_lenh_sms + 0x0004)
      0025D7 E0               [24] 5953 	movx	a,@dptr
      0025D8 2F               [12] 5954 	add	a,r7
      0025D9 24 D0            [12] 5955 	add	a,#0xd0
      0025DB 90 00 E0         [24] 5956 	mov	dptr,#_year
      0025DE F0               [24] 5957 	movx	@dptr,a
                                   5958 ;	include/gsm_serial.c:325: month  = (lenh_sms[6] -48)*10 + lenh_sms[7]  - 48;
      0025DF 90 00 1D         [24] 5959 	mov	dptr,#(_lenh_sms + 0x0006)
      0025E2 E0               [24] 5960 	movx	a,@dptr
      0025E3 24 D0            [12] 5961 	add	a,#0xd0
      0025E5 75 F0 0A         [24] 5962 	mov	b,#0x0a
      0025E8 A4               [48] 5963 	mul	ab
      0025E9 FF               [12] 5964 	mov	r7,a
      0025EA 90 00 1E         [24] 5965 	mov	dptr,#(_lenh_sms + 0x0007)
      0025ED E0               [24] 5966 	movx	a,@dptr
      0025EE 2F               [12] 5967 	add	a,r7
      0025EF 24 D0            [12] 5968 	add	a,#0xd0
      0025F1 90 00 DF         [24] 5969 	mov	dptr,#_month
      0025F4 F0               [24] 5970 	movx	@dptr,a
                                   5971 ;	include/gsm_serial.c:326: day    = (lenh_sms[9] -48)*10 + lenh_sms[10] - 48;
      0025F5 90 00 20         [24] 5972 	mov	dptr,#(_lenh_sms + 0x0009)
      0025F8 E0               [24] 5973 	movx	a,@dptr
      0025F9 24 D0            [12] 5974 	add	a,#0xd0
      0025FB 75 F0 0A         [24] 5975 	mov	b,#0x0a
      0025FE A4               [48] 5976 	mul	ab
      0025FF FF               [12] 5977 	mov	r7,a
      002600 90 00 21         [24] 5978 	mov	dptr,#(_lenh_sms + 0x000a)
      002603 E0               [24] 5979 	movx	a,@dptr
      002604 2F               [12] 5980 	add	a,r7
      002605 24 D0            [12] 5981 	add	a,#0xd0
      002607 90 00 DE         [24] 5982 	mov	dptr,#_day
      00260A F0               [24] 5983 	movx	@dptr,a
                                   5984 ;	include/gsm_serial.c:327: hour   = (lenh_sms[12]-48)*10 + lenh_sms[13] - 48;
      00260B 90 00 23         [24] 5985 	mov	dptr,#(_lenh_sms + 0x000c)
      00260E E0               [24] 5986 	movx	a,@dptr
      00260F 24 D0            [12] 5987 	add	a,#0xd0
      002611 75 F0 0A         [24] 5988 	mov	b,#0x0a
      002614 A4               [48] 5989 	mul	ab
      002615 FF               [12] 5990 	mov	r7,a
      002616 90 00 24         [24] 5991 	mov	dptr,#(_lenh_sms + 0x000d)
      002619 E0               [24] 5992 	movx	a,@dptr
      00261A 2F               [12] 5993 	add	a,r7
      00261B 24 D0            [12] 5994 	add	a,#0xd0
      00261D F5 4B            [12] 5995 	mov	_hour,a
                                   5996 ;	include/gsm_serial.c:328: minute = (lenh_sms[15]-48)*10 + lenh_sms[16] - 48;
      00261F 90 00 26         [24] 5997 	mov	dptr,#(_lenh_sms + 0x000f)
      002622 E0               [24] 5998 	movx	a,@dptr
      002623 24 D0            [12] 5999 	add	a,#0xd0
      002625 75 F0 0A         [24] 6000 	mov	b,#0x0a
      002628 A4               [48] 6001 	mul	ab
      002629 FF               [12] 6002 	mov	r7,a
      00262A 90 00 27         [24] 6003 	mov	dptr,#(_lenh_sms + 0x0010)
      00262D E0               [24] 6004 	movx	a,@dptr
      00262E 2F               [12] 6005 	add	a,r7
      00262F 24 D0            [12] 6006 	add	a,#0xd0
      002631 F5 4A            [12] 6007 	mov	_minute,a
                                   6008 ;	include/gsm_serial.c:329: second = (lenh_sms[18]-48)*10 + lenh_sms[19] - 48;
      002633 90 00 29         [24] 6009 	mov	dptr,#(_lenh_sms + 0x0012)
      002636 E0               [24] 6010 	movx	a,@dptr
      002637 24 D0            [12] 6011 	add	a,#0xd0
      002639 75 F0 0A         [24] 6012 	mov	b,#0x0a
      00263C A4               [48] 6013 	mul	ab
      00263D FF               [12] 6014 	mov	r7,a
      00263E 90 00 2A         [24] 6015 	mov	dptr,#(_lenh_sms + 0x0013)
      002641 E0               [24] 6016 	movx	a,@dptr
      002642 2F               [12] 6017 	add	a,r7
      002643 24 D0            [12] 6018 	add	a,#0xd0
      002645 F5 49            [12] 6019 	mov	_second,a
                                   6020 ;	include/gsm_serial.c:330: rtc_settime(hour,minute,second);
      002647 85 4A 3A         [24] 6021 	mov	_rtc_settime_PARM_2,_minute
      00264A 85 49 3B         [24] 6022 	mov	_rtc_settime_PARM_3,_second
      00264D 85 4B 82         [24] 6023 	mov	dpl,_hour
      002650 12 02 63         [24] 6024 	lcall	_rtc_settime
                                   6025 ;	include/gsm_serial.c:331: u16 check = (23*month/9 + day + (month>2?!(year%4):2) + year + (year+3)/4 + 1) ;
      002653 90 00 DF         [24] 6026 	mov	dptr,#_month
      002656 E0               [24] 6027 	movx	a,@dptr
      002657 FF               [12] 6028 	mov	r7,a
      002658 8F 1B            [24] 6029 	mov	__mulint_PARM_2,r7
      00265A 75 1C 00         [24] 6030 	mov	(__mulint_PARM_2 + 1),#0x00
      00265D 90 00 17         [24] 6031 	mov	dptr,#0x0017
      002660 C0 07            [24] 6032 	push	ar7
      002662 12 83 E1         [24] 6033 	lcall	__mulint
      002665 75 1B 09         [24] 6034 	mov	__divsint_PARM_2,#0x09
      002668 75 1C 00         [24] 6035 	mov	(__divsint_PARM_2 + 1),#0x00
      00266B 12 84 9D         [24] 6036 	lcall	__divsint
      00266E AD 82            [24] 6037 	mov	r5,dpl
      002670 AE 83            [24] 6038 	mov	r6,dph
      002672 D0 07            [24] 6039 	pop	ar7
      002674 90 00 DE         [24] 6040 	mov	dptr,#_day
      002677 E0               [24] 6041 	movx	a,@dptr
      002678 7B 00            [12] 6042 	mov	r3,#0x00
      00267A 2D               [12] 6043 	add	a,r5
      00267B FD               [12] 6044 	mov	r5,a
      00267C EB               [12] 6045 	mov	a,r3
      00267D 3E               [12] 6046 	addc	a,r6
      00267E FE               [12] 6047 	mov	r6,a
      00267F EF               [12] 6048 	mov	a,r7
      002680 24 FD            [12] 6049 	add	a,#0xff - 0x02
      002682 50 15            [24] 6050 	jnc	00113$
      002684 90 00 E0         [24] 6051 	mov	dptr,#_year
      002687 E0               [24] 6052 	movx	a,@dptr
      002688 54 03            [12] 6053 	anl	a,#0x03
      00268A 7F 00            [12] 6054 	mov	r7,#0x00
      00268C 4F               [12] 6055 	orl	a,r7
      00268D B4 01 00         [24] 6056 	cjne	a,#0x01,00146$
      002690                       6057 00146$:
      002690 92 49            [24] 6058 	mov  _gsm_thietlapngaygiothuc_sloc0_1_0,c
      002692 E4               [12] 6059 	clr	a
      002693 33               [12] 6060 	rlc	a
      002694 FC               [12] 6061 	mov	r4,a
      002695 7F 00            [12] 6062 	mov	r7,#0x00
      002697 80 04            [24] 6063 	sjmp	00114$
      002699                       6064 00113$:
      002699 7C 02            [12] 6065 	mov	r4,#0x02
      00269B 7F 00            [12] 6066 	mov	r7,#0x00
      00269D                       6067 00114$:
      00269D EC               [12] 6068 	mov	a,r4
      00269E 2D               [12] 6069 	add	a,r5
      00269F FD               [12] 6070 	mov	r5,a
      0026A0 EF               [12] 6071 	mov	a,r7
      0026A1 3E               [12] 6072 	addc	a,r6
      0026A2 FE               [12] 6073 	mov	r6,a
      0026A3 90 00 E0         [24] 6074 	mov	dptr,#_year
      0026A6 E0               [24] 6075 	movx	a,@dptr
      0026A7 FF               [12] 6076 	mov	r7,a
      0026A8 FB               [12] 6077 	mov	r3,a
      0026A9 7C 00            [12] 6078 	mov	r4,#0x00
      0026AB 2D               [12] 6079 	add	a,r5
      0026AC FD               [12] 6080 	mov	r5,a
      0026AD EC               [12] 6081 	mov	a,r4
      0026AE 3E               [12] 6082 	addc	a,r6
      0026AF FE               [12] 6083 	mov	r6,a
      0026B0 8B 82            [24] 6084 	mov	dpl,r3
      0026B2 8C 83            [24] 6085 	mov	dph,r4
      0026B4 A3               [24] 6086 	inc	dptr
      0026B5 A3               [24] 6087 	inc	dptr
      0026B6 A3               [24] 6088 	inc	dptr
      0026B7 75 1B 04         [24] 6089 	mov	__divsint_PARM_2,#0x04
                                   6090 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      0026BA 8C 1C            [24] 6091 	mov	(__divsint_PARM_2 + 1),r4
      0026BC C0 07            [24] 6092 	push	ar7
      0026BE C0 06            [24] 6093 	push	ar6
      0026C0 C0 05            [24] 6094 	push	ar5
      0026C2 12 84 9D         [24] 6095 	lcall	__divsint
      0026C5 AB 82            [24] 6096 	mov	r3,dpl
      0026C7 AC 83            [24] 6097 	mov	r4,dph
      0026C9 D0 05            [24] 6098 	pop	ar5
      0026CB D0 06            [24] 6099 	pop	ar6
      0026CD EB               [12] 6100 	mov	a,r3
      0026CE 2D               [12] 6101 	add	a,r5
      0026CF FD               [12] 6102 	mov	r5,a
      0026D0 EC               [12] 6103 	mov	a,r4
      0026D1 3E               [12] 6104 	addc	a,r6
      0026D2 FE               [12] 6105 	mov	r6,a
      0026D3 8D 82            [24] 6106 	mov	dpl,r5
      0026D5 8E 83            [24] 6107 	mov	dph,r6
      0026D7 A3               [24] 6108 	inc	dptr
                                   6109 ;	include/gsm_serial.c:332: date = check%7+1;
      0026D8 75 1B 07         [24] 6110 	mov	__moduint_PARM_2,#0x07
      0026DB 75 1C 00         [24] 6111 	mov	(__moduint_PARM_2 + 1),#0x00
      0026DE 12 83 FE         [24] 6112 	lcall	__moduint
      0026E1 AD 82            [24] 6113 	mov	r5,dpl
      0026E3 D0 07            [24] 6114 	pop	ar7
      0026E5 0D               [12] 6115 	inc	r5
      0026E6 90 00 DD         [24] 6116 	mov	dptr,#_date
      0026E9 ED               [12] 6117 	mov	a,r5
      0026EA F0               [24] 6118 	movx	@dptr,a
                                   6119 ;	include/gsm_serial.c:333: rtc_setdate(date,day,month,year);
      0026EB 90 00 DE         [24] 6120 	mov	dptr,#_day
      0026EE E0               [24] 6121 	movx	a,@dptr
      0026EF F5 3C            [12] 6122 	mov	_rtc_setdate_PARM_2,a
      0026F1 90 00 DF         [24] 6123 	mov	dptr,#_month
      0026F4 E0               [24] 6124 	movx	a,@dptr
      0026F5 F5 3D            [12] 6125 	mov	_rtc_setdate_PARM_3,a
      0026F7 8F 3E            [24] 6126 	mov	_rtc_setdate_PARM_4,r7
      0026F9 8D 82            [24] 6127 	mov	dpl,r5
      0026FB 12 02 95         [24] 6128 	lcall	_rtc_setdate
                                   6129 ;	include/gsm_serial.c:334: GPS_time_temp = 1;
                                   6130 ;	assignBit
      0026FE D2 48            [12] 6131 	setb	_gsm_thietlapngaygiothuc_GPS_time_temp_65536_124
      002700                       6132 00110$:
                                   6133 ;	include/gsm_serial.c:339: GPS_time = GPS_time_temp;
                                   6134 ;	assignBit
      002700 A2 48            [12] 6135 	mov	c,_gsm_thietlapngaygiothuc_GPS_time_temp_65536_124
      002702 92 1D            [24] 6136 	mov	_GPS_time,c
                                   6137 ;	include/gsm_serial.c:340: gsm_serial_cmd = NORMAL;
      002704 90 00 FE         [24] 6138 	mov	dptr,#_gsm_serial_cmd
      002707 E4               [12] 6139 	clr	a
      002708 F0               [24] 6140 	movx	@dptr,a
                                   6141 ;	include/gsm_serial.c:341: }
      002709 22               [24] 6142 	ret
                                   6143 ;------------------------------------------------------------
                                   6144 ;Allocation info for local variables in function 'gsm_thietlapgoidien'
                                   6145 ;------------------------------------------------------------
                                   6146 ;	include/gsm_serial.c:343: __bit gsm_thietlapgoidien(){
                                   6147 ;	-----------------------------------------
                                   6148 ;	 function gsm_thietlapgoidien
                                   6149 ;	-----------------------------------------
      00270A                       6150 _gsm_thietlapgoidien:
                                   6151 ;	include/gsm_serial.c:345: if(gsm_sendandcheck("AT+CLIP=1\r", 15, 1,"  SENDING CLIP  ")){
      00270A 75 5B 13         [24] 6152 	mov	_gsm_sendandcheck_PARM_4,#___str_61
      00270D 75 5C 8B         [24] 6153 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_61 >> 8)
      002710 75 5D 80         [24] 6154 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      002713 75 59 0F         [24] 6155 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      002716 75 5A 01         [24] 6156 	mov	_gsm_sendandcheck_PARM_3,#0x01
      002719 90 8B 08         [24] 6157 	mov	dptr,#___str_60
      00271C 75 F0 80         [24] 6158 	mov	b,#0x80
      00271F 12 15 AA         [24] 6159 	lcall	_gsm_sendandcheck
      002722 50 2D            [24] 6160 	jnc	00104$
                                   6161 ;	include/gsm_serial.c:346: clear_sms_buffer(0);
      002724 75 82 00         [24] 6162 	mov	dpl,#0x00
      002727 12 15 8E         [24] 6163 	lcall	_clear_sms_buffer
                                   6164 ;	include/gsm_serial.c:347: sms_index = 0;
      00272A 90 00 BB         [24] 6165 	mov	dptr,#_sms_index
      00272D E4               [12] 6166 	clr	a
      00272E F0               [24] 6167 	movx	@dptr,a
                                   6168 ;	include/gsm_serial.c:348: gsm_serial_cmd = CALR;
      00272F 90 00 FE         [24] 6169 	mov	dptr,#_gsm_serial_cmd
      002732 74 0B            [12] 6170 	mov	a,#0x0b
      002734 F0               [24] 6171 	movx	@dptr,a
                                   6172 ;	include/gsm_serial.c:349: if(gsm_sendandcheck("AT+CCALR?\r",15,1," THIET LAP GOI ")){
      002735 75 5B 2F         [24] 6173 	mov	_gsm_sendandcheck_PARM_4,#___str_63
      002738 75 5C 8B         [24] 6174 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_63 >> 8)
      00273B 75 5D 80         [24] 6175 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      00273E 75 59 0F         [24] 6176 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      002741 75 5A 01         [24] 6177 	mov	_gsm_sendandcheck_PARM_3,#0x01
      002744 90 8B 24         [24] 6178 	mov	dptr,#___str_62
      002747 75 F0 80         [24] 6179 	mov	b,#0x80
      00274A 12 15 AA         [24] 6180 	lcall	_gsm_sendandcheck
      00274D 50 02            [24] 6181 	jnc	00104$
                                   6182 ;	include/gsm_serial.c:350: return 1;
      00274F D3               [12] 6183 	setb	c
      002750 22               [24] 6184 	ret
      002751                       6185 00104$:
                                   6186 ;	include/gsm_serial.c:353: return 0;
      002751 C3               [12] 6187 	clr	c
                                   6188 ;	include/gsm_serial.c:355: }
      002752 22               [24] 6189 	ret
                                   6190 ;------------------------------------------------------------
                                   6191 ;Allocation info for local variables in function 'gsm_thietlapnhantin'
                                   6192 ;------------------------------------------------------------
                                   6193 ;	include/gsm_serial.c:357: __bit gsm_thietlapnhantin(){
                                   6194 ;	-----------------------------------------
                                   6195 ;	 function gsm_thietlapnhantin
                                   6196 ;	-----------------------------------------
      002753                       6197 _gsm_thietlapnhantin:
                                   6198 ;	include/gsm_serial.c:358: if(!gsm_pw || !sms_on) return 0;
      002753 30 A0 06         [24] 6199 	jnb	_P20,00101$
      002756 90 01 32         [24] 6200 	mov	dptr,#_sms_on
      002759 E0               [24] 6201 	movx	a,@dptr
      00275A 70 02            [24] 6202 	jnz	00102$
      00275C                       6203 00101$:
      00275C C3               [12] 6204 	clr	c
      00275D 22               [24] 6205 	ret
      00275E                       6206 00102$:
                                   6207 ;	include/gsm_serial.c:359: if(gsm_sendandcheck("AT+CMGF=1\r", 15, 1,"  SENDING CMGF  ")){
      00275E 75 5B 4A         [24] 6208 	mov	_gsm_sendandcheck_PARM_4,#___str_65
      002761 75 5C 8B         [24] 6209 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_65 >> 8)
      002764 75 5D 80         [24] 6210 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      002767 75 59 0F         [24] 6211 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      00276A 75 5A 01         [24] 6212 	mov	_gsm_sendandcheck_PARM_3,#0x01
      00276D 90 8B 3F         [24] 6213 	mov	dptr,#___str_64
      002770 75 F0 80         [24] 6214 	mov	b,#0x80
      002773 12 15 AA         [24] 6215 	lcall	_gsm_sendandcheck
      002776 50 39            [24] 6216 	jnc	00109$
                                   6217 ;	include/gsm_serial.c:360: if(gsm_sendandcheck("AT+CNMI=1,1,0,0,1\r", 15, 1,"  SENDING CNMI  ")){
      002778 75 5B 6E         [24] 6218 	mov	_gsm_sendandcheck_PARM_4,#___str_67
      00277B 75 5C 8B         [24] 6219 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_67 >> 8)
      00277E 75 5D 80         [24] 6220 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      002781 75 59 0F         [24] 6221 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      002784 75 5A 01         [24] 6222 	mov	_gsm_sendandcheck_PARM_3,#0x01
      002787 90 8B 5B         [24] 6223 	mov	dptr,#___str_66
      00278A 75 F0 80         [24] 6224 	mov	b,#0x80
      00278D 12 15 AA         [24] 6225 	lcall	_gsm_sendandcheck
      002790 50 1F            [24] 6226 	jnc	00109$
                                   6227 ;	include/gsm_serial.c:361: if(gsm_sendandcheck("AT+CMGDA=\"DEL ALL\"\r", 15, 1,"  THIET LAP TN  ")){
      002792 75 5B 93         [24] 6228 	mov	_gsm_sendandcheck_PARM_4,#___str_69
      002795 75 5C 8B         [24] 6229 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_69 >> 8)
      002798 75 5D 80         [24] 6230 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      00279B 75 59 0F         [24] 6231 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      00279E 75 5A 01         [24] 6232 	mov	_gsm_sendandcheck_PARM_3,#0x01
      0027A1 90 8B 7F         [24] 6233 	mov	dptr,#___str_68
      0027A4 75 F0 80         [24] 6234 	mov	b,#0x80
      0027A7 12 15 AA         [24] 6235 	lcall	_gsm_sendandcheck
      0027AA 50 05            [24] 6236 	jnc	00109$
                                   6237 ;	include/gsm_serial.c:362: kiemtratinhieu();
      0027AC 12 18 DA         [24] 6238 	lcall	_kiemtratinhieu
                                   6239 ;	include/gsm_serial.c:363: return 1;
      0027AF D3               [12] 6240 	setb	c
      0027B0 22               [24] 6241 	ret
      0027B1                       6242 00109$:
                                   6243 ;	include/gsm_serial.c:367: return 0;
      0027B1 C3               [12] 6244 	clr	c
                                   6245 ;	include/gsm_serial.c:368: }
      0027B2 22               [24] 6246 	ret
                                   6247 ;------------------------------------------------------------
                                   6248 ;Allocation info for local variables in function 'gsm_thietlapnhantin1'
                                   6249 ;------------------------------------------------------------
                                   6250 ;	include/gsm_serial.c:370: __bit gsm_thietlapnhantin1(){
                                   6251 ;	-----------------------------------------
                                   6252 ;	 function gsm_thietlapnhantin1
                                   6253 ;	-----------------------------------------
      0027B3                       6254 _gsm_thietlapnhantin1:
                                   6255 ;	include/gsm_serial.c:371: if(!gsm_pw || !sms_on) return 0;
      0027B3 30 A0 06         [24] 6256 	jnb	_P20,00101$
      0027B6 90 01 32         [24] 6257 	mov	dptr,#_sms_on
      0027B9 E0               [24] 6258 	movx	a,@dptr
      0027BA 70 02            [24] 6259 	jnz	00102$
      0027BC                       6260 00101$:
      0027BC C3               [12] 6261 	clr	c
      0027BD 22               [24] 6262 	ret
      0027BE                       6263 00102$:
                                   6264 ;	include/gsm_serial.c:372: if(!gsm_sendandcheck("AT\r", 15, 1,"THIET LAP TNHAN ")) return 0;
      0027BE 75 5B A4         [24] 6265 	mov	_gsm_sendandcheck_PARM_4,#___str_70
      0027C1 75 5C 8B         [24] 6266 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_70 >> 8)
      0027C4 75 5D 80         [24] 6267 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      0027C7 75 59 0F         [24] 6268 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      0027CA 75 5A 01         [24] 6269 	mov	_gsm_sendandcheck_PARM_3,#0x01
      0027CD 90 89 D6         [24] 6270 	mov	dptr,#___str_38
      0027D0 75 F0 80         [24] 6271 	mov	b,#0x80
      0027D3 12 15 AA         [24] 6272 	lcall	_gsm_sendandcheck
      0027D6 40 01            [24] 6273 	jc	00105$
      0027D8 22               [24] 6274 	ret
      0027D9                       6275 00105$:
                                   6276 ;	include/gsm_serial.c:373: if(gsm_sendandcheck("AT+CMGF=1\r", 15, 2,"  SENDING CMGF  ")){
      0027D9 75 5B 4A         [24] 6277 	mov	_gsm_sendandcheck_PARM_4,#___str_65
      0027DC 75 5C 8B         [24] 6278 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_65 >> 8)
      0027DF 75 5D 80         [24] 6279 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      0027E2 75 59 0F         [24] 6280 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      0027E5 75 5A 02         [24] 6281 	mov	_gsm_sendandcheck_PARM_3,#0x02
      0027E8 90 8B 3F         [24] 6282 	mov	dptr,#___str_64
      0027EB 75 F0 80         [24] 6283 	mov	b,#0x80
      0027EE 12 15 AA         [24] 6284 	lcall	_gsm_sendandcheck
      0027F1 50 36            [24] 6285 	jnc	00111$
                                   6286 ;	include/gsm_serial.c:374: if(gsm_sendandcheck("AT+CNMI=1,1,0,0,1\r", 15, 1,"  SENDING CNMI  ")){
      0027F3 75 5B 6E         [24] 6287 	mov	_gsm_sendandcheck_PARM_4,#___str_67
      0027F6 75 5C 8B         [24] 6288 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_67 >> 8)
      0027F9 75 5D 80         [24] 6289 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      0027FC 75 59 0F         [24] 6290 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      0027FF 75 5A 01         [24] 6291 	mov	_gsm_sendandcheck_PARM_3,#0x01
      002802 90 8B 5B         [24] 6292 	mov	dptr,#___str_66
      002805 75 F0 80         [24] 6293 	mov	b,#0x80
      002808 12 15 AA         [24] 6294 	lcall	_gsm_sendandcheck
      00280B 50 1C            [24] 6295 	jnc	00111$
                                   6296 ;	include/gsm_serial.c:375: if(gsm_sendandcheck("AT+CMGDA=\"DEL ALL\"\r", 20, 3,"  SENDING CMGDA  ")){
      00280D 75 5B B5         [24] 6297 	mov	_gsm_sendandcheck_PARM_4,#___str_71
      002810 75 5C 8B         [24] 6298 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_71 >> 8)
      002813 75 5D 80         [24] 6299 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      002816 75 59 14         [24] 6300 	mov	_gsm_sendandcheck_PARM_2,#0x14
      002819 75 5A 03         [24] 6301 	mov	_gsm_sendandcheck_PARM_3,#0x03
      00281C 90 8B 7F         [24] 6302 	mov	dptr,#___str_68
      00281F 75 F0 80         [24] 6303 	mov	b,#0x80
      002822 12 15 AA         [24] 6304 	lcall	_gsm_sendandcheck
      002825 50 02            [24] 6305 	jnc	00111$
                                   6306 ;	include/gsm_serial.c:376: return 1;
      002827 D3               [12] 6307 	setb	c
      002828 22               [24] 6308 	ret
      002829                       6309 00111$:
                                   6310 ;	include/gsm_serial.c:380: return 0;
      002829 C3               [12] 6311 	clr	c
                                   6312 ;	include/gsm_serial.c:381: }
      00282A 22               [24] 6313 	ret
                                   6314 ;------------------------------------------------------------
                                   6315 ;Allocation info for local variables in function 'gsm_laygio_gps'
                                   6316 ;------------------------------------------------------------
                                   6317 ;phay                      Allocated to registers r7 
                                   6318 ;i                         Allocated to registers r5 
                                   6319 ;------------------------------------------------------------
                                   6320 ;	include/gsm_serial.c:384: void gsm_laygio_gps(){
                                   6321 ;	-----------------------------------------
                                   6322 ;	 function gsm_laygio_gps
                                   6323 ;	-----------------------------------------
      00282B                       6324 _gsm_laygio_gps:
                                   6325 ;	include/gsm_serial.c:385: __bit GPS_time_temp = 0;
                                   6326 ;	assignBit
      00282B C2 4A            [12] 6327 	clr	_gsm_laygio_gps_GPS_time_temp_65536_141
                                   6328 ;	include/gsm_serial.c:386: if(sim_test_sec==61) return;
      00282D 90 01 31         [24] 6329 	mov	dptr,#_sim_test_sec
      002830 E0               [24] 6330 	movx	a,@dptr
      002831 FF               [12] 6331 	mov	r7,a
      002832 BF 3D 01         [24] 6332 	cjne	r7,#0x3d,00102$
      002835 22               [24] 6333 	ret
      002836                       6334 00102$:
                                   6335 ;	include/gsm_serial.c:387: if(gsm_sendandcheck("AT\r", 15, 1,"LAY GIO VE TINH ")){
      002836 75 5B C7         [24] 6336 	mov	_gsm_sendandcheck_PARM_4,#___str_72
      002839 75 5C 8B         [24] 6337 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_72 >> 8)
      00283C 75 5D 80         [24] 6338 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      00283F 75 59 0F         [24] 6339 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      002842 75 5A 01         [24] 6340 	mov	_gsm_sendandcheck_PARM_3,#0x01
      002845 90 89 D6         [24] 6341 	mov	dptr,#___str_38
      002848 75 F0 80         [24] 6342 	mov	b,#0x80
      00284B 12 15 AA         [24] 6343 	lcall	_gsm_sendandcheck
      00284E 40 03            [24] 6344 	jc	00220$
      002850 02 2A 5B         [24] 6345 	ljmp	00132$
      002853                       6346 00220$:
                                   6347 ;	include/gsm_serial.c:388: if(gsm_sendandcheck("AT+IPR=0\r", 15, 1,"  SENDING IPR   ")){
      002853 75 5B E2         [24] 6348 	mov	_gsm_sendandcheck_PARM_4,#___str_74
      002856 75 5C 8B         [24] 6349 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_74 >> 8)
      002859 75 5D 80         [24] 6350 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      00285C 75 59 0F         [24] 6351 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      00285F 75 5A 01         [24] 6352 	mov	_gsm_sendandcheck_PARM_3,#0x01
      002862 90 8B D8         [24] 6353 	mov	dptr,#___str_73
      002865 75 F0 80         [24] 6354 	mov	b,#0x80
      002868 12 15 AA         [24] 6355 	lcall	_gsm_sendandcheck
      00286B 40 03            [24] 6356 	jc	00221$
      00286D 02 2A 5B         [24] 6357 	ljmp	00132$
      002870                       6358 00221$:
                                   6359 ;	include/gsm_serial.c:389: gsm_sendandcheck("AT+CLIP=1\r", 15, 1,"  SENDING CLIP  ");
      002870 75 5B 13         [24] 6360 	mov	_gsm_sendandcheck_PARM_4,#___str_61
      002873 75 5C 8B         [24] 6361 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_61 >> 8)
      002876 75 5D 80         [24] 6362 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      002879 75 59 0F         [24] 6363 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      00287C 75 5A 01         [24] 6364 	mov	_gsm_sendandcheck_PARM_3,#0x01
      00287F 90 8B 08         [24] 6365 	mov	dptr,#___str_60
      002882 75 F0 80         [24] 6366 	mov	b,#0x80
      002885 12 15 AA         [24] 6367 	lcall	_gsm_sendandcheck
                                   6368 ;	include/gsm_serial.c:390: if(eep_gpson){
      002888 90 F0 02         [24] 6369 	mov	dptr,#_eep_gpson
      00288B E4               [12] 6370 	clr	a
      00288C 93               [24] 6371 	movc	a,@a+dptr
      00288D 70 03            [24] 6372 	jnz	00222$
      00288F 02 2A 5B         [24] 6373 	ljmp	00132$
      002892                       6374 00222$:
                                   6375 ;	include/gsm_serial.c:391: if(gsm_sendandcheck("AT+CLTS=1\r", 15, 1,"  SENDING CLTS  ")){
      002892 75 5B F3         [24] 6376 	mov	_gsm_sendandcheck_PARM_4,#___str_75
      002895 75 5C 8B         [24] 6377 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_75 >> 8)
      002898 75 5D 80         [24] 6378 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      00289B 75 59 0F         [24] 6379 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      00289E 75 5A 01         [24] 6380 	mov	_gsm_sendandcheck_PARM_3,#0x01
      0028A1 90 8A 9D         [24] 6381 	mov	dptr,#___str_52
      0028A4 75 F0 80         [24] 6382 	mov	b,#0x80
      0028A7 12 15 AA         [24] 6383 	lcall	_gsm_sendandcheck
      0028AA 40 03            [24] 6384 	jc	00223$
      0028AC 02 2A 5B         [24] 6385 	ljmp	00132$
      0028AF                       6386 00223$:
                                   6387 ;	include/gsm_serial.c:392: if(gsm_sendandcheck("AT+CFUN=0\r", 15, 1,"  SENDING CFUN0  ")){
      0028AF 75 5B 0F         [24] 6388 	mov	_gsm_sendandcheck_PARM_4,#___str_77
      0028B2 75 5C 8C         [24] 6389 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_77 >> 8)
      0028B5 75 5D 80         [24] 6390 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      0028B8 75 59 0F         [24] 6391 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      0028BB 75 5A 01         [24] 6392 	mov	_gsm_sendandcheck_PARM_3,#0x01
      0028BE 90 8C 04         [24] 6393 	mov	dptr,#___str_76
      0028C1 75 F0 80         [24] 6394 	mov	b,#0x80
      0028C4 12 15 AA         [24] 6395 	lcall	_gsm_sendandcheck
      0028C7 40 03            [24] 6396 	jc	00224$
      0028C9 02 2A 5B         [24] 6397 	ljmp	00132$
      0028CC                       6398 00224$:
                                   6399 ;	include/gsm_serial.c:393: gsm_serial_cmd = CFUN1;
      0028CC 90 00 FE         [24] 6400 	mov	dptr,#_gsm_serial_cmd
      0028CF 74 06            [12] 6401 	mov	a,#0x06
      0028D1 F0               [24] 6402 	movx	@dptr,a
                                   6403 ;	include/gsm_serial.c:394: if(gsm_sendandcheck("AT+CFUN=1\r", 15, 2,"  SENDING CFUN1  ")){
      0028D2 75 5B 2C         [24] 6404 	mov	_gsm_sendandcheck_PARM_4,#___str_79
      0028D5 75 5C 8C         [24] 6405 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_79 >> 8)
      0028D8 75 5D 80         [24] 6406 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      0028DB 75 59 0F         [24] 6407 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      0028DE 75 5A 02         [24] 6408 	mov	_gsm_sendandcheck_PARM_3,#0x02
      0028E1 90 8C 21         [24] 6409 	mov	dptr,#___str_78
      0028E4 75 F0 80         [24] 6410 	mov	b,#0x80
      0028E7 12 15 AA         [24] 6411 	lcall	_gsm_sendandcheck
      0028EA 40 03            [24] 6412 	jc	00225$
      0028EC 02 2A 5B         [24] 6413 	ljmp	00132$
      0028EF                       6414 00225$:
                                   6415 ;	include/gsm_serial.c:395: if(have_time == CFUN){
      0028EF 90 00 FF         [24] 6416 	mov	dptr,#_have_time
      0028F2 E0               [24] 6417 	movx	a,@dptr
      0028F3 FF               [12] 6418 	mov	r7,a
      0028F4 BF 01 02         [24] 6419 	cjne	r7,#0x01,00226$
      0028F7 80 03            [24] 6420 	sjmp	00227$
      0028F9                       6421 00226$:
      0028F9 02 2A 5B         [24] 6422 	ljmp	00132$
      0028FC                       6423 00227$:
                                   6424 ;	include/gsm_serial.c:397: while((date_str[i++]!=',' || ++phay<3) && i<11)WATCHDOG;
      0028FC 7F 00            [12] 6425 	mov	r7,#0x00
      0028FE 7E 00            [12] 6426 	mov	r6,#0x00
      002900                       6427 00105$:
      002900 EE               [12] 6428 	mov	a,r6
      002901 24 11            [12] 6429 	add	a,#_date_str
      002903 F5 82            [12] 6430 	mov	dpl,a
      002905 E4               [12] 6431 	clr	a
      002906 34 01            [12] 6432 	addc	a,#(_date_str >> 8)
      002908 F5 83            [12] 6433 	mov	dph,a
      00290A 0E               [12] 6434 	inc	r6
      00290B E0               [24] 6435 	movx	a,@dptr
      00290C FD               [12] 6436 	mov	r5,a
      00290D BD 2C 06         [24] 6437 	cjne	r5,#0x2c,00104$
      002910 0F               [12] 6438 	inc	r7
      002911 BF 03 00         [24] 6439 	cjne	r7,#0x03,00230$
      002914                       6440 00230$:
      002914 50 0A            [24] 6441 	jnc	00107$
      002916                       6442 00104$:
      002916 BE 0B 00         [24] 6443 	cjne	r6,#0x0b,00232$
      002919                       6444 00232$:
      002919 50 05            [24] 6445 	jnc	00107$
      00291B 43 C1 10         [24] 6446 	orl	_WDT_CONTR,#0x10
      00291E 80 E0            [24] 6447 	sjmp	00105$
      002920                       6448 00107$:
                                   6449 ;	include/gsm_serial.c:398: if(phay>2){
      002920 EF               [12] 6450 	mov	a,r7
      002921 24 FD            [12] 6451 	add	a,#0xff - 0x02
      002923 40 03            [24] 6452 	jc	00234$
      002925 02 2A 5B         [24] 6453 	ljmp	00132$
      002928                       6454 00234$:
                                   6455 ;	include/gsm_serial.c:399: if(date_str[i+1]==',') hour = (date_str[i++]-'0');
      002928 8E 07            [24] 6456 	mov	ar7,r6
      00292A 0F               [12] 6457 	inc	r7
      00292B EF               [12] 6458 	mov	a,r7
      00292C 33               [12] 6459 	rlc	a
      00292D 95 E0            [12] 6460 	subb	a,acc
      00292F FD               [12] 6461 	mov	r5,a
      002930 EF               [12] 6462 	mov	a,r7
      002931 24 11            [12] 6463 	add	a,#_date_str
      002933 F5 82            [12] 6464 	mov	dpl,a
      002935 ED               [12] 6465 	mov	a,r5
      002936 34 01            [12] 6466 	addc	a,#(_date_str >> 8)
      002938 F5 83            [12] 6467 	mov	dph,a
      00293A E0               [24] 6468 	movx	a,@dptr
      00293B FF               [12] 6469 	mov	r7,a
      00293C BF 2C 15         [24] 6470 	cjne	r7,#0x2c,00109$
      00293F EE               [12] 6471 	mov	a,r6
      002940 04               [12] 6472 	inc	a
      002941 FF               [12] 6473 	mov	r7,a
      002942 EE               [12] 6474 	mov	a,r6
      002943 24 11            [12] 6475 	add	a,#_date_str
      002945 F5 82            [12] 6476 	mov	dpl,a
      002947 E4               [12] 6477 	clr	a
      002948 34 01            [12] 6478 	addc	a,#(_date_str >> 8)
      00294A F5 83            [12] 6479 	mov	dph,a
      00294C E0               [24] 6480 	movx	a,@dptr
      00294D FD               [12] 6481 	mov	r5,a
      00294E 24 D0            [12] 6482 	add	a,#0xd0
      002950 F5 4B            [12] 6483 	mov	_hour,a
      002952 80 29            [24] 6484 	sjmp	00110$
      002954                       6485 00109$:
                                   6486 ;	include/gsm_serial.c:400: else hour = (date_str[i++]-'0')*10 + (date_str[i++]-'0');
      002954 EE               [12] 6487 	mov	a,r6
      002955 04               [12] 6488 	inc	a
      002956 FD               [12] 6489 	mov	r5,a
      002957 EE               [12] 6490 	mov	a,r6
      002958 24 11            [12] 6491 	add	a,#_date_str
      00295A F5 82            [12] 6492 	mov	dpl,a
      00295C E4               [12] 6493 	clr	a
      00295D 34 01            [12] 6494 	addc	a,#(_date_str >> 8)
      00295F F5 83            [12] 6495 	mov	dph,a
      002961 E0               [24] 6496 	movx	a,@dptr
      002962 24 D0            [12] 6497 	add	a,#0xd0
      002964 75 F0 0A         [24] 6498 	mov	b,#0x0a
      002967 A4               [48] 6499 	mul	ab
      002968 FE               [12] 6500 	mov	r6,a
      002969 ED               [12] 6501 	mov	a,r5
      00296A 04               [12] 6502 	inc	a
      00296B FF               [12] 6503 	mov	r7,a
      00296C ED               [12] 6504 	mov	a,r5
      00296D 24 11            [12] 6505 	add	a,#_date_str
      00296F F5 82            [12] 6506 	mov	dpl,a
      002971 E4               [12] 6507 	clr	a
      002972 34 01            [12] 6508 	addc	a,#(_date_str >> 8)
      002974 F5 83            [12] 6509 	mov	dph,a
      002976 E0               [24] 6510 	movx	a,@dptr
      002977 FD               [12] 6511 	mov	r5,a
      002978 24 D0            [12] 6512 	add	a,#0xd0
      00297A 2E               [12] 6513 	add	a,r6
      00297B F5 4B            [12] 6514 	mov	_hour,a
      00297D                       6515 00110$:
                                   6516 ;	include/gsm_serial.c:401: if(date_str[++i+1]==',') minute = (date_str[i++]-'0');
      00297D 0F               [12] 6517 	inc	r7
      00297E 8F 06            [24] 6518 	mov	ar6,r7
      002980 0E               [12] 6519 	inc	r6
      002981 EE               [12] 6520 	mov	a,r6
      002982 33               [12] 6521 	rlc	a
      002983 95 E0            [12] 6522 	subb	a,acc
      002985 FD               [12] 6523 	mov	r5,a
      002986 EE               [12] 6524 	mov	a,r6
      002987 24 11            [12] 6525 	add	a,#_date_str
      002989 F5 82            [12] 6526 	mov	dpl,a
      00298B ED               [12] 6527 	mov	a,r5
      00298C 34 01            [12] 6528 	addc	a,#(_date_str >> 8)
      00298E F5 83            [12] 6529 	mov	dph,a
      002990 E0               [24] 6530 	movx	a,@dptr
      002991 FE               [12] 6531 	mov	r6,a
      002992 BE 2C 15         [24] 6532 	cjne	r6,#0x2c,00112$
      002995 EF               [12] 6533 	mov	a,r7
      002996 04               [12] 6534 	inc	a
      002997 FE               [12] 6535 	mov	r6,a
      002998 EF               [12] 6536 	mov	a,r7
      002999 24 11            [12] 6537 	add	a,#_date_str
      00299B F5 82            [12] 6538 	mov	dpl,a
      00299D E4               [12] 6539 	clr	a
      00299E 34 01            [12] 6540 	addc	a,#(_date_str >> 8)
      0029A0 F5 83            [12] 6541 	mov	dph,a
      0029A2 E0               [24] 6542 	movx	a,@dptr
      0029A3 FD               [12] 6543 	mov	r5,a
      0029A4 24 D0            [12] 6544 	add	a,#0xd0
      0029A6 F5 4A            [12] 6545 	mov	_minute,a
      0029A8 80 29            [24] 6546 	sjmp	00113$
      0029AA                       6547 00112$:
                                   6548 ;	include/gsm_serial.c:402: else minute = (date_str[i++]-'0')*10 + (date_str[i++]-'0');
      0029AA EF               [12] 6549 	mov	a,r7
      0029AB 04               [12] 6550 	inc	a
      0029AC FD               [12] 6551 	mov	r5,a
      0029AD EF               [12] 6552 	mov	a,r7
      0029AE 24 11            [12] 6553 	add	a,#_date_str
      0029B0 F5 82            [12] 6554 	mov	dpl,a
      0029B2 E4               [12] 6555 	clr	a
      0029B3 34 01            [12] 6556 	addc	a,#(_date_str >> 8)
      0029B5 F5 83            [12] 6557 	mov	dph,a
      0029B7 E0               [24] 6558 	movx	a,@dptr
      0029B8 24 D0            [12] 6559 	add	a,#0xd0
      0029BA 75 F0 0A         [24] 6560 	mov	b,#0x0a
      0029BD A4               [48] 6561 	mul	ab
      0029BE FF               [12] 6562 	mov	r7,a
      0029BF ED               [12] 6563 	mov	a,r5
      0029C0 04               [12] 6564 	inc	a
      0029C1 FE               [12] 6565 	mov	r6,a
      0029C2 ED               [12] 6566 	mov	a,r5
      0029C3 24 11            [12] 6567 	add	a,#_date_str
      0029C5 F5 82            [12] 6568 	mov	dpl,a
      0029C7 E4               [12] 6569 	clr	a
      0029C8 34 01            [12] 6570 	addc	a,#(_date_str >> 8)
      0029CA F5 83            [12] 6571 	mov	dph,a
      0029CC E0               [24] 6572 	movx	a,@dptr
      0029CD FD               [12] 6573 	mov	r5,a
      0029CE 24 D0            [12] 6574 	add	a,#0xd0
      0029D0 2F               [12] 6575 	add	a,r7
      0029D1 F5 4A            [12] 6576 	mov	_minute,a
      0029D3                       6577 00113$:
                                   6578 ;	include/gsm_serial.c:403: if(date_str[++i+1]==',') second = (date_str[i++]-'0');
      0029D3 EE               [12] 6579 	mov	a,r6
      0029D4 04               [12] 6580 	inc	a
      0029D5 FF               [12] 6581 	mov	r7,a
      0029D6 FE               [12] 6582 	mov	r6,a
      0029D7 0E               [12] 6583 	inc	r6
      0029D8 EE               [12] 6584 	mov	a,r6
      0029D9 33               [12] 6585 	rlc	a
      0029DA 95 E0            [12] 6586 	subb	a,acc
      0029DC FD               [12] 6587 	mov	r5,a
      0029DD EE               [12] 6588 	mov	a,r6
      0029DE 24 11            [12] 6589 	add	a,#_date_str
      0029E0 F5 82            [12] 6590 	mov	dpl,a
      0029E2 ED               [12] 6591 	mov	a,r5
      0029E3 34 01            [12] 6592 	addc	a,#(_date_str >> 8)
      0029E5 F5 83            [12] 6593 	mov	dph,a
      0029E7 E0               [24] 6594 	movx	a,@dptr
      0029E8 FE               [12] 6595 	mov	r6,a
      0029E9 BE 2C 12         [24] 6596 	cjne	r6,#0x2c,00115$
      0029EC EF               [12] 6597 	mov	a,r7
      0029ED 24 11            [12] 6598 	add	a,#_date_str
      0029EF F5 82            [12] 6599 	mov	dpl,a
      0029F1 E4               [12] 6600 	clr	a
      0029F2 34 01            [12] 6601 	addc	a,#(_date_str >> 8)
      0029F4 F5 83            [12] 6602 	mov	dph,a
      0029F6 E0               [24] 6603 	movx	a,@dptr
      0029F7 FE               [12] 6604 	mov	r6,a
      0029F8 24 D0            [12] 6605 	add	a,#0xd0
      0029FA F5 49            [12] 6606 	mov	_second,a
      0029FC 80 26            [24] 6607 	sjmp	00116$
      0029FE                       6608 00115$:
                                   6609 ;	include/gsm_serial.c:404: else second = (date_str[i++]-'0')*10 + (date_str[i++]-'0');
      0029FE EF               [12] 6610 	mov	a,r7
      0029FF 04               [12] 6611 	inc	a
      002A00 FE               [12] 6612 	mov	r6,a
      002A01 EF               [12] 6613 	mov	a,r7
      002A02 24 11            [12] 6614 	add	a,#_date_str
      002A04 F5 82            [12] 6615 	mov	dpl,a
      002A06 E4               [12] 6616 	clr	a
      002A07 34 01            [12] 6617 	addc	a,#(_date_str >> 8)
      002A09 F5 83            [12] 6618 	mov	dph,a
      002A0B E0               [24] 6619 	movx	a,@dptr
      002A0C 24 D0            [12] 6620 	add	a,#0xd0
      002A0E 75 F0 0A         [24] 6621 	mov	b,#0x0a
      002A11 A4               [48] 6622 	mul	ab
      002A12 FF               [12] 6623 	mov	r7,a
      002A13 EE               [12] 6624 	mov	a,r6
      002A14 24 11            [12] 6625 	add	a,#_date_str
      002A16 F5 82            [12] 6626 	mov	dpl,a
      002A18 E4               [12] 6627 	clr	a
      002A19 34 01            [12] 6628 	addc	a,#(_date_str >> 8)
      002A1B F5 83            [12] 6629 	mov	dph,a
      002A1D E0               [24] 6630 	movx	a,@dptr
      002A1E FE               [12] 6631 	mov	r6,a
      002A1F 24 D0            [12] 6632 	add	a,#0xd0
      002A21 2F               [12] 6633 	add	a,r7
      002A22 F5 49            [12] 6634 	mov	_second,a
      002A24                       6635 00116$:
                                   6636 ;	include/gsm_serial.c:405: hour = (hour+7>23) ? hour-17 : hour+7;
      002A24 AE 4B            [24] 6637 	mov	r6,_hour
      002A26 7F 00            [12] 6638 	mov	r7,#0x00
      002A28 74 07            [12] 6639 	mov	a,#0x07
      002A2A 2E               [12] 6640 	add	a,r6
      002A2B FE               [12] 6641 	mov	r6,a
      002A2C E4               [12] 6642 	clr	a
      002A2D 3F               [12] 6643 	addc	a,r7
      002A2E FF               [12] 6644 	mov	r7,a
      002A2F C3               [12] 6645 	clr	c
      002A30 74 17            [12] 6646 	mov	a,#0x17
      002A32 9E               [12] 6647 	subb	a,r6
      002A33 74 80            [12] 6648 	mov	a,#(0x00 ^ 0x80)
      002A35 8F F0            [24] 6649 	mov	b,r7
      002A37 63 F0 80         [24] 6650 	xrl	b,#0x80
      002A3A 95 F0            [12] 6651 	subb	a,b
      002A3C 50 07            [24] 6652 	jnc	00135$
      002A3E E5 4B            [12] 6653 	mov	a,_hour
      002A40 24 EF            [12] 6654 	add	a,#0xef
      002A42 FF               [12] 6655 	mov	r7,a
      002A43 80 06            [24] 6656 	sjmp	00136$
      002A45                       6657 00135$:
      002A45 AE 4B            [24] 6658 	mov	r6,_hour
      002A47 74 07            [12] 6659 	mov	a,#0x07
      002A49 2E               [12] 6660 	add	a,r6
      002A4A FF               [12] 6661 	mov	r7,a
      002A4B                       6662 00136$:
      002A4B 8F 4B            [24] 6663 	mov	_hour,r7
                                   6664 ;	include/gsm_serial.c:406: rtc_settime(hour,minute,second);
      002A4D 85 4A 3A         [24] 6665 	mov	_rtc_settime_PARM_2,_minute
      002A50 85 49 3B         [24] 6666 	mov	_rtc_settime_PARM_3,_second
      002A53 85 4B 82         [24] 6667 	mov	dpl,_hour
      002A56 12 02 63         [24] 6668 	lcall	_rtc_settime
                                   6669 ;	include/gsm_serial.c:407: GPS_time_temp = 1;
                                   6670 ;	assignBit
      002A59 D2 4A            [12] 6671 	setb	_gsm_laygio_gps_GPS_time_temp_65536_141
      002A5B                       6672 00132$:
                                   6673 ;	include/gsm_serial.c:416: GPS_time = GPS_time_temp;
                                   6674 ;	assignBit
      002A5B A2 4A            [12] 6675 	mov	c,_gsm_laygio_gps_GPS_time_temp_65536_141
      002A5D 92 1D            [24] 6676 	mov	_GPS_time,c
                                   6677 ;	include/gsm_serial.c:417: gsm_serial_cmd = NORMAL;
      002A5F 90 00 FE         [24] 6678 	mov	dptr,#_gsm_serial_cmd
      002A62 E4               [12] 6679 	clr	a
      002A63 F0               [24] 6680 	movx	@dptr,a
                                   6681 ;	include/gsm_serial.c:418: }
      002A64 22               [24] 6682 	ret
                                   6683 ;------------------------------------------------------------
                                   6684 ;Allocation info for local variables in function 'gsm_serial_interrupt'
                                   6685 ;------------------------------------------------------------
                                   6686 ;	include/gsm_serial.c:424: void gsm_serial_interrupt() __interrupt gsm_SERIAL_INT __using SERIAL_MEM{
                                   6687 ;	-----------------------------------------
                                   6688 ;	 function gsm_serial_interrupt
                                   6689 ;	-----------------------------------------
      002A65                       6690 _gsm_serial_interrupt:
                           000017  6691 	ar7 = 0x17
                           000016  6692 	ar6 = 0x16
                           000015  6693 	ar5 = 0x15
                           000014  6694 	ar4 = 0x14
                           000013  6695 	ar3 = 0x13
                           000012  6696 	ar2 = 0x12
                           000011  6697 	ar1 = 0x11
                           000010  6698 	ar0 = 0x10
      002A65 C0 2A            [24] 6699 	push	bits
      002A67 C0 E0            [24] 6700 	push	acc
      002A69 C0 F0            [24] 6701 	push	b
      002A6B C0 82            [24] 6702 	push	dpl
      002A6D C0 83            [24] 6703 	push	dph
      002A6F C0 07            [24] 6704 	push	(0+7)
      002A71 C0 06            [24] 6705 	push	(0+6)
      002A73 C0 05            [24] 6706 	push	(0+5)
      002A75 C0 04            [24] 6707 	push	(0+4)
      002A77 C0 03            [24] 6708 	push	(0+3)
      002A79 C0 02            [24] 6709 	push	(0+2)
      002A7B C0 01            [24] 6710 	push	(0+1)
      002A7D C0 00            [24] 6711 	push	(0+0)
      002A7F C0 D0            [24] 6712 	push	psw
      002A81 75 D0 10         [24] 6713 	mov	psw,#0x10
                                   6714 ;	include/gsm_serial.c:425: if(gsm_RI){
      002A84 20 98 03         [24] 6715 	jb	_RI,00955$
      002A87 02 43 21         [24] 6716 	ljmp	00350$
      002A8A                       6717 00955$:
                                   6718 ;	include/gsm_serial.c:426: WATCHDOG;
      002A8A 43 C1 10         [24] 6719 	orl	_WDT_CONTR,#0x10
                                   6720 ;	include/gsm_serial.c:427: connect = connect_time_out;
      002A8D 90 00 FC         [24] 6721 	mov	dptr,#_connect_time_out
      002A90 E0               [24] 6722 	movx	a,@dptr
      002A91 90 00 FB         [24] 6723 	mov	dptr,#_connect
      002A94 F0               [24] 6724 	movx	@dptr,a
                                   6725 ;	include/gsm_serial.c:428: gsm_receive_buf[gsm_receive_pointer] = SBUF;
      002A95 90 01 00         [24] 6726 	mov	dptr,#_gsm_receive_pointer
      002A98 E0               [24] 6727 	movx	a,@dptr
      002A99 24 02            [12] 6728 	add	a,#_gsm_receive_buf
      002A9B F5 82            [12] 6729 	mov	dpl,a
      002A9D E4               [12] 6730 	clr	a
      002A9E 34 01            [12] 6731 	addc	a,#(_gsm_receive_buf >> 8)
      002AA0 F5 83            [12] 6732 	mov	dph,a
      002AA2 E5 99            [12] 6733 	mov	a,_SBUF
      002AA4 F0               [24] 6734 	movx	@dptr,a
                                   6735 ;	include/gsm_serial.c:430: if((gsm_receive_buf[gsm_receive_pointer]=='N' && gsm_receive_buf[(gsm_receive_pointer+12)%13] =='I' &&
      002AA5 90 01 00         [24] 6736 	mov	dptr,#_gsm_receive_pointer
      002AA8 E0               [24] 6737 	movx	a,@dptr
      002AA9 FF               [12] 6738 	mov	r7,a
      002AAA 24 02            [12] 6739 	add	a,#_gsm_receive_buf
      002AAC F5 82            [12] 6740 	mov	dpl,a
      002AAE E4               [12] 6741 	clr	a
      002AAF 34 01            [12] 6742 	addc	a,#(_gsm_receive_buf >> 8)
      002AB1 F5 83            [12] 6743 	mov	dph,a
      002AB3 E0               [24] 6744 	movx	a,@dptr
      002AB4 FE               [12] 6745 	mov	r6,a
      002AB5 BE 4E 02         [24] 6746 	cjne	r6,#0x4e,00956$
      002AB8 80 03            [24] 6747 	sjmp	00957$
      002ABA                       6748 00956$:
      002ABA 02 2B EB         [24] 6749 	ljmp	00102$
      002ABD                       6750 00957$:
      002ABD 8F 14            [24] 6751 	mov	ar4,r7
      002ABF 7D 00            [12] 6752 	mov	r5,#0x00
      002AC1 74 0C            [12] 6753 	mov	a,#0x0c
      002AC3 2C               [12] 6754 	add	a,r4
      002AC4 F5 82            [12] 6755 	mov	dpl,a
      002AC6 E4               [12] 6756 	clr	a
      002AC7 3D               [12] 6757 	addc	a,r5
      002AC8 F5 83            [12] 6758 	mov	dph,a
      002ACA 75 1B 0D         [24] 6759 	mov	__modsint_PARM_2,#0x0d
                                   6760 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      002ACD 8D 1C            [24] 6761 	mov	(__modsint_PARM_2 + 1),r5
      002ACF C0 17            [24] 6762 	push	ar7
      002AD1 C0 16            [24] 6763 	push	ar6
      002AD3 C0 15            [24] 6764 	push	ar5
      002AD5 C0 14            [24] 6765 	push	ar4
      002AD7 75 D0 00         [24] 6766 	mov	psw,#0x00
      002ADA 12 84 67         [24] 6767 	lcall	__modsint
      002ADD 75 D0 10         [24] 6768 	mov	psw,#0x10
      002AE0 AA 82            [24] 6769 	mov	r2,dpl
      002AE2 AB 83            [24] 6770 	mov	r3,dph
      002AE4 D0 14            [24] 6771 	pop	ar4
      002AE6 D0 15            [24] 6772 	pop	ar5
      002AE8 D0 16            [24] 6773 	pop	ar6
      002AEA D0 17            [24] 6774 	pop	ar7
      002AEC EA               [12] 6775 	mov	a,r2
      002AED 24 02            [12] 6776 	add	a,#_gsm_receive_buf
      002AEF F5 82            [12] 6777 	mov	dpl,a
      002AF1 EB               [12] 6778 	mov	a,r3
      002AF2 34 01            [12] 6779 	addc	a,#(_gsm_receive_buf >> 8)
      002AF4 F5 83            [12] 6780 	mov	dph,a
      002AF6 E0               [24] 6781 	movx	a,@dptr
      002AF7 FB               [12] 6782 	mov	r3,a
      002AF8 BB 49 02         [24] 6783 	cjne	r3,#0x49,00958$
      002AFB 80 03            [24] 6784 	sjmp	00959$
      002AFD                       6785 00958$:
      002AFD 02 2B EB         [24] 6786 	ljmp	00102$
      002B00                       6787 00959$:
                                   6788 ;	include/gsm_serial.c:431: gsm_receive_buf[(gsm_receive_pointer+11)%13] ==' ' && gsm_receive_buf[(gsm_receive_pointer+10)%13] =='T' &&
      002B00 74 0B            [12] 6789 	mov	a,#0x0b
      002B02 2C               [12] 6790 	add	a,r4
      002B03 F5 82            [12] 6791 	mov	dpl,a
      002B05 E4               [12] 6792 	clr	a
      002B06 3D               [12] 6793 	addc	a,r5
      002B07 F5 83            [12] 6794 	mov	dph,a
      002B09 75 1B 0D         [24] 6795 	mov	__modsint_PARM_2,#0x0d
      002B0C 75 1C 00         [24] 6796 	mov	(__modsint_PARM_2 + 1),#0x00
      002B0F C0 17            [24] 6797 	push	ar7
      002B11 C0 16            [24] 6798 	push	ar6
      002B13 C0 15            [24] 6799 	push	ar5
      002B15 C0 14            [24] 6800 	push	ar4
      002B17 75 D0 00         [24] 6801 	mov	psw,#0x00
      002B1A 12 84 67         [24] 6802 	lcall	__modsint
      002B1D 75 D0 10         [24] 6803 	mov	psw,#0x10
      002B20 AA 82            [24] 6804 	mov	r2,dpl
      002B22 AB 83            [24] 6805 	mov	r3,dph
      002B24 D0 14            [24] 6806 	pop	ar4
      002B26 D0 15            [24] 6807 	pop	ar5
      002B28 D0 16            [24] 6808 	pop	ar6
      002B2A D0 17            [24] 6809 	pop	ar7
      002B2C EA               [12] 6810 	mov	a,r2
      002B2D 24 02            [12] 6811 	add	a,#_gsm_receive_buf
      002B2F F5 82            [12] 6812 	mov	dpl,a
      002B31 EB               [12] 6813 	mov	a,r3
      002B32 34 01            [12] 6814 	addc	a,#(_gsm_receive_buf >> 8)
      002B34 F5 83            [12] 6815 	mov	dph,a
      002B36 E0               [24] 6816 	movx	a,@dptr
      002B37 FB               [12] 6817 	mov	r3,a
      002B38 BB 20 02         [24] 6818 	cjne	r3,#0x20,00960$
      002B3B 80 03            [24] 6819 	sjmp	00961$
      002B3D                       6820 00960$:
      002B3D 02 2B EB         [24] 6821 	ljmp	00102$
      002B40                       6822 00961$:
      002B40 74 0A            [12] 6823 	mov	a,#0x0a
      002B42 2C               [12] 6824 	add	a,r4
      002B43 F5 82            [12] 6825 	mov	dpl,a
      002B45 E4               [12] 6826 	clr	a
      002B46 3D               [12] 6827 	addc	a,r5
      002B47 F5 83            [12] 6828 	mov	dph,a
      002B49 75 1B 0D         [24] 6829 	mov	__modsint_PARM_2,#0x0d
      002B4C 75 1C 00         [24] 6830 	mov	(__modsint_PARM_2 + 1),#0x00
      002B4F C0 17            [24] 6831 	push	ar7
      002B51 C0 16            [24] 6832 	push	ar6
      002B53 C0 15            [24] 6833 	push	ar5
      002B55 C0 14            [24] 6834 	push	ar4
      002B57 75 D0 00         [24] 6835 	mov	psw,#0x00
      002B5A 12 84 67         [24] 6836 	lcall	__modsint
      002B5D 75 D0 10         [24] 6837 	mov	psw,#0x10
      002B60 AA 82            [24] 6838 	mov	r2,dpl
      002B62 AB 83            [24] 6839 	mov	r3,dph
      002B64 D0 14            [24] 6840 	pop	ar4
      002B66 D0 15            [24] 6841 	pop	ar5
      002B68 D0 16            [24] 6842 	pop	ar6
      002B6A D0 17            [24] 6843 	pop	ar7
      002B6C EA               [12] 6844 	mov	a,r2
      002B6D 24 02            [12] 6845 	add	a,#_gsm_receive_buf
      002B6F F5 82            [12] 6846 	mov	dpl,a
      002B71 EB               [12] 6847 	mov	a,r3
      002B72 34 01            [12] 6848 	addc	a,#(_gsm_receive_buf >> 8)
      002B74 F5 83            [12] 6849 	mov	dph,a
      002B76 E0               [24] 6850 	movx	a,@dptr
      002B77 FB               [12] 6851 	mov	r3,a
      002B78 BB 54 70         [24] 6852 	cjne	r3,#0x54,00102$
                                   6853 ;	include/gsm_serial.c:432: gsm_receive_buf[(gsm_receive_pointer+9)%13] =='O' && gsm_receive_buf[(gsm_receive_pointer+8)%13] =='N')){
      002B7B 74 09            [12] 6854 	mov	a,#0x09
      002B7D 2C               [12] 6855 	add	a,r4
      002B7E F5 82            [12] 6856 	mov	dpl,a
      002B80 E4               [12] 6857 	clr	a
      002B81 3D               [12] 6858 	addc	a,r5
      002B82 F5 83            [12] 6859 	mov	dph,a
      002B84 75 1B 0D         [24] 6860 	mov	__modsint_PARM_2,#0x0d
      002B87 75 1C 00         [24] 6861 	mov	(__modsint_PARM_2 + 1),#0x00
      002B8A C0 17            [24] 6862 	push	ar7
      002B8C C0 16            [24] 6863 	push	ar6
      002B8E C0 15            [24] 6864 	push	ar5
      002B90 C0 14            [24] 6865 	push	ar4
      002B92 75 D0 00         [24] 6866 	mov	psw,#0x00
      002B95 12 84 67         [24] 6867 	lcall	__modsint
      002B98 75 D0 10         [24] 6868 	mov	psw,#0x10
      002B9B AA 82            [24] 6869 	mov	r2,dpl
      002B9D AB 83            [24] 6870 	mov	r3,dph
      002B9F D0 14            [24] 6871 	pop	ar4
      002BA1 D0 15            [24] 6872 	pop	ar5
      002BA3 D0 16            [24] 6873 	pop	ar6
      002BA5 D0 17            [24] 6874 	pop	ar7
      002BA7 EA               [12] 6875 	mov	a,r2
      002BA8 24 02            [12] 6876 	add	a,#_gsm_receive_buf
      002BAA F5 82            [12] 6877 	mov	dpl,a
      002BAC EB               [12] 6878 	mov	a,r3
      002BAD 34 01            [12] 6879 	addc	a,#(_gsm_receive_buf >> 8)
      002BAF F5 83            [12] 6880 	mov	dph,a
      002BB1 E0               [24] 6881 	movx	a,@dptr
      002BB2 FB               [12] 6882 	mov	r3,a
      002BB3 BB 4F 35         [24] 6883 	cjne	r3,#0x4f,00102$
      002BB6 74 08            [12] 6884 	mov	a,#0x08
      002BB8 2C               [12] 6885 	add	a,r4
      002BB9 F5 82            [12] 6886 	mov	dpl,a
      002BBB E4               [12] 6887 	clr	a
      002BBC 3D               [12] 6888 	addc	a,r5
      002BBD F5 83            [12] 6889 	mov	dph,a
      002BBF 75 1B 0D         [24] 6890 	mov	__modsint_PARM_2,#0x0d
      002BC2 75 1C 00         [24] 6891 	mov	(__modsint_PARM_2 + 1),#0x00
      002BC5 C0 17            [24] 6892 	push	ar7
      002BC7 C0 16            [24] 6893 	push	ar6
      002BC9 75 D0 00         [24] 6894 	mov	psw,#0x00
      002BCC 12 84 67         [24] 6895 	lcall	__modsint
      002BCF 75 D0 10         [24] 6896 	mov	psw,#0x10
      002BD2 AC 82            [24] 6897 	mov	r4,dpl
      002BD4 AD 83            [24] 6898 	mov	r5,dph
      002BD6 D0 16            [24] 6899 	pop	ar6
      002BD8 D0 17            [24] 6900 	pop	ar7
      002BDA EC               [12] 6901 	mov	a,r4
      002BDB 24 02            [12] 6902 	add	a,#_gsm_receive_buf
      002BDD F5 82            [12] 6903 	mov	dpl,a
      002BDF ED               [12] 6904 	mov	a,r5
      002BE0 34 01            [12] 6905 	addc	a,#(_gsm_receive_buf >> 8)
      002BE2 F5 83            [12] 6906 	mov	dph,a
      002BE4 E0               [24] 6907 	movx	a,@dptr
      002BE5 FD               [12] 6908 	mov	r5,a
      002BE6 BD 4E 02         [24] 6909 	cjne	r5,#0x4e,00102$
                                   6910 ;	include/gsm_serial.c:434: nosim = 1;
                                   6911 ;	assignBit
      002BE9 D2 30            [12] 6912 	setb	_nosim
      002BEB                       6913 00102$:
                                   6914 ;	include/gsm_serial.c:439: switch(gsm_serial_cmd){
      002BEB 90 00 FE         [24] 6915 	mov	dptr,#_gsm_serial_cmd
      002BEE E0               [24] 6916 	movx	a,@dptr
      002BEF FD               [12] 6917 	mov  r5,a
      002BF0 24 F1            [12] 6918 	add	a,#0xff - 0x0e
      002BF2 50 03            [24] 6919 	jnc	00968$
      002BF4 02 43 0D         [24] 6920 	ljmp	00345$
      002BF7                       6921 00968$:
      002BF7 ED               [12] 6922 	mov	a,r5
      002BF8 24 0A            [12] 6923 	add	a,#(00969$-3-.)
      002BFA 83               [24] 6924 	movc	a,@a+pc
      002BFB F5 82            [12] 6925 	mov	dpl,a
      002BFD ED               [12] 6926 	mov	a,r5
      002BFE 24 13            [12] 6927 	add	a,#(00970$-3-.)
      002C00 83               [24] 6928 	movc	a,@a+pc
      002C01 F5 83            [12] 6929 	mov	dph,a
      002C03 E4               [12] 6930 	clr	a
      002C04 73               [24] 6931 	jmp	@a+dptr
      002C05                       6932 00969$:
      002C05 F0                    6933 	.db	00142$
      002C06 72                    6934 	.db	00202$
      002C07 22                    6935 	.db	00134$
      002C08 C2                    6936 	.db	00207$
      002C09 0D                    6937 	.db	00345$
      002C0A 3A                    6938 	.db	00242$
      002C0B A2                    6939 	.db	00191$
      002C0C 36                    6940 	.db	00261$
      002C0D AC                    6941 	.db	00253$
      002C0E 0D                    6942 	.db	00345$
      002C0F 78                    6943 	.db	00124$
      002C10 13                    6944 	.db	00131$
      002C11 88                    6945 	.db	00114$
      002C12 9C                    6946 	.db	00304$
      002C13 23                    6947 	.db	00108$
      002C14                       6948 00970$:
      002C14 2E                    6949 	.db	00142$>>8
      002C15 37                    6950 	.db	00202$>>8
      002C16 2E                    6951 	.db	00134$>>8
      002C17 37                    6952 	.db	00207$>>8
      002C18 43                    6953 	.db	00345$>>8
      002C19 39                    6954 	.db	00242$>>8
      002C1A 35                    6955 	.db	00191$>>8
      002C1B 3B                    6956 	.db	00261$>>8
      002C1C 3A                    6957 	.db	00253$>>8
      002C1D 43                    6958 	.db	00345$>>8
      002C1E 2D                    6959 	.db	00124$>>8
      002C1F 2E                    6960 	.db	00131$>>8
      002C20 2C                    6961 	.db	00114$>>8
      002C21 40                    6962 	.db	00304$>>8
      002C22 2C                    6963 	.db	00108$>>8
                                   6964 ;	include/gsm_serial.c:440: case CSQ:
      002C23                       6965 00108$:
                                   6966 ;	include/gsm_serial.c:441: lenh_sms[sms_index++] = SBUF;
      002C23 90 00 BB         [24] 6967 	mov	dptr,#_sms_index
      002C26 E0               [24] 6968 	movx	a,@dptr
      002C27 FC               [12] 6969 	mov	r4,a
      002C28 04               [12] 6970 	inc	a
      002C29 F0               [24] 6971 	movx	@dptr,a
      002C2A EC               [12] 6972 	mov	a,r4
      002C2B 24 17            [12] 6973 	add	a,#_lenh_sms
      002C2D F5 82            [12] 6974 	mov	dpl,a
      002C2F E4               [12] 6975 	clr	a
      002C30 34 00            [12] 6976 	addc	a,#(_lenh_sms >> 8)
      002C32 F5 83            [12] 6977 	mov	dph,a
      002C34 E5 99            [12] 6978 	mov	a,_SBUF
      002C36 F0               [24] 6979 	movx	@dptr,a
                                   6980 ;	include/gsm_serial.c:442: if(SBUF==' ' &&  gsm_receive_buf[(gsm_receive_pointer+12)%13] ==':')sms_index = 0;
      002C37 74 20            [12] 6981 	mov	a,#0x20
      002C39 B5 99 36         [24] 6982 	cjne	a,_SBUF,00110$
      002C3C 90 01 00         [24] 6983 	mov	dptr,#_gsm_receive_pointer
      002C3F E0               [24] 6984 	movx	a,@dptr
      002C40 FC               [12] 6985 	mov	r4,a
      002C41 7B 00            [12] 6986 	mov	r3,#0x00
      002C43 74 0C            [12] 6987 	mov	a,#0x0c
      002C45 2C               [12] 6988 	add	a,r4
      002C46 F5 82            [12] 6989 	mov	dpl,a
      002C48 E4               [12] 6990 	clr	a
      002C49 3B               [12] 6991 	addc	a,r3
      002C4A F5 83            [12] 6992 	mov	dph,a
      002C4C 75 1B 0D         [24] 6993 	mov	__modsint_PARM_2,#0x0d
                                   6994 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      002C4F 8B 1C            [24] 6995 	mov	(__modsint_PARM_2 + 1),r3
      002C51 75 D0 00         [24] 6996 	mov	psw,#0x00
      002C54 12 84 67         [24] 6997 	lcall	__modsint
      002C57 75 D0 10         [24] 6998 	mov	psw,#0x10
      002C5A AB 82            [24] 6999 	mov	r3,dpl
      002C5C AC 83            [24] 7000 	mov	r4,dph
      002C5E EB               [12] 7001 	mov	a,r3
      002C5F 24 02            [12] 7002 	add	a,#_gsm_receive_buf
      002C61 F5 82            [12] 7003 	mov	dpl,a
      002C63 EC               [12] 7004 	mov	a,r4
      002C64 34 01            [12] 7005 	addc	a,#(_gsm_receive_buf >> 8)
      002C66 F5 83            [12] 7006 	mov	dph,a
      002C68 E0               [24] 7007 	movx	a,@dptr
      002C69 FC               [12] 7008 	mov	r4,a
      002C6A BC 3A 05         [24] 7009 	cjne	r4,#0x3a,00110$
      002C6D 90 00 BB         [24] 7010 	mov	dptr,#_sms_index
      002C70 E4               [12] 7011 	clr	a
      002C71 F0               [24] 7012 	movx	@dptr,a
      002C72                       7013 00110$:
                                   7014 ;	include/gsm_serial.c:443: if(SBUF==',')sms_index = gsm_serial_cmd = NORMAL;
      002C72 74 2C            [12] 7015 	mov	a,#0x2c
      002C74 B5 99 02         [24] 7016 	cjne	a,_SBUF,00975$
      002C77 80 03            [24] 7017 	sjmp	00976$
      002C79                       7018 00975$:
      002C79 02 43 0D         [24] 7019 	ljmp	00345$
      002C7C                       7020 00976$:
      002C7C 90 00 FE         [24] 7021 	mov	dptr,#_gsm_serial_cmd
      002C7F E4               [12] 7022 	clr	a
      002C80 F0               [24] 7023 	movx	@dptr,a
      002C81 90 00 BB         [24] 7024 	mov	dptr,#_sms_index
      002C84 F0               [24] 7025 	movx	@dptr,a
                                   7026 ;	include/gsm_serial.c:444: break;
      002C85 02 43 0D         [24] 7027 	ljmp	00345$
                                   7028 ;	include/gsm_serial.c:445: case COPS:
      002C88                       7029 00114$:
                                   7030 ;	include/gsm_serial.c:446: if(SBUF=='T' &&  gsm_receive_buf[(gsm_receive_pointer+12)%13] =='S' &&  gsm_receive_buf[(gsm_receive_pointer+11)%13] =='D')
      002C88 74 54            [12] 7031 	mov	a,#0x54
      002C8A B5 99 6E         [24] 7032 	cjne	a,_SBUF,00120$
      002C8D 8F 13            [24] 7033 	mov	ar3,r7
      002C8F 7C 00            [12] 7034 	mov	r4,#0x00
      002C91 74 0C            [12] 7035 	mov	a,#0x0c
      002C93 2B               [12] 7036 	add	a,r3
      002C94 F5 82            [12] 7037 	mov	dpl,a
      002C96 E4               [12] 7038 	clr	a
      002C97 3C               [12] 7039 	addc	a,r4
      002C98 F5 83            [12] 7040 	mov	dph,a
      002C9A 75 1B 0D         [24] 7041 	mov	__modsint_PARM_2,#0x0d
                                   7042 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      002C9D 8C 1C            [24] 7043 	mov	(__modsint_PARM_2 + 1),r4
      002C9F C0 17            [24] 7044 	push	ar7
      002CA1 C0 14            [24] 7045 	push	ar4
      002CA3 C0 13            [24] 7046 	push	ar3
      002CA5 75 D0 00         [24] 7047 	mov	psw,#0x00
      002CA8 12 84 67         [24] 7048 	lcall	__modsint
      002CAB 75 D0 10         [24] 7049 	mov	psw,#0x10
      002CAE A9 82            [24] 7050 	mov	r1,dpl
      002CB0 AA 83            [24] 7051 	mov	r2,dph
      002CB2 D0 13            [24] 7052 	pop	ar3
      002CB4 D0 14            [24] 7053 	pop	ar4
      002CB6 D0 17            [24] 7054 	pop	ar7
      002CB8 E9               [12] 7055 	mov	a,r1
      002CB9 24 02            [12] 7056 	add	a,#_gsm_receive_buf
      002CBB F5 82            [12] 7057 	mov	dpl,a
      002CBD EA               [12] 7058 	mov	a,r2
      002CBE 34 01            [12] 7059 	addc	a,#(_gsm_receive_buf >> 8)
      002CC0 F5 83            [12] 7060 	mov	dph,a
      002CC2 E0               [24] 7061 	movx	a,@dptr
      002CC3 FA               [12] 7062 	mov	r2,a
      002CC4 BA 53 34         [24] 7063 	cjne	r2,#0x53,00120$
      002CC7 74 0B            [12] 7064 	mov	a,#0x0b
      002CC9 2B               [12] 7065 	add	a,r3
      002CCA F5 82            [12] 7066 	mov	dpl,a
      002CCC E4               [12] 7067 	clr	a
      002CCD 3C               [12] 7068 	addc	a,r4
      002CCE F5 83            [12] 7069 	mov	dph,a
      002CD0 75 1B 0D         [24] 7070 	mov	__modsint_PARM_2,#0x0d
      002CD3 75 1C 00         [24] 7071 	mov	(__modsint_PARM_2 + 1),#0x00
      002CD6 C0 17            [24] 7072 	push	ar7
      002CD8 75 D0 00         [24] 7073 	mov	psw,#0x00
      002CDB 12 84 67         [24] 7074 	lcall	__modsint
      002CDE 75 D0 10         [24] 7075 	mov	psw,#0x10
      002CE1 AB 82            [24] 7076 	mov	r3,dpl
      002CE3 AC 83            [24] 7077 	mov	r4,dph
      002CE5 D0 17            [24] 7078 	pop	ar7
      002CE7 EB               [12] 7079 	mov	a,r3
      002CE8 24 02            [12] 7080 	add	a,#_gsm_receive_buf
      002CEA F5 82            [12] 7081 	mov	dpl,a
      002CEC EC               [12] 7082 	mov	a,r4
      002CED 34 01            [12] 7083 	addc	a,#(_gsm_receive_buf >> 8)
      002CEF F5 83            [12] 7084 	mov	dph,a
      002CF1 E0               [24] 7085 	movx	a,@dptr
      002CF2 FC               [12] 7086 	mov	r4,a
      002CF3 BC 44 05         [24] 7087 	cjne	r4,#0x44,00120$
                                   7088 ;	include/gsm_serial.c:447: gui_lenh_thanh_cong = 1;
                                   7089 ;	assignBit
      002CF6 D2 2E            [12] 7090 	setb	_gui_lenh_thanh_cong
      002CF8 02 43 0D         [24] 7091 	ljmp	00345$
      002CFB                       7092 00120$:
                                   7093 ;	include/gsm_serial.c:448: else if(SBUF=='R' &&  gsm_receive_buf[(gsm_receive_pointer+12)%13] =='O' &&  gsm_receive_buf[(gsm_receive_pointer+11)%13] =='R')
      002CFB 74 52            [12] 7094 	mov	a,#0x52
      002CFD B5 99 02         [24] 7095 	cjne	a,_SBUF,00983$
      002D00 80 03            [24] 7096 	sjmp	00984$
      002D02                       7097 00983$:
      002D02 02 43 0D         [24] 7098 	ljmp	00345$
      002D05                       7099 00984$:
      002D05 8F 13            [24] 7100 	mov	ar3,r7
      002D07 7C 00            [12] 7101 	mov	r4,#0x00
      002D09 74 0C            [12] 7102 	mov	a,#0x0c
      002D0B 2B               [12] 7103 	add	a,r3
      002D0C F5 82            [12] 7104 	mov	dpl,a
      002D0E E4               [12] 7105 	clr	a
      002D0F 3C               [12] 7106 	addc	a,r4
      002D10 F5 83            [12] 7107 	mov	dph,a
      002D12 75 1B 0D         [24] 7108 	mov	__modsint_PARM_2,#0x0d
                                   7109 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      002D15 8C 1C            [24] 7110 	mov	(__modsint_PARM_2 + 1),r4
      002D17 C0 14            [24] 7111 	push	ar4
      002D19 C0 13            [24] 7112 	push	ar3
      002D1B 75 D0 00         [24] 7113 	mov	psw,#0x00
      002D1E 12 84 67         [24] 7114 	lcall	__modsint
      002D21 75 D0 10         [24] 7115 	mov	psw,#0x10
      002D24 A9 82            [24] 7116 	mov	r1,dpl
      002D26 AA 83            [24] 7117 	mov	r2,dph
      002D28 D0 13            [24] 7118 	pop	ar3
      002D2A D0 14            [24] 7119 	pop	ar4
      002D2C E9               [12] 7120 	mov	a,r1
      002D2D 24 02            [12] 7121 	add	a,#_gsm_receive_buf
      002D2F F5 82            [12] 7122 	mov	dpl,a
      002D31 EA               [12] 7123 	mov	a,r2
      002D32 34 01            [12] 7124 	addc	a,#(_gsm_receive_buf >> 8)
      002D34 F5 83            [12] 7125 	mov	dph,a
      002D36 E0               [24] 7126 	movx	a,@dptr
      002D37 FA               [12] 7127 	mov	r2,a
      002D38 BA 4F 02         [24] 7128 	cjne	r2,#0x4f,00985$
      002D3B 80 03            [24] 7129 	sjmp	00986$
      002D3D                       7130 00985$:
      002D3D 02 43 0D         [24] 7131 	ljmp	00345$
      002D40                       7132 00986$:
      002D40 74 0B            [12] 7133 	mov	a,#0x0b
      002D42 2B               [12] 7134 	add	a,r3
      002D43 F5 82            [12] 7135 	mov	dpl,a
      002D45 E4               [12] 7136 	clr	a
      002D46 3C               [12] 7137 	addc	a,r4
      002D47 F5 83            [12] 7138 	mov	dph,a
      002D49 75 1B 0D         [24] 7139 	mov	__modsint_PARM_2,#0x0d
      002D4C 75 1C 00         [24] 7140 	mov	(__modsint_PARM_2 + 1),#0x00
      002D4F 75 D0 00         [24] 7141 	mov	psw,#0x00
      002D52 12 84 67         [24] 7142 	lcall	__modsint
      002D55 75 D0 10         [24] 7143 	mov	psw,#0x10
      002D58 AB 82            [24] 7144 	mov	r3,dpl
      002D5A AC 83            [24] 7145 	mov	r4,dph
      002D5C EB               [12] 7146 	mov	a,r3
      002D5D 24 02            [12] 7147 	add	a,#_gsm_receive_buf
      002D5F F5 82            [12] 7148 	mov	dpl,a
      002D61 EC               [12] 7149 	mov	a,r4
      002D62 34 01            [12] 7150 	addc	a,#(_gsm_receive_buf >> 8)
      002D64 F5 83            [12] 7151 	mov	dph,a
      002D66 E0               [24] 7152 	movx	a,@dptr
      002D67 FC               [12] 7153 	mov	r4,a
      002D68 BC 52 02         [24] 7154 	cjne	r4,#0x52,00987$
      002D6B 80 03            [24] 7155 	sjmp	00988$
      002D6D                       7156 00987$:
      002D6D 02 43 0D         [24] 7157 	ljmp	00345$
      002D70                       7158 00988$:
                                   7159 ;	include/gsm_serial.c:449: connect = 0;
      002D70 90 00 FB         [24] 7160 	mov	dptr,#_connect
      002D73 E4               [12] 7161 	clr	a
      002D74 F0               [24] 7162 	movx	@dptr,a
                                   7163 ;	include/gsm_serial.c:450: break;
      002D75 02 43 0D         [24] 7164 	ljmp	00345$
                                   7165 ;	include/gsm_serial.c:451: case CSPN:
      002D78                       7166 00124$:
                                   7167 ;	include/gsm_serial.c:452: lenh_sms[sms_index++] = SBUF;
      002D78 90 00 BB         [24] 7168 	mov	dptr,#_sms_index
      002D7B E0               [24] 7169 	movx	a,@dptr
      002D7C FC               [12] 7170 	mov	r4,a
      002D7D 04               [12] 7171 	inc	a
      002D7E F0               [24] 7172 	movx	@dptr,a
      002D7F EC               [12] 7173 	mov	a,r4
      002D80 24 17            [12] 7174 	add	a,#_lenh_sms
      002D82 F5 82            [12] 7175 	mov	dpl,a
      002D84 E4               [12] 7176 	clr	a
      002D85 34 00            [12] 7177 	addc	a,#(_lenh_sms >> 8)
      002D87 F5 83            [12] 7178 	mov	dph,a
      002D89 E5 99            [12] 7179 	mov	a,_SBUF
      002D8B F0               [24] 7180 	movx	@dptr,a
                                   7181 ;	include/gsm_serial.c:453: if(SBUF=='"' &&  gsm_receive_buf[(gsm_receive_pointer+12)%13] ==' ')sms_index = 0;
      002D8C 74 22            [12] 7182 	mov	a,#0x22
      002D8E B5 99 36         [24] 7183 	cjne	a,_SBUF,00126$
      002D91 90 01 00         [24] 7184 	mov	dptr,#_gsm_receive_pointer
      002D94 E0               [24] 7185 	movx	a,@dptr
      002D95 FC               [12] 7186 	mov	r4,a
      002D96 7B 00            [12] 7187 	mov	r3,#0x00
      002D98 74 0C            [12] 7188 	mov	a,#0x0c
      002D9A 2C               [12] 7189 	add	a,r4
      002D9B F5 82            [12] 7190 	mov	dpl,a
      002D9D E4               [12] 7191 	clr	a
      002D9E 3B               [12] 7192 	addc	a,r3
      002D9F F5 83            [12] 7193 	mov	dph,a
      002DA1 75 1B 0D         [24] 7194 	mov	__modsint_PARM_2,#0x0d
                                   7195 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      002DA4 8B 1C            [24] 7196 	mov	(__modsint_PARM_2 + 1),r3
      002DA6 75 D0 00         [24] 7197 	mov	psw,#0x00
      002DA9 12 84 67         [24] 7198 	lcall	__modsint
      002DAC 75 D0 10         [24] 7199 	mov	psw,#0x10
      002DAF AB 82            [24] 7200 	mov	r3,dpl
      002DB1 AC 83            [24] 7201 	mov	r4,dph
      002DB3 EB               [12] 7202 	mov	a,r3
      002DB4 24 02            [12] 7203 	add	a,#_gsm_receive_buf
      002DB6 F5 82            [12] 7204 	mov	dpl,a
      002DB8 EC               [12] 7205 	mov	a,r4
      002DB9 34 01            [12] 7206 	addc	a,#(_gsm_receive_buf >> 8)
      002DBB F5 83            [12] 7207 	mov	dph,a
      002DBD E0               [24] 7208 	movx	a,@dptr
      002DBE FC               [12] 7209 	mov	r4,a
      002DBF BC 20 05         [24] 7210 	cjne	r4,#0x20,00126$
      002DC2 90 00 BB         [24] 7211 	mov	dptr,#_sms_index
      002DC5 E4               [12] 7212 	clr	a
      002DC6 F0               [24] 7213 	movx	@dptr,a
      002DC7                       7214 00126$:
                                   7215 ;	include/gsm_serial.c:454: if(SBUF==',' &&  gsm_receive_buf[(gsm_receive_pointer+12)%13] =='"')sms_index = gsm_serial_cmd = 0;
      002DC7 74 2C            [12] 7216 	mov	a,#0x2c
      002DC9 B5 99 02         [24] 7217 	cjne	a,_SBUF,00993$
      002DCC 80 03            [24] 7218 	sjmp	00994$
      002DCE                       7219 00993$:
      002DCE 02 43 0D         [24] 7220 	ljmp	00345$
      002DD1                       7221 00994$:
      002DD1 90 01 00         [24] 7222 	mov	dptr,#_gsm_receive_pointer
      002DD4 E0               [24] 7223 	movx	a,@dptr
      002DD5 FC               [12] 7224 	mov	r4,a
      002DD6 7B 00            [12] 7225 	mov	r3,#0x00
      002DD8 74 0C            [12] 7226 	mov	a,#0x0c
      002DDA 2C               [12] 7227 	add	a,r4
      002DDB F5 82            [12] 7228 	mov	dpl,a
      002DDD E4               [12] 7229 	clr	a
      002DDE 3B               [12] 7230 	addc	a,r3
      002DDF F5 83            [12] 7231 	mov	dph,a
      002DE1 75 1B 0D         [24] 7232 	mov	__modsint_PARM_2,#0x0d
                                   7233 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      002DE4 8B 1C            [24] 7234 	mov	(__modsint_PARM_2 + 1),r3
      002DE6 75 D0 00         [24] 7235 	mov	psw,#0x00
      002DE9 12 84 67         [24] 7236 	lcall	__modsint
      002DEC 75 D0 10         [24] 7237 	mov	psw,#0x10
      002DEF AB 82            [24] 7238 	mov	r3,dpl
      002DF1 AC 83            [24] 7239 	mov	r4,dph
      002DF3 EB               [12] 7240 	mov	a,r3
      002DF4 24 02            [12] 7241 	add	a,#_gsm_receive_buf
      002DF6 F5 82            [12] 7242 	mov	dpl,a
      002DF8 EC               [12] 7243 	mov	a,r4
      002DF9 34 01            [12] 7244 	addc	a,#(_gsm_receive_buf >> 8)
      002DFB F5 83            [12] 7245 	mov	dph,a
      002DFD E0               [24] 7246 	movx	a,@dptr
      002DFE FC               [12] 7247 	mov	r4,a
      002DFF BC 22 02         [24] 7248 	cjne	r4,#0x22,00995$
      002E02 80 03            [24] 7249 	sjmp	00996$
      002E04                       7250 00995$:
      002E04 02 43 0D         [24] 7251 	ljmp	00345$
      002E07                       7252 00996$:
      002E07 90 00 FE         [24] 7253 	mov	dptr,#_gsm_serial_cmd
      002E0A E4               [12] 7254 	clr	a
      002E0B F0               [24] 7255 	movx	@dptr,a
      002E0C 90 00 BB         [24] 7256 	mov	dptr,#_sms_index
      002E0F F0               [24] 7257 	movx	@dptr,a
                                   7258 ;	include/gsm_serial.c:455: break;
      002E10 02 43 0D         [24] 7259 	ljmp	00345$
                                   7260 ;	include/gsm_serial.c:456: case CALR:
      002E13                       7261 00131$:
                                   7262 ;	include/gsm_serial.c:457: if(SBUF=='1')gui_lenh_thanh_cong = 1;
      002E13 74 31            [12] 7263 	mov	a,#0x31
      002E15 B5 99 02         [24] 7264 	cjne	a,_SBUF,00997$
      002E18 80 03            [24] 7265 	sjmp	00998$
      002E1A                       7266 00997$:
      002E1A 02 43 0D         [24] 7267 	ljmp	00345$
      002E1D                       7268 00998$:
                                   7269 ;	assignBit
      002E1D D2 2E            [12] 7270 	setb	_gui_lenh_thanh_cong
                                   7271 ;	include/gsm_serial.c:459: break;
      002E1F 02 43 0D         [24] 7272 	ljmp	00345$
                                   7273 ;	include/gsm_serial.c:460: case CLK:
      002E22                       7274 00134$:
                                   7275 ;	include/gsm_serial.c:461: lenh_sms[sms_index++] = SBUF;
      002E22 90 00 BB         [24] 7276 	mov	dptr,#_sms_index
      002E25 E0               [24] 7277 	movx	a,@dptr
      002E26 FC               [12] 7278 	mov	r4,a
      002E27 04               [12] 7279 	inc	a
      002E28 F0               [24] 7280 	movx	@dptr,a
      002E29 EC               [12] 7281 	mov	a,r4
      002E2A 24 17            [12] 7282 	add	a,#_lenh_sms
      002E2C F5 82            [12] 7283 	mov	dpl,a
      002E2E E4               [12] 7284 	clr	a
      002E2F 34 00            [12] 7285 	addc	a,#(_lenh_sms >> 8)
      002E31 F5 83            [12] 7286 	mov	dph,a
      002E33 E5 99            [12] 7287 	mov	a,_SBUF
      002E35 F0               [24] 7288 	movx	@dptr,a
                                   7289 ;	include/gsm_serial.c:462: if(SBUF=='K' &&  gsm_receive_buf[(gsm_receive_pointer+12)%13] =='L' &&  gsm_receive_buf[(gsm_receive_pointer+11)%13] =='C')sms_index = 0;
      002E36 74 4B            [12] 7290 	mov	a,#0x4b
      002E38 B5 99 69         [24] 7291 	cjne	a,_SBUF,00136$
      002E3B 90 01 00         [24] 7292 	mov	dptr,#_gsm_receive_pointer
      002E3E E0               [24] 7293 	movx	a,@dptr
      002E3F FB               [12] 7294 	mov	r3,a
      002E40 7C 00            [12] 7295 	mov	r4,#0x00
      002E42 74 0C            [12] 7296 	mov	a,#0x0c
      002E44 2B               [12] 7297 	add	a,r3
      002E45 F5 82            [12] 7298 	mov	dpl,a
      002E47 E4               [12] 7299 	clr	a
      002E48 3C               [12] 7300 	addc	a,r4
      002E49 F5 83            [12] 7301 	mov	dph,a
      002E4B 75 1B 0D         [24] 7302 	mov	__modsint_PARM_2,#0x0d
                                   7303 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      002E4E 8C 1C            [24] 7304 	mov	(__modsint_PARM_2 + 1),r4
      002E50 C0 14            [24] 7305 	push	ar4
      002E52 C0 13            [24] 7306 	push	ar3
      002E54 75 D0 00         [24] 7307 	mov	psw,#0x00
      002E57 12 84 67         [24] 7308 	lcall	__modsint
      002E5A 75 D0 10         [24] 7309 	mov	psw,#0x10
      002E5D A9 82            [24] 7310 	mov	r1,dpl
      002E5F AA 83            [24] 7311 	mov	r2,dph
      002E61 D0 13            [24] 7312 	pop	ar3
      002E63 D0 14            [24] 7313 	pop	ar4
      002E65 E9               [12] 7314 	mov	a,r1
      002E66 24 02            [12] 7315 	add	a,#_gsm_receive_buf
      002E68 F5 82            [12] 7316 	mov	dpl,a
      002E6A EA               [12] 7317 	mov	a,r2
      002E6B 34 01            [12] 7318 	addc	a,#(_gsm_receive_buf >> 8)
      002E6D F5 83            [12] 7319 	mov	dph,a
      002E6F E0               [24] 7320 	movx	a,@dptr
      002E70 FA               [12] 7321 	mov	r2,a
      002E71 BA 4C 30         [24] 7322 	cjne	r2,#0x4c,00136$
      002E74 74 0B            [12] 7323 	mov	a,#0x0b
      002E76 2B               [12] 7324 	add	a,r3
      002E77 F5 82            [12] 7325 	mov	dpl,a
      002E79 E4               [12] 7326 	clr	a
      002E7A 3C               [12] 7327 	addc	a,r4
      002E7B F5 83            [12] 7328 	mov	dph,a
      002E7D 75 1B 0D         [24] 7329 	mov	__modsint_PARM_2,#0x0d
      002E80 75 1C 00         [24] 7330 	mov	(__modsint_PARM_2 + 1),#0x00
      002E83 75 D0 00         [24] 7331 	mov	psw,#0x00
      002E86 12 84 67         [24] 7332 	lcall	__modsint
      002E89 75 D0 10         [24] 7333 	mov	psw,#0x10
      002E8C AB 82            [24] 7334 	mov	r3,dpl
      002E8E AC 83            [24] 7335 	mov	r4,dph
      002E90 EB               [12] 7336 	mov	a,r3
      002E91 24 02            [12] 7337 	add	a,#_gsm_receive_buf
      002E93 F5 82            [12] 7338 	mov	dpl,a
      002E95 EC               [12] 7339 	mov	a,r4
      002E96 34 01            [12] 7340 	addc	a,#(_gsm_receive_buf >> 8)
      002E98 F5 83            [12] 7341 	mov	dph,a
      002E9A E0               [24] 7342 	movx	a,@dptr
      002E9B FC               [12] 7343 	mov	r4,a
      002E9C BC 43 05         [24] 7344 	cjne	r4,#0x43,00136$
      002E9F 90 00 BB         [24] 7345 	mov	dptr,#_sms_index
      002EA2 E4               [12] 7346 	clr	a
      002EA3 F0               [24] 7347 	movx	@dptr,a
      002EA4                       7348 00136$:
                                   7349 ;	include/gsm_serial.c:463: if(SBUF=='\r' &&  gsm_receive_buf[(gsm_receive_pointer+12)%13] =='"')sms_index = gsm_serial_cmd = 0;
      002EA4 74 0D            [12] 7350 	mov	a,#0x0d
      002EA6 B5 99 02         [24] 7351 	cjne	a,_SBUF,01005$
      002EA9 80 03            [24] 7352 	sjmp	01006$
      002EAB                       7353 01005$:
      002EAB 02 43 0D         [24] 7354 	ljmp	00345$
      002EAE                       7355 01006$:
      002EAE 90 01 00         [24] 7356 	mov	dptr,#_gsm_receive_pointer
      002EB1 E0               [24] 7357 	movx	a,@dptr
      002EB2 FC               [12] 7358 	mov	r4,a
      002EB3 7B 00            [12] 7359 	mov	r3,#0x00
      002EB5 74 0C            [12] 7360 	mov	a,#0x0c
      002EB7 2C               [12] 7361 	add	a,r4
      002EB8 F5 82            [12] 7362 	mov	dpl,a
      002EBA E4               [12] 7363 	clr	a
      002EBB 3B               [12] 7364 	addc	a,r3
      002EBC F5 83            [12] 7365 	mov	dph,a
      002EBE 75 1B 0D         [24] 7366 	mov	__modsint_PARM_2,#0x0d
                                   7367 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      002EC1 8B 1C            [24] 7368 	mov	(__modsint_PARM_2 + 1),r3
      002EC3 75 D0 00         [24] 7369 	mov	psw,#0x00
      002EC6 12 84 67         [24] 7370 	lcall	__modsint
      002EC9 75 D0 10         [24] 7371 	mov	psw,#0x10
      002ECC AB 82            [24] 7372 	mov	r3,dpl
      002ECE AC 83            [24] 7373 	mov	r4,dph
      002ED0 EB               [12] 7374 	mov	a,r3
      002ED1 24 02            [12] 7375 	add	a,#_gsm_receive_buf
      002ED3 F5 82            [12] 7376 	mov	dpl,a
      002ED5 EC               [12] 7377 	mov	a,r4
      002ED6 34 01            [12] 7378 	addc	a,#(_gsm_receive_buf >> 8)
      002ED8 F5 83            [12] 7379 	mov	dph,a
      002EDA E0               [24] 7380 	movx	a,@dptr
      002EDB FC               [12] 7381 	mov	r4,a
      002EDC BC 22 02         [24] 7382 	cjne	r4,#0x22,01007$
      002EDF 80 03            [24] 7383 	sjmp	01008$
      002EE1                       7384 01007$:
      002EE1 02 43 0D         [24] 7385 	ljmp	00345$
      002EE4                       7386 01008$:
      002EE4 90 00 FE         [24] 7387 	mov	dptr,#_gsm_serial_cmd
      002EE7 E4               [12] 7388 	clr	a
      002EE8 F0               [24] 7389 	movx	@dptr,a
      002EE9 90 00 BB         [24] 7390 	mov	dptr,#_sms_index
      002EEC F0               [24] 7391 	movx	@dptr,a
                                   7392 ;	include/gsm_serial.c:464: break;
      002EED 02 43 0D         [24] 7393 	ljmp	00345$
                                   7394 ;	include/gsm_serial.c:465: case NORMAL:
      002EF0                       7395 00142$:
                                   7396 ;	include/gsm_serial.c:466: if(SBUF=='>'){
      002EF0 74 3E            [12] 7397 	mov	a,#0x3e
      002EF2 B5 99 12         [24] 7398 	cjne	a,_SBUF,00189$
                                   7399 ;	include/gsm_serial.c:467: send_gsm_cmd("\032");
      002EF5 90 88 DA         [24] 7400 	mov	dptr,#___str_7
      002EF8 75 F0 80         [24] 7401 	mov	b,#0x80
      002EFB 75 D0 00         [24] 7402 	mov	psw,#0x00
      002EFE 12 03 CD         [24] 7403 	lcall	_send_gsm_cmd
      002F01 75 D0 10         [24] 7404 	mov	psw,#0x10
      002F04 02 43 0D         [24] 7405 	ljmp	00345$
      002F07                       7406 00189$:
                                   7407 ;	include/gsm_serial.c:469: }else if((gsm_receive_buf[gsm_receive_pointer]=='G' && gsm_receive_buf[(gsm_receive_pointer+12)%13] =='N' &&
      002F07 BE 47 02         [24] 7408 	cjne	r6,#0x47,01011$
      002F0A 80 03            [24] 7409 	sjmp	01012$
      002F0C                       7410 01011$:
      002F0C 02 2F DE         [24] 7411 	ljmp	00183$
      002F0F                       7412 01012$:
      002F0F 8F 13            [24] 7413 	mov	ar3,r7
      002F11 7C 00            [12] 7414 	mov	r4,#0x00
      002F13 74 0C            [12] 7415 	mov	a,#0x0c
      002F15 2B               [12] 7416 	add	a,r3
      002F16 F5 82            [12] 7417 	mov	dpl,a
      002F18 E4               [12] 7418 	clr	a
      002F19 3C               [12] 7419 	addc	a,r4
      002F1A F5 83            [12] 7420 	mov	dph,a
      002F1C 75 1B 0D         [24] 7421 	mov	__modsint_PARM_2,#0x0d
                                   7422 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      002F1F 8C 1C            [24] 7423 	mov	(__modsint_PARM_2 + 1),r4
      002F21 C0 17            [24] 7424 	push	ar7
      002F23 C0 16            [24] 7425 	push	ar6
      002F25 C0 15            [24] 7426 	push	ar5
      002F27 C0 14            [24] 7427 	push	ar4
      002F29 C0 13            [24] 7428 	push	ar3
      002F2B 75 D0 00         [24] 7429 	mov	psw,#0x00
      002F2E 12 84 67         [24] 7430 	lcall	__modsint
      002F31 75 D0 10         [24] 7431 	mov	psw,#0x10
      002F34 A9 82            [24] 7432 	mov	r1,dpl
      002F36 AA 83            [24] 7433 	mov	r2,dph
      002F38 D0 13            [24] 7434 	pop	ar3
      002F3A D0 14            [24] 7435 	pop	ar4
      002F3C D0 15            [24] 7436 	pop	ar5
      002F3E D0 16            [24] 7437 	pop	ar6
      002F40 D0 17            [24] 7438 	pop	ar7
      002F42 E9               [12] 7439 	mov	a,r1
      002F43 24 02            [12] 7440 	add	a,#_gsm_receive_buf
      002F45 F5 82            [12] 7441 	mov	dpl,a
      002F47 EA               [12] 7442 	mov	a,r2
      002F48 34 01            [12] 7443 	addc	a,#(_gsm_receive_buf >> 8)
      002F4A F5 83            [12] 7444 	mov	dph,a
      002F4C E0               [24] 7445 	movx	a,@dptr
      002F4D FA               [12] 7446 	mov	r2,a
      002F4E BA 4E 02         [24] 7447 	cjne	r2,#0x4e,01013$
      002F51 80 03            [24] 7448 	sjmp	01014$
      002F53                       7449 01013$:
      002F53 02 2F DE         [24] 7450 	ljmp	00183$
      002F56                       7451 01014$:
                                   7452 ;	include/gsm_serial.c:470: gsm_receive_buf[(gsm_receive_pointer+11)%13] =='I' && gsm_receive_buf[(gsm_receive_pointer+10)%13] =='R')){
      002F56 74 0B            [12] 7453 	mov	a,#0x0b
      002F58 2B               [12] 7454 	add	a,r3
      002F59 F5 82            [12] 7455 	mov	dpl,a
      002F5B E4               [12] 7456 	clr	a
      002F5C 3C               [12] 7457 	addc	a,r4
      002F5D F5 83            [12] 7458 	mov	dph,a
      002F5F 75 1B 0D         [24] 7459 	mov	__modsint_PARM_2,#0x0d
      002F62 75 1C 00         [24] 7460 	mov	(__modsint_PARM_2 + 1),#0x00
      002F65 C0 17            [24] 7461 	push	ar7
      002F67 C0 16            [24] 7462 	push	ar6
      002F69 C0 15            [24] 7463 	push	ar5
      002F6B C0 14            [24] 7464 	push	ar4
      002F6D C0 13            [24] 7465 	push	ar3
      002F6F 75 D0 00         [24] 7466 	mov	psw,#0x00
      002F72 12 84 67         [24] 7467 	lcall	__modsint
      002F75 75 D0 10         [24] 7468 	mov	psw,#0x10
      002F78 A9 82            [24] 7469 	mov	r1,dpl
      002F7A AA 83            [24] 7470 	mov	r2,dph
      002F7C D0 13            [24] 7471 	pop	ar3
      002F7E D0 14            [24] 7472 	pop	ar4
      002F80 D0 15            [24] 7473 	pop	ar5
      002F82 D0 16            [24] 7474 	pop	ar6
      002F84 D0 17            [24] 7475 	pop	ar7
      002F86 E9               [12] 7476 	mov	a,r1
      002F87 24 02            [12] 7477 	add	a,#_gsm_receive_buf
      002F89 F5 82            [12] 7478 	mov	dpl,a
      002F8B EA               [12] 7479 	mov	a,r2
      002F8C 34 01            [12] 7480 	addc	a,#(_gsm_receive_buf >> 8)
      002F8E F5 83            [12] 7481 	mov	dph,a
      002F90 E0               [24] 7482 	movx	a,@dptr
      002F91 FA               [12] 7483 	mov	r2,a
      002F92 BA 49 49         [24] 7484 	cjne	r2,#0x49,00183$
      002F95 74 0A            [12] 7485 	mov	a,#0x0a
      002F97 2B               [12] 7486 	add	a,r3
      002F98 F5 82            [12] 7487 	mov	dpl,a
      002F9A E4               [12] 7488 	clr	a
      002F9B 3C               [12] 7489 	addc	a,r4
      002F9C F5 83            [12] 7490 	mov	dph,a
      002F9E 75 1B 0D         [24] 7491 	mov	__modsint_PARM_2,#0x0d
      002FA1 75 1C 00         [24] 7492 	mov	(__modsint_PARM_2 + 1),#0x00
      002FA4 C0 17            [24] 7493 	push	ar7
      002FA6 C0 16            [24] 7494 	push	ar6
      002FA8 C0 15            [24] 7495 	push	ar5
      002FAA 75 D0 00         [24] 7496 	mov	psw,#0x00
      002FAD 12 84 67         [24] 7497 	lcall	__modsint
      002FB0 75 D0 10         [24] 7498 	mov	psw,#0x10
      002FB3 AB 82            [24] 7499 	mov	r3,dpl
      002FB5 AC 83            [24] 7500 	mov	r4,dph
      002FB7 D0 15            [24] 7501 	pop	ar5
      002FB9 D0 16            [24] 7502 	pop	ar6
      002FBB D0 17            [24] 7503 	pop	ar7
      002FBD EB               [12] 7504 	mov	a,r3
      002FBE 24 02            [12] 7505 	add	a,#_gsm_receive_buf
      002FC0 F5 82            [12] 7506 	mov	dpl,a
      002FC2 EC               [12] 7507 	mov	a,r4
      002FC3 34 01            [12] 7508 	addc	a,#(_gsm_receive_buf >> 8)
      002FC5 F5 83            [12] 7509 	mov	dph,a
      002FC7 E0               [24] 7510 	movx	a,@dptr
      002FC8 FC               [12] 7511 	mov	r4,a
      002FC9 BC 52 12         [24] 7512 	cjne	r4,#0x52,00183$
                                   7513 ;	include/gsm_serial.c:472: send_gsm_cmd("ATH\r");
      002FCC 90 8C 3E         [24] 7514 	mov	dptr,#___str_80
      002FCF 75 F0 80         [24] 7515 	mov	b,#0x80
      002FD2 75 D0 00         [24] 7516 	mov	psw,#0x00
      002FD5 12 03 CD         [24] 7517 	lcall	_send_gsm_cmd
      002FD8 75 D0 10         [24] 7518 	mov	psw,#0x10
      002FDB 02 43 0D         [24] 7519 	ljmp	00345$
      002FDE                       7520 00183$:
                                   7521 ;	include/gsm_serial.c:476: }else if((gsm_receive_buf[gsm_receive_pointer]==':' && gsm_receive_buf[(gsm_receive_pointer+12)%13] =='I' &&
      002FDE BE 3A 02         [24] 7522 	cjne	r6,#0x3a,01019$
      002FE1 80 03            [24] 7523 	sjmp	01020$
      002FE3                       7524 01019$:
      002FE3 02 31 30         [24] 7525 	ljmp	00175$
      002FE6                       7526 01020$:
      002FE6 8F 13            [24] 7527 	mov	ar3,r7
      002FE8 7C 00            [12] 7528 	mov	r4,#0x00
      002FEA 74 0C            [12] 7529 	mov	a,#0x0c
      002FEC 2B               [12] 7530 	add	a,r3
      002FED F5 82            [12] 7531 	mov	dpl,a
      002FEF E4               [12] 7532 	clr	a
      002FF0 3C               [12] 7533 	addc	a,r4
      002FF1 F5 83            [12] 7534 	mov	dph,a
      002FF3 75 1B 0D         [24] 7535 	mov	__modsint_PARM_2,#0x0d
                                   7536 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      002FF6 8C 1C            [24] 7537 	mov	(__modsint_PARM_2 + 1),r4
      002FF8 C0 17            [24] 7538 	push	ar7
      002FFA C0 16            [24] 7539 	push	ar6
      002FFC C0 15            [24] 7540 	push	ar5
      002FFE C0 14            [24] 7541 	push	ar4
      003000 C0 13            [24] 7542 	push	ar3
      003002 75 D0 00         [24] 7543 	mov	psw,#0x00
      003005 12 84 67         [24] 7544 	lcall	__modsint
      003008 75 D0 10         [24] 7545 	mov	psw,#0x10
      00300B A9 82            [24] 7546 	mov	r1,dpl
      00300D AA 83            [24] 7547 	mov	r2,dph
      00300F D0 13            [24] 7548 	pop	ar3
      003011 D0 14            [24] 7549 	pop	ar4
      003013 D0 15            [24] 7550 	pop	ar5
      003015 D0 16            [24] 7551 	pop	ar6
      003017 D0 17            [24] 7552 	pop	ar7
      003019 E9               [12] 7553 	mov	a,r1
      00301A 24 02            [12] 7554 	add	a,#_gsm_receive_buf
      00301C F5 82            [12] 7555 	mov	dpl,a
      00301E EA               [12] 7556 	mov	a,r2
      00301F 34 01            [12] 7557 	addc	a,#(_gsm_receive_buf >> 8)
      003021 F5 83            [12] 7558 	mov	dph,a
      003023 E0               [24] 7559 	movx	a,@dptr
      003024 FA               [12] 7560 	mov	r2,a
      003025 BA 49 02         [24] 7561 	cjne	r2,#0x49,01021$
      003028 80 03            [24] 7562 	sjmp	01022$
      00302A                       7563 01021$:
      00302A 02 31 30         [24] 7564 	ljmp	00175$
      00302D                       7565 01022$:
                                   7566 ;	include/gsm_serial.c:477: gsm_receive_buf[(gsm_receive_pointer+11)%13] =='T' && gsm_receive_buf[(gsm_receive_pointer+10)%13] =='M' &&
      00302D 74 0B            [12] 7567 	mov	a,#0x0b
      00302F 2B               [12] 7568 	add	a,r3
      003030 F5 82            [12] 7569 	mov	dpl,a
      003032 E4               [12] 7570 	clr	a
      003033 3C               [12] 7571 	addc	a,r4
      003034 F5 83            [12] 7572 	mov	dph,a
      003036 75 1B 0D         [24] 7573 	mov	__modsint_PARM_2,#0x0d
      003039 75 1C 00         [24] 7574 	mov	(__modsint_PARM_2 + 1),#0x00
      00303C C0 17            [24] 7575 	push	ar7
      00303E C0 16            [24] 7576 	push	ar6
      003040 C0 15            [24] 7577 	push	ar5
      003042 C0 14            [24] 7578 	push	ar4
      003044 C0 13            [24] 7579 	push	ar3
      003046 75 D0 00         [24] 7580 	mov	psw,#0x00
      003049 12 84 67         [24] 7581 	lcall	__modsint
      00304C 75 D0 10         [24] 7582 	mov	psw,#0x10
      00304F A9 82            [24] 7583 	mov	r1,dpl
      003051 AA 83            [24] 7584 	mov	r2,dph
      003053 D0 13            [24] 7585 	pop	ar3
      003055 D0 14            [24] 7586 	pop	ar4
      003057 D0 15            [24] 7587 	pop	ar5
      003059 D0 16            [24] 7588 	pop	ar6
      00305B D0 17            [24] 7589 	pop	ar7
      00305D E9               [12] 7590 	mov	a,r1
      00305E 24 02            [12] 7591 	add	a,#_gsm_receive_buf
      003060 F5 82            [12] 7592 	mov	dpl,a
      003062 EA               [12] 7593 	mov	a,r2
      003063 34 01            [12] 7594 	addc	a,#(_gsm_receive_buf >> 8)
      003065 F5 83            [12] 7595 	mov	dph,a
      003067 E0               [24] 7596 	movx	a,@dptr
      003068 FA               [12] 7597 	mov	r2,a
      003069 BA 54 02         [24] 7598 	cjne	r2,#0x54,01023$
      00306C 80 03            [24] 7599 	sjmp	01024$
      00306E                       7600 01023$:
      00306E 02 31 30         [24] 7601 	ljmp	00175$
      003071                       7602 01024$:
      003071 74 0A            [12] 7603 	mov	a,#0x0a
      003073 2B               [12] 7604 	add	a,r3
      003074 F5 82            [12] 7605 	mov	dpl,a
      003076 E4               [12] 7606 	clr	a
      003077 3C               [12] 7607 	addc	a,r4
      003078 F5 83            [12] 7608 	mov	dph,a
      00307A 75 1B 0D         [24] 7609 	mov	__modsint_PARM_2,#0x0d
      00307D 75 1C 00         [24] 7610 	mov	(__modsint_PARM_2 + 1),#0x00
      003080 C0 17            [24] 7611 	push	ar7
      003082 C0 16            [24] 7612 	push	ar6
      003084 C0 15            [24] 7613 	push	ar5
      003086 C0 14            [24] 7614 	push	ar4
      003088 C0 13            [24] 7615 	push	ar3
      00308A 75 D0 00         [24] 7616 	mov	psw,#0x00
      00308D 12 84 67         [24] 7617 	lcall	__modsint
      003090 75 D0 10         [24] 7618 	mov	psw,#0x10
      003093 A9 82            [24] 7619 	mov	r1,dpl
      003095 AA 83            [24] 7620 	mov	r2,dph
      003097 D0 13            [24] 7621 	pop	ar3
      003099 D0 14            [24] 7622 	pop	ar4
      00309B D0 15            [24] 7623 	pop	ar5
      00309D D0 16            [24] 7624 	pop	ar6
      00309F D0 17            [24] 7625 	pop	ar7
      0030A1 E9               [12] 7626 	mov	a,r1
      0030A2 24 02            [12] 7627 	add	a,#_gsm_receive_buf
      0030A4 F5 82            [12] 7628 	mov	dpl,a
      0030A6 EA               [12] 7629 	mov	a,r2
      0030A7 34 01            [12] 7630 	addc	a,#(_gsm_receive_buf >> 8)
      0030A9 F5 83            [12] 7631 	mov	dph,a
      0030AB E0               [24] 7632 	movx	a,@dptr
      0030AC FA               [12] 7633 	mov	r2,a
      0030AD BA 4D 02         [24] 7634 	cjne	r2,#0x4d,01025$
      0030B0 80 03            [24] 7635 	sjmp	01026$
      0030B2                       7636 01025$:
      0030B2 02 31 30         [24] 7637 	ljmp	00175$
      0030B5                       7638 01026$:
                                   7639 ;	include/gsm_serial.c:478: gsm_receive_buf[(gsm_receive_pointer+9)%13] =='C' && gsm_receive_buf[(gsm_receive_pointer+8)%13] =='+')){
      0030B5 74 09            [12] 7640 	mov	a,#0x09
      0030B7 2B               [12] 7641 	add	a,r3
      0030B8 F5 82            [12] 7642 	mov	dpl,a
      0030BA E4               [12] 7643 	clr	a
      0030BB 3C               [12] 7644 	addc	a,r4
      0030BC F5 83            [12] 7645 	mov	dph,a
      0030BE 75 1B 0D         [24] 7646 	mov	__modsint_PARM_2,#0x0d
      0030C1 75 1C 00         [24] 7647 	mov	(__modsint_PARM_2 + 1),#0x00
      0030C4 C0 17            [24] 7648 	push	ar7
      0030C6 C0 16            [24] 7649 	push	ar6
      0030C8 C0 15            [24] 7650 	push	ar5
      0030CA C0 14            [24] 7651 	push	ar4
      0030CC C0 13            [24] 7652 	push	ar3
      0030CE 75 D0 00         [24] 7653 	mov	psw,#0x00
      0030D1 12 84 67         [24] 7654 	lcall	__modsint
      0030D4 75 D0 10         [24] 7655 	mov	psw,#0x10
      0030D7 A9 82            [24] 7656 	mov	r1,dpl
      0030D9 AA 83            [24] 7657 	mov	r2,dph
      0030DB D0 13            [24] 7658 	pop	ar3
      0030DD D0 14            [24] 7659 	pop	ar4
      0030DF D0 15            [24] 7660 	pop	ar5
      0030E1 D0 16            [24] 7661 	pop	ar6
      0030E3 D0 17            [24] 7662 	pop	ar7
      0030E5 E9               [12] 7663 	mov	a,r1
      0030E6 24 02            [12] 7664 	add	a,#_gsm_receive_buf
      0030E8 F5 82            [12] 7665 	mov	dpl,a
      0030EA EA               [12] 7666 	mov	a,r2
      0030EB 34 01            [12] 7667 	addc	a,#(_gsm_receive_buf >> 8)
      0030ED F5 83            [12] 7668 	mov	dph,a
      0030EF E0               [24] 7669 	movx	a,@dptr
      0030F0 FA               [12] 7670 	mov	r2,a
      0030F1 BA 43 3C         [24] 7671 	cjne	r2,#0x43,00175$
      0030F4 74 08            [12] 7672 	mov	a,#0x08
      0030F6 2B               [12] 7673 	add	a,r3
      0030F7 F5 82            [12] 7674 	mov	dpl,a
      0030F9 E4               [12] 7675 	clr	a
      0030FA 3C               [12] 7676 	addc	a,r4
      0030FB F5 83            [12] 7677 	mov	dph,a
      0030FD 75 1B 0D         [24] 7678 	mov	__modsint_PARM_2,#0x0d
      003100 75 1C 00         [24] 7679 	mov	(__modsint_PARM_2 + 1),#0x00
      003103 C0 17            [24] 7680 	push	ar7
      003105 C0 16            [24] 7681 	push	ar6
      003107 C0 15            [24] 7682 	push	ar5
      003109 75 D0 00         [24] 7683 	mov	psw,#0x00
      00310C 12 84 67         [24] 7684 	lcall	__modsint
      00310F 75 D0 10         [24] 7685 	mov	psw,#0x10
      003112 AB 82            [24] 7686 	mov	r3,dpl
      003114 AC 83            [24] 7687 	mov	r4,dph
      003116 D0 15            [24] 7688 	pop	ar5
      003118 D0 16            [24] 7689 	pop	ar6
      00311A D0 17            [24] 7690 	pop	ar7
      00311C EB               [12] 7691 	mov	a,r3
      00311D 24 02            [12] 7692 	add	a,#_gsm_receive_buf
      00311F F5 82            [12] 7693 	mov	dpl,a
      003121 EC               [12] 7694 	mov	a,r4
      003122 34 01            [12] 7695 	addc	a,#(_gsm_receive_buf >> 8)
      003124 F5 83            [12] 7696 	mov	dph,a
      003126 E0               [24] 7697 	movx	a,@dptr
      003127 FC               [12] 7698 	mov	r4,a
      003128 BC 2B 05         [24] 7699 	cjne	r4,#0x2b,00175$
                                   7700 ;	include/gsm_serial.c:480: co_tin_nhan_moi = 1;
                                   7701 ;	assignBit
      00312B D2 0C            [12] 7702 	setb	_co_tin_nhan_moi
      00312D 02 43 0D         [24] 7703 	ljmp	00345$
      003130                       7704 00175$:
                                   7705 ;	include/gsm_serial.c:484: }else if((gsm_receive_buf[gsm_receive_pointer]==' ' && gsm_receive_buf[(gsm_receive_pointer+12)%13] ==':' &&
      003130 E4               [12] 7706 	clr	a
      003131 BE 20 01         [24] 7707 	cjne	r6,#0x20,01031$
      003134 04               [12] 7708 	inc	a
      003135                       7709 01031$:
      003135 FC               [12] 7710 	mov	r4,a
      003136 70 03            [24] 7711 	jnz	01033$
      003138 02 32 DF         [24] 7712 	ljmp	00173$
      00313B                       7713 01033$:
      00313B 8F 12            [24] 7714 	mov	ar2,r7
      00313D 7B 00            [12] 7715 	mov	r3,#0x00
      00313F 74 0C            [12] 7716 	mov	a,#0x0c
      003141 2A               [12] 7717 	add	a,r2
      003142 F5 82            [12] 7718 	mov	dpl,a
      003144 E4               [12] 7719 	clr	a
      003145 3B               [12] 7720 	addc	a,r3
      003146 F5 83            [12] 7721 	mov	dph,a
      003148 75 1B 0D         [24] 7722 	mov	__modsint_PARM_2,#0x0d
                                   7723 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      00314B 8B 1C            [24] 7724 	mov	(__modsint_PARM_2 + 1),r3
      00314D C0 17            [24] 7725 	push	ar7
      00314F C0 16            [24] 7726 	push	ar6
      003151 C0 15            [24] 7727 	push	ar5
      003153 C0 14            [24] 7728 	push	ar4
      003155 C0 13            [24] 7729 	push	ar3
      003157 C0 12            [24] 7730 	push	ar2
      003159 75 D0 00         [24] 7731 	mov	psw,#0x00
      00315C 12 84 67         [24] 7732 	lcall	__modsint
      00315F 75 D0 10         [24] 7733 	mov	psw,#0x10
      003162 A8 82            [24] 7734 	mov	r0,dpl
      003164 A9 83            [24] 7735 	mov	r1,dph
      003166 D0 12            [24] 7736 	pop	ar2
      003168 D0 13            [24] 7737 	pop	ar3
      00316A D0 14            [24] 7738 	pop	ar4
      00316C D0 15            [24] 7739 	pop	ar5
      00316E D0 16            [24] 7740 	pop	ar6
      003170 D0 17            [24] 7741 	pop	ar7
      003172 E8               [12] 7742 	mov	a,r0
      003173 24 02            [12] 7743 	add	a,#_gsm_receive_buf
      003175 F5 82            [12] 7744 	mov	dpl,a
      003177 E9               [12] 7745 	mov	a,r1
      003178 34 01            [12] 7746 	addc	a,#(_gsm_receive_buf >> 8)
      00317A F5 83            [12] 7747 	mov	dph,a
      00317C E0               [24] 7748 	movx	a,@dptr
      00317D F9               [12] 7749 	mov	r1,a
      00317E B9 3A 02         [24] 7750 	cjne	r1,#0x3a,01034$
      003181 80 03            [24] 7751 	sjmp	01035$
      003183                       7752 01034$:
      003183 02 32 DF         [24] 7753 	ljmp	00173$
      003186                       7754 01035$:
                                   7755 ;	include/gsm_serial.c:485: gsm_receive_buf[(gsm_receive_pointer+11)%13] =='L' && gsm_receive_buf[(gsm_receive_pointer+10)%13] =='G' &&
      003186 74 0B            [12] 7756 	mov	a,#0x0b
      003188 2A               [12] 7757 	add	a,r2
      003189 F5 82            [12] 7758 	mov	dpl,a
      00318B E4               [12] 7759 	clr	a
      00318C 3B               [12] 7760 	addc	a,r3
      00318D F5 83            [12] 7761 	mov	dph,a
      00318F 75 1B 0D         [24] 7762 	mov	__modsint_PARM_2,#0x0d
      003192 75 1C 00         [24] 7763 	mov	(__modsint_PARM_2 + 1),#0x00
      003195 C0 17            [24] 7764 	push	ar7
      003197 C0 16            [24] 7765 	push	ar6
      003199 C0 15            [24] 7766 	push	ar5
      00319B C0 14            [24] 7767 	push	ar4
      00319D C0 13            [24] 7768 	push	ar3
      00319F C0 12            [24] 7769 	push	ar2
      0031A1 75 D0 00         [24] 7770 	mov	psw,#0x00
      0031A4 12 84 67         [24] 7771 	lcall	__modsint
      0031A7 75 D0 10         [24] 7772 	mov	psw,#0x10
      0031AA A8 82            [24] 7773 	mov	r0,dpl
      0031AC A9 83            [24] 7774 	mov	r1,dph
      0031AE D0 12            [24] 7775 	pop	ar2
      0031B0 D0 13            [24] 7776 	pop	ar3
      0031B2 D0 14            [24] 7777 	pop	ar4
      0031B4 D0 15            [24] 7778 	pop	ar5
      0031B6 D0 16            [24] 7779 	pop	ar6
      0031B8 D0 17            [24] 7780 	pop	ar7
      0031BA E8               [12] 7781 	mov	a,r0
      0031BB 24 02            [12] 7782 	add	a,#_gsm_receive_buf
      0031BD F5 82            [12] 7783 	mov	dpl,a
      0031BF E9               [12] 7784 	mov	a,r1
      0031C0 34 01            [12] 7785 	addc	a,#(_gsm_receive_buf >> 8)
      0031C2 F5 83            [12] 7786 	mov	dph,a
      0031C4 E0               [24] 7787 	movx	a,@dptr
      0031C5 F9               [12] 7788 	mov	r1,a
      0031C6 B9 4C 02         [24] 7789 	cjne	r1,#0x4c,01036$
      0031C9 80 03            [24] 7790 	sjmp	01037$
      0031CB                       7791 01036$:
      0031CB 02 32 DF         [24] 7792 	ljmp	00173$
      0031CE                       7793 01037$:
      0031CE 74 0A            [12] 7794 	mov	a,#0x0a
      0031D0 2A               [12] 7795 	add	a,r2
      0031D1 F5 82            [12] 7796 	mov	dpl,a
      0031D3 E4               [12] 7797 	clr	a
      0031D4 3B               [12] 7798 	addc	a,r3
      0031D5 F5 83            [12] 7799 	mov	dph,a
      0031D7 75 1B 0D         [24] 7800 	mov	__modsint_PARM_2,#0x0d
      0031DA 75 1C 00         [24] 7801 	mov	(__modsint_PARM_2 + 1),#0x00
      0031DD C0 17            [24] 7802 	push	ar7
      0031DF C0 16            [24] 7803 	push	ar6
      0031E1 C0 15            [24] 7804 	push	ar5
      0031E3 C0 14            [24] 7805 	push	ar4
      0031E5 C0 13            [24] 7806 	push	ar3
      0031E7 C0 12            [24] 7807 	push	ar2
      0031E9 75 D0 00         [24] 7808 	mov	psw,#0x00
      0031EC 12 84 67         [24] 7809 	lcall	__modsint
      0031EF 75 D0 10         [24] 7810 	mov	psw,#0x10
      0031F2 A8 82            [24] 7811 	mov	r0,dpl
      0031F4 A9 83            [24] 7812 	mov	r1,dph
      0031F6 D0 12            [24] 7813 	pop	ar2
      0031F8 D0 13            [24] 7814 	pop	ar3
      0031FA D0 14            [24] 7815 	pop	ar4
      0031FC D0 15            [24] 7816 	pop	ar5
      0031FE D0 16            [24] 7817 	pop	ar6
      003200 D0 17            [24] 7818 	pop	ar7
      003202 E8               [12] 7819 	mov	a,r0
      003203 24 02            [12] 7820 	add	a,#_gsm_receive_buf
      003205 F5 82            [12] 7821 	mov	dpl,a
      003207 E9               [12] 7822 	mov	a,r1
      003208 34 01            [12] 7823 	addc	a,#(_gsm_receive_buf >> 8)
      00320A F5 83            [12] 7824 	mov	dph,a
      00320C E0               [24] 7825 	movx	a,@dptr
      00320D F9               [12] 7826 	mov	r1,a
      00320E B9 47 02         [24] 7827 	cjne	r1,#0x47,01038$
      003211 80 03            [24] 7828 	sjmp	01039$
      003213                       7829 01038$:
      003213 02 32 DF         [24] 7830 	ljmp	00173$
      003216                       7831 01039$:
                                   7832 ;	include/gsm_serial.c:486: gsm_receive_buf[(gsm_receive_pointer+9)%13] =='M'  && gsm_receive_buf[(gsm_receive_pointer+8)%13] =='C' &&
      003216 74 09            [12] 7833 	mov	a,#0x09
      003218 2A               [12] 7834 	add	a,r2
      003219 F5 82            [12] 7835 	mov	dpl,a
      00321B E4               [12] 7836 	clr	a
      00321C 3B               [12] 7837 	addc	a,r3
      00321D F5 83            [12] 7838 	mov	dph,a
      00321F 75 1B 0D         [24] 7839 	mov	__modsint_PARM_2,#0x0d
      003222 75 1C 00         [24] 7840 	mov	(__modsint_PARM_2 + 1),#0x00
      003225 C0 17            [24] 7841 	push	ar7
      003227 C0 16            [24] 7842 	push	ar6
      003229 C0 15            [24] 7843 	push	ar5
      00322B C0 14            [24] 7844 	push	ar4
      00322D C0 13            [24] 7845 	push	ar3
      00322F C0 12            [24] 7846 	push	ar2
      003231 75 D0 00         [24] 7847 	mov	psw,#0x00
      003234 12 84 67         [24] 7848 	lcall	__modsint
      003237 75 D0 10         [24] 7849 	mov	psw,#0x10
      00323A A8 82            [24] 7850 	mov	r0,dpl
      00323C A9 83            [24] 7851 	mov	r1,dph
      00323E D0 12            [24] 7852 	pop	ar2
      003240 D0 13            [24] 7853 	pop	ar3
      003242 D0 14            [24] 7854 	pop	ar4
      003244 D0 15            [24] 7855 	pop	ar5
      003246 D0 16            [24] 7856 	pop	ar6
      003248 D0 17            [24] 7857 	pop	ar7
      00324A E8               [12] 7858 	mov	a,r0
      00324B 24 02            [12] 7859 	add	a,#_gsm_receive_buf
      00324D F5 82            [12] 7860 	mov	dpl,a
      00324F E9               [12] 7861 	mov	a,r1
      003250 34 01            [12] 7862 	addc	a,#(_gsm_receive_buf >> 8)
      003252 F5 83            [12] 7863 	mov	dph,a
      003254 E0               [24] 7864 	movx	a,@dptr
      003255 F9               [12] 7865 	mov	r1,a
      003256 B9 4D 02         [24] 7866 	cjne	r1,#0x4d,01040$
      003259 80 03            [24] 7867 	sjmp	01041$
      00325B                       7868 01040$:
      00325B 02 32 DF         [24] 7869 	ljmp	00173$
      00325E                       7870 01041$:
      00325E 74 08            [12] 7871 	mov	a,#0x08
      003260 2A               [12] 7872 	add	a,r2
      003261 F5 82            [12] 7873 	mov	dpl,a
      003263 E4               [12] 7874 	clr	a
      003264 3B               [12] 7875 	addc	a,r3
      003265 F5 83            [12] 7876 	mov	dph,a
      003267 75 1B 0D         [24] 7877 	mov	__modsint_PARM_2,#0x0d
      00326A 75 1C 00         [24] 7878 	mov	(__modsint_PARM_2 + 1),#0x00
      00326D C0 17            [24] 7879 	push	ar7
      00326F C0 16            [24] 7880 	push	ar6
      003271 C0 15            [24] 7881 	push	ar5
      003273 C0 14            [24] 7882 	push	ar4
      003275 C0 13            [24] 7883 	push	ar3
      003277 C0 12            [24] 7884 	push	ar2
      003279 75 D0 00         [24] 7885 	mov	psw,#0x00
      00327C 12 84 67         [24] 7886 	lcall	__modsint
      00327F 75 D0 10         [24] 7887 	mov	psw,#0x10
      003282 A8 82            [24] 7888 	mov	r0,dpl
      003284 A9 83            [24] 7889 	mov	r1,dph
      003286 D0 12            [24] 7890 	pop	ar2
      003288 D0 13            [24] 7891 	pop	ar3
      00328A D0 14            [24] 7892 	pop	ar4
      00328C D0 15            [24] 7893 	pop	ar5
      00328E D0 16            [24] 7894 	pop	ar6
      003290 D0 17            [24] 7895 	pop	ar7
      003292 E8               [12] 7896 	mov	a,r0
      003293 24 02            [12] 7897 	add	a,#_gsm_receive_buf
      003295 F5 82            [12] 7898 	mov	dpl,a
      003297 E9               [12] 7899 	mov	a,r1
      003298 34 01            [12] 7900 	addc	a,#(_gsm_receive_buf >> 8)
      00329A F5 83            [12] 7901 	mov	dph,a
      00329C E0               [24] 7902 	movx	a,@dptr
      00329D F9               [12] 7903 	mov	r1,a
      00329E B9 43 3E         [24] 7904 	cjne	r1,#0x43,00173$
                                   7905 ;	include/gsm_serial.c:487: gsm_receive_buf[(gsm_receive_pointer+7)%13] =='+')||(gsm_receive_buf[gsm_receive_pointer]==' ' && gsm_receive_buf[(gsm_receive_pointer+12)%13] ==':' &&
      0032A1 74 07            [12] 7906 	mov	a,#0x07
      0032A3 2A               [12] 7907 	add	a,r2
      0032A4 F5 82            [12] 7908 	mov	dpl,a
      0032A6 E4               [12] 7909 	clr	a
      0032A7 3B               [12] 7910 	addc	a,r3
      0032A8 F5 83            [12] 7911 	mov	dph,a
      0032AA 75 1B 0D         [24] 7912 	mov	__modsint_PARM_2,#0x0d
      0032AD 75 1C 00         [24] 7913 	mov	(__modsint_PARM_2 + 1),#0x00
      0032B0 C0 17            [24] 7914 	push	ar7
      0032B2 C0 16            [24] 7915 	push	ar6
      0032B4 C0 15            [24] 7916 	push	ar5
      0032B6 C0 14            [24] 7917 	push	ar4
      0032B8 75 D0 00         [24] 7918 	mov	psw,#0x00
      0032BB 12 84 67         [24] 7919 	lcall	__modsint
      0032BE 75 D0 10         [24] 7920 	mov	psw,#0x10
      0032C1 AA 82            [24] 7921 	mov	r2,dpl
      0032C3 AB 83            [24] 7922 	mov	r3,dph
      0032C5 D0 14            [24] 7923 	pop	ar4
      0032C7 D0 15            [24] 7924 	pop	ar5
      0032C9 D0 16            [24] 7925 	pop	ar6
      0032CB D0 17            [24] 7926 	pop	ar7
      0032CD EA               [12] 7927 	mov	a,r2
      0032CE 24 02            [12] 7928 	add	a,#_gsm_receive_buf
      0032D0 F5 82            [12] 7929 	mov	dpl,a
      0032D2 EB               [12] 7930 	mov	a,r3
      0032D3 34 01            [12] 7931 	addc	a,#(_gsm_receive_buf >> 8)
      0032D5 F5 83            [12] 7932 	mov	dph,a
      0032D7 E0               [24] 7933 	movx	a,@dptr
      0032D8 FB               [12] 7934 	mov	r3,a
      0032D9 BB 2B 03         [24] 7935 	cjne	r3,#0x2b,01044$
      0032DC 02 34 73         [24] 7936 	ljmp	00158$
      0032DF                       7937 01044$:
      0032DF                       7938 00173$:
      0032DF EC               [12] 7939 	mov	a,r4
      0032E0 70 03            [24] 7940 	jnz	01045$
      0032E2 02 34 BE         [24] 7941 	ljmp	00159$
      0032E5                       7942 01045$:
      0032E5 8F 13            [24] 7943 	mov	ar3,r7
      0032E7 7C 00            [12] 7944 	mov	r4,#0x00
      0032E9 74 0C            [12] 7945 	mov	a,#0x0c
      0032EB 2B               [12] 7946 	add	a,r3
      0032EC F5 82            [12] 7947 	mov	dpl,a
      0032EE E4               [12] 7948 	clr	a
      0032EF 3C               [12] 7949 	addc	a,r4
      0032F0 F5 83            [12] 7950 	mov	dph,a
      0032F2 75 1B 0D         [24] 7951 	mov	__modsint_PARM_2,#0x0d
                                   7952 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0032F5 8C 1C            [24] 7953 	mov	(__modsint_PARM_2 + 1),r4
      0032F7 C0 17            [24] 7954 	push	ar7
      0032F9 C0 16            [24] 7955 	push	ar6
      0032FB C0 15            [24] 7956 	push	ar5
      0032FD C0 14            [24] 7957 	push	ar4
      0032FF C0 13            [24] 7958 	push	ar3
      003301 75 D0 00         [24] 7959 	mov	psw,#0x00
      003304 12 84 67         [24] 7960 	lcall	__modsint
      003307 75 D0 10         [24] 7961 	mov	psw,#0x10
      00330A A9 82            [24] 7962 	mov	r1,dpl
      00330C AA 83            [24] 7963 	mov	r2,dph
      00330E D0 13            [24] 7964 	pop	ar3
      003310 D0 14            [24] 7965 	pop	ar4
      003312 D0 15            [24] 7966 	pop	ar5
      003314 D0 16            [24] 7967 	pop	ar6
      003316 D0 17            [24] 7968 	pop	ar7
      003318 E9               [12] 7969 	mov	a,r1
      003319 24 02            [12] 7970 	add	a,#_gsm_receive_buf
      00331B F5 82            [12] 7971 	mov	dpl,a
      00331D EA               [12] 7972 	mov	a,r2
      00331E 34 01            [12] 7973 	addc	a,#(_gsm_receive_buf >> 8)
      003320 F5 83            [12] 7974 	mov	dph,a
      003322 E0               [24] 7975 	movx	a,@dptr
      003323 FA               [12] 7976 	mov	r2,a
      003324 BA 3A 02         [24] 7977 	cjne	r2,#0x3a,01046$
      003327 80 03            [24] 7978 	sjmp	01047$
      003329                       7979 01046$:
      003329 02 34 BE         [24] 7980 	ljmp	00159$
      00332C                       7981 01047$:
                                   7982 ;	include/gsm_serial.c:488: gsm_receive_buf[(gsm_receive_pointer+11)%13] =='P' && gsm_receive_buf[(gsm_receive_pointer+10)%13] =='I' &&
      00332C 74 0B            [12] 7983 	mov	a,#0x0b
      00332E 2B               [12] 7984 	add	a,r3
      00332F F5 82            [12] 7985 	mov	dpl,a
      003331 E4               [12] 7986 	clr	a
      003332 3C               [12] 7987 	addc	a,r4
      003333 F5 83            [12] 7988 	mov	dph,a
      003335 75 1B 0D         [24] 7989 	mov	__modsint_PARM_2,#0x0d
      003338 75 1C 00         [24] 7990 	mov	(__modsint_PARM_2 + 1),#0x00
      00333B C0 17            [24] 7991 	push	ar7
      00333D C0 16            [24] 7992 	push	ar6
      00333F C0 15            [24] 7993 	push	ar5
      003341 C0 14            [24] 7994 	push	ar4
      003343 C0 13            [24] 7995 	push	ar3
      003345 75 D0 00         [24] 7996 	mov	psw,#0x00
      003348 12 84 67         [24] 7997 	lcall	__modsint
      00334B 75 D0 10         [24] 7998 	mov	psw,#0x10
      00334E A9 82            [24] 7999 	mov	r1,dpl
      003350 AA 83            [24] 8000 	mov	r2,dph
      003352 D0 13            [24] 8001 	pop	ar3
      003354 D0 14            [24] 8002 	pop	ar4
      003356 D0 15            [24] 8003 	pop	ar5
      003358 D0 16            [24] 8004 	pop	ar6
      00335A D0 17            [24] 8005 	pop	ar7
      00335C E9               [12] 8006 	mov	a,r1
      00335D 24 02            [12] 8007 	add	a,#_gsm_receive_buf
      00335F F5 82            [12] 8008 	mov	dpl,a
      003361 EA               [12] 8009 	mov	a,r2
      003362 34 01            [12] 8010 	addc	a,#(_gsm_receive_buf >> 8)
      003364 F5 83            [12] 8011 	mov	dph,a
      003366 E0               [24] 8012 	movx	a,@dptr
      003367 FA               [12] 8013 	mov	r2,a
      003368 BA 50 02         [24] 8014 	cjne	r2,#0x50,01048$
      00336B 80 03            [24] 8015 	sjmp	01049$
      00336D                       8016 01048$:
      00336D 02 34 BE         [24] 8017 	ljmp	00159$
      003370                       8018 01049$:
      003370 74 0A            [12] 8019 	mov	a,#0x0a
      003372 2B               [12] 8020 	add	a,r3
      003373 F5 82            [12] 8021 	mov	dpl,a
      003375 E4               [12] 8022 	clr	a
      003376 3C               [12] 8023 	addc	a,r4
      003377 F5 83            [12] 8024 	mov	dph,a
      003379 75 1B 0D         [24] 8025 	mov	__modsint_PARM_2,#0x0d
      00337C 75 1C 00         [24] 8026 	mov	(__modsint_PARM_2 + 1),#0x00
      00337F C0 17            [24] 8027 	push	ar7
      003381 C0 16            [24] 8028 	push	ar6
      003383 C0 15            [24] 8029 	push	ar5
      003385 C0 14            [24] 8030 	push	ar4
      003387 C0 13            [24] 8031 	push	ar3
      003389 75 D0 00         [24] 8032 	mov	psw,#0x00
      00338C 12 84 67         [24] 8033 	lcall	__modsint
      00338F 75 D0 10         [24] 8034 	mov	psw,#0x10
      003392 A9 82            [24] 8035 	mov	r1,dpl
      003394 AA 83            [24] 8036 	mov	r2,dph
      003396 D0 13            [24] 8037 	pop	ar3
      003398 D0 14            [24] 8038 	pop	ar4
      00339A D0 15            [24] 8039 	pop	ar5
      00339C D0 16            [24] 8040 	pop	ar6
      00339E D0 17            [24] 8041 	pop	ar7
      0033A0 E9               [12] 8042 	mov	a,r1
      0033A1 24 02            [12] 8043 	add	a,#_gsm_receive_buf
      0033A3 F5 82            [12] 8044 	mov	dpl,a
      0033A5 EA               [12] 8045 	mov	a,r2
      0033A6 34 01            [12] 8046 	addc	a,#(_gsm_receive_buf >> 8)
      0033A8 F5 83            [12] 8047 	mov	dph,a
      0033AA E0               [24] 8048 	movx	a,@dptr
      0033AB FA               [12] 8049 	mov	r2,a
      0033AC BA 49 02         [24] 8050 	cjne	r2,#0x49,01050$
      0033AF 80 03            [24] 8051 	sjmp	01051$
      0033B1                       8052 01050$:
      0033B1 02 34 BE         [24] 8053 	ljmp	00159$
      0033B4                       8054 01051$:
                                   8055 ;	include/gsm_serial.c:489: gsm_receive_buf[(gsm_receive_pointer+9)%13] =='L'  && gsm_receive_buf[(gsm_receive_pointer+8)%13] =='C' &&
      0033B4 74 09            [12] 8056 	mov	a,#0x09
      0033B6 2B               [12] 8057 	add	a,r3
      0033B7 F5 82            [12] 8058 	mov	dpl,a
      0033B9 E4               [12] 8059 	clr	a
      0033BA 3C               [12] 8060 	addc	a,r4
      0033BB F5 83            [12] 8061 	mov	dph,a
      0033BD 75 1B 0D         [24] 8062 	mov	__modsint_PARM_2,#0x0d
      0033C0 75 1C 00         [24] 8063 	mov	(__modsint_PARM_2 + 1),#0x00
      0033C3 C0 17            [24] 8064 	push	ar7
      0033C5 C0 16            [24] 8065 	push	ar6
      0033C7 C0 15            [24] 8066 	push	ar5
      0033C9 C0 14            [24] 8067 	push	ar4
      0033CB C0 13            [24] 8068 	push	ar3
      0033CD 75 D0 00         [24] 8069 	mov	psw,#0x00
      0033D0 12 84 67         [24] 8070 	lcall	__modsint
      0033D3 75 D0 10         [24] 8071 	mov	psw,#0x10
      0033D6 A9 82            [24] 8072 	mov	r1,dpl
      0033D8 AA 83            [24] 8073 	mov	r2,dph
      0033DA D0 13            [24] 8074 	pop	ar3
      0033DC D0 14            [24] 8075 	pop	ar4
      0033DE D0 15            [24] 8076 	pop	ar5
      0033E0 D0 16            [24] 8077 	pop	ar6
      0033E2 D0 17            [24] 8078 	pop	ar7
      0033E4 E9               [12] 8079 	mov	a,r1
      0033E5 24 02            [12] 8080 	add	a,#_gsm_receive_buf
      0033E7 F5 82            [12] 8081 	mov	dpl,a
      0033E9 EA               [12] 8082 	mov	a,r2
      0033EA 34 01            [12] 8083 	addc	a,#(_gsm_receive_buf >> 8)
      0033EC F5 83            [12] 8084 	mov	dph,a
      0033EE E0               [24] 8085 	movx	a,@dptr
      0033EF FA               [12] 8086 	mov	r2,a
      0033F0 BA 4C 02         [24] 8087 	cjne	r2,#0x4c,01052$
      0033F3 80 03            [24] 8088 	sjmp	01053$
      0033F5                       8089 01052$:
      0033F5 02 34 BE         [24] 8090 	ljmp	00159$
      0033F8                       8091 01053$:
      0033F8 74 08            [12] 8092 	mov	a,#0x08
      0033FA 2B               [12] 8093 	add	a,r3
      0033FB F5 82            [12] 8094 	mov	dpl,a
      0033FD E4               [12] 8095 	clr	a
      0033FE 3C               [12] 8096 	addc	a,r4
      0033FF F5 83            [12] 8097 	mov	dph,a
      003401 75 1B 0D         [24] 8098 	mov	__modsint_PARM_2,#0x0d
      003404 75 1C 00         [24] 8099 	mov	(__modsint_PARM_2 + 1),#0x00
      003407 C0 17            [24] 8100 	push	ar7
      003409 C0 16            [24] 8101 	push	ar6
      00340B C0 15            [24] 8102 	push	ar5
      00340D C0 14            [24] 8103 	push	ar4
      00340F C0 13            [24] 8104 	push	ar3
      003411 75 D0 00         [24] 8105 	mov	psw,#0x00
      003414 12 84 67         [24] 8106 	lcall	__modsint
      003417 75 D0 10         [24] 8107 	mov	psw,#0x10
      00341A A9 82            [24] 8108 	mov	r1,dpl
      00341C AA 83            [24] 8109 	mov	r2,dph
      00341E D0 13            [24] 8110 	pop	ar3
      003420 D0 14            [24] 8111 	pop	ar4
      003422 D0 15            [24] 8112 	pop	ar5
      003424 D0 16            [24] 8113 	pop	ar6
      003426 D0 17            [24] 8114 	pop	ar7
      003428 E9               [12] 8115 	mov	a,r1
      003429 24 02            [12] 8116 	add	a,#_gsm_receive_buf
      00342B F5 82            [12] 8117 	mov	dpl,a
      00342D EA               [12] 8118 	mov	a,r2
      00342E 34 01            [12] 8119 	addc	a,#(_gsm_receive_buf >> 8)
      003430 F5 83            [12] 8120 	mov	dph,a
      003432 E0               [24] 8121 	movx	a,@dptr
      003433 FA               [12] 8122 	mov	r2,a
      003434 BA 43 02         [24] 8123 	cjne	r2,#0x43,01054$
      003437 80 03            [24] 8124 	sjmp	01055$
      003439                       8125 01054$:
      003439 02 34 BE         [24] 8126 	ljmp	00159$
      00343C                       8127 01055$:
                                   8128 ;	include/gsm_serial.c:490: gsm_receive_buf[(gsm_receive_pointer+7)%13] =='+')){
      00343C 74 07            [12] 8129 	mov	a,#0x07
      00343E 2B               [12] 8130 	add	a,r3
      00343F F5 82            [12] 8131 	mov	dpl,a
      003441 E4               [12] 8132 	clr	a
      003442 3C               [12] 8133 	addc	a,r4
      003443 F5 83            [12] 8134 	mov	dph,a
      003445 75 1B 0D         [24] 8135 	mov	__modsint_PARM_2,#0x0d
      003448 75 1C 00         [24] 8136 	mov	(__modsint_PARM_2 + 1),#0x00
      00344B C0 17            [24] 8137 	push	ar7
      00344D C0 16            [24] 8138 	push	ar6
      00344F C0 15            [24] 8139 	push	ar5
      003451 75 D0 00         [24] 8140 	mov	psw,#0x00
      003454 12 84 67         [24] 8141 	lcall	__modsint
      003457 75 D0 10         [24] 8142 	mov	psw,#0x10
      00345A AB 82            [24] 8143 	mov	r3,dpl
      00345C AC 83            [24] 8144 	mov	r4,dph
      00345E D0 15            [24] 8145 	pop	ar5
      003460 D0 16            [24] 8146 	pop	ar6
      003462 D0 17            [24] 8147 	pop	ar7
      003464 EB               [12] 8148 	mov	a,r3
      003465 24 02            [12] 8149 	add	a,#_gsm_receive_buf
      003467 F5 82            [12] 8150 	mov	dpl,a
      003469 EC               [12] 8151 	mov	a,r4
      00346A 34 01            [12] 8152 	addc	a,#(_gsm_receive_buf >> 8)
      00346C F5 83            [12] 8153 	mov	dph,a
      00346E E0               [24] 8154 	movx	a,@dptr
      00346F FC               [12] 8155 	mov	r4,a
      003470 BC 2B 4B         [24] 8156 	cjne	r4,#0x2b,00159$
      003473                       8157 00158$:
                                   8158 ;	include/gsm_serial.c:491: co_cuoc_goi_toi = gsm_receive_buf[(gsm_receive_pointer+9)%13] =='L';
      003473 8F 13            [24] 8159 	mov	ar3,r7
      003475 7C 00            [12] 8160 	mov	r4,#0x00
      003477 74 09            [12] 8161 	mov	a,#0x09
      003479 2B               [12] 8162 	add	a,r3
      00347A F5 82            [12] 8163 	mov	dpl,a
      00347C E4               [12] 8164 	clr	a
      00347D 3C               [12] 8165 	addc	a,r4
      00347E F5 83            [12] 8166 	mov	dph,a
      003480 75 1B 0D         [24] 8167 	mov	__modsint_PARM_2,#0x0d
                                   8168 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      003483 8C 1C            [24] 8169 	mov	(__modsint_PARM_2 + 1),r4
      003485 75 D0 00         [24] 8170 	mov	psw,#0x00
      003488 12 84 67         [24] 8171 	lcall	__modsint
      00348B 75 D0 10         [24] 8172 	mov	psw,#0x10
      00348E AB 82            [24] 8173 	mov	r3,dpl
      003490 AC 83            [24] 8174 	mov	r4,dph
      003492 EB               [12] 8175 	mov	a,r3
      003493 24 02            [12] 8176 	add	a,#_gsm_receive_buf
      003495 F5 82            [12] 8177 	mov	dpl,a
      003497 EC               [12] 8178 	mov	a,r4
      003498 34 01            [12] 8179 	addc	a,#(_gsm_receive_buf >> 8)
      00349A F5 83            [12] 8180 	mov	dph,a
      00349C E0               [24] 8181 	movx	a,@dptr
      00349D FC               [12] 8182 	mov	r4,a
      00349E BC 4C 03         [24] 8183 	cjne	r4,#0x4c,01058$
      0034A1 D3               [12] 8184 	setb	c
      0034A2 80 01            [24] 8185 	sjmp	01059$
      0034A4                       8186 01058$:
      0034A4 C3               [12] 8187 	clr	c
      0034A5                       8188 01059$:
                                   8189 ;	include/gsm_serial.c:492: if(!co_cuoc_goi_toi && sms_dang_xu_ly) break;
      0034A5 92 06            [24] 8190 	mov	_co_cuoc_goi_toi,c
      0034A7 40 06            [24] 8191 	jc	00144$
      0034A9 30 0E 03         [24] 8192 	jnb	_sms_dang_xu_ly,01061$
      0034AC 02 43 0D         [24] 8193 	ljmp	00345$
      0034AF                       8194 01061$:
      0034AF                       8195 00144$:
                                   8196 ;	include/gsm_serial.c:495: phone_header = 0;
                                   8197 ;	assignBit
      0034AF C2 0B            [12] 8198 	clr	_phone_header
                                   8199 ;	include/gsm_serial.c:496: phone_phu_so_sanh_that_bai = 0;
                                   8200 ;	assignBit
      0034B1 C2 09            [12] 8201 	clr	_phone_phu_so_sanh_that_bai
                                   8202 ;	include/gsm_serial.c:497: phone_chinh_so_sanh_that_bai = 0;
                                   8203 ;	assignBit
      0034B3 C2 08            [12] 8204 	clr	_phone_chinh_so_sanh_that_bai
                                   8205 ;	include/gsm_serial.c:498: gsm_serial_cmd = PHONE;
      0034B5 90 00 FE         [24] 8206 	mov	dptr,#_gsm_serial_cmd
      0034B8 74 03            [12] 8207 	mov	a,#0x03
      0034BA F0               [24] 8208 	movx	@dptr,a
      0034BB 02 43 0D         [24] 8209 	ljmp	00345$
      0034BE                       8210 00159$:
                                   8211 ;	include/gsm_serial.c:500: }else if(gsm_receive_buf[gsm_receive_pointer]=='K' && gsm_receive_buf[(gsm_receive_pointer+12)%13] =='O'){
      0034BE BE 4B 69         [24] 8212 	cjne	r6,#0x4b,00155$
      0034C1 8F 13            [24] 8213 	mov	ar3,r7
      0034C3 7C 00            [12] 8214 	mov	r4,#0x00
      0034C5 74 0C            [12] 8215 	mov	a,#0x0c
      0034C7 2B               [12] 8216 	add	a,r3
      0034C8 F5 82            [12] 8217 	mov	dpl,a
      0034CA E4               [12] 8218 	clr	a
      0034CB 3C               [12] 8219 	addc	a,r4
      0034CC F5 83            [12] 8220 	mov	dph,a
      0034CE 75 1B 0D         [24] 8221 	mov	__modsint_PARM_2,#0x0d
                                   8222 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0034D1 8C 1C            [24] 8223 	mov	(__modsint_PARM_2 + 1),r4
      0034D3 C0 17            [24] 8224 	push	ar7
      0034D5 C0 16            [24] 8225 	push	ar6
      0034D7 C0 15            [24] 8226 	push	ar5
      0034D9 75 D0 00         [24] 8227 	mov	psw,#0x00
      0034DC 12 84 67         [24] 8228 	lcall	__modsint
      0034DF 75 D0 10         [24] 8229 	mov	psw,#0x10
      0034E2 AB 82            [24] 8230 	mov	r3,dpl
      0034E4 AC 83            [24] 8231 	mov	r4,dph
      0034E6 D0 15            [24] 8232 	pop	ar5
      0034E8 D0 16            [24] 8233 	pop	ar6
      0034EA D0 17            [24] 8234 	pop	ar7
      0034EC EB               [12] 8235 	mov	a,r3
      0034ED 24 02            [12] 8236 	add	a,#_gsm_receive_buf
      0034EF F5 82            [12] 8237 	mov	dpl,a
      0034F1 EC               [12] 8238 	mov	a,r4
      0034F2 34 01            [12] 8239 	addc	a,#(_gsm_receive_buf >> 8)
      0034F4 F5 83            [12] 8240 	mov	dph,a
      0034F6 E0               [24] 8241 	movx	a,@dptr
      0034F7 FC               [12] 8242 	mov	r4,a
      0034F8 BC 4F 2F         [24] 8243 	cjne	r4,#0x4f,00155$
                                   8244 ;	include/gsm_serial.c:501: if(gsm_serial_cmd==CLK) sms_index = 0;
      0034FB BD 02 05         [24] 8245 	cjne	r5,#0x02,00147$
      0034FE 90 00 BB         [24] 8246 	mov	dptr,#_sms_index
      003501 E4               [12] 8247 	clr	a
      003502 F0               [24] 8248 	movx	@dptr,a
      003503                       8249 00147$:
                                   8250 ;	include/gsm_serial.c:502: gui_lenh_thanh_cong = !have_not;
      003503 A2 2F            [12] 8251 	mov	c,_have_not
      003505 B3               [12] 8252 	cpl	c
      003506 92 2E            [24] 8253 	mov	_gui_lenh_thanh_cong,c
                                   8254 ;	include/gsm_serial.c:503: have_not = 0;
                                   8255 ;	assignBit
      003508 C2 2F            [12] 8256 	clr	_have_not
                                   8257 ;	include/gsm_serial.c:504: if(sms_index){
      00350A 90 00 BB         [24] 8258 	mov	dptr,#_sms_index
      00350D E0               [24] 8259 	movx	a,@dptr
      00350E 70 03            [24] 8260 	jnz	01068$
      003510 02 43 0D         [24] 8261 	ljmp	00345$
      003513                       8262 01068$:
                                   8263 ;	include/gsm_serial.c:505: sms_index = 0;
      003513 90 00 BB         [24] 8264 	mov	dptr,#_sms_index
      003516 E4               [12] 8265 	clr	a
      003517 F0               [24] 8266 	movx	@dptr,a
                                   8267 ;	include/gsm_serial.c:506: send_gsm_cmd("AT+CMGDA=\"DEL ALL\"\r");
      003518 90 8B 7F         [24] 8268 	mov	dptr,#___str_68
      00351B 75 F0 80         [24] 8269 	mov	b,#0x80
      00351E 75 D0 00         [24] 8270 	mov	psw,#0x00
      003521 12 03 CD         [24] 8271 	lcall	_send_gsm_cmd
      003524 75 D0 10         [24] 8272 	mov	psw,#0x10
      003527 02 43 0D         [24] 8273 	ljmp	00345$
      00352A                       8274 00155$:
                                   8275 ;	include/gsm_serial.c:510: }else if(gsm_receive_buf[gsm_receive_pointer]=='T' && gsm_receive_buf[(gsm_receive_pointer+12)%13] =='O' &&
      00352A BE 54 02         [24] 8276 	cjne	r6,#0x54,01069$
      00352D 80 03            [24] 8277 	sjmp	01070$
      00352F                       8278 01069$:
      00352F 02 43 0D         [24] 8279 	ljmp	00345$
      003532                       8280 01070$:
      003532 8F 14            [24] 8281 	mov	ar4,r7
      003534 7D 00            [12] 8282 	mov	r5,#0x00
      003536 74 0C            [12] 8283 	mov	a,#0x0c
      003538 2C               [12] 8284 	add	a,r4
      003539 F5 82            [12] 8285 	mov	dpl,a
      00353B E4               [12] 8286 	clr	a
      00353C 3D               [12] 8287 	addc	a,r5
      00353D F5 83            [12] 8288 	mov	dph,a
      00353F 75 1B 0D         [24] 8289 	mov	__modsint_PARM_2,#0x0d
                                   8290 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      003542 8D 1C            [24] 8291 	mov	(__modsint_PARM_2 + 1),r5
      003544 C0 15            [24] 8292 	push	ar5
      003546 C0 14            [24] 8293 	push	ar4
      003548 75 D0 00         [24] 8294 	mov	psw,#0x00
      00354B 12 84 67         [24] 8295 	lcall	__modsint
      00354E 75 D0 10         [24] 8296 	mov	psw,#0x10
      003551 AA 82            [24] 8297 	mov	r2,dpl
      003553 AB 83            [24] 8298 	mov	r3,dph
      003555 D0 14            [24] 8299 	pop	ar4
      003557 D0 15            [24] 8300 	pop	ar5
      003559 EA               [12] 8301 	mov	a,r2
      00355A 24 02            [12] 8302 	add	a,#_gsm_receive_buf
      00355C F5 82            [12] 8303 	mov	dpl,a
      00355E EB               [12] 8304 	mov	a,r3
      00355F 34 01            [12] 8305 	addc	a,#(_gsm_receive_buf >> 8)
      003561 F5 83            [12] 8306 	mov	dph,a
      003563 E0               [24] 8307 	movx	a,@dptr
      003564 FB               [12] 8308 	mov	r3,a
      003565 BB 4F 02         [24] 8309 	cjne	r3,#0x4f,01071$
      003568 80 03            [24] 8310 	sjmp	01072$
      00356A                       8311 01071$:
      00356A 02 43 0D         [24] 8312 	ljmp	00345$
      00356D                       8313 01072$:
                                   8314 ;	include/gsm_serial.c:511: gsm_receive_buf[(gsm_receive_pointer+11)%13] =='N'){
      00356D 74 0B            [12] 8315 	mov	a,#0x0b
      00356F 2C               [12] 8316 	add	a,r4
      003570 F5 82            [12] 8317 	mov	dpl,a
      003572 E4               [12] 8318 	clr	a
      003573 3D               [12] 8319 	addc	a,r5
      003574 F5 83            [12] 8320 	mov	dph,a
      003576 75 1B 0D         [24] 8321 	mov	__modsint_PARM_2,#0x0d
      003579 75 1C 00         [24] 8322 	mov	(__modsint_PARM_2 + 1),#0x00
      00357C 75 D0 00         [24] 8323 	mov	psw,#0x00
      00357F 12 84 67         [24] 8324 	lcall	__modsint
      003582 75 D0 10         [24] 8325 	mov	psw,#0x10
      003585 AC 82            [24] 8326 	mov	r4,dpl
      003587 AD 83            [24] 8327 	mov	r5,dph
      003589 EC               [12] 8328 	mov	a,r4
      00358A 24 02            [12] 8329 	add	a,#_gsm_receive_buf
      00358C F5 82            [12] 8330 	mov	dpl,a
      00358E ED               [12] 8331 	mov	a,r5
      00358F 34 01            [12] 8332 	addc	a,#(_gsm_receive_buf >> 8)
      003591 F5 83            [12] 8333 	mov	dph,a
      003593 E0               [24] 8334 	movx	a,@dptr
      003594 FD               [12] 8335 	mov	r5,a
      003595 BD 4E 02         [24] 8336 	cjne	r5,#0x4e,01073$
      003598 80 03            [24] 8337 	sjmp	01074$
      00359A                       8338 01073$:
      00359A 02 43 0D         [24] 8339 	ljmp	00345$
      00359D                       8340 01074$:
                                   8341 ;	include/gsm_serial.c:513: have_not = 1;
                                   8342 ;	assignBit
      00359D D2 2F            [12] 8343 	setb	_have_not
                                   8344 ;	include/gsm_serial.c:516: break;
      00359F 02 43 0D         [24] 8345 	ljmp	00345$
                                   8346 ;	include/gsm_serial.c:517: case CFUN1:
      0035A2                       8347 00191$:
                                   8348 ;	include/gsm_serial.c:518: if(gsm_receive_buf[gsm_receive_pointer]==' ' && gsm_receive_buf[(gsm_receive_pointer+12)%13] ==':' &&
      0035A2 BE 20 02         [24] 8349 	cjne	r6,#0x20,01075$
      0035A5 80 03            [24] 8350 	sjmp	01076$
      0035A7                       8351 01075$:
      0035A7 02 43 0D         [24] 8352 	ljmp	00345$
      0035AA                       8353 01076$:
      0035AA 8F 14            [24] 8354 	mov	ar4,r7
      0035AC 7D 00            [12] 8355 	mov	r5,#0x00
      0035AE 74 0C            [12] 8356 	mov	a,#0x0c
      0035B0 2C               [12] 8357 	add	a,r4
      0035B1 F5 82            [12] 8358 	mov	dpl,a
      0035B3 E4               [12] 8359 	clr	a
      0035B4 3D               [12] 8360 	addc	a,r5
      0035B5 F5 83            [12] 8361 	mov	dph,a
      0035B7 75 1B 0D         [24] 8362 	mov	__modsint_PARM_2,#0x0d
                                   8363 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0035BA 8D 1C            [24] 8364 	mov	(__modsint_PARM_2 + 1),r5
      0035BC C0 15            [24] 8365 	push	ar5
      0035BE C0 14            [24] 8366 	push	ar4
      0035C0 75 D0 00         [24] 8367 	mov	psw,#0x00
      0035C3 12 84 67         [24] 8368 	lcall	__modsint
      0035C6 75 D0 10         [24] 8369 	mov	psw,#0x10
      0035C9 AA 82            [24] 8370 	mov	r2,dpl
      0035CB AB 83            [24] 8371 	mov	r3,dph
      0035CD D0 14            [24] 8372 	pop	ar4
      0035CF D0 15            [24] 8373 	pop	ar5
      0035D1 EA               [12] 8374 	mov	a,r2
      0035D2 24 02            [12] 8375 	add	a,#_gsm_receive_buf
      0035D4 F5 82            [12] 8376 	mov	dpl,a
      0035D6 EB               [12] 8377 	mov	a,r3
      0035D7 34 01            [12] 8378 	addc	a,#(_gsm_receive_buf >> 8)
      0035D9 F5 83            [12] 8379 	mov	dph,a
      0035DB E0               [24] 8380 	movx	a,@dptr
      0035DC FB               [12] 8381 	mov	r3,a
      0035DD BB 3A 02         [24] 8382 	cjne	r3,#0x3a,01077$
      0035E0 80 03            [24] 8383 	sjmp	01078$
      0035E2                       8384 01077$:
      0035E2 02 43 0D         [24] 8385 	ljmp	00345$
      0035E5                       8386 01078$:
                                   8387 ;	include/gsm_serial.c:519: gsm_receive_buf[(gsm_receive_pointer+11)%13] =='Z' && gsm_receive_buf[(gsm_receive_pointer+10)%13] =='T' &&
      0035E5 74 0B            [12] 8388 	mov	a,#0x0b
      0035E7 2C               [12] 8389 	add	a,r4
      0035E8 F5 82            [12] 8390 	mov	dpl,a
      0035EA E4               [12] 8391 	clr	a
      0035EB 3D               [12] 8392 	addc	a,r5
      0035EC F5 83            [12] 8393 	mov	dph,a
      0035EE 75 1B 0D         [24] 8394 	mov	__modsint_PARM_2,#0x0d
      0035F1 75 1C 00         [24] 8395 	mov	(__modsint_PARM_2 + 1),#0x00
      0035F4 C0 15            [24] 8396 	push	ar5
      0035F6 C0 14            [24] 8397 	push	ar4
      0035F8 75 D0 00         [24] 8398 	mov	psw,#0x00
      0035FB 12 84 67         [24] 8399 	lcall	__modsint
      0035FE 75 D0 10         [24] 8400 	mov	psw,#0x10
      003601 AA 82            [24] 8401 	mov	r2,dpl
      003603 AB 83            [24] 8402 	mov	r3,dph
      003605 D0 14            [24] 8403 	pop	ar4
      003607 D0 15            [24] 8404 	pop	ar5
      003609 EA               [12] 8405 	mov	a,r2
      00360A 24 02            [12] 8406 	add	a,#_gsm_receive_buf
      00360C F5 82            [12] 8407 	mov	dpl,a
      00360E EB               [12] 8408 	mov	a,r3
      00360F 34 01            [12] 8409 	addc	a,#(_gsm_receive_buf >> 8)
      003611 F5 83            [12] 8410 	mov	dph,a
      003613 E0               [24] 8411 	movx	a,@dptr
      003614 FB               [12] 8412 	mov	r3,a
      003615 BB 5A 02         [24] 8413 	cjne	r3,#0x5a,01079$
      003618 80 03            [24] 8414 	sjmp	01080$
      00361A                       8415 01079$:
      00361A 02 43 0D         [24] 8416 	ljmp	00345$
      00361D                       8417 01080$:
      00361D 74 0A            [12] 8418 	mov	a,#0x0a
      00361F 2C               [12] 8419 	add	a,r4
      003620 F5 82            [12] 8420 	mov	dpl,a
      003622 E4               [12] 8421 	clr	a
      003623 3D               [12] 8422 	addc	a,r5
      003624 F5 83            [12] 8423 	mov	dph,a
      003626 75 1B 0D         [24] 8424 	mov	__modsint_PARM_2,#0x0d
      003629 75 1C 00         [24] 8425 	mov	(__modsint_PARM_2 + 1),#0x00
      00362C C0 15            [24] 8426 	push	ar5
      00362E C0 14            [24] 8427 	push	ar4
      003630 75 D0 00         [24] 8428 	mov	psw,#0x00
      003633 12 84 67         [24] 8429 	lcall	__modsint
      003636 75 D0 10         [24] 8430 	mov	psw,#0x10
      003639 AA 82            [24] 8431 	mov	r2,dpl
      00363B AB 83            [24] 8432 	mov	r3,dph
      00363D D0 14            [24] 8433 	pop	ar4
      00363F D0 15            [24] 8434 	pop	ar5
      003641 EA               [12] 8435 	mov	a,r2
      003642 24 02            [12] 8436 	add	a,#_gsm_receive_buf
      003644 F5 82            [12] 8437 	mov	dpl,a
      003646 EB               [12] 8438 	mov	a,r3
      003647 34 01            [12] 8439 	addc	a,#(_gsm_receive_buf >> 8)
      003649 F5 83            [12] 8440 	mov	dph,a
      00364B E0               [24] 8441 	movx	a,@dptr
      00364C FB               [12] 8442 	mov	r3,a
      00364D BB 54 02         [24] 8443 	cjne	r3,#0x54,01081$
      003650 80 03            [24] 8444 	sjmp	01082$
      003652                       8445 01081$:
      003652 02 43 0D         [24] 8446 	ljmp	00345$
      003655                       8447 01082$:
                                   8448 ;	include/gsm_serial.c:520: gsm_receive_buf[(gsm_receive_pointer+9)%13] =='T' && gsm_receive_buf[(gsm_receive_pointer+8)%13] =='U' &&
      003655 74 09            [12] 8449 	mov	a,#0x09
      003657 2C               [12] 8450 	add	a,r4
      003658 F5 82            [12] 8451 	mov	dpl,a
      00365A E4               [12] 8452 	clr	a
      00365B 3D               [12] 8453 	addc	a,r5
      00365C F5 83            [12] 8454 	mov	dph,a
      00365E 75 1B 0D         [24] 8455 	mov	__modsint_PARM_2,#0x0d
      003661 75 1C 00         [24] 8456 	mov	(__modsint_PARM_2 + 1),#0x00
      003664 C0 15            [24] 8457 	push	ar5
      003666 C0 14            [24] 8458 	push	ar4
      003668 75 D0 00         [24] 8459 	mov	psw,#0x00
      00366B 12 84 67         [24] 8460 	lcall	__modsint
      00366E 75 D0 10         [24] 8461 	mov	psw,#0x10
      003671 AA 82            [24] 8462 	mov	r2,dpl
      003673 AB 83            [24] 8463 	mov	r3,dph
      003675 D0 14            [24] 8464 	pop	ar4
      003677 D0 15            [24] 8465 	pop	ar5
      003679 EA               [12] 8466 	mov	a,r2
      00367A 24 02            [12] 8467 	add	a,#_gsm_receive_buf
      00367C F5 82            [12] 8468 	mov	dpl,a
      00367E EB               [12] 8469 	mov	a,r3
      00367F 34 01            [12] 8470 	addc	a,#(_gsm_receive_buf >> 8)
      003681 F5 83            [12] 8471 	mov	dph,a
      003683 E0               [24] 8472 	movx	a,@dptr
      003684 FB               [12] 8473 	mov	r3,a
      003685 BB 54 02         [24] 8474 	cjne	r3,#0x54,01083$
      003688 80 03            [24] 8475 	sjmp	01084$
      00368A                       8476 01083$:
      00368A 02 43 0D         [24] 8477 	ljmp	00345$
      00368D                       8478 01084$:
      00368D 74 08            [12] 8479 	mov	a,#0x08
      00368F 2C               [12] 8480 	add	a,r4
      003690 F5 82            [12] 8481 	mov	dpl,a
      003692 E4               [12] 8482 	clr	a
      003693 3D               [12] 8483 	addc	a,r5
      003694 F5 83            [12] 8484 	mov	dph,a
      003696 75 1B 0D         [24] 8485 	mov	__modsint_PARM_2,#0x0d
      003699 75 1C 00         [24] 8486 	mov	(__modsint_PARM_2 + 1),#0x00
      00369C C0 15            [24] 8487 	push	ar5
      00369E C0 14            [24] 8488 	push	ar4
      0036A0 75 D0 00         [24] 8489 	mov	psw,#0x00
      0036A3 12 84 67         [24] 8490 	lcall	__modsint
      0036A6 75 D0 10         [24] 8491 	mov	psw,#0x10
      0036A9 AA 82            [24] 8492 	mov	r2,dpl
      0036AB AB 83            [24] 8493 	mov	r3,dph
      0036AD D0 14            [24] 8494 	pop	ar4
      0036AF D0 15            [24] 8495 	pop	ar5
      0036B1 EA               [12] 8496 	mov	a,r2
      0036B2 24 02            [12] 8497 	add	a,#_gsm_receive_buf
      0036B4 F5 82            [12] 8498 	mov	dpl,a
      0036B6 EB               [12] 8499 	mov	a,r3
      0036B7 34 01            [12] 8500 	addc	a,#(_gsm_receive_buf >> 8)
      0036B9 F5 83            [12] 8501 	mov	dph,a
      0036BB E0               [24] 8502 	movx	a,@dptr
      0036BC FB               [12] 8503 	mov	r3,a
      0036BD BB 55 02         [24] 8504 	cjne	r3,#0x55,01085$
      0036C0 80 03            [24] 8505 	sjmp	01086$
      0036C2                       8506 01085$:
      0036C2 02 43 0D         [24] 8507 	ljmp	00345$
      0036C5                       8508 01086$:
                                   8509 ;	include/gsm_serial.c:521: gsm_receive_buf[(gsm_receive_pointer+7)%13] =='S' && gsm_receive_buf[(gsm_receive_pointer+6)%13] =='P' &&
      0036C5 74 07            [12] 8510 	mov	a,#0x07
      0036C7 2C               [12] 8511 	add	a,r4
      0036C8 F5 82            [12] 8512 	mov	dpl,a
      0036CA E4               [12] 8513 	clr	a
      0036CB 3D               [12] 8514 	addc	a,r5
      0036CC F5 83            [12] 8515 	mov	dph,a
      0036CE 75 1B 0D         [24] 8516 	mov	__modsint_PARM_2,#0x0d
      0036D1 75 1C 00         [24] 8517 	mov	(__modsint_PARM_2 + 1),#0x00
      0036D4 C0 15            [24] 8518 	push	ar5
      0036D6 C0 14            [24] 8519 	push	ar4
      0036D8 75 D0 00         [24] 8520 	mov	psw,#0x00
      0036DB 12 84 67         [24] 8521 	lcall	__modsint
      0036DE 75 D0 10         [24] 8522 	mov	psw,#0x10
      0036E1 AA 82            [24] 8523 	mov	r2,dpl
      0036E3 AB 83            [24] 8524 	mov	r3,dph
      0036E5 D0 14            [24] 8525 	pop	ar4
      0036E7 D0 15            [24] 8526 	pop	ar5
      0036E9 EA               [12] 8527 	mov	a,r2
      0036EA 24 02            [12] 8528 	add	a,#_gsm_receive_buf
      0036EC F5 82            [12] 8529 	mov	dpl,a
      0036EE EB               [12] 8530 	mov	a,r3
      0036EF 34 01            [12] 8531 	addc	a,#(_gsm_receive_buf >> 8)
      0036F1 F5 83            [12] 8532 	mov	dph,a
      0036F3 E0               [24] 8533 	movx	a,@dptr
      0036F4 FB               [12] 8534 	mov	r3,a
      0036F5 BB 53 02         [24] 8535 	cjne	r3,#0x53,01087$
      0036F8 80 03            [24] 8536 	sjmp	01088$
      0036FA                       8537 01087$:
      0036FA 02 43 0D         [24] 8538 	ljmp	00345$
      0036FD                       8539 01088$:
      0036FD 74 06            [12] 8540 	mov	a,#0x06
      0036FF 2C               [12] 8541 	add	a,r4
      003700 F5 82            [12] 8542 	mov	dpl,a
      003702 E4               [12] 8543 	clr	a
      003703 3D               [12] 8544 	addc	a,r5
      003704 F5 83            [12] 8545 	mov	dph,a
      003706 75 1B 0D         [24] 8546 	mov	__modsint_PARM_2,#0x0d
      003709 75 1C 00         [24] 8547 	mov	(__modsint_PARM_2 + 1),#0x00
      00370C C0 15            [24] 8548 	push	ar5
      00370E C0 14            [24] 8549 	push	ar4
      003710 75 D0 00         [24] 8550 	mov	psw,#0x00
      003713 12 84 67         [24] 8551 	lcall	__modsint
      003716 75 D0 10         [24] 8552 	mov	psw,#0x10
      003719 AA 82            [24] 8553 	mov	r2,dpl
      00371B AB 83            [24] 8554 	mov	r3,dph
      00371D D0 14            [24] 8555 	pop	ar4
      00371F D0 15            [24] 8556 	pop	ar5
      003721 EA               [12] 8557 	mov	a,r2
      003722 24 02            [12] 8558 	add	a,#_gsm_receive_buf
      003724 F5 82            [12] 8559 	mov	dpl,a
      003726 EB               [12] 8560 	mov	a,r3
      003727 34 01            [12] 8561 	addc	a,#(_gsm_receive_buf >> 8)
      003729 F5 83            [12] 8562 	mov	dph,a
      00372B E0               [24] 8563 	movx	a,@dptr
      00372C FB               [12] 8564 	mov	r3,a
      00372D BB 50 02         [24] 8565 	cjne	r3,#0x50,01089$
      003730 80 03            [24] 8566 	sjmp	01090$
      003732                       8567 01089$:
      003732 02 43 0D         [24] 8568 	ljmp	00345$
      003735                       8569 01090$:
                                   8570 ;	include/gsm_serial.c:522: gsm_receive_buf[(gsm_receive_pointer+5)%13] =='*'){
      003735 8C 82            [24] 8571 	mov	dpl,r4
      003737 8D 83            [24] 8572 	mov	dph,r5
      003739 A3               [24] 8573 	inc	dptr
      00373A A3               [24] 8574 	inc	dptr
      00373B A3               [24] 8575 	inc	dptr
      00373C A3               [24] 8576 	inc	dptr
      00373D A3               [24] 8577 	inc	dptr
      00373E 75 1B 0D         [24] 8578 	mov	__modsint_PARM_2,#0x0d
      003741 75 1C 00         [24] 8579 	mov	(__modsint_PARM_2 + 1),#0x00
      003744 75 D0 00         [24] 8580 	mov	psw,#0x00
      003747 12 84 67         [24] 8581 	lcall	__modsint
      00374A 75 D0 10         [24] 8582 	mov	psw,#0x10
      00374D AC 82            [24] 8583 	mov	r4,dpl
      00374F AD 83            [24] 8584 	mov	r5,dph
      003751 EC               [12] 8585 	mov	a,r4
      003752 24 02            [12] 8586 	add	a,#_gsm_receive_buf
      003754 F5 82            [12] 8587 	mov	dpl,a
      003756 ED               [12] 8588 	mov	a,r5
      003757 34 01            [12] 8589 	addc	a,#(_gsm_receive_buf >> 8)
      003759 F5 83            [12] 8590 	mov	dph,a
      00375B E0               [24] 8591 	movx	a,@dptr
      00375C FD               [12] 8592 	mov	r5,a
      00375D BD 2A 02         [24] 8593 	cjne	r5,#0x2a,01091$
      003760 80 03            [24] 8594 	sjmp	01092$
      003762                       8595 01091$:
      003762 02 43 0D         [24] 8596 	ljmp	00345$
      003765                       8597 01092$:
                                   8598 ;	include/gsm_serial.c:524: date_pointer = 0;
      003765 90 01 01         [24] 8599 	mov	dptr,#_date_pointer
      003768 E4               [12] 8600 	clr	a
      003769 F0               [24] 8601 	movx	@dptr,a
                                   8602 ;	include/gsm_serial.c:525: gsm_serial_cmd = CFUN;
      00376A 90 00 FE         [24] 8603 	mov	dptr,#_gsm_serial_cmd
      00376D 04               [12] 8604 	inc	a
      00376E F0               [24] 8605 	movx	@dptr,a
                                   8606 ;	include/gsm_serial.c:528: break;
      00376F 02 43 0D         [24] 8607 	ljmp	00345$
                                   8608 ;	include/gsm_serial.c:530: case CFUN:
      003772                       8609 00202$:
                                   8610 ;	include/gsm_serial.c:531: if(SBUF!='\r' && date_pointer<30)
      003772 74 0D            [12] 8611 	mov	a,#0x0d
      003774 B5 99 02         [24] 8612 	cjne	a,_SBUF,01093$
      003777 80 20            [24] 8613 	sjmp	00204$
      003779                       8614 01093$:
      003779 90 01 01         [24] 8615 	mov	dptr,#_date_pointer
      00377C E0               [24] 8616 	movx	a,@dptr
      00377D FD               [12] 8617 	mov	r5,a
      00377E BD 1E 00         [24] 8618 	cjne	r5,#0x1e,01094$
      003781                       8619 01094$:
      003781 50 16            [24] 8620 	jnc	00204$
                                   8621 ;	include/gsm_serial.c:532: date_str[date_pointer++] = SBUF;
      003783 90 01 01         [24] 8622 	mov	dptr,#_date_pointer
      003786 ED               [12] 8623 	mov	a,r5
      003787 04               [12] 8624 	inc	a
      003788 F0               [24] 8625 	movx	@dptr,a
      003789 ED               [12] 8626 	mov	a,r5
      00378A 24 11            [12] 8627 	add	a,#_date_str
      00378C F5 82            [12] 8628 	mov	dpl,a
      00378E E4               [12] 8629 	clr	a
      00378F 34 01            [12] 8630 	addc	a,#(_date_str >> 8)
      003791 F5 83            [12] 8631 	mov	dph,a
      003793 E5 99            [12] 8632 	mov	a,_SBUF
      003795 F0               [24] 8633 	movx	@dptr,a
      003796 02 43 0D         [24] 8634 	ljmp	00345$
      003799                       8635 00204$:
                                   8636 ;	include/gsm_serial.c:534: date_str[date_pointer-1] = 0;
      003799 90 01 01         [24] 8637 	mov	dptr,#_date_pointer
      00379C E0               [24] 8638 	movx	a,@dptr
      00379D FD               [12] 8639 	mov	r5,a
      00379E 1D               [12] 8640 	dec	r5
      00379F ED               [12] 8641 	mov	a,r5
      0037A0 33               [12] 8642 	rlc	a
      0037A1 95 E0            [12] 8643 	subb	a,acc
      0037A3 FC               [12] 8644 	mov	r4,a
      0037A4 ED               [12] 8645 	mov	a,r5
      0037A5 24 11            [12] 8646 	add	a,#_date_str
      0037A7 F5 82            [12] 8647 	mov	dpl,a
      0037A9 EC               [12] 8648 	mov	a,r4
      0037AA 34 01            [12] 8649 	addc	a,#(_date_str >> 8)
      0037AC F5 83            [12] 8650 	mov	dph,a
      0037AE E4               [12] 8651 	clr	a
      0037AF F0               [24] 8652 	movx	@dptr,a
                                   8653 ;	include/gsm_serial.c:535: have_time = gsm_serial_cmd;
      0037B0 90 00 FE         [24] 8654 	mov	dptr,#_gsm_serial_cmd
      0037B3 E0               [24] 8655 	movx	a,@dptr
      0037B4 90 00 FF         [24] 8656 	mov	dptr,#_have_time
      0037B7 F0               [24] 8657 	movx	@dptr,a
                                   8658 ;	include/gsm_serial.c:536: gsm_serial_cmd = 0;
      0037B8 90 00 FE         [24] 8659 	mov	dptr,#_gsm_serial_cmd
      0037BB E4               [12] 8660 	clr	a
      0037BC F0               [24] 8661 	movx	@dptr,a
                                   8662 ;	include/gsm_serial.c:537: gui_lenh_thanh_cong = 1;
                                   8663 ;	assignBit
      0037BD D2 2E            [12] 8664 	setb	_gui_lenh_thanh_cong
                                   8665 ;	include/gsm_serial.c:539: break;
      0037BF 02 43 0D         [24] 8666 	ljmp	00345$
                                   8667 ;	include/gsm_serial.c:540: case PHONE:
      0037C2                       8668 00207$:
                                   8669 ;	include/gsm_serial.c:543: if(phone_header){
      0037C2 20 0B 03         [24] 8670 	jb	_phone_header,01096$
      0037C5 02 38 45         [24] 8671 	ljmp	00240$
      0037C8                       8672 01096$:
                                   8673 ;	include/gsm_serial.c:544: if(!sms_index){
      0037C8 90 00 BB         [24] 8674 	mov	dptr,#_sms_index
      0037CB E0               [24] 8675 	movx	a,@dptr
      0037CC FD               [12] 8676 	mov	r5,a
      0037CD 70 23            [24] 8677 	jnz	00227$
                                   8678 ;	include/gsm_serial.c:545: if(SBUF=='\r'){
      0037CF 74 0D            [12] 8679 	mov	a,#0x0d
      0037D1 B5 99 02         [24] 8680 	cjne	a,_SBUF,01098$
      0037D4 80 03            [24] 8681 	sjmp	01099$
      0037D6                       8682 01098$:
      0037D6 02 43 0D         [24] 8683 	ljmp	00345$
      0037D9                       8684 01099$:
                                   8685 ;	include/gsm_serial.c:546: if(co_cuoc_goi_toi){
      0037D9 30 06 0D         [24] 8686 	jnb	_co_cuoc_goi_toi,00209$
                                   8687 ;	include/gsm_serial.c:547: delay_cuoc_goi_ke_tiep = 2;
      0037DC 90 00 BA         [24] 8688 	mov	dptr,#_delay_cuoc_goi_ke_tiep
      0037DF 74 02            [12] 8689 	mov	a,#0x02
      0037E1 F0               [24] 8690 	movx	@dptr,a
                                   8691 ;	include/gsm_serial.c:548: so_lan_goi_dien++;
      0037E2 90 00 B9         [24] 8692 	mov	dptr,#_so_lan_goi_dien
      0037E5 E0               [24] 8693 	movx	a,@dptr
      0037E6 24 01            [12] 8694 	add	a,#0x01
      0037E8 F0               [24] 8695 	movx	@dptr,a
      0037E9                       8696 00209$:
                                   8697 ;	include/gsm_serial.c:550: gsm_serial_cmd = CMD;
      0037E9 90 00 FE         [24] 8698 	mov	dptr,#_gsm_serial_cmd
      0037EC 74 05            [12] 8699 	mov	a,#0x05
      0037EE F0               [24] 8700 	movx	@dptr,a
      0037EF 02 43 0D         [24] 8701 	ljmp	00345$
      0037F2                       8702 00227$:
                                   8703 ;	include/gsm_serial.c:554: else if(sms_index==PHONE_LENGTH && gsm_SBUF == '"') {/*SMS buoc 5: neu tat ca chu so dt deu trung chuyen qua tim lenh */
      0037F2 BD 0A 0D         [24] 8704 	cjne	r5,#0x0a,00223$
      0037F5 74 22            [12] 8705 	mov	a,#0x22
      0037F7 B5 99 08         [24] 8706 	cjne	a,_SBUF,00223$
                                   8707 ;	include/gsm_serial.c:555: sms_index = 0;
      0037FA 90 00 BB         [24] 8708 	mov	dptr,#_sms_index
      0037FD E4               [12] 8709 	clr	a
      0037FE F0               [24] 8710 	movx	@dptr,a
      0037FF 02 43 0D         [24] 8711 	ljmp	00345$
      003802                       8712 00223$:
                                   8713 ;	include/gsm_serial.c:560: if(!phone_chinh_so_sanh_that_bai && phone_chinh[sms_index] != gsm_SBUF)phone_chinh_so_sanh_that_bai = 1;
      003802 20 08 13         [24] 8714 	jb	_phone_chinh_so_sanh_that_bai,00213$
      003805 ED               [12] 8715 	mov	a,r5
      003806 24 01            [12] 8716 	add	a,#_phone_chinh
      003808 F5 82            [12] 8717 	mov	dpl,a
      00380A E4               [12] 8718 	clr	a
      00380B 34 00            [12] 8719 	addc	a,#(_phone_chinh >> 8)
      00380D F5 83            [12] 8720 	mov	dph,a
      00380F E0               [24] 8721 	movx	a,@dptr
      003810 FC               [12] 8722 	mov	r4,a
      003811 B5 99 02         [24] 8723 	cjne	a,_SBUF,01106$
      003814 80 02            [24] 8724 	sjmp	00213$
      003816                       8725 01106$:
                                   8726 ;	assignBit
      003816 D2 08            [12] 8727 	setb	_phone_chinh_so_sanh_that_bai
      003818                       8728 00213$:
                                   8729 ;	include/gsm_serial.c:561: if(!bat_phone_phu || (!phone_phu_so_sanh_that_bai && eep_phonephu[sms_index] != gsm_SBUF))phone_phu_so_sanh_that_bai = 1;
      003818 30 0A 0E         [24] 8730 	jnb	_bat_phone_phu,00215$
      00381B 20 09 0D         [24] 8731 	jb	_phone_phu_so_sanh_that_bai,00216$
      00381E ED               [12] 8732 	mov	a,r5
      00381F 90 F0 11         [24] 8733 	mov	dptr,#_eep_phonephu
      003822 93               [24] 8734 	movc	a,@a+dptr
      003823 FC               [12] 8735 	mov	r4,a
      003824 B5 99 02         [24] 8736 	cjne	a,_SBUF,01109$
      003827 80 02            [24] 8737 	sjmp	00216$
      003829                       8738 01109$:
      003829                       8739 00215$:
                                   8740 ;	assignBit
      003829 D2 09            [12] 8741 	setb	_phone_phu_so_sanh_that_bai
      00382B                       8742 00216$:
                                   8743 ;	include/gsm_serial.c:562: sms_index++;
      00382B 90 00 BB         [24] 8744 	mov	dptr,#_sms_index
      00382E ED               [12] 8745 	mov	a,r5
      00382F 04               [12] 8746 	inc	a
      003830 F0               [24] 8747 	movx	@dptr,a
                                   8748 ;	include/gsm_serial.c:563: if(phone_chinh_so_sanh_that_bai && phone_phu_so_sanh_that_bai) gsm_serial_cmd = NORMAL;
      003831 20 08 03         [24] 8749 	jb	_phone_chinh_so_sanh_that_bai,01110$
      003834 02 43 0D         [24] 8750 	ljmp	00345$
      003837                       8751 01110$:
      003837 20 09 03         [24] 8752 	jb	_phone_phu_so_sanh_that_bai,01111$
      00383A 02 43 0D         [24] 8753 	ljmp	00345$
      00383D                       8754 01111$:
      00383D 90 00 FE         [24] 8755 	mov	dptr,#_gsm_serial_cmd
      003840 E4               [12] 8756 	clr	a
      003841 F0               [24] 8757 	movx	@dptr,a
      003842 02 43 0D         [24] 8758 	ljmp	00345$
      003845                       8759 00240$:
                                   8760 ;	include/gsm_serial.c:569: if((co_cuoc_goi_toi && gsm_receive_buf[gsm_receive_pointer]=='0' && gsm_receive_buf[(gsm_receive_pointer+12)%13] =='"') || (gsm_receive_buf[gsm_receive_pointer]=='4' && gsm_receive_buf[(gsm_receive_pointer+12)%13] =='8' &&
      003845 30 06 3C         [24] 8761 	jnb	_co_cuoc_goi_toi,00236$
      003848 BE 30 39         [24] 8762 	cjne	r6,#0x30,00236$
      00384B 8F 14            [24] 8763 	mov	ar4,r7
      00384D 7D 00            [12] 8764 	mov	r5,#0x00
      00384F 74 0C            [12] 8765 	mov	a,#0x0c
      003851 2C               [12] 8766 	add	a,r4
      003852 F5 82            [12] 8767 	mov	dpl,a
      003854 E4               [12] 8768 	clr	a
      003855 3D               [12] 8769 	addc	a,r5
      003856 F5 83            [12] 8770 	mov	dph,a
      003858 75 1B 0D         [24] 8771 	mov	__modsint_PARM_2,#0x0d
                                   8772 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      00385B 8D 1C            [24] 8773 	mov	(__modsint_PARM_2 + 1),r5
      00385D C0 17            [24] 8774 	push	ar7
      00385F C0 16            [24] 8775 	push	ar6
      003861 75 D0 00         [24] 8776 	mov	psw,#0x00
      003864 12 84 67         [24] 8777 	lcall	__modsint
      003867 75 D0 10         [24] 8778 	mov	psw,#0x10
      00386A AC 82            [24] 8779 	mov	r4,dpl
      00386C AD 83            [24] 8780 	mov	r5,dph
      00386E D0 16            [24] 8781 	pop	ar6
      003870 D0 17            [24] 8782 	pop	ar7
      003872 EC               [12] 8783 	mov	a,r4
      003873 24 02            [12] 8784 	add	a,#_gsm_receive_buf
      003875 F5 82            [12] 8785 	mov	dpl,a
      003877 ED               [12] 8786 	mov	a,r5
      003878 34 01            [12] 8787 	addc	a,#(_gsm_receive_buf >> 8)
      00387A F5 83            [12] 8788 	mov	dph,a
      00387C E0               [24] 8789 	movx	a,@dptr
      00387D FD               [12] 8790 	mov	r5,a
      00387E BD 22 03         [24] 8791 	cjne	r5,#0x22,01115$
      003881 02 39 20         [24] 8792 	ljmp	00229$
      003884                       8793 01115$:
      003884                       8794 00236$:
      003884 BE 34 02         [24] 8795 	cjne	r6,#0x34,01116$
      003887 80 03            [24] 8796 	sjmp	01117$
      003889                       8797 01116$:
      003889 02 39 28         [24] 8798 	ljmp	00230$
      00388C                       8799 01117$:
      00388C 8F 14            [24] 8800 	mov	ar4,r7
      00388E 7D 00            [12] 8801 	mov	r5,#0x00
      003890 74 0C            [12] 8802 	mov	a,#0x0c
      003892 2C               [12] 8803 	add	a,r4
      003893 F5 82            [12] 8804 	mov	dpl,a
      003895 E4               [12] 8805 	clr	a
      003896 3D               [12] 8806 	addc	a,r5
      003897 F5 83            [12] 8807 	mov	dph,a
      003899 75 1B 0D         [24] 8808 	mov	__modsint_PARM_2,#0x0d
                                   8809 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      00389C 8D 1C            [24] 8810 	mov	(__modsint_PARM_2 + 1),r5
      00389E C0 15            [24] 8811 	push	ar5
      0038A0 C0 14            [24] 8812 	push	ar4
      0038A2 75 D0 00         [24] 8813 	mov	psw,#0x00
      0038A5 12 84 67         [24] 8814 	lcall	__modsint
      0038A8 75 D0 10         [24] 8815 	mov	psw,#0x10
      0038AB AA 82            [24] 8816 	mov	r2,dpl
      0038AD AB 83            [24] 8817 	mov	r3,dph
      0038AF D0 14            [24] 8818 	pop	ar4
      0038B1 D0 15            [24] 8819 	pop	ar5
      0038B3 EA               [12] 8820 	mov	a,r2
      0038B4 24 02            [12] 8821 	add	a,#_gsm_receive_buf
      0038B6 F5 82            [12] 8822 	mov	dpl,a
      0038B8 EB               [12] 8823 	mov	a,r3
      0038B9 34 01            [12] 8824 	addc	a,#(_gsm_receive_buf >> 8)
      0038BB F5 83            [12] 8825 	mov	dph,a
      0038BD E0               [24] 8826 	movx	a,@dptr
      0038BE FB               [12] 8827 	mov	r3,a
      0038BF BB 38 66         [24] 8828 	cjne	r3,#0x38,00230$
                                   8829 ;	include/gsm_serial.c:570: gsm_receive_buf[(gsm_receive_pointer+11)%13] =='+' && gsm_receive_buf[(gsm_receive_pointer+10)%13] =='"')){
      0038C2 74 0B            [12] 8830 	mov	a,#0x0b
      0038C4 2C               [12] 8831 	add	a,r4
      0038C5 F5 82            [12] 8832 	mov	dpl,a
      0038C7 E4               [12] 8833 	clr	a
      0038C8 3D               [12] 8834 	addc	a,r5
      0038C9 F5 83            [12] 8835 	mov	dph,a
      0038CB 75 1B 0D         [24] 8836 	mov	__modsint_PARM_2,#0x0d
      0038CE 75 1C 00         [24] 8837 	mov	(__modsint_PARM_2 + 1),#0x00
      0038D1 C0 15            [24] 8838 	push	ar5
      0038D3 C0 14            [24] 8839 	push	ar4
      0038D5 75 D0 00         [24] 8840 	mov	psw,#0x00
      0038D8 12 84 67         [24] 8841 	lcall	__modsint
      0038DB 75 D0 10         [24] 8842 	mov	psw,#0x10
      0038DE AA 82            [24] 8843 	mov	r2,dpl
      0038E0 AB 83            [24] 8844 	mov	r3,dph
      0038E2 D0 14            [24] 8845 	pop	ar4
      0038E4 D0 15            [24] 8846 	pop	ar5
      0038E6 EA               [12] 8847 	mov	a,r2
      0038E7 24 02            [12] 8848 	add	a,#_gsm_receive_buf
      0038E9 F5 82            [12] 8849 	mov	dpl,a
      0038EB EB               [12] 8850 	mov	a,r3
      0038EC 34 01            [12] 8851 	addc	a,#(_gsm_receive_buf >> 8)
      0038EE F5 83            [12] 8852 	mov	dph,a
      0038F0 E0               [24] 8853 	movx	a,@dptr
      0038F1 FB               [12] 8854 	mov	r3,a
      0038F2 BB 2B 33         [24] 8855 	cjne	r3,#0x2b,00230$
      0038F5 74 0A            [12] 8856 	mov	a,#0x0a
      0038F7 2C               [12] 8857 	add	a,r4
      0038F8 F5 82            [12] 8858 	mov	dpl,a
      0038FA E4               [12] 8859 	clr	a
      0038FB 3D               [12] 8860 	addc	a,r5
      0038FC F5 83            [12] 8861 	mov	dph,a
      0038FE 75 1B 0D         [24] 8862 	mov	__modsint_PARM_2,#0x0d
      003901 75 1C 00         [24] 8863 	mov	(__modsint_PARM_2 + 1),#0x00
      003904 75 D0 00         [24] 8864 	mov	psw,#0x00
      003907 12 84 67         [24] 8865 	lcall	__modsint
      00390A 75 D0 10         [24] 8866 	mov	psw,#0x10
      00390D AC 82            [24] 8867 	mov	r4,dpl
      00390F AD 83            [24] 8868 	mov	r5,dph
      003911 EC               [12] 8869 	mov	a,r4
      003912 24 02            [12] 8870 	add	a,#_gsm_receive_buf
      003914 F5 82            [12] 8871 	mov	dpl,a
      003916 ED               [12] 8872 	mov	a,r5
      003917 34 01            [12] 8873 	addc	a,#(_gsm_receive_buf >> 8)
      003919 F5 83            [12] 8874 	mov	dph,a
      00391B E0               [24] 8875 	movx	a,@dptr
      00391C FD               [12] 8876 	mov	r5,a
      00391D BD 22 08         [24] 8877 	cjne	r5,#0x22,00230$
      003920                       8878 00229$:
                                   8879 ;	include/gsm_serial.c:571: phone_header = 1;
                                   8880 ;	assignBit
      003920 D2 0B            [12] 8881 	setb	_phone_header
                                   8882 ;	include/gsm_serial.c:572: sms_index = 1;
      003922 90 00 BB         [24] 8883 	mov	dptr,#_sms_index
      003925 74 01            [12] 8884 	mov	a,#0x01
      003927 F0               [24] 8885 	movx	@dptr,a
      003928                       8886 00230$:
                                   8887 ;	include/gsm_serial.c:574: if(SBUF=='\r') gsm_serial_cmd = NORMAL;
      003928 74 0D            [12] 8888 	mov	a,#0x0d
      00392A B5 99 02         [24] 8889 	cjne	a,_SBUF,01124$
      00392D 80 03            [24] 8890 	sjmp	01125$
      00392F                       8891 01124$:
      00392F 02 43 0D         [24] 8892 	ljmp	00345$
      003932                       8893 01125$:
      003932 90 00 FE         [24] 8894 	mov	dptr,#_gsm_serial_cmd
      003935 E4               [12] 8895 	clr	a
      003936 F0               [24] 8896 	movx	@dptr,a
                                   8897 ;	include/gsm_serial.c:576: break;
      003937 02 43 0D         [24] 8898 	ljmp	00345$
                                   8899 ;	include/gsm_serial.c:577: case CMD:/*SMS buoc 7: tim duoc pin chinh xac tien hanh lay lenh trong tin nhan
      00393A                       8900 00242$:
                                   8901 ;	include/gsm_serial.c:580: if(pin_chinh_xac){
      00393A 30 0D 3F         [24] 8902 	jnb	_pin_chinh_xac,00251$
                                   8903 ;	include/gsm_serial.c:582: if(SBUF!=';' && SBUF!='\r' && sms_index<160){
      00393D 74 3B            [12] 8904 	mov	a,#0x3b
      00393F B5 99 02         [24] 8905 	cjne	a,_SBUF,01127$
      003942 80 27            [24] 8906 	sjmp	00244$
      003944                       8907 01127$:
      003944 74 0D            [12] 8908 	mov	a,#0x0d
      003946 B5 99 02         [24] 8909 	cjne	a,_SBUF,01128$
      003949 80 20            [24] 8910 	sjmp	00244$
      00394B                       8911 01128$:
      00394B 90 00 BB         [24] 8912 	mov	dptr,#_sms_index
      00394E E0               [24] 8913 	movx	a,@dptr
      00394F FD               [12] 8914 	mov	r5,a
      003950 BD A0 00         [24] 8915 	cjne	r5,#0xa0,01129$
      003953                       8916 01129$:
      003953 50 16            [24] 8917 	jnc	00244$
                                   8918 ;	include/gsm_serial.c:584: lenh_sms[sms_index++] = SBUF;    
      003955 90 00 BB         [24] 8919 	mov	dptr,#_sms_index
      003958 ED               [12] 8920 	mov	a,r5
      003959 04               [12] 8921 	inc	a
      00395A F0               [24] 8922 	movx	@dptr,a
      00395B ED               [12] 8923 	mov	a,r5
      00395C 24 17            [12] 8924 	add	a,#_lenh_sms
      00395E F5 82            [12] 8925 	mov	dpl,a
      003960 E4               [12] 8926 	clr	a
      003961 34 00            [12] 8927 	addc	a,#(_lenh_sms >> 8)
      003963 F5 83            [12] 8928 	mov	dph,a
      003965 E5 99            [12] 8929 	mov	a,_SBUF
      003967 F0               [24] 8930 	movx	@dptr,a
      003968 02 43 0D         [24] 8931 	ljmp	00345$
      00396B                       8932 00244$:
                                   8933 ;	include/gsm_serial.c:587: sms_index = 0;
      00396B 90 00 BB         [24] 8934 	mov	dptr,#_sms_index
      00396E E4               [12] 8935 	clr	a
      00396F F0               [24] 8936 	movx	@dptr,a
                                   8937 ;	include/gsm_serial.c:588: pin_chinh_xac = 0;
                                   8938 ;	assignBit
      003970 C2 0D            [12] 8939 	clr	_pin_chinh_xac
                                   8940 ;	include/gsm_serial.c:589: gsm_serial_cmd = NORMAL;
      003972 90 00 FE         [24] 8941 	mov	dptr,#_gsm_serial_cmd
      003975 E4               [12] 8942 	clr	a
      003976 F0               [24] 8943 	movx	@dptr,a
                                   8944 ;	include/gsm_serial.c:590: sms_dang_xu_ly = 1;
                                   8945 ;	assignBit
      003977 D2 0E            [12] 8946 	setb	_sms_dang_xu_ly
      003979 02 43 0D         [24] 8947 	ljmp	00345$
      00397C                       8948 00251$:
                                   8949 ;	include/gsm_serial.c:594: pin_chinh_xac = gsm_receive_buf[gsm_receive_pointer]==',' && gsm_receive_buf[(gsm_receive_pointer+12)%13] =='C' &&
      00397C BE 2C 02         [24] 8950 	cjne	r6,#0x2c,01131$
      00397F 80 03            [24] 8951 	sjmp	01132$
      003981                       8952 01131$:
      003981 02 3A 8A         [24] 8953 	ljmp	00352$
      003984                       8954 01132$:
      003984 8F 14            [24] 8955 	mov	ar4,r7
      003986 7D 00            [12] 8956 	mov	r5,#0x00
      003988 74 0C            [12] 8957 	mov	a,#0x0c
      00398A 2C               [12] 8958 	add	a,r4
      00398B F5 82            [12] 8959 	mov	dpl,a
      00398D E4               [12] 8960 	clr	a
      00398E 3D               [12] 8961 	addc	a,r5
      00398F F5 83            [12] 8962 	mov	dph,a
      003991 75 1B 0D         [24] 8963 	mov	__modsint_PARM_2,#0x0d
                                   8964 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      003994 8D 1C            [24] 8965 	mov	(__modsint_PARM_2 + 1),r5
      003996 C0 15            [24] 8966 	push	ar5
      003998 C0 14            [24] 8967 	push	ar4
      00399A 75 D0 00         [24] 8968 	mov	psw,#0x00
      00399D 12 84 67         [24] 8969 	lcall	__modsint
      0039A0 75 D0 10         [24] 8970 	mov	psw,#0x10
      0039A3 AA 82            [24] 8971 	mov	r2,dpl
      0039A5 AB 83            [24] 8972 	mov	r3,dph
      0039A7 D0 14            [24] 8973 	pop	ar4
      0039A9 D0 15            [24] 8974 	pop	ar5
      0039AB EA               [12] 8975 	mov	a,r2
      0039AC 24 02            [12] 8976 	add	a,#_gsm_receive_buf
      0039AE F5 82            [12] 8977 	mov	dpl,a
      0039B0 EB               [12] 8978 	mov	a,r3
      0039B1 34 01            [12] 8979 	addc	a,#(_gsm_receive_buf >> 8)
      0039B3 F5 83            [12] 8980 	mov	dph,a
      0039B5 E0               [24] 8981 	movx	a,@dptr
      0039B6 FB               [12] 8982 	mov	r3,a
      0039B7 BB 43 02         [24] 8983 	cjne	r3,#0x43,01133$
      0039BA 80 03            [24] 8984 	sjmp	01134$
      0039BC                       8985 01133$:
      0039BC 02 3A 8A         [24] 8986 	ljmp	00352$
      0039BF                       8987 01134$:
                                   8988 ;	include/gsm_serial.c:595: gsm_receive_buf[(gsm_receive_pointer+11)%13] =='U' && gsm_receive_buf[(gsm_receive_pointer+10)%13] =='D' &&
      0039BF 74 0B            [12] 8989 	mov	a,#0x0b
      0039C1 2C               [12] 8990 	add	a,r4
      0039C2 F5 82            [12] 8991 	mov	dpl,a
      0039C4 E4               [12] 8992 	clr	a
      0039C5 3D               [12] 8993 	addc	a,r5
      0039C6 F5 83            [12] 8994 	mov	dph,a
      0039C8 75 1B 0D         [24] 8995 	mov	__modsint_PARM_2,#0x0d
      0039CB 75 1C 00         [24] 8996 	mov	(__modsint_PARM_2 + 1),#0x00
      0039CE C0 15            [24] 8997 	push	ar5
      0039D0 C0 14            [24] 8998 	push	ar4
      0039D2 75 D0 00         [24] 8999 	mov	psw,#0x00
      0039D5 12 84 67         [24] 9000 	lcall	__modsint
      0039D8 75 D0 10         [24] 9001 	mov	psw,#0x10
      0039DB AA 82            [24] 9002 	mov	r2,dpl
      0039DD AB 83            [24] 9003 	mov	r3,dph
      0039DF D0 14            [24] 9004 	pop	ar4
      0039E1 D0 15            [24] 9005 	pop	ar5
      0039E3 EA               [12] 9006 	mov	a,r2
      0039E4 24 02            [12] 9007 	add	a,#_gsm_receive_buf
      0039E6 F5 82            [12] 9008 	mov	dpl,a
      0039E8 EB               [12] 9009 	mov	a,r3
      0039E9 34 01            [12] 9010 	addc	a,#(_gsm_receive_buf >> 8)
      0039EB F5 83            [12] 9011 	mov	dph,a
      0039ED E0               [24] 9012 	movx	a,@dptr
      0039EE FB               [12] 9013 	mov	r3,a
      0039EF BB 55 02         [24] 9014 	cjne	r3,#0x55,01135$
      0039F2 80 03            [24] 9015 	sjmp	01136$
      0039F4                       9016 01135$:
      0039F4 02 3A 8A         [24] 9017 	ljmp	00352$
      0039F7                       9018 01136$:
      0039F7 74 0A            [12] 9019 	mov	a,#0x0a
      0039F9 2C               [12] 9020 	add	a,r4
      0039FA F5 82            [12] 9021 	mov	dpl,a
      0039FC E4               [12] 9022 	clr	a
      0039FD 3D               [12] 9023 	addc	a,r5
      0039FE F5 83            [12] 9024 	mov	dph,a
      003A00 75 1B 0D         [24] 9025 	mov	__modsint_PARM_2,#0x0d
      003A03 75 1C 00         [24] 9026 	mov	(__modsint_PARM_2 + 1),#0x00
      003A06 C0 15            [24] 9027 	push	ar5
      003A08 C0 14            [24] 9028 	push	ar4
      003A0A 75 D0 00         [24] 9029 	mov	psw,#0x00
      003A0D 12 84 67         [24] 9030 	lcall	__modsint
      003A10 75 D0 10         [24] 9031 	mov	psw,#0x10
      003A13 AA 82            [24] 9032 	mov	r2,dpl
      003A15 AB 83            [24] 9033 	mov	r3,dph
      003A17 D0 14            [24] 9034 	pop	ar4
      003A19 D0 15            [24] 9035 	pop	ar5
      003A1B EA               [12] 9036 	mov	a,r2
      003A1C 24 02            [12] 9037 	add	a,#_gsm_receive_buf
      003A1E F5 82            [12] 9038 	mov	dpl,a
      003A20 EB               [12] 9039 	mov	a,r3
      003A21 34 01            [12] 9040 	addc	a,#(_gsm_receive_buf >> 8)
      003A23 F5 83            [12] 9041 	mov	dph,a
      003A25 E0               [24] 9042 	movx	a,@dptr
      003A26 FB               [12] 9043 	mov	r3,a
      003A27 BB 44 60         [24] 9044 	cjne	r3,#0x44,00352$
                                   9045 ;	include/gsm_serial.c:596: gsm_receive_buf[(gsm_receive_pointer+9)%13] =='P' && gsm_receive_buf[(gsm_receive_pointer+8)%13] =='*';
      003A2A 74 09            [12] 9046 	mov	a,#0x09
      003A2C 2C               [12] 9047 	add	a,r4
      003A2D F5 82            [12] 9048 	mov	dpl,a
      003A2F E4               [12] 9049 	clr	a
      003A30 3D               [12] 9050 	addc	a,r5
      003A31 F5 83            [12] 9051 	mov	dph,a
      003A33 75 1B 0D         [24] 9052 	mov	__modsint_PARM_2,#0x0d
      003A36 75 1C 00         [24] 9053 	mov	(__modsint_PARM_2 + 1),#0x00
      003A39 C0 15            [24] 9054 	push	ar5
      003A3B C0 14            [24] 9055 	push	ar4
      003A3D 75 D0 00         [24] 9056 	mov	psw,#0x00
      003A40 12 84 67         [24] 9057 	lcall	__modsint
      003A43 75 D0 10         [24] 9058 	mov	psw,#0x10
      003A46 AA 82            [24] 9059 	mov	r2,dpl
      003A48 AB 83            [24] 9060 	mov	r3,dph
      003A4A D0 14            [24] 9061 	pop	ar4
      003A4C D0 15            [24] 9062 	pop	ar5
      003A4E EA               [12] 9063 	mov	a,r2
      003A4F 24 02            [12] 9064 	add	a,#_gsm_receive_buf
      003A51 F5 82            [12] 9065 	mov	dpl,a
      003A53 EB               [12] 9066 	mov	a,r3
      003A54 34 01            [12] 9067 	addc	a,#(_gsm_receive_buf >> 8)
      003A56 F5 83            [12] 9068 	mov	dph,a
      003A58 E0               [24] 9069 	movx	a,@dptr
      003A59 FB               [12] 9070 	mov	r3,a
      003A5A BB 50 2D         [24] 9071 	cjne	r3,#0x50,00352$
      003A5D 74 08            [12] 9072 	mov	a,#0x08
      003A5F 2C               [12] 9073 	add	a,r4
      003A60 F5 82            [12] 9074 	mov	dpl,a
      003A62 E4               [12] 9075 	clr	a
      003A63 3D               [12] 9076 	addc	a,r5
      003A64 F5 83            [12] 9077 	mov	dph,a
      003A66 75 1B 0D         [24] 9078 	mov	__modsint_PARM_2,#0x0d
      003A69 75 1C 00         [24] 9079 	mov	(__modsint_PARM_2 + 1),#0x00
      003A6C 75 D0 00         [24] 9080 	mov	psw,#0x00
      003A6F 12 84 67         [24] 9081 	lcall	__modsint
      003A72 75 D0 10         [24] 9082 	mov	psw,#0x10
      003A75 AC 82            [24] 9083 	mov	r4,dpl
      003A77 AD 83            [24] 9084 	mov	r5,dph
      003A79 EC               [12] 9085 	mov	a,r4
      003A7A 24 02            [12] 9086 	add	a,#_gsm_receive_buf
      003A7C F5 82            [12] 9087 	mov	dpl,a
      003A7E ED               [12] 9088 	mov	a,r5
      003A7F 34 01            [12] 9089 	addc	a,#(_gsm_receive_buf >> 8)
      003A81 F5 83            [12] 9090 	mov	dph,a
      003A83 E0               [24] 9091 	movx	a,@dptr
      003A84 FD               [12] 9092 	mov	r5,a
      003A85 BD 2A 02         [24] 9093 	cjne	r5,#0x2a,01141$
      003A88 80 04            [24] 9094 	sjmp	00353$
      003A8A                       9095 01141$:
      003A8A                       9096 00352$:
                                   9097 ;	assignBit
      003A8A C2 4B            [12] 9098 	clr	_gsm_serial_interrupt_sloc0_1_0
      003A8C 80 02            [24] 9099 	sjmp	00354$
      003A8E                       9100 00353$:
                                   9101 ;	assignBit
      003A8E D2 4B            [12] 9102 	setb	_gsm_serial_interrupt_sloc0_1_0
      003A90                       9103 00354$:
                                   9104 ;	assignBit
      003A90 A2 4B            [12] 9105 	mov	c,_gsm_serial_interrupt_sloc0_1_0
      003A92 92 0D            [24] 9106 	mov	_pin_chinh_xac,c
                                   9107 ;	include/gsm_serial.c:597: if(SBUF=='\r'){sms_index =1; gsm_serial_cmd = NORMAL;}
      003A94 74 0D            [12] 9108 	mov	a,#0x0d
      003A96 B5 99 02         [24] 9109 	cjne	a,_SBUF,01142$
      003A99 80 03            [24] 9110 	sjmp	01143$
      003A9B                       9111 01142$:
      003A9B 02 43 0D         [24] 9112 	ljmp	00345$
      003A9E                       9113 01143$:
      003A9E 90 00 BB         [24] 9114 	mov	dptr,#_sms_index
      003AA1 74 01            [12] 9115 	mov	a,#0x01
      003AA3 F0               [24] 9116 	movx	@dptr,a
      003AA4 90 00 FE         [24] 9117 	mov	dptr,#_gsm_serial_cmd
      003AA7 E4               [12] 9118 	clr	a
      003AA8 F0               [24] 9119 	movx	@dptr,a
                                   9120 ;	include/gsm_serial.c:599: break;
      003AA9 02 43 0D         [24] 9121 	ljmp	00345$
                                   9122 ;	include/gsm_serial.c:600: case CMGS:
      003AAC                       9123 00253$:
                                   9124 ;	include/gsm_serial.c:601: if(SBUF=='>'){
      003AAC 74 3E            [12] 9125 	mov	a,#0x3e
      003AAE B5 99 0A         [24] 9126 	cjne	a,_SBUF,00259$
                                   9127 ;	include/gsm_serial.c:602: gsm_serial_cmd = NORMAL;
      003AB1 90 00 FE         [24] 9128 	mov	dptr,#_gsm_serial_cmd
      003AB4 E4               [12] 9129 	clr	a
      003AB5 F0               [24] 9130 	movx	@dptr,a
                                   9131 ;	include/gsm_serial.c:603: gui_lenh_thanh_cong = 1;
                                   9132 ;	assignBit
      003AB6 D2 2E            [12] 9133 	setb	_gui_lenh_thanh_cong
      003AB8 02 43 0D         [24] 9134 	ljmp	00345$
      003ABB                       9135 00259$:
                                   9136 ;	include/gsm_serial.c:604: }else if(gsm_receive_buf[gsm_receive_pointer]=='R' && gsm_receive_buf[(gsm_receive_pointer+12)%13] =='R' && gsm_receive_buf[(gsm_receive_pointer+11)%13] =='E') connect  = 0;
      003ABB BE 52 02         [24] 9137 	cjne	r6,#0x52,01146$
      003ABE 80 03            [24] 9138 	sjmp	01147$
      003AC0                       9139 01146$:
      003AC0 02 43 0D         [24] 9140 	ljmp	00345$
      003AC3                       9141 01147$:
      003AC3 8F 14            [24] 9142 	mov	ar4,r7
      003AC5 7D 00            [12] 9143 	mov	r5,#0x00
      003AC7 74 0C            [12] 9144 	mov	a,#0x0c
      003AC9 2C               [12] 9145 	add	a,r4
      003ACA F5 82            [12] 9146 	mov	dpl,a
      003ACC E4               [12] 9147 	clr	a
      003ACD 3D               [12] 9148 	addc	a,r5
      003ACE F5 83            [12] 9149 	mov	dph,a
      003AD0 75 1B 0D         [24] 9150 	mov	__modsint_PARM_2,#0x0d
                                   9151 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      003AD3 8D 1C            [24] 9152 	mov	(__modsint_PARM_2 + 1),r5
      003AD5 C0 15            [24] 9153 	push	ar5
      003AD7 C0 14            [24] 9154 	push	ar4
      003AD9 75 D0 00         [24] 9155 	mov	psw,#0x00
      003ADC 12 84 67         [24] 9156 	lcall	__modsint
      003ADF 75 D0 10         [24] 9157 	mov	psw,#0x10
      003AE2 AA 82            [24] 9158 	mov	r2,dpl
      003AE4 AB 83            [24] 9159 	mov	r3,dph
      003AE6 D0 14            [24] 9160 	pop	ar4
      003AE8 D0 15            [24] 9161 	pop	ar5
      003AEA EA               [12] 9162 	mov	a,r2
      003AEB 24 02            [12] 9163 	add	a,#_gsm_receive_buf
      003AED F5 82            [12] 9164 	mov	dpl,a
      003AEF EB               [12] 9165 	mov	a,r3
      003AF0 34 01            [12] 9166 	addc	a,#(_gsm_receive_buf >> 8)
      003AF2 F5 83            [12] 9167 	mov	dph,a
      003AF4 E0               [24] 9168 	movx	a,@dptr
      003AF5 FB               [12] 9169 	mov	r3,a
      003AF6 BB 52 02         [24] 9170 	cjne	r3,#0x52,01148$
      003AF9 80 03            [24] 9171 	sjmp	01149$
      003AFB                       9172 01148$:
      003AFB 02 43 0D         [24] 9173 	ljmp	00345$
      003AFE                       9174 01149$:
      003AFE 74 0B            [12] 9175 	mov	a,#0x0b
      003B00 2C               [12] 9176 	add	a,r4
      003B01 F5 82            [12] 9177 	mov	dpl,a
      003B03 E4               [12] 9178 	clr	a
      003B04 3D               [12] 9179 	addc	a,r5
      003B05 F5 83            [12] 9180 	mov	dph,a
      003B07 75 1B 0D         [24] 9181 	mov	__modsint_PARM_2,#0x0d
      003B0A 75 1C 00         [24] 9182 	mov	(__modsint_PARM_2 + 1),#0x00
      003B0D 75 D0 00         [24] 9183 	mov	psw,#0x00
      003B10 12 84 67         [24] 9184 	lcall	__modsint
      003B13 75 D0 10         [24] 9185 	mov	psw,#0x10
      003B16 AC 82            [24] 9186 	mov	r4,dpl
      003B18 AD 83            [24] 9187 	mov	r5,dph
      003B1A EC               [12] 9188 	mov	a,r4
      003B1B 24 02            [12] 9189 	add	a,#_gsm_receive_buf
      003B1D F5 82            [12] 9190 	mov	dpl,a
      003B1F ED               [12] 9191 	mov	a,r5
      003B20 34 01            [12] 9192 	addc	a,#(_gsm_receive_buf >> 8)
      003B22 F5 83            [12] 9193 	mov	dph,a
      003B24 E0               [24] 9194 	movx	a,@dptr
      003B25 FD               [12] 9195 	mov	r5,a
      003B26 BD 45 02         [24] 9196 	cjne	r5,#0x45,01150$
      003B29 80 03            [24] 9197 	sjmp	01151$
      003B2B                       9198 01150$:
      003B2B 02 43 0D         [24] 9199 	ljmp	00345$
      003B2E                       9200 01151$:
      003B2E 90 00 FB         [24] 9201 	mov	dptr,#_connect
      003B31 E4               [12] 9202 	clr	a
      003B32 F0               [24] 9203 	movx	@dptr,a
                                   9204 ;	include/gsm_serial.c:605: break;
      003B33 02 43 0D         [24] 9205 	ljmp	00345$
                                   9206 ;	include/gsm_serial.c:606: case CUSD:
      003B36                       9207 00261$:
                                   9208 ;	include/gsm_serial.c:607: if(have_cusd){
      003B36 30 0F 66         [24] 9209 	jnb	_have_cusd,00302$
                                   9210 ;	include/gsm_serial.c:608: if((((nha_mang == VINAPHONE || nha_mang == MOBIFONE) && SBUF !=' ') || ((nha_mang==VIETTEL || nha_mang==VIETNAM) && SBUF!='d'))  && sms_index<160){
      003B39 90 00 F9         [24] 9211 	mov	dptr,#_nha_mang
      003B3C E0               [24] 9212 	movx	a,@dptr
      003B3D FD               [12] 9213 	mov	r5,a
      003B3E BD 50 02         [24] 9214 	cjne	r5,#0x50,01153$
      003B41 80 03            [24] 9215 	sjmp	00268$
      003B43                       9216 01153$:
      003B43 BD 66 05         [24] 9217 	cjne	r5,#0x66,00271$
      003B46                       9218 00268$:
      003B46 74 20            [12] 9219 	mov	a,#0x20
      003B48 B5 99 0F         [24] 9220 	cjne	a,_SBUF,00272$
      003B4B                       9221 00271$:
      003B4B BD 74 02         [24] 9222 	cjne	r5,#0x74,01158$
      003B4E 80 03            [24] 9223 	sjmp	00270$
      003B50                       9224 01158$:
      003B50 BD 6E 2F         [24] 9225 	cjne	r5,#0x6e,00265$
      003B53                       9226 00270$:
      003B53 74 64            [12] 9227 	mov	a,#0x64
      003B55 B5 99 02         [24] 9228 	cjne	a,_SBUF,01161$
      003B58 80 28            [24] 9229 	sjmp	00265$
      003B5A                       9230 01161$:
      003B5A                       9231 00272$:
      003B5A 90 00 BB         [24] 9232 	mov	dptr,#_sms_index
      003B5D E0               [24] 9233 	movx	a,@dptr
      003B5E FD               [12] 9234 	mov	r5,a
      003B5F BD A0 00         [24] 9235 	cjne	r5,#0xa0,01162$
      003B62                       9236 01162$:
      003B62 50 1E            [24] 9237 	jnc	00265$
                                   9238 ;	include/gsm_serial.c:609: if(SBUF!='.')lenh_sms[sms_index++] = SBUF;
      003B64 74 2E            [12] 9239 	mov	a,#0x2e
      003B66 B5 99 03         [24] 9240 	cjne	a,_SBUF,01164$
      003B69 02 43 0D         [24] 9241 	ljmp	00345$
      003B6C                       9242 01164$:
      003B6C 90 00 BB         [24] 9243 	mov	dptr,#_sms_index
      003B6F ED               [12] 9244 	mov	a,r5
      003B70 04               [12] 9245 	inc	a
      003B71 F0               [24] 9246 	movx	@dptr,a
      003B72 ED               [12] 9247 	mov	a,r5
      003B73 24 17            [12] 9248 	add	a,#_lenh_sms
      003B75 F5 82            [12] 9249 	mov	dpl,a
      003B77 E4               [12] 9250 	clr	a
      003B78 34 00            [12] 9251 	addc	a,#(_lenh_sms >> 8)
      003B7A F5 83            [12] 9252 	mov	dph,a
      003B7C E5 99            [12] 9253 	mov	a,_SBUF
      003B7E F0               [24] 9254 	movx	@dptr,a
      003B7F 02 43 0D         [24] 9255 	ljmp	00345$
      003B82                       9256 00265$:
                                   9257 ;	include/gsm_serial.c:612: have_quote = have_cusd = 0;
                                   9258 ;	assignBit
      003B82 C2 0F            [12] 9259 	clr	_have_cusd
                                   9260 ;	assignBit
      003B84 C2 11            [12] 9261 	clr	_have_quote
                                   9262 ;	include/gsm_serial.c:613: lenh_sms[sms_index] = 0;
      003B86 90 00 BB         [24] 9263 	mov	dptr,#_sms_index
      003B89 E0               [24] 9264 	movx	a,@dptr
      003B8A FD               [12] 9265 	mov	r5,a
      003B8B 24 17            [12] 9266 	add	a,#_lenh_sms
      003B8D F5 82            [12] 9267 	mov	dpl,a
      003B8F E4               [12] 9268 	clr	a
      003B90 34 00            [12] 9269 	addc	a,#(_lenh_sms >> 8)
      003B92 F5 83            [12] 9270 	mov	dph,a
      003B94 E4               [12] 9271 	clr	a
      003B95 F0               [24] 9272 	movx	@dptr,a
                                   9273 ;	include/gsm_serial.c:614: sms_index = 0;
      003B96 90 00 BB         [24] 9274 	mov	dptr,#_sms_index
      003B99 F0               [24] 9275 	movx	@dptr,a
                                   9276 ;	include/gsm_serial.c:616: gui_lenh_thanh_cong = 1;
                                   9277 ;	assignBit
      003B9A D2 2E            [12] 9278 	setb	_gui_lenh_thanh_cong
      003B9C 02 43 0D         [24] 9279 	ljmp	00345$
      003B9F                       9280 00302$:
                                   9281 ;	include/gsm_serial.c:619: }else if((nha_mang == VINAPHONE && gsm_receive_buf[gsm_receive_pointer]=='=' && gsm_receive_buf[(gsm_receive_pointer+12)%13] =='h' &&
      003B9F 90 00 F9         [24] 9282 	mov	dptr,#_nha_mang
      003BA2 E0               [24] 9283 	movx	a,@dptr
      003BA3 FD               [12] 9284 	mov	r5,a
      003BA4 BD 50 02         [24] 9285 	cjne	r5,#0x50,01165$
      003BA7 80 03            [24] 9286 	sjmp	01166$
      003BA9                       9287 01165$:
      003BA9 02 3C FC         [24] 9288 	ljmp	00287$
      003BAC                       9289 01166$:
      003BAC BE 3D 02         [24] 9290 	cjne	r6,#0x3d,01167$
      003BAF 80 03            [24] 9291 	sjmp	01168$
      003BB1                       9292 01167$:
      003BB1 02 3C FC         [24] 9293 	ljmp	00287$
      003BB4                       9294 01168$:
      003BB4 8F 13            [24] 9295 	mov	ar3,r7
      003BB6 7C 00            [12] 9296 	mov	r4,#0x00
      003BB8 74 0C            [12] 9297 	mov	a,#0x0c
      003BBA 2B               [12] 9298 	add	a,r3
      003BBB F5 82            [12] 9299 	mov	dpl,a
      003BBD E4               [12] 9300 	clr	a
      003BBE 3C               [12] 9301 	addc	a,r4
      003BBF F5 83            [12] 9302 	mov	dph,a
      003BC1 75 1B 0D         [24] 9303 	mov	__modsint_PARM_2,#0x0d
                                   9304 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      003BC4 8C 1C            [24] 9305 	mov	(__modsint_PARM_2 + 1),r4
      003BC6 C0 17            [24] 9306 	push	ar7
      003BC8 C0 16            [24] 9307 	push	ar6
      003BCA C0 15            [24] 9308 	push	ar5
      003BCC C0 14            [24] 9309 	push	ar4
      003BCE C0 13            [24] 9310 	push	ar3
      003BD0 75 D0 00         [24] 9311 	mov	psw,#0x00
      003BD3 12 84 67         [24] 9312 	lcall	__modsint
      003BD6 75 D0 10         [24] 9313 	mov	psw,#0x10
      003BD9 A9 82            [24] 9314 	mov	r1,dpl
      003BDB AA 83            [24] 9315 	mov	r2,dph
      003BDD D0 13            [24] 9316 	pop	ar3
      003BDF D0 14            [24] 9317 	pop	ar4
      003BE1 D0 15            [24] 9318 	pop	ar5
      003BE3 D0 16            [24] 9319 	pop	ar6
      003BE5 D0 17            [24] 9320 	pop	ar7
      003BE7 E9               [12] 9321 	mov	a,r1
      003BE8 24 02            [12] 9322 	add	a,#_gsm_receive_buf
      003BEA F5 82            [12] 9323 	mov	dpl,a
      003BEC EA               [12] 9324 	mov	a,r2
      003BED 34 01            [12] 9325 	addc	a,#(_gsm_receive_buf >> 8)
      003BEF F5 83            [12] 9326 	mov	dph,a
      003BF1 E0               [24] 9327 	movx	a,@dptr
      003BF2 FA               [12] 9328 	mov	r2,a
      003BF3 BA 68 02         [24] 9329 	cjne	r2,#0x68,01169$
      003BF6 80 03            [24] 9330 	sjmp	01170$
      003BF8                       9331 01169$:
      003BF8 02 3C FC         [24] 9332 	ljmp	00287$
      003BFB                       9333 01170$:
                                   9334 ;	include/gsm_serial.c:620: gsm_receive_buf[(gsm_receive_pointer+11)%13] =='n' && gsm_receive_buf[(gsm_receive_pointer+10)%13] =='i' &&
      003BFB 74 0B            [12] 9335 	mov	a,#0x0b
      003BFD 2B               [12] 9336 	add	a,r3
      003BFE F5 82            [12] 9337 	mov	dpl,a
      003C00 E4               [12] 9338 	clr	a
      003C01 3C               [12] 9339 	addc	a,r4
      003C02 F5 83            [12] 9340 	mov	dph,a
      003C04 75 1B 0D         [24] 9341 	mov	__modsint_PARM_2,#0x0d
      003C07 75 1C 00         [24] 9342 	mov	(__modsint_PARM_2 + 1),#0x00
      003C0A C0 17            [24] 9343 	push	ar7
      003C0C C0 16            [24] 9344 	push	ar6
      003C0E C0 15            [24] 9345 	push	ar5
      003C10 C0 14            [24] 9346 	push	ar4
      003C12 C0 13            [24] 9347 	push	ar3
      003C14 75 D0 00         [24] 9348 	mov	psw,#0x00
      003C17 12 84 67         [24] 9349 	lcall	__modsint
      003C1A 75 D0 10         [24] 9350 	mov	psw,#0x10
      003C1D A9 82            [24] 9351 	mov	r1,dpl
      003C1F AA 83            [24] 9352 	mov	r2,dph
      003C21 D0 13            [24] 9353 	pop	ar3
      003C23 D0 14            [24] 9354 	pop	ar4
      003C25 D0 15            [24] 9355 	pop	ar5
      003C27 D0 16            [24] 9356 	pop	ar6
      003C29 D0 17            [24] 9357 	pop	ar7
      003C2B E9               [12] 9358 	mov	a,r1
      003C2C 24 02            [12] 9359 	add	a,#_gsm_receive_buf
      003C2E F5 82            [12] 9360 	mov	dpl,a
      003C30 EA               [12] 9361 	mov	a,r2
      003C31 34 01            [12] 9362 	addc	a,#(_gsm_receive_buf >> 8)
      003C33 F5 83            [12] 9363 	mov	dph,a
      003C35 E0               [24] 9364 	movx	a,@dptr
      003C36 FA               [12] 9365 	mov	r2,a
      003C37 BA 6E 02         [24] 9366 	cjne	r2,#0x6e,01171$
      003C3A 80 03            [24] 9367 	sjmp	01172$
      003C3C                       9368 01171$:
      003C3C 02 3C FC         [24] 9369 	ljmp	00287$
      003C3F                       9370 01172$:
      003C3F 74 0A            [12] 9371 	mov	a,#0x0a
      003C41 2B               [12] 9372 	add	a,r3
      003C42 F5 82            [12] 9373 	mov	dpl,a
      003C44 E4               [12] 9374 	clr	a
      003C45 3C               [12] 9375 	addc	a,r4
      003C46 F5 83            [12] 9376 	mov	dph,a
      003C48 75 1B 0D         [24] 9377 	mov	__modsint_PARM_2,#0x0d
      003C4B 75 1C 00         [24] 9378 	mov	(__modsint_PARM_2 + 1),#0x00
      003C4E C0 17            [24] 9379 	push	ar7
      003C50 C0 16            [24] 9380 	push	ar6
      003C52 C0 15            [24] 9381 	push	ar5
      003C54 C0 14            [24] 9382 	push	ar4
      003C56 C0 13            [24] 9383 	push	ar3
      003C58 75 D0 00         [24] 9384 	mov	psw,#0x00
      003C5B 12 84 67         [24] 9385 	lcall	__modsint
      003C5E 75 D0 10         [24] 9386 	mov	psw,#0x10
      003C61 A9 82            [24] 9387 	mov	r1,dpl
      003C63 AA 83            [24] 9388 	mov	r2,dph
      003C65 D0 13            [24] 9389 	pop	ar3
      003C67 D0 14            [24] 9390 	pop	ar4
      003C69 D0 15            [24] 9391 	pop	ar5
      003C6B D0 16            [24] 9392 	pop	ar6
      003C6D D0 17            [24] 9393 	pop	ar7
      003C6F E9               [12] 9394 	mov	a,r1
      003C70 24 02            [12] 9395 	add	a,#_gsm_receive_buf
      003C72 F5 82            [12] 9396 	mov	dpl,a
      003C74 EA               [12] 9397 	mov	a,r2
      003C75 34 01            [12] 9398 	addc	a,#(_gsm_receive_buf >> 8)
      003C77 F5 83            [12] 9399 	mov	dph,a
      003C79 E0               [24] 9400 	movx	a,@dptr
      003C7A FA               [12] 9401 	mov	r2,a
      003C7B BA 69 02         [24] 9402 	cjne	r2,#0x69,01173$
      003C7E 80 03            [24] 9403 	sjmp	01174$
      003C80                       9404 01173$:
      003C80 02 3C FC         [24] 9405 	ljmp	00287$
      003C83                       9406 01174$:
                                   9407 ;	include/gsm_serial.c:621: gsm_receive_buf[(gsm_receive_pointer+9)%13] =='h' && gsm_receive_buf[(gsm_receive_pointer+8)%13] =='c') ||
      003C83 74 09            [12] 9408 	mov	a,#0x09
      003C85 2B               [12] 9409 	add	a,r3
      003C86 F5 82            [12] 9410 	mov	dpl,a
      003C88 E4               [12] 9411 	clr	a
      003C89 3C               [12] 9412 	addc	a,r4
      003C8A F5 83            [12] 9413 	mov	dph,a
      003C8C 75 1B 0D         [24] 9414 	mov	__modsint_PARM_2,#0x0d
      003C8F 75 1C 00         [24] 9415 	mov	(__modsint_PARM_2 + 1),#0x00
      003C92 C0 17            [24] 9416 	push	ar7
      003C94 C0 16            [24] 9417 	push	ar6
      003C96 C0 15            [24] 9418 	push	ar5
      003C98 C0 14            [24] 9419 	push	ar4
      003C9A C0 13            [24] 9420 	push	ar3
      003C9C 75 D0 00         [24] 9421 	mov	psw,#0x00
      003C9F 12 84 67         [24] 9422 	lcall	__modsint
      003CA2 75 D0 10         [24] 9423 	mov	psw,#0x10
      003CA5 A9 82            [24] 9424 	mov	r1,dpl
      003CA7 AA 83            [24] 9425 	mov	r2,dph
      003CA9 D0 13            [24] 9426 	pop	ar3
      003CAB D0 14            [24] 9427 	pop	ar4
      003CAD D0 15            [24] 9428 	pop	ar5
      003CAF D0 16            [24] 9429 	pop	ar6
      003CB1 D0 17            [24] 9430 	pop	ar7
      003CB3 E9               [12] 9431 	mov	a,r1
      003CB4 24 02            [12] 9432 	add	a,#_gsm_receive_buf
      003CB6 F5 82            [12] 9433 	mov	dpl,a
      003CB8 EA               [12] 9434 	mov	a,r2
      003CB9 34 01            [12] 9435 	addc	a,#(_gsm_receive_buf >> 8)
      003CBB F5 83            [12] 9436 	mov	dph,a
      003CBD E0               [24] 9437 	movx	a,@dptr
      003CBE FA               [12] 9438 	mov	r2,a
      003CBF BA 68 3A         [24] 9439 	cjne	r2,#0x68,00287$
      003CC2 74 08            [12] 9440 	mov	a,#0x08
      003CC4 2B               [12] 9441 	add	a,r3
      003CC5 F5 82            [12] 9442 	mov	dpl,a
      003CC7 E4               [12] 9443 	clr	a
      003CC8 3C               [12] 9444 	addc	a,r4
      003CC9 F5 83            [12] 9445 	mov	dph,a
      003CCB 75 1B 0D         [24] 9446 	mov	__modsint_PARM_2,#0x0d
      003CCE 75 1C 00         [24] 9447 	mov	(__modsint_PARM_2 + 1),#0x00
      003CD1 C0 17            [24] 9448 	push	ar7
      003CD3 C0 16            [24] 9449 	push	ar6
      003CD5 C0 15            [24] 9450 	push	ar5
      003CD7 75 D0 00         [24] 9451 	mov	psw,#0x00
      003CDA 12 84 67         [24] 9452 	lcall	__modsint
      003CDD 75 D0 10         [24] 9453 	mov	psw,#0x10
      003CE0 AB 82            [24] 9454 	mov	r3,dpl
      003CE2 AC 83            [24] 9455 	mov	r4,dph
      003CE4 D0 15            [24] 9456 	pop	ar5
      003CE6 D0 16            [24] 9457 	pop	ar6
      003CE8 D0 17            [24] 9458 	pop	ar7
      003CEA EB               [12] 9459 	mov	a,r3
      003CEB 24 02            [12] 9460 	add	a,#_gsm_receive_buf
      003CED F5 82            [12] 9461 	mov	dpl,a
      003CEF EC               [12] 9462 	mov	a,r4
      003CF0 34 01            [12] 9463 	addc	a,#(_gsm_receive_buf >> 8)
      003CF2 F5 83            [12] 9464 	mov	dph,a
      003CF4 E0               [24] 9465 	movx	a,@dptr
      003CF5 FC               [12] 9466 	mov	r4,a
      003CF6 BC 63 03         [24] 9467 	cjne	r4,#0x63,01177$
      003CF9 02 40 97         [24] 9468 	ljmp	00273$
      003CFC                       9469 01177$:
      003CFC                       9470 00287$:
                                   9471 ;	include/gsm_serial.c:622: (nha_mang == VIETTEL && gsm_receive_buf[gsm_receive_pointer]==' ' && gsm_receive_buf[(gsm_receive_pointer+12)%13] ==':' &&
      003CFC BD 74 02         [24] 9472 	cjne	r5,#0x74,01178$
      003CFF 80 03            [24] 9473 	sjmp	01179$
      003D01                       9474 01178$:
      003D01 02 3E 54         [24] 9475 	ljmp	00294$
      003D04                       9476 01179$:
      003D04 BE 20 02         [24] 9477 	cjne	r6,#0x20,01180$
      003D07 80 03            [24] 9478 	sjmp	01181$
      003D09                       9479 01180$:
      003D09 02 3E 54         [24] 9480 	ljmp	00294$
      003D0C                       9481 01181$:
      003D0C 8F 13            [24] 9482 	mov	ar3,r7
      003D0E 7C 00            [12] 9483 	mov	r4,#0x00
      003D10 74 0C            [12] 9484 	mov	a,#0x0c
      003D12 2B               [12] 9485 	add	a,r3
      003D13 F5 82            [12] 9486 	mov	dpl,a
      003D15 E4               [12] 9487 	clr	a
      003D16 3C               [12] 9488 	addc	a,r4
      003D17 F5 83            [12] 9489 	mov	dph,a
      003D19 75 1B 0D         [24] 9490 	mov	__modsint_PARM_2,#0x0d
                                   9491 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      003D1C 8C 1C            [24] 9492 	mov	(__modsint_PARM_2 + 1),r4
      003D1E C0 17            [24] 9493 	push	ar7
      003D20 C0 16            [24] 9494 	push	ar6
      003D22 C0 15            [24] 9495 	push	ar5
      003D24 C0 14            [24] 9496 	push	ar4
      003D26 C0 13            [24] 9497 	push	ar3
      003D28 75 D0 00         [24] 9498 	mov	psw,#0x00
      003D2B 12 84 67         [24] 9499 	lcall	__modsint
      003D2E 75 D0 10         [24] 9500 	mov	psw,#0x10
      003D31 A9 82            [24] 9501 	mov	r1,dpl
      003D33 AA 83            [24] 9502 	mov	r2,dph
      003D35 D0 13            [24] 9503 	pop	ar3
      003D37 D0 14            [24] 9504 	pop	ar4
      003D39 D0 15            [24] 9505 	pop	ar5
      003D3B D0 16            [24] 9506 	pop	ar6
      003D3D D0 17            [24] 9507 	pop	ar7
      003D3F E9               [12] 9508 	mov	a,r1
      003D40 24 02            [12] 9509 	add	a,#_gsm_receive_buf
      003D42 F5 82            [12] 9510 	mov	dpl,a
      003D44 EA               [12] 9511 	mov	a,r2
      003D45 34 01            [12] 9512 	addc	a,#(_gsm_receive_buf >> 8)
      003D47 F5 83            [12] 9513 	mov	dph,a
      003D49 E0               [24] 9514 	movx	a,@dptr
      003D4A FA               [12] 9515 	mov	r2,a
      003D4B BA 3A 02         [24] 9516 	cjne	r2,#0x3a,01182$
      003D4E 80 03            [24] 9517 	sjmp	01183$
      003D50                       9518 01182$:
      003D50 02 3E 54         [24] 9519 	ljmp	00294$
      003D53                       9520 01183$:
                                   9521 ;	include/gsm_serial.c:623: gsm_receive_buf[(gsm_receive_pointer+11)%13] =='G' && gsm_receive_buf[(gsm_receive_pointer+10)%13] =='K' &&
      003D53 74 0B            [12] 9522 	mov	a,#0x0b
      003D55 2B               [12] 9523 	add	a,r3
      003D56 F5 82            [12] 9524 	mov	dpl,a
      003D58 E4               [12] 9525 	clr	a
      003D59 3C               [12] 9526 	addc	a,r4
      003D5A F5 83            [12] 9527 	mov	dph,a
      003D5C 75 1B 0D         [24] 9528 	mov	__modsint_PARM_2,#0x0d
      003D5F 75 1C 00         [24] 9529 	mov	(__modsint_PARM_2 + 1),#0x00
      003D62 C0 17            [24] 9530 	push	ar7
      003D64 C0 16            [24] 9531 	push	ar6
      003D66 C0 15            [24] 9532 	push	ar5
      003D68 C0 14            [24] 9533 	push	ar4
      003D6A C0 13            [24] 9534 	push	ar3
      003D6C 75 D0 00         [24] 9535 	mov	psw,#0x00
      003D6F 12 84 67         [24] 9536 	lcall	__modsint
      003D72 75 D0 10         [24] 9537 	mov	psw,#0x10
      003D75 A9 82            [24] 9538 	mov	r1,dpl
      003D77 AA 83            [24] 9539 	mov	r2,dph
      003D79 D0 13            [24] 9540 	pop	ar3
      003D7B D0 14            [24] 9541 	pop	ar4
      003D7D D0 15            [24] 9542 	pop	ar5
      003D7F D0 16            [24] 9543 	pop	ar6
      003D81 D0 17            [24] 9544 	pop	ar7
      003D83 E9               [12] 9545 	mov	a,r1
      003D84 24 02            [12] 9546 	add	a,#_gsm_receive_buf
      003D86 F5 82            [12] 9547 	mov	dpl,a
      003D88 EA               [12] 9548 	mov	a,r2
      003D89 34 01            [12] 9549 	addc	a,#(_gsm_receive_buf >> 8)
      003D8B F5 83            [12] 9550 	mov	dph,a
      003D8D E0               [24] 9551 	movx	a,@dptr
      003D8E FA               [12] 9552 	mov	r2,a
      003D8F BA 47 02         [24] 9553 	cjne	r2,#0x47,01184$
      003D92 80 03            [24] 9554 	sjmp	01185$
      003D94                       9555 01184$:
      003D94 02 3E 54         [24] 9556 	ljmp	00294$
      003D97                       9557 01185$:
      003D97 74 0A            [12] 9558 	mov	a,#0x0a
      003D99 2B               [12] 9559 	add	a,r3
      003D9A F5 82            [12] 9560 	mov	dpl,a
      003D9C E4               [12] 9561 	clr	a
      003D9D 3C               [12] 9562 	addc	a,r4
      003D9E F5 83            [12] 9563 	mov	dph,a
      003DA0 75 1B 0D         [24] 9564 	mov	__modsint_PARM_2,#0x0d
      003DA3 75 1C 00         [24] 9565 	mov	(__modsint_PARM_2 + 1),#0x00
      003DA6 C0 17            [24] 9566 	push	ar7
      003DA8 C0 16            [24] 9567 	push	ar6
      003DAA C0 15            [24] 9568 	push	ar5
      003DAC C0 14            [24] 9569 	push	ar4
      003DAE C0 13            [24] 9570 	push	ar3
      003DB0 75 D0 00         [24] 9571 	mov	psw,#0x00
      003DB3 12 84 67         [24] 9572 	lcall	__modsint
      003DB6 75 D0 10         [24] 9573 	mov	psw,#0x10
      003DB9 A9 82            [24] 9574 	mov	r1,dpl
      003DBB AA 83            [24] 9575 	mov	r2,dph
      003DBD D0 13            [24] 9576 	pop	ar3
      003DBF D0 14            [24] 9577 	pop	ar4
      003DC1 D0 15            [24] 9578 	pop	ar5
      003DC3 D0 16            [24] 9579 	pop	ar6
      003DC5 D0 17            [24] 9580 	pop	ar7
      003DC7 E9               [12] 9581 	mov	a,r1
      003DC8 24 02            [12] 9582 	add	a,#_gsm_receive_buf
      003DCA F5 82            [12] 9583 	mov	dpl,a
      003DCC EA               [12] 9584 	mov	a,r2
      003DCD 34 01            [12] 9585 	addc	a,#(_gsm_receive_buf >> 8)
      003DCF F5 83            [12] 9586 	mov	dph,a
      003DD1 E0               [24] 9587 	movx	a,@dptr
      003DD2 FA               [12] 9588 	mov	r2,a
      003DD3 BA 4B 02         [24] 9589 	cjne	r2,#0x4b,01186$
      003DD6 80 03            [24] 9590 	sjmp	01187$
      003DD8                       9591 01186$:
      003DD8 02 3E 54         [24] 9592 	ljmp	00294$
      003DDB                       9593 01187$:
                                   9594 ;	include/gsm_serial.c:624: gsm_receive_buf[(gsm_receive_pointer+9)%13] =='T' && gsm_receive_buf[(gsm_receive_pointer+8)%13] ==' ') ||
      003DDB 74 09            [12] 9595 	mov	a,#0x09
      003DDD 2B               [12] 9596 	add	a,r3
      003DDE F5 82            [12] 9597 	mov	dpl,a
      003DE0 E4               [12] 9598 	clr	a
      003DE1 3C               [12] 9599 	addc	a,r4
      003DE2 F5 83            [12] 9600 	mov	dph,a
      003DE4 75 1B 0D         [24] 9601 	mov	__modsint_PARM_2,#0x0d
      003DE7 75 1C 00         [24] 9602 	mov	(__modsint_PARM_2 + 1),#0x00
      003DEA C0 17            [24] 9603 	push	ar7
      003DEC C0 16            [24] 9604 	push	ar6
      003DEE C0 15            [24] 9605 	push	ar5
      003DF0 C0 14            [24] 9606 	push	ar4
      003DF2 C0 13            [24] 9607 	push	ar3
      003DF4 75 D0 00         [24] 9608 	mov	psw,#0x00
      003DF7 12 84 67         [24] 9609 	lcall	__modsint
      003DFA 75 D0 10         [24] 9610 	mov	psw,#0x10
      003DFD A9 82            [24] 9611 	mov	r1,dpl
      003DFF AA 83            [24] 9612 	mov	r2,dph
      003E01 D0 13            [24] 9613 	pop	ar3
      003E03 D0 14            [24] 9614 	pop	ar4
      003E05 D0 15            [24] 9615 	pop	ar5
      003E07 D0 16            [24] 9616 	pop	ar6
      003E09 D0 17            [24] 9617 	pop	ar7
      003E0B E9               [12] 9618 	mov	a,r1
      003E0C 24 02            [12] 9619 	add	a,#_gsm_receive_buf
      003E0E F5 82            [12] 9620 	mov	dpl,a
      003E10 EA               [12] 9621 	mov	a,r2
      003E11 34 01            [12] 9622 	addc	a,#(_gsm_receive_buf >> 8)
      003E13 F5 83            [12] 9623 	mov	dph,a
      003E15 E0               [24] 9624 	movx	a,@dptr
      003E16 FA               [12] 9625 	mov	r2,a
      003E17 BA 54 3A         [24] 9626 	cjne	r2,#0x54,00294$
      003E1A 74 08            [12] 9627 	mov	a,#0x08
      003E1C 2B               [12] 9628 	add	a,r3
      003E1D F5 82            [12] 9629 	mov	dpl,a
      003E1F E4               [12] 9630 	clr	a
      003E20 3C               [12] 9631 	addc	a,r4
      003E21 F5 83            [12] 9632 	mov	dph,a
      003E23 75 1B 0D         [24] 9633 	mov	__modsint_PARM_2,#0x0d
      003E26 75 1C 00         [24] 9634 	mov	(__modsint_PARM_2 + 1),#0x00
      003E29 C0 17            [24] 9635 	push	ar7
      003E2B C0 16            [24] 9636 	push	ar6
      003E2D C0 15            [24] 9637 	push	ar5
      003E2F 75 D0 00         [24] 9638 	mov	psw,#0x00
      003E32 12 84 67         [24] 9639 	lcall	__modsint
      003E35 75 D0 10         [24] 9640 	mov	psw,#0x10
      003E38 AB 82            [24] 9641 	mov	r3,dpl
      003E3A AC 83            [24] 9642 	mov	r4,dph
      003E3C D0 15            [24] 9643 	pop	ar5
      003E3E D0 16            [24] 9644 	pop	ar6
      003E40 D0 17            [24] 9645 	pop	ar7
      003E42 EB               [12] 9646 	mov	a,r3
      003E43 24 02            [12] 9647 	add	a,#_gsm_receive_buf
      003E45 F5 82            [12] 9648 	mov	dpl,a
      003E47 EC               [12] 9649 	mov	a,r4
      003E48 34 01            [12] 9650 	addc	a,#(_gsm_receive_buf >> 8)
      003E4A F5 83            [12] 9651 	mov	dph,a
      003E4C E0               [24] 9652 	movx	a,@dptr
      003E4D FC               [12] 9653 	mov	r4,a
      003E4E BC 20 03         [24] 9654 	cjne	r4,#0x20,01190$
      003E51 02 40 97         [24] 9655 	ljmp	00273$
      003E54                       9656 01190$:
      003E54                       9657 00294$:
                                   9658 ;	include/gsm_serial.c:625: (nha_mang == MOBIFONE && gsm_receive_buf[gsm_receive_pointer]==' ' &&
      003E54 BD 66 02         [24] 9659 	cjne	r5,#0x66,01191$
      003E57 80 03            [24] 9660 	sjmp	01192$
      003E59                       9661 01191$:
      003E59 02 3F AC         [24] 9662 	ljmp	00300$
      003E5C                       9663 01192$:
      003E5C BE 20 02         [24] 9664 	cjne	r6,#0x20,01193$
      003E5F 80 03            [24] 9665 	sjmp	01194$
      003E61                       9666 01193$:
      003E61 02 3F AC         [24] 9667 	ljmp	00300$
      003E64                       9668 01194$:
                                   9669 ;	include/gsm_serial.c:626: gsm_receive_buf[(gsm_receive_pointer+12)%13] =='C' && gsm_receive_buf[(gsm_receive_pointer+11)%13] =='K' &&
      003E64 8F 13            [24] 9670 	mov	ar3,r7
      003E66 7C 00            [12] 9671 	mov	r4,#0x00
      003E68 74 0C            [12] 9672 	mov	a,#0x0c
      003E6A 2B               [12] 9673 	add	a,r3
      003E6B F5 82            [12] 9674 	mov	dpl,a
      003E6D E4               [12] 9675 	clr	a
      003E6E 3C               [12] 9676 	addc	a,r4
      003E6F F5 83            [12] 9677 	mov	dph,a
      003E71 75 1B 0D         [24] 9678 	mov	__modsint_PARM_2,#0x0d
                                   9679 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      003E74 8C 1C            [24] 9680 	mov	(__modsint_PARM_2 + 1),r4
      003E76 C0 17            [24] 9681 	push	ar7
      003E78 C0 16            [24] 9682 	push	ar6
      003E7A C0 15            [24] 9683 	push	ar5
      003E7C C0 14            [24] 9684 	push	ar4
      003E7E C0 13            [24] 9685 	push	ar3
      003E80 75 D0 00         [24] 9686 	mov	psw,#0x00
      003E83 12 84 67         [24] 9687 	lcall	__modsint
      003E86 75 D0 10         [24] 9688 	mov	psw,#0x10
      003E89 A9 82            [24] 9689 	mov	r1,dpl
      003E8B AA 83            [24] 9690 	mov	r2,dph
      003E8D D0 13            [24] 9691 	pop	ar3
      003E8F D0 14            [24] 9692 	pop	ar4
      003E91 D0 15            [24] 9693 	pop	ar5
      003E93 D0 16            [24] 9694 	pop	ar6
      003E95 D0 17            [24] 9695 	pop	ar7
      003E97 E9               [12] 9696 	mov	a,r1
      003E98 24 02            [12] 9697 	add	a,#_gsm_receive_buf
      003E9A F5 82            [12] 9698 	mov	dpl,a
      003E9C EA               [12] 9699 	mov	a,r2
      003E9D 34 01            [12] 9700 	addc	a,#(_gsm_receive_buf >> 8)
      003E9F F5 83            [12] 9701 	mov	dph,a
      003EA1 E0               [24] 9702 	movx	a,@dptr
      003EA2 FA               [12] 9703 	mov	r2,a
      003EA3 BA 43 02         [24] 9704 	cjne	r2,#0x43,01195$
      003EA6 80 03            [24] 9705 	sjmp	01196$
      003EA8                       9706 01195$:
      003EA8 02 3F AC         [24] 9707 	ljmp	00300$
      003EAB                       9708 01196$:
      003EAB 74 0B            [12] 9709 	mov	a,#0x0b
      003EAD 2B               [12] 9710 	add	a,r3
      003EAE F5 82            [12] 9711 	mov	dpl,a
      003EB0 E4               [12] 9712 	clr	a
      003EB1 3C               [12] 9713 	addc	a,r4
      003EB2 F5 83            [12] 9714 	mov	dph,a
      003EB4 75 1B 0D         [24] 9715 	mov	__modsint_PARM_2,#0x0d
      003EB7 75 1C 00         [24] 9716 	mov	(__modsint_PARM_2 + 1),#0x00
      003EBA C0 17            [24] 9717 	push	ar7
      003EBC C0 16            [24] 9718 	push	ar6
      003EBE C0 15            [24] 9719 	push	ar5
      003EC0 C0 14            [24] 9720 	push	ar4
      003EC2 C0 13            [24] 9721 	push	ar3
      003EC4 75 D0 00         [24] 9722 	mov	psw,#0x00
      003EC7 12 84 67         [24] 9723 	lcall	__modsint
      003ECA 75 D0 10         [24] 9724 	mov	psw,#0x10
      003ECD A9 82            [24] 9725 	mov	r1,dpl
      003ECF AA 83            [24] 9726 	mov	r2,dph
      003ED1 D0 13            [24] 9727 	pop	ar3
      003ED3 D0 14            [24] 9728 	pop	ar4
      003ED5 D0 15            [24] 9729 	pop	ar5
      003ED7 D0 16            [24] 9730 	pop	ar6
      003ED9 D0 17            [24] 9731 	pop	ar7
      003EDB E9               [12] 9732 	mov	a,r1
      003EDC 24 02            [12] 9733 	add	a,#_gsm_receive_buf
      003EDE F5 82            [12] 9734 	mov	dpl,a
      003EE0 EA               [12] 9735 	mov	a,r2
      003EE1 34 01            [12] 9736 	addc	a,#(_gsm_receive_buf >> 8)
      003EE3 F5 83            [12] 9737 	mov	dph,a
      003EE5 E0               [24] 9738 	movx	a,@dptr
      003EE6 FA               [12] 9739 	mov	r2,a
      003EE7 BA 4B 02         [24] 9740 	cjne	r2,#0x4b,01197$
      003EEA 80 03            [24] 9741 	sjmp	01198$
      003EEC                       9742 01197$:
      003EEC 02 3F AC         [24] 9743 	ljmp	00300$
      003EEF                       9744 01198$:
                                   9745 ;	include/gsm_serial.c:627: gsm_receive_buf[(gsm_receive_pointer+10)%13] =='T' && gsm_receive_buf[(gsm_receive_pointer+9)%13] ==' ' &&
      003EEF 74 0A            [12] 9746 	mov	a,#0x0a
      003EF1 2B               [12] 9747 	add	a,r3
      003EF2 F5 82            [12] 9748 	mov	dpl,a
      003EF4 E4               [12] 9749 	clr	a
      003EF5 3C               [12] 9750 	addc	a,r4
      003EF6 F5 83            [12] 9751 	mov	dph,a
      003EF8 75 1B 0D         [24] 9752 	mov	__modsint_PARM_2,#0x0d
      003EFB 75 1C 00         [24] 9753 	mov	(__modsint_PARM_2 + 1),#0x00
      003EFE C0 17            [24] 9754 	push	ar7
      003F00 C0 16            [24] 9755 	push	ar6
      003F02 C0 15            [24] 9756 	push	ar5
      003F04 C0 14            [24] 9757 	push	ar4
      003F06 C0 13            [24] 9758 	push	ar3
      003F08 75 D0 00         [24] 9759 	mov	psw,#0x00
      003F0B 12 84 67         [24] 9760 	lcall	__modsint
      003F0E 75 D0 10         [24] 9761 	mov	psw,#0x10
      003F11 A9 82            [24] 9762 	mov	r1,dpl
      003F13 AA 83            [24] 9763 	mov	r2,dph
      003F15 D0 13            [24] 9764 	pop	ar3
      003F17 D0 14            [24] 9765 	pop	ar4
      003F19 D0 15            [24] 9766 	pop	ar5
      003F1B D0 16            [24] 9767 	pop	ar6
      003F1D D0 17            [24] 9768 	pop	ar7
      003F1F E9               [12] 9769 	mov	a,r1
      003F20 24 02            [12] 9770 	add	a,#_gsm_receive_buf
      003F22 F5 82            [12] 9771 	mov	dpl,a
      003F24 EA               [12] 9772 	mov	a,r2
      003F25 34 01            [12] 9773 	addc	a,#(_gsm_receive_buf >> 8)
      003F27 F5 83            [12] 9774 	mov	dph,a
      003F29 E0               [24] 9775 	movx	a,@dptr
      003F2A FA               [12] 9776 	mov	r2,a
      003F2B BA 54 02         [24] 9777 	cjne	r2,#0x54,01199$
      003F2E 80 03            [24] 9778 	sjmp	01200$
      003F30                       9779 01199$:
      003F30 02 3F AC         [24] 9780 	ljmp	00300$
      003F33                       9781 01200$:
      003F33 74 09            [12] 9782 	mov	a,#0x09
      003F35 2B               [12] 9783 	add	a,r3
      003F36 F5 82            [12] 9784 	mov	dpl,a
      003F38 E4               [12] 9785 	clr	a
      003F39 3C               [12] 9786 	addc	a,r4
      003F3A F5 83            [12] 9787 	mov	dph,a
      003F3C 75 1B 0D         [24] 9788 	mov	__modsint_PARM_2,#0x0d
      003F3F 75 1C 00         [24] 9789 	mov	(__modsint_PARM_2 + 1),#0x00
      003F42 C0 17            [24] 9790 	push	ar7
      003F44 C0 16            [24] 9791 	push	ar6
      003F46 C0 15            [24] 9792 	push	ar5
      003F48 C0 14            [24] 9793 	push	ar4
      003F4A C0 13            [24] 9794 	push	ar3
      003F4C 75 D0 00         [24] 9795 	mov	psw,#0x00
      003F4F 12 84 67         [24] 9796 	lcall	__modsint
      003F52 75 D0 10         [24] 9797 	mov	psw,#0x10
      003F55 A9 82            [24] 9798 	mov	r1,dpl
      003F57 AA 83            [24] 9799 	mov	r2,dph
      003F59 D0 13            [24] 9800 	pop	ar3
      003F5B D0 14            [24] 9801 	pop	ar4
      003F5D D0 15            [24] 9802 	pop	ar5
      003F5F D0 16            [24] 9803 	pop	ar6
      003F61 D0 17            [24] 9804 	pop	ar7
      003F63 E9               [12] 9805 	mov	a,r1
      003F64 24 02            [12] 9806 	add	a,#_gsm_receive_buf
      003F66 F5 82            [12] 9807 	mov	dpl,a
      003F68 EA               [12] 9808 	mov	a,r2
      003F69 34 01            [12] 9809 	addc	a,#(_gsm_receive_buf >> 8)
      003F6B F5 83            [12] 9810 	mov	dph,a
      003F6D E0               [24] 9811 	movx	a,@dptr
      003F6E FA               [12] 9812 	mov	r2,a
      003F6F BA 20 3A         [24] 9813 	cjne	r2,#0x20,00300$
                                   9814 ;	include/gsm_serial.c:628: gsm_receive_buf[(gsm_receive_pointer+8)%13] =='.') ||
      003F72 74 08            [12] 9815 	mov	a,#0x08
      003F74 2B               [12] 9816 	add	a,r3
      003F75 F5 82            [12] 9817 	mov	dpl,a
      003F77 E4               [12] 9818 	clr	a
      003F78 3C               [12] 9819 	addc	a,r4
      003F79 F5 83            [12] 9820 	mov	dph,a
      003F7B 75 1B 0D         [24] 9821 	mov	__modsint_PARM_2,#0x0d
      003F7E 75 1C 00         [24] 9822 	mov	(__modsint_PARM_2 + 1),#0x00
      003F81 C0 17            [24] 9823 	push	ar7
      003F83 C0 16            [24] 9824 	push	ar6
      003F85 C0 15            [24] 9825 	push	ar5
      003F87 75 D0 00         [24] 9826 	mov	psw,#0x00
      003F8A 12 84 67         [24] 9827 	lcall	__modsint
      003F8D 75 D0 10         [24] 9828 	mov	psw,#0x10
      003F90 AB 82            [24] 9829 	mov	r3,dpl
      003F92 AC 83            [24] 9830 	mov	r4,dph
      003F94 D0 15            [24] 9831 	pop	ar5
      003F96 D0 16            [24] 9832 	pop	ar6
      003F98 D0 17            [24] 9833 	pop	ar7
      003F9A EB               [12] 9834 	mov	a,r3
      003F9B 24 02            [12] 9835 	add	a,#_gsm_receive_buf
      003F9D F5 82            [12] 9836 	mov	dpl,a
      003F9F EC               [12] 9837 	mov	a,r4
      003FA0 34 01            [12] 9838 	addc	a,#(_gsm_receive_buf >> 8)
      003FA2 F5 83            [12] 9839 	mov	dph,a
      003FA4 E0               [24] 9840 	movx	a,@dptr
      003FA5 FC               [12] 9841 	mov	r4,a
      003FA6 BC 2E 03         [24] 9842 	cjne	r4,#0x2e,01203$
      003FA9 02 40 97         [24] 9843 	ljmp	00273$
      003FAC                       9844 01203$:
      003FAC                       9845 00300$:
                                   9846 ;	include/gsm_serial.c:633: (nha_mang == VIETNAM && gsm_receive_buf[gsm_receive_pointer]==' ' && gsm_receive_buf[(gsm_receive_pointer+12)%13] ==':' &&
      003FAC BD 6E 02         [24] 9847 	cjne	r5,#0x6e,01204$
      003FAF 80 03            [24] 9848 	sjmp	01205$
      003FB1                       9849 01204$:
      003FB1 02 43 0D         [24] 9850 	ljmp	00345$
      003FB4                       9851 01205$:
      003FB4 BE 20 02         [24] 9852 	cjne	r6,#0x20,01206$
      003FB7 80 03            [24] 9853 	sjmp	01207$
      003FB9                       9854 01206$:
      003FB9 02 43 0D         [24] 9855 	ljmp	00345$
      003FBC                       9856 01207$:
      003FBC 8F 14            [24] 9857 	mov	ar4,r7
      003FBE 7D 00            [12] 9858 	mov	r5,#0x00
      003FC0 74 0C            [12] 9859 	mov	a,#0x0c
      003FC2 2C               [12] 9860 	add	a,r4
      003FC3 F5 82            [12] 9861 	mov	dpl,a
      003FC5 E4               [12] 9862 	clr	a
      003FC6 3D               [12] 9863 	addc	a,r5
      003FC7 F5 83            [12] 9864 	mov	dph,a
      003FC9 75 1B 0D         [24] 9865 	mov	__modsint_PARM_2,#0x0d
                                   9866 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      003FCC 8D 1C            [24] 9867 	mov	(__modsint_PARM_2 + 1),r5
      003FCE C0 15            [24] 9868 	push	ar5
      003FD0 C0 14            [24] 9869 	push	ar4
      003FD2 75 D0 00         [24] 9870 	mov	psw,#0x00
      003FD5 12 84 67         [24] 9871 	lcall	__modsint
      003FD8 75 D0 10         [24] 9872 	mov	psw,#0x10
      003FDB AA 82            [24] 9873 	mov	r2,dpl
      003FDD AB 83            [24] 9874 	mov	r3,dph
      003FDF D0 14            [24] 9875 	pop	ar4
      003FE1 D0 15            [24] 9876 	pop	ar5
      003FE3 EA               [12] 9877 	mov	a,r2
      003FE4 24 02            [12] 9878 	add	a,#_gsm_receive_buf
      003FE6 F5 82            [12] 9879 	mov	dpl,a
      003FE8 EB               [12] 9880 	mov	a,r3
      003FE9 34 01            [12] 9881 	addc	a,#(_gsm_receive_buf >> 8)
      003FEB F5 83            [12] 9882 	mov	dph,a
      003FED E0               [24] 9883 	movx	a,@dptr
      003FEE FB               [12] 9884 	mov	r3,a
      003FEF BB 3A 02         [24] 9885 	cjne	r3,#0x3a,01208$
      003FF2 80 03            [24] 9886 	sjmp	01209$
      003FF4                       9887 01208$:
      003FF4 02 43 0D         [24] 9888 	ljmp	00345$
      003FF7                       9889 01209$:
                                   9890 ;	include/gsm_serial.c:634: gsm_receive_buf[(gsm_receive_pointer+11)%13] =='C' && gsm_receive_buf[(gsm_receive_pointer+10)%13] =='K' &&
      003FF7 74 0B            [12] 9891 	mov	a,#0x0b
      003FF9 2C               [12] 9892 	add	a,r4
      003FFA F5 82            [12] 9893 	mov	dpl,a
      003FFC E4               [12] 9894 	clr	a
      003FFD 3D               [12] 9895 	addc	a,r5
      003FFE F5 83            [12] 9896 	mov	dph,a
      004000 75 1B 0D         [24] 9897 	mov	__modsint_PARM_2,#0x0d
      004003 75 1C 00         [24] 9898 	mov	(__modsint_PARM_2 + 1),#0x00
      004006 C0 15            [24] 9899 	push	ar5
      004008 C0 14            [24] 9900 	push	ar4
      00400A 75 D0 00         [24] 9901 	mov	psw,#0x00
      00400D 12 84 67         [24] 9902 	lcall	__modsint
      004010 75 D0 10         [24] 9903 	mov	psw,#0x10
      004013 AA 82            [24] 9904 	mov	r2,dpl
      004015 AB 83            [24] 9905 	mov	r3,dph
      004017 D0 14            [24] 9906 	pop	ar4
      004019 D0 15            [24] 9907 	pop	ar5
      00401B EA               [12] 9908 	mov	a,r2
      00401C 24 02            [12] 9909 	add	a,#_gsm_receive_buf
      00401E F5 82            [12] 9910 	mov	dpl,a
      004020 EB               [12] 9911 	mov	a,r3
      004021 34 01            [12] 9912 	addc	a,#(_gsm_receive_buf >> 8)
      004023 F5 83            [12] 9913 	mov	dph,a
      004025 E0               [24] 9914 	movx	a,@dptr
      004026 FB               [12] 9915 	mov	r3,a
      004027 BB 43 02         [24] 9916 	cjne	r3,#0x43,01210$
      00402A 80 03            [24] 9917 	sjmp	01211$
      00402C                       9918 01210$:
      00402C 02 43 0D         [24] 9919 	ljmp	00345$
      00402F                       9920 01211$:
      00402F 74 0A            [12] 9921 	mov	a,#0x0a
      004031 2C               [12] 9922 	add	a,r4
      004032 F5 82            [12] 9923 	mov	dpl,a
      004034 E4               [12] 9924 	clr	a
      004035 3D               [12] 9925 	addc	a,r5
      004036 F5 83            [12] 9926 	mov	dph,a
      004038 75 1B 0D         [24] 9927 	mov	__modsint_PARM_2,#0x0d
      00403B 75 1C 00         [24] 9928 	mov	(__modsint_PARM_2 + 1),#0x00
      00403E C0 15            [24] 9929 	push	ar5
      004040 C0 14            [24] 9930 	push	ar4
      004042 75 D0 00         [24] 9931 	mov	psw,#0x00
      004045 12 84 67         [24] 9932 	lcall	__modsint
      004048 75 D0 10         [24] 9933 	mov	psw,#0x10
      00404B AA 82            [24] 9934 	mov	r2,dpl
      00404D AB 83            [24] 9935 	mov	r3,dph
      00404F D0 14            [24] 9936 	pop	ar4
      004051 D0 15            [24] 9937 	pop	ar5
      004053 EA               [12] 9938 	mov	a,r2
      004054 24 02            [12] 9939 	add	a,#_gsm_receive_buf
      004056 F5 82            [12] 9940 	mov	dpl,a
      004058 EB               [12] 9941 	mov	a,r3
      004059 34 01            [12] 9942 	addc	a,#(_gsm_receive_buf >> 8)
      00405B F5 83            [12] 9943 	mov	dph,a
      00405D E0               [24] 9944 	movx	a,@dptr
      00405E FB               [12] 9945 	mov	r3,a
      00405F BB 4B 02         [24] 9946 	cjne	r3,#0x4b,01212$
      004062 80 03            [24] 9947 	sjmp	01213$
      004064                       9948 01212$:
      004064 02 43 0D         [24] 9949 	ljmp	00345$
      004067                       9950 01213$:
                                   9951 ;	include/gsm_serial.c:635: gsm_receive_buf[(gsm_receive_pointer+9)%13] =='T'))
      004067 74 09            [12] 9952 	mov	a,#0x09
      004069 2C               [12] 9953 	add	a,r4
      00406A F5 82            [12] 9954 	mov	dpl,a
      00406C E4               [12] 9955 	clr	a
      00406D 3D               [12] 9956 	addc	a,r5
      00406E F5 83            [12] 9957 	mov	dph,a
      004070 75 1B 0D         [24] 9958 	mov	__modsint_PARM_2,#0x0d
      004073 75 1C 00         [24] 9959 	mov	(__modsint_PARM_2 + 1),#0x00
      004076 75 D0 00         [24] 9960 	mov	psw,#0x00
      004079 12 84 67         [24] 9961 	lcall	__modsint
      00407C 75 D0 10         [24] 9962 	mov	psw,#0x10
      00407F AC 82            [24] 9963 	mov	r4,dpl
      004081 AD 83            [24] 9964 	mov	r5,dph
      004083 EC               [12] 9965 	mov	a,r4
      004084 24 02            [12] 9966 	add	a,#_gsm_receive_buf
      004086 F5 82            [12] 9967 	mov	dpl,a
      004088 ED               [12] 9968 	mov	a,r5
      004089 34 01            [12] 9969 	addc	a,#(_gsm_receive_buf >> 8)
      00408B F5 83            [12] 9970 	mov	dph,a
      00408D E0               [24] 9971 	movx	a,@dptr
      00408E FD               [12] 9972 	mov	r5,a
      00408F BD 54 02         [24] 9973 	cjne	r5,#0x54,01214$
      004092 80 03            [24] 9974 	sjmp	01215$
      004094                       9975 01214$:
      004094 02 43 0D         [24] 9976 	ljmp	00345$
      004097                       9977 01215$:
      004097                       9978 00273$:
                                   9979 ;	include/gsm_serial.c:636: {have_cusd = 1;}
                                   9980 ;	assignBit
      004097 D2 0F            [12] 9981 	setb	_have_cusd
                                   9982 ;	include/gsm_serial.c:637: break;
      004099 02 43 0D         [24] 9983 	ljmp	00345$
                                   9984 ;	include/gsm_serial.c:638: case SDT:
      00409C                       9985 00304$:
                                   9986 ;	include/gsm_serial.c:639: if(have_cusd){
      00409C 20 0F 03         [24] 9987 	jb	_have_cusd,01216$
      00409F 02 41 2D         [24] 9988 	ljmp	00342$
      0040A2                       9989 01216$:
                                   9990 ;	include/gsm_serial.c:640: if((((nha_mang == VINAPHONE || nha_mang == VIETNAM) && SBUF !='\n') || (nha_mang == MOBIFONE && SBUF !='"') || (nha_mang == VIETTEL && SBUF !='.'))  && sms_index<10) 
      0040A2 90 00 F9         [24] 9991 	mov	dptr,#_nha_mang
      0040A5 E0               [24] 9992 	movx	a,@dptr
      0040A6 FD               [12] 9993 	mov	r5,a
      0040A7 BD 50 02         [24] 9994 	cjne	r5,#0x50,01217$
      0040AA 80 03            [24] 9995 	sjmp	00315$
      0040AC                       9996 01217$:
      0040AC BD 6E 05         [24] 9997 	cjne	r5,#0x6e,00317$
      0040AF                       9998 00315$:
      0040AF 74 0A            [12] 9999 	mov	a,#0x0a
      0040B1 B5 99 12         [24]10000 	cjne	a,_SBUF,00320$
      0040B4                      10001 00317$:
      0040B4 BD 66 05         [24]10002 	cjne	r5,#0x66,00319$
      0040B7 74 22            [12]10003 	mov	a,#0x22
      0040B9 B5 99 0A         [24]10004 	cjne	a,_SBUF,00320$
      0040BC                      10005 00319$:
      0040BC BD 74 3D         [24]10006 	cjne	r5,#0x74,00312$
      0040BF 74 2E            [12]10007 	mov	a,#0x2e
      0040C1 B5 99 02         [24]10008 	cjne	a,_SBUF,01228$
      0040C4 80 36            [24]10009 	sjmp	00312$
      0040C6                      10010 01228$:
      0040C6                      10011 00320$:
      0040C6 90 00 BB         [24]10012 	mov	dptr,#_sms_index
      0040C9 E0               [24]10013 	movx	a,@dptr
      0040CA FD               [12]10014 	mov	r5,a
      0040CB BD 0A 00         [24]10015 	cjne	r5,#0x0a,01229$
      0040CE                      10016 01229$:
      0040CE 50 2C            [24]10017 	jnc	00312$
                                  10018 ;	include/gsm_serial.c:641: if(sms_index<9) phone[1+sms_index++] = SBUF;
      0040D0 BD 09 00         [24]10019 	cjne	r5,#0x09,01231$
      0040D3                      10020 01231$:
      0040D3 50 1E            [24]10021 	jnc	00306$
      0040D5 8D 14            [24]10022 	mov	ar4,r5
      0040D7 90 00 BB         [24]10023 	mov	dptr,#_sms_index
      0040DA ED               [12]10024 	mov	a,r5
      0040DB 04               [12]10025 	inc	a
      0040DC F0               [24]10026 	movx	@dptr,a
      0040DD 0C               [12]10027 	inc	r4
      0040DE EC               [12]10028 	mov	a,r4
      0040DF 33               [12]10029 	rlc	a
      0040E0 95 E0            [12]10030 	subb	a,acc
      0040E2 FB               [12]10031 	mov	r3,a
      0040E3 EC               [12]10032 	mov	a,r4
      0040E4 24 0C            [12]10033 	add	a,#_phone
      0040E6 F5 82            [12]10034 	mov	dpl,a
      0040E8 EB               [12]10035 	mov	a,r3
      0040E9 34 00            [12]10036 	addc	a,#(_phone >> 8)
      0040EB F5 83            [12]10037 	mov	dph,a
      0040ED E5 99            [12]10038 	mov	a,_SBUF
      0040EF F0               [24]10039 	movx	@dptr,a
      0040F0 02 43 0D         [24]10040 	ljmp	00345$
      0040F3                      10041 00306$:
                                  10042 ;	include/gsm_serial.c:642: else sms_index++;
      0040F3 90 00 BB         [24]10043 	mov	dptr,#_sms_index
      0040F6 ED               [12]10044 	mov	a,r5
      0040F7 04               [12]10045 	inc	a
      0040F8 F0               [24]10046 	movx	@dptr,a
      0040F9 02 43 0D         [24]10047 	ljmp	00345$
      0040FC                      10048 00312$:
                                  10049 ;	include/gsm_serial.c:644: have_quote = have_cusd = 0;                            
                                  10050 ;	assignBit
      0040FC C2 0F            [12]10051 	clr	_have_cusd
                                  10052 ;	assignBit
      0040FE C2 11            [12]10053 	clr	_have_quote
                                  10054 ;	include/gsm_serial.c:645: if(sms_index<10){
      004100 90 00 BB         [24]10055 	mov	dptr,#_sms_index
      004103 E0               [24]10056 	movx	a,@dptr
      004104 FD               [12]10057 	mov	r5,a
      004105 BD 0A 00         [24]10058 	cjne	r5,#0x0a,01233$
      004108                      10059 01233$:
      004108 50 16            [24]10060 	jnc	00309$
                                  10061 ;	include/gsm_serial.c:646: gui_lenh_thanh_cong = 1;
                                  10062 ;	assignBit
      00410A D2 2E            [12]10063 	setb	_gui_lenh_thanh_cong
                                  10064 ;	include/gsm_serial.c:647: phone[sms_index+1] = 0;
      00410C 0D               [12]10065 	inc	r5
      00410D ED               [12]10066 	mov	a,r5
      00410E 33               [12]10067 	rlc	a
      00410F 95 E0            [12]10068 	subb	a,acc
      004111 FC               [12]10069 	mov	r4,a
      004112 ED               [12]10070 	mov	a,r5
      004113 24 0C            [12]10071 	add	a,#_phone
      004115 F5 82            [12]10072 	mov	dpl,a
      004117 EC               [12]10073 	mov	a,r4
      004118 34 00            [12]10074 	addc	a,#(_phone >> 8)
      00411A F5 83            [12]10075 	mov	dph,a
      00411C E4               [12]10076 	clr	a
      00411D F0               [24]10077 	movx	@dptr,a
      00411E 80 05            [24]10078 	sjmp	00310$
      004120                      10079 00309$:
                                  10080 ;	include/gsm_serial.c:649: else connect =0;
      004120 90 00 FB         [24]10081 	mov	dptr,#_connect
      004123 E4               [12]10082 	clr	a
      004124 F0               [24]10083 	movx	@dptr,a
      004125                      10084 00310$:
                                  10085 ;	include/gsm_serial.c:650: sms_index = 0;
      004125 90 00 BB         [24]10086 	mov	dptr,#_sms_index
      004128 E4               [12]10087 	clr	a
      004129 F0               [24]10088 	movx	@dptr,a
      00412A 02 43 0D         [24]10089 	ljmp	00345$
      00412D                      10090 00342$:
                                  10091 ;	include/gsm_serial.c:653: }else if((nha_mang == VINAPHONE && gsm_receive_buf[gsm_receive_pointer]==':' && gsm_receive_buf[(gsm_receive_pointer+12)%13] ==')') ||
      00412D 90 00 F9         [24]10092 	mov	dptr,#_nha_mang
      004130 E0               [24]10093 	movx	a,@dptr
      004131 FD               [12]10094 	mov	r5,a
      004132 BD 50 40         [24]10095 	cjne	r5,#0x50,00336$
      004135 BE 3A 3D         [24]10096 	cjne	r6,#0x3a,00336$
      004138 8F 13            [24]10097 	mov	ar3,r7
      00413A 7C 00            [12]10098 	mov	r4,#0x00
      00413C 74 0C            [12]10099 	mov	a,#0x0c
      00413E 2B               [12]10100 	add	a,r3
      00413F F5 82            [12]10101 	mov	dpl,a
      004141 E4               [12]10102 	clr	a
      004142 3C               [12]10103 	addc	a,r4
      004143 F5 83            [12]10104 	mov	dph,a
      004145 75 1B 0D         [24]10105 	mov	__modsint_PARM_2,#0x0d
                                  10106 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      004148 8C 1C            [24]10107 	mov	(__modsint_PARM_2 + 1),r4
      00414A C0 17            [24]10108 	push	ar7
      00414C C0 16            [24]10109 	push	ar6
      00414E C0 15            [24]10110 	push	ar5
      004150 75 D0 00         [24]10111 	mov	psw,#0x00
      004153 12 84 67         [24]10112 	lcall	__modsint
      004156 75 D0 10         [24]10113 	mov	psw,#0x10
      004159 AB 82            [24]10114 	mov	r3,dpl
      00415B AC 83            [24]10115 	mov	r4,dph
      00415D D0 15            [24]10116 	pop	ar5
      00415F D0 16            [24]10117 	pop	ar6
      004161 D0 17            [24]10118 	pop	ar7
      004163 EB               [12]10119 	mov	a,r3
      004164 24 02            [12]10120 	add	a,#_gsm_receive_buf
      004166 F5 82            [12]10121 	mov	dpl,a
      004168 EC               [12]10122 	mov	a,r4
      004169 34 01            [12]10123 	addc	a,#(_gsm_receive_buf >> 8)
      00416B F5 83            [12]10124 	mov	dph,a
      00416D E0               [24]10125 	movx	a,@dptr
      00416E FC               [12]10126 	mov	r4,a
      00416F BC 29 03         [24]10127 	cjne	r4,#0x29,01239$
      004172 02 41 F4         [24]10128 	ljmp	00329$
      004175                      10129 01239$:
      004175                      10130 00336$:
                                  10131 ;	include/gsm_serial.c:654: (nha_mang == VIETNAM   && gsm_receive_buf[gsm_receive_pointer]=='0' && gsm_receive_buf[(gsm_receive_pointer+12)%13] ==' ') ||
      004175 BD 6E 3F         [24]10132 	cjne	r5,#0x6e,00340$
      004178 BE 30 3C         [24]10133 	cjne	r6,#0x30,00340$
      00417B 8F 13            [24]10134 	mov	ar3,r7
      00417D 7C 00            [12]10135 	mov	r4,#0x00
      00417F 74 0C            [12]10136 	mov	a,#0x0c
      004181 2B               [12]10137 	add	a,r3
      004182 F5 82            [12]10138 	mov	dpl,a
      004184 E4               [12]10139 	clr	a
      004185 3C               [12]10140 	addc	a,r4
      004186 F5 83            [12]10141 	mov	dph,a
      004188 75 1B 0D         [24]10142 	mov	__modsint_PARM_2,#0x0d
                                  10143 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      00418B 8C 1C            [24]10144 	mov	(__modsint_PARM_2 + 1),r4
      00418D C0 17            [24]10145 	push	ar7
      00418F C0 16            [24]10146 	push	ar6
      004191 C0 15            [24]10147 	push	ar5
      004193 75 D0 00         [24]10148 	mov	psw,#0x00
      004196 12 84 67         [24]10149 	lcall	__modsint
      004199 75 D0 10         [24]10150 	mov	psw,#0x10
      00419C AB 82            [24]10151 	mov	r3,dpl
      00419E AC 83            [24]10152 	mov	r4,dph
      0041A0 D0 15            [24]10153 	pop	ar5
      0041A2 D0 16            [24]10154 	pop	ar6
      0041A4 D0 17            [24]10155 	pop	ar7
      0041A6 EB               [12]10156 	mov	a,r3
      0041A7 24 02            [12]10157 	add	a,#_gsm_receive_buf
      0041A9 F5 82            [12]10158 	mov	dpl,a
      0041AB EC               [12]10159 	mov	a,r4
      0041AC 34 01            [12]10160 	addc	a,#(_gsm_receive_buf >> 8)
      0041AE F5 83            [12]10161 	mov	dph,a
      0041B0 E0               [24]10162 	movx	a,@dptr
      0041B1 FC               [12]10163 	mov	r4,a
      0041B2 BC 20 02         [24]10164 	cjne	r4,#0x20,01244$
      0041B5 80 3D            [24]10165 	sjmp	00329$
      0041B7                      10166 01244$:
      0041B7                      10167 00340$:
                                  10168 ;	include/gsm_serial.c:655: ((nha_mang == MOBIFONE || nha_mang == VIETTEL)  && gsm_receive_buf[gsm_receive_pointer]=='4' && gsm_receive_buf[(gsm_receive_pointer+12)%13] =='8'))
      0041B7 BD 66 02         [24]10169 	cjne	r5,#0x66,01245$
      0041BA 80 03            [24]10170 	sjmp	00338$
      0041BC                      10171 01245$:
      0041BC BD 74 3A         [24]10172 	cjne	r5,#0x74,00330$
      0041BF                      10173 00338$:
      0041BF BE 34 37         [24]10174 	cjne	r6,#0x34,00330$
      0041C2 8F 15            [24]10175 	mov	ar5,r7
      0041C4 7E 00            [12]10176 	mov	r6,#0x00
      0041C6 74 0C            [12]10177 	mov	a,#0x0c
      0041C8 2D               [12]10178 	add	a,r5
      0041C9 F5 82            [12]10179 	mov	dpl,a
      0041CB E4               [12]10180 	clr	a
      0041CC 3E               [12]10181 	addc	a,r6
      0041CD F5 83            [12]10182 	mov	dph,a
      0041CF 75 1B 0D         [24]10183 	mov	__modsint_PARM_2,#0x0d
                                  10184 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0041D2 8E 1C            [24]10185 	mov	(__modsint_PARM_2 + 1),r6
      0041D4 C0 17            [24]10186 	push	ar7
      0041D6 75 D0 00         [24]10187 	mov	psw,#0x00
      0041D9 12 84 67         [24]10188 	lcall	__modsint
      0041DC 75 D0 10         [24]10189 	mov	psw,#0x10
      0041DF AD 82            [24]10190 	mov	r5,dpl
      0041E1 AE 83            [24]10191 	mov	r6,dph
      0041E3 D0 17            [24]10192 	pop	ar7
      0041E5 ED               [12]10193 	mov	a,r5
      0041E6 24 02            [12]10194 	add	a,#_gsm_receive_buf
      0041E8 F5 82            [12]10195 	mov	dpl,a
      0041EA EE               [12]10196 	mov	a,r6
      0041EB 34 01            [12]10197 	addc	a,#(_gsm_receive_buf >> 8)
      0041ED F5 83            [12]10198 	mov	dph,a
      0041EF E0               [24]10199 	movx	a,@dptr
      0041F0 FE               [12]10200 	mov	r6,a
      0041F1 BE 38 05         [24]10201 	cjne	r6,#0x38,00330$
      0041F4                      10202 00329$:
                                  10203 ;	include/gsm_serial.c:656: have_cusd = 1;
                                  10204 ;	assignBit
      0041F4 D2 0F            [12]10205 	setb	_have_cusd
      0041F6 02 43 0D         [24]10206 	ljmp	00345$
      0041F9                      10207 00330$:
                                  10208 ;	include/gsm_serial.c:657: else if((SBUF=='5' && gsm_receive_buf[(gsm_receive_pointer+12)%13] =='1' && gsm_receive_buf[(gsm_receive_pointer+11)%13] ==' ' && gsm_receive_buf[(gsm_receive_pointer+10)%13] ==',') ||
      0041F9 74 35            [12]10209 	mov	a,#0x35
      0041FB B5 99 02         [24]10210 	cjne	a,_SBUF,01252$
      0041FE 80 03            [24]10211 	sjmp	01253$
      004200                      10212 01252$:
      004200 02 42 A5         [24]10213 	ljmp	00328$
      004203                      10214 01253$:
      004203 8F 15            [24]10215 	mov	ar5,r7
      004205 7E 00            [12]10216 	mov	r6,#0x00
      004207 74 0C            [12]10217 	mov	a,#0x0c
      004209 2D               [12]10218 	add	a,r5
      00420A F5 82            [12]10219 	mov	dpl,a
      00420C E4               [12]10220 	clr	a
      00420D 3E               [12]10221 	addc	a,r6
      00420E F5 83            [12]10222 	mov	dph,a
      004210 75 1B 0D         [24]10223 	mov	__modsint_PARM_2,#0x0d
                                  10224 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      004213 8E 1C            [24]10225 	mov	(__modsint_PARM_2 + 1),r6
      004215 C0 17            [24]10226 	push	ar7
      004217 C0 16            [24]10227 	push	ar6
      004219 C0 15            [24]10228 	push	ar5
      00421B 75 D0 00         [24]10229 	mov	psw,#0x00
      00421E 12 84 67         [24]10230 	lcall	__modsint
      004221 75 D0 10         [24]10231 	mov	psw,#0x10
      004224 AB 82            [24]10232 	mov	r3,dpl
      004226 AC 83            [24]10233 	mov	r4,dph
      004228 D0 15            [24]10234 	pop	ar5
      00422A D0 16            [24]10235 	pop	ar6
      00422C D0 17            [24]10236 	pop	ar7
      00422E EB               [12]10237 	mov	a,r3
      00422F 24 02            [12]10238 	add	a,#_gsm_receive_buf
      004231 F5 82            [12]10239 	mov	dpl,a
      004233 EC               [12]10240 	mov	a,r4
      004234 34 01            [12]10241 	addc	a,#(_gsm_receive_buf >> 8)
      004236 F5 83            [12]10242 	mov	dph,a
      004238 E0               [24]10243 	movx	a,@dptr
      004239 FC               [12]10244 	mov	r4,a
      00423A BC 31 68         [24]10245 	cjne	r4,#0x31,00328$
      00423D 74 0B            [12]10246 	mov	a,#0x0b
      00423F 2D               [12]10247 	add	a,r5
      004240 F5 82            [12]10248 	mov	dpl,a
      004242 E4               [12]10249 	clr	a
      004243 3E               [12]10250 	addc	a,r6
      004244 F5 83            [12]10251 	mov	dph,a
      004246 75 1B 0D         [24]10252 	mov	__modsint_PARM_2,#0x0d
      004249 75 1C 00         [24]10253 	mov	(__modsint_PARM_2 + 1),#0x00
      00424C C0 17            [24]10254 	push	ar7
      00424E C0 16            [24]10255 	push	ar6
      004250 C0 15            [24]10256 	push	ar5
      004252 75 D0 00         [24]10257 	mov	psw,#0x00
      004255 12 84 67         [24]10258 	lcall	__modsint
      004258 75 D0 10         [24]10259 	mov	psw,#0x10
      00425B AB 82            [24]10260 	mov	r3,dpl
      00425D AC 83            [24]10261 	mov	r4,dph
      00425F D0 15            [24]10262 	pop	ar5
      004261 D0 16            [24]10263 	pop	ar6
      004263 D0 17            [24]10264 	pop	ar7
      004265 EB               [12]10265 	mov	a,r3
      004266 24 02            [12]10266 	add	a,#_gsm_receive_buf
      004268 F5 82            [12]10267 	mov	dpl,a
      00426A EC               [12]10268 	mov	a,r4
      00426B 34 01            [12]10269 	addc	a,#(_gsm_receive_buf >> 8)
      00426D F5 83            [12]10270 	mov	dph,a
      00426F E0               [24]10271 	movx	a,@dptr
      004270 FC               [12]10272 	mov	r4,a
      004271 BC 20 31         [24]10273 	cjne	r4,#0x20,00328$
      004274 74 0A            [12]10274 	mov	a,#0x0a
      004276 2D               [12]10275 	add	a,r5
      004277 F5 82            [12]10276 	mov	dpl,a
      004279 E4               [12]10277 	clr	a
      00427A 3E               [12]10278 	addc	a,r6
      00427B F5 83            [12]10279 	mov	dph,a
      00427D 75 1B 0D         [24]10280 	mov	__modsint_PARM_2,#0x0d
      004280 75 1C 00         [24]10281 	mov	(__modsint_PARM_2 + 1),#0x00
      004283 C0 17            [24]10282 	push	ar7
      004285 75 D0 00         [24]10283 	mov	psw,#0x00
      004288 12 84 67         [24]10284 	lcall	__modsint
      00428B 75 D0 10         [24]10285 	mov	psw,#0x10
      00428E AD 82            [24]10286 	mov	r5,dpl
      004290 AE 83            [24]10287 	mov	r6,dph
      004292 D0 17            [24]10288 	pop	ar7
      004294 ED               [12]10289 	mov	a,r5
      004295 24 02            [12]10290 	add	a,#_gsm_receive_buf
      004297 F5 82            [12]10291 	mov	dpl,a
      004299 EE               [12]10292 	mov	a,r6
      00429A 34 01            [12]10293 	addc	a,#(_gsm_receive_buf >> 8)
      00429C F5 83            [12]10294 	mov	dph,a
      00429E E0               [24]10295 	movx	a,@dptr
      00429F FE               [12]10296 	mov	r6,a
      0042A0 BE 2C 02         [24]10297 	cjne	r6,#0x2c,01258$
      0042A3 80 66            [24]10298 	sjmp	00321$
      0042A5                      10299 01258$:
      0042A5                      10300 00328$:
                                  10301 ;	include/gsm_serial.c:658: (SBUF=='R'  && gsm_receive_buf[(gsm_receive_pointer+12)%13] =='R' && gsm_receive_buf[(gsm_receive_pointer+11)%13] =='E'))
      0042A5 74 52            [12]10302 	mov	a,#0x52
      0042A7 B5 99 63         [24]10303 	cjne	a,_SBUF,00345$
      0042AA 8F 16            [24]10304 	mov	ar6,r7
      0042AC 7F 00            [12]10305 	mov	r7,#0x00
      0042AE 74 0C            [12]10306 	mov	a,#0x0c
      0042B0 2E               [12]10307 	add	a,r6
      0042B1 F5 82            [12]10308 	mov	dpl,a
      0042B3 E4               [12]10309 	clr	a
      0042B4 3F               [12]10310 	addc	a,r7
      0042B5 F5 83            [12]10311 	mov	dph,a
      0042B7 75 1B 0D         [24]10312 	mov	__modsint_PARM_2,#0x0d
                                  10313 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0042BA 8F 1C            [24]10314 	mov	(__modsint_PARM_2 + 1),r7
      0042BC C0 17            [24]10315 	push	ar7
      0042BE C0 16            [24]10316 	push	ar6
      0042C0 75 D0 00         [24]10317 	mov	psw,#0x00
      0042C3 12 84 67         [24]10318 	lcall	__modsint
      0042C6 75 D0 10         [24]10319 	mov	psw,#0x10
      0042C9 AC 82            [24]10320 	mov	r4,dpl
      0042CB AD 83            [24]10321 	mov	r5,dph
      0042CD D0 16            [24]10322 	pop	ar6
      0042CF D0 17            [24]10323 	pop	ar7
      0042D1 EC               [12]10324 	mov	a,r4
      0042D2 24 02            [12]10325 	add	a,#_gsm_receive_buf
      0042D4 F5 82            [12]10326 	mov	dpl,a
      0042D6 ED               [12]10327 	mov	a,r5
      0042D7 34 01            [12]10328 	addc	a,#(_gsm_receive_buf >> 8)
      0042D9 F5 83            [12]10329 	mov	dph,a
      0042DB E0               [24]10330 	movx	a,@dptr
      0042DC FD               [12]10331 	mov	r5,a
      0042DD BD 52 2D         [24]10332 	cjne	r5,#0x52,00345$
      0042E0 74 0B            [12]10333 	mov	a,#0x0b
      0042E2 2E               [12]10334 	add	a,r6
      0042E3 F5 82            [12]10335 	mov	dpl,a
      0042E5 E4               [12]10336 	clr	a
      0042E6 3F               [12]10337 	addc	a,r7
      0042E7 F5 83            [12]10338 	mov	dph,a
      0042E9 75 1B 0D         [24]10339 	mov	__modsint_PARM_2,#0x0d
      0042EC 75 1C 00         [24]10340 	mov	(__modsint_PARM_2 + 1),#0x00
      0042EF 75 D0 00         [24]10341 	mov	psw,#0x00
      0042F2 12 84 67         [24]10342 	lcall	__modsint
      0042F5 75 D0 10         [24]10343 	mov	psw,#0x10
      0042F8 AE 82            [24]10344 	mov	r6,dpl
      0042FA AF 83            [24]10345 	mov	r7,dph
      0042FC EE               [12]10346 	mov	a,r6
      0042FD 24 02            [12]10347 	add	a,#_gsm_receive_buf
      0042FF F5 82            [12]10348 	mov	dpl,a
      004301 EF               [12]10349 	mov	a,r7
      004302 34 01            [12]10350 	addc	a,#(_gsm_receive_buf >> 8)
      004304 F5 83            [12]10351 	mov	dph,a
      004306 E0               [24]10352 	movx	a,@dptr
      004307 FF               [12]10353 	mov	r7,a
      004308 BF 45 02         [24]10354 	cjne	r7,#0x45,00345$
      00430B                      10355 00321$:
                                  10356 ;	include/gsm_serial.c:659: error = 1;
                                  10357 ;	assignBit
      00430B D2 31            [12]10358 	setb	_error
                                  10359 ;	include/gsm_serial.c:662: }
      00430D                      10360 00345$:
                                  10361 ;	include/gsm_serial.c:663: if(++gsm_receive_pointer>12) gsm_receive_pointer = 0;
      00430D 90 01 00         [24]10362 	mov	dptr,#_gsm_receive_pointer
      004310 E0               [24]10363 	movx	a,@dptr
      004311 24 01            [12]10364 	add	a,#0x01
      004313 F0               [24]10365 	movx	@dptr,a
      004314 E0               [24]10366 	movx	a,@dptr
      004315 FF               [12]10367 	mov  r7,a
      004316 24 F3            [12]10368 	add	a,#0xff - 0x0c
      004318 50 05            [24]10369 	jnc	00347$
      00431A 90 01 00         [24]10370 	mov	dptr,#_gsm_receive_pointer
      00431D E4               [12]10371 	clr	a
      00431E F0               [24]10372 	movx	@dptr,a
      00431F                      10373 00347$:
                                  10374 ;	include/gsm_serial.c:664: gsm_RI = 0;
                                  10375 ;	assignBit
      00431F C2 98            [12]10376 	clr	_RI
      004321                      10377 00350$:
                                  10378 ;	include/gsm_serial.c:666: }
      004321 D0 D0            [24]10379 	pop	psw
      004323 D0 00            [24]10380 	pop	(0+0)
      004325 D0 01            [24]10381 	pop	(0+1)
      004327 D0 02            [24]10382 	pop	(0+2)
      004329 D0 03            [24]10383 	pop	(0+3)
      00432B D0 04            [24]10384 	pop	(0+4)
      00432D D0 05            [24]10385 	pop	(0+5)
      00432F D0 06            [24]10386 	pop	(0+6)
      004331 D0 07            [24]10387 	pop	(0+7)
      004333 D0 83            [24]10388 	pop	dph
      004335 D0 82            [24]10389 	pop	dpl
      004337 D0 F0            [24]10390 	pop	b
      004339 D0 E0            [24]10391 	pop	acc
      00433B D0 2A            [24]10392 	pop	bits
      00433D 32               [24]10393 	reti
                                  10394 ;------------------------------------------------------------
                                  10395 ;Allocation info for local variables in function 'xu_ly_tin_nhan'
                                  10396 ;------------------------------------------------------------
                                  10397 ;giodelta                  Allocated to registers r5 
                                  10398 ;phutdelta                 Allocated with name '_xu_ly_tin_nhan_phutdelta_65537_185'
                                  10399 ;kim_index                 Allocated with name '_xu_ly_tin_nhan_kim_index_65537_185'
                                  10400 ;nam                       Allocated to registers r7 
                                  10401 ;check                     Allocated to registers r6 r7 
                                  10402 ;sloc0                     Allocated with name '_xu_ly_tin_nhan_sloc0_1_0'
                                  10403 ;sloc1                     Allocated with name '_xu_ly_tin_nhan_sloc1_1_0'
                                  10404 ;sloc2                     Allocated with name '_xu_ly_tin_nhan_sloc2_1_0'
                                  10405 ;sloc3                     Allocated with name '_xu_ly_tin_nhan_sloc3_1_0'
                                  10406 ;sloc4                     Allocated with name '_xu_ly_tin_nhan_sloc4_1_0'
                                  10407 ;sloc5                     Allocated with name '_xu_ly_tin_nhan_sloc5_1_0'
                                  10408 ;sloc6                     Allocated with name '_xu_ly_tin_nhan_sloc6_1_0'
                                  10409 ;sloc7                     Allocated with name '_xu_ly_tin_nhan_sloc7_1_0'
                                  10410 ;i                         Allocated with name '_xu_ly_tin_nhan_i_65537_185'
                                  10411 ;------------------------------------------------------------
                                  10412 ;	include/xu_ly_tin_nhan.c:1: void xu_ly_tin_nhan(){
                                  10413 ;	-----------------------------------------
                                  10414 ;	 function xu_ly_tin_nhan
                                  10415 ;	-----------------------------------------
      00433E                      10416 _xu_ly_tin_nhan:
                           000007 10417 	ar7 = 0x07
                           000006 10418 	ar6 = 0x06
                           000005 10419 	ar5 = 0x05
                           000004 10420 	ar4 = 0x04
                           000003 10421 	ar3 = 0x03
                           000002 10422 	ar2 = 0x02
                           000001 10423 	ar1 = 0x01
                           000000 10424 	ar0 = 0x00
                                  10425 ;	include/xu_ly_tin_nhan.c:3: lenh_khong_hop_le = 0;
                                  10426 ;	assignBit
      00433E C2 10            [12]10427 	clr	_lenh_khong_hop_le
                                  10428 ;	include/xu_ly_tin_nhan.c:6: while(lenh_sms[i++])WATCHDOG;
      004340 7F 00            [12]10429 	mov	r7,#0x00
      004342                      10430 00101$:
      004342 EF               [12]10431 	mov	a,r7
      004343 24 17            [12]10432 	add	a,#_lenh_sms
      004345 FD               [12]10433 	mov	r5,a
      004346 E4               [12]10434 	clr	a
      004347 34 00            [12]10435 	addc	a,#(_lenh_sms >> 8)
      004349 FE               [12]10436 	mov	r6,a
      00434A 0F               [12]10437 	inc	r7
      00434B 8D 82            [24]10438 	mov	dpl,r5
      00434D 8E 83            [24]10439 	mov	dph,r6
      00434F E0               [24]10440 	movx	a,@dptr
      004350 60 05            [24]10441 	jz	00505$
      004352 43 C1 10         [24]10442 	orl	_WDT_CONTR,#0x10
                                  10443 ;	include/xu_ly_tin_nhan.c:7: while(i<160)lenh_sms[i++] = 0;
      004355 80 EB            [24]10444 	sjmp	00101$
      004357                      10445 00505$:
      004357                      10446 00104$:
      004357 BF A0 00         [24]10447 	cjne	r7,#0xa0,01673$
      00435A                      10448 01673$:
      00435A 50 0F            [24]10449 	jnc	00106$
      00435C EF               [12]10450 	mov	a,r7
      00435D 24 17            [12]10451 	add	a,#_lenh_sms
      00435F F5 82            [12]10452 	mov	dpl,a
      004361 E4               [12]10453 	clr	a
      004362 34 00            [12]10454 	addc	a,#(_lenh_sms >> 8)
      004364 F5 83            [12]10455 	mov	dph,a
      004366 0F               [12]10456 	inc	r7
      004367 E4               [12]10457 	clr	a
      004368 F0               [24]10458 	movx	@dptr,a
      004369 80 EC            [24]10459 	sjmp	00104$
      00436B                      10460 00106$:
                                  10461 ;	include/xu_ly_tin_nhan.c:9: if((lenh_sms[0]=='?'||lenh_sms[1]=='?') && !phone_chinh_so_sanh_that_bai)gui_huong_dan();
      00436B 90 00 17         [24]10462 	mov	dptr,#_lenh_sms
      00436E E0               [24]10463 	movx	a,@dptr
      00436F FF               [12]10464 	mov	r7,a
      004370 BF 3F 02         [24]10465 	cjne	r7,#0x3f,01675$
      004373 80 08            [24]10466 	sjmp	00487$
      004375                      10467 01675$:
      004375 90 00 18         [24]10468 	mov	dptr,#(_lenh_sms + 0x0001)
      004378 E0               [24]10469 	movx	a,@dptr
      004379 FF               [12]10470 	mov	r7,a
      00437A BF 3F 06         [24]10471 	cjne	r7,#0x3f,00484$
      00437D                      10472 00487$:
      00437D 20 08 03         [24]10473 	jb	_phone_chinh_so_sanh_that_bai,00484$
      004380 02 24 B3         [24]10474 	ljmp	_gui_huong_dan
      004383                      10475 00484$:
                                  10476 ;	include/xu_ly_tin_nhan.c:11: switch(lenh_sms[1]){
      004383 90 00 18         [24]10477 	mov	dptr,#(_lenh_sms + 0x0001)
      004386 E0               [24]10478 	movx	a,@dptr
      004387 FF               [12]10479 	mov	r7,a
      004388 BF 43 03         [24]10480 	cjne	r7,#0x43,01679$
      00438B 02 4A D9         [24]10481 	ljmp	00230$
      00438E                      10482 01679$:
      00438E BF 45 03         [24]10483 	cjne	r7,#0x45,01680$
      004391 02 4C 73         [24]10484 	ljmp	00288$
      004394                      10485 01680$:
      004394 BF 48 02         [24]10486 	cjne	r7,#0x48,01681$
      004397 80 44            [24]10487 	sjmp	00108$
      004399                      10488 01681$:
      004399 BF 49 03         [24]10489 	cjne	r7,#0x49,01682$
      00439C 02 53 39         [24]10490 	ljmp	00377$
      00439F                      10491 01682$:
      00439F BF 50 03         [24]10492 	cjne	r7,#0x50,01683$
      0043A2 02 50 07         [24]10493 	ljmp	00320$
      0043A5                      10494 01683$:
      0043A5 BF 53 03         [24]10495 	cjne	r7,#0x53,01684$
      0043A8 02 4B 91         [24]10496 	ljmp	00259$
      0043AB                      10497 01684$:
      0043AB BF 54 03         [24]10498 	cjne	r7,#0x54,01685$
      0043AE 02 53 AA         [24]10499 	ljmp	00392$
      0043B1                      10500 01685$:
      0043B1 BF 63 03         [24]10501 	cjne	r7,#0x63,01686$
      0043B4 02 4A D9         [24]10502 	ljmp	00230$
      0043B7                      10503 01686$:
      0043B7 BF 65 03         [24]10504 	cjne	r7,#0x65,01687$
      0043BA 02 4C 73         [24]10505 	ljmp	00288$
      0043BD                      10506 01687$:
      0043BD BF 68 02         [24]10507 	cjne	r7,#0x68,01688$
      0043C0 80 1B            [24]10508 	sjmp	00108$
      0043C2                      10509 01688$:
      0043C2 BF 69 03         [24]10510 	cjne	r7,#0x69,01689$
      0043C5 02 53 39         [24]10511 	ljmp	00377$
      0043C8                      10512 01689$:
      0043C8 BF 70 03         [24]10513 	cjne	r7,#0x70,01690$
      0043CB 02 50 07         [24]10514 	ljmp	00320$
      0043CE                      10515 01690$:
      0043CE BF 73 03         [24]10516 	cjne	r7,#0x73,01691$
      0043D1 02 4B 91         [24]10517 	ljmp	00259$
      0043D4                      10518 01691$:
      0043D4 BF 74 03         [24]10519 	cjne	r7,#0x74,01692$
      0043D7 02 53 AA         [24]10520 	ljmp	00392$
      0043DA                      10521 01692$:
      0043DA 02 56 D7         [24]10522 	ljmp	00475$
                                  10523 ;	include/xu_ly_tin_nhan.c:13: case 'H':
      0043DD                      10524 00108$:
                                  10525 ;	include/xu_ly_tin_nhan.c:14: if(lenh_sms[3]>48 && lenh_sms[3]<53 && !lenh_sms[6]){
      0043DD 90 00 1A         [24]10526 	mov	dptr,#(_lenh_sms + 0x0003)
      0043E0 E0               [24]10527 	movx	a,@dptr
      0043E1 FF               [12]10528 	mov	r7,a
      0043E2 C3               [12]10529 	clr	c
      0043E3 74 30            [12]10530 	mov	a,#0x30
      0043E5 9F               [12]10531 	subb	a,r7
      0043E6 E4               [12]10532 	clr	a
      0043E7 33               [12]10533 	rlc	a
      0043E8 FE               [12]10534 	mov	r6,a
      0043E9 7D 00            [12]10535 	mov	r5,#0x00
      0043EB 70 03            [24]10536 	jnz	01693$
      0043ED 02 44 96         [24]10537 	ljmp	00216$
      0043F0                      10538 01693$:
      0043F0 BF 35 00         [24]10539 	cjne	r7,#0x35,01694$
      0043F3                      10540 01694$:
      0043F3 40 03            [24]10541 	jc	01695$
      0043F5 02 44 96         [24]10542 	ljmp	00216$
      0043F8                      10543 01695$:
      0043F8 90 00 1D         [24]10544 	mov	dptr,#(_lenh_sms + 0x0006)
      0043FB E0               [24]10545 	movx	a,@dptr
      0043FC 60 03            [24]10546 	jz	01696$
      0043FE 02 44 96         [24]10547 	ljmp	00216$
      004401                      10548 01696$:
                                  10549 ;	include/xu_ly_tin_nhan.c:15: if(lenh_sms[4] =='D' || lenh_sms[4] =='d') phutdelta = 4;
      004401 90 00 1B         [24]10550 	mov	dptr,#(_lenh_sms + 0x0004)
      004404 E0               [24]10551 	movx	a,@dptr
      004405 FE               [12]10552 	mov	r6,a
      004406 BE 44 02         [24]10553 	cjne	r6,#0x44,01697$
      004409 80 03            [24]10554 	sjmp	00112$
      00440B                      10555 01697$:
      00440B BE 64 04         [24]10556 	cjne	r6,#0x64,00113$
      00440E                      10557 00112$:
      00440E 7D 04            [12]10558 	mov	r5,#0x04
      004410 80 0C            [24]10559 	sjmp	00114$
      004412                      10560 00113$:
                                  10561 ;	include/xu_ly_tin_nhan.c:16: else if(lenh_sms[4] != 'S' && lenh_sms[4] !='s' ) lenh_khong_hop_le = 1;
      004412 BE 53 02         [24]10562 	cjne	r6,#0x53,01700$
      004415 80 07            [24]10563 	sjmp	00114$
      004417                      10564 01700$:
      004417 BE 73 02         [24]10565 	cjne	r6,#0x73,01701$
      00441A 80 02            [24]10566 	sjmp	00114$
      00441C                      10567 01701$:
                                  10568 ;	assignBit
      00441C D2 10            [12]10569 	setb	_lenh_khong_hop_le
      00441E                      10570 00114$:
                                  10571 ;	include/xu_ly_tin_nhan.c:17: if(!lenh_khong_hop_le && (lenh_sms[5] == 'A' || lenh_sms[5] == 'a' || lenh_sms[3]>50)) phutdelta += 8;
      00441E 20 10 1C         [24]10572 	jb	_lenh_khong_hop_le,00121$
      004421 90 00 1C         [24]10573 	mov	dptr,#(_lenh_sms + 0x0005)
      004424 E0               [24]10574 	movx	a,@dptr
      004425 FE               [12]10575 	mov	r6,a
      004426 BE 41 02         [24]10576 	cjne	r6,#0x41,01703$
      004429 80 0A            [24]10577 	sjmp	00120$
      00442B                      10578 01703$:
      00442B BE 61 02         [24]10579 	cjne	r6,#0x61,01704$
      00442E 80 05            [24]10580 	sjmp	00120$
      004430                      10581 01704$:
      004430 EF               [12]10582 	mov	a,r7
      004431 24 CD            [12]10583 	add	a,#0xff - 0x32
      004433 50 08            [24]10584 	jnc	00121$
      004435                      10585 00120$:
      004435 8D 06            [24]10586 	mov	ar6,r5
      004437 74 08            [12]10587 	mov	a,#0x08
      004439 2E               [12]10588 	add	a,r6
      00443A FD               [12]10589 	mov	r5,a
      00443B 80 17            [24]10590 	sjmp	00122$
      00443D                      10591 00121$:
                                  10592 ;	include/xu_ly_tin_nhan.c:18: else if(!lenh_khong_hop_le && lenh_sms[5] != 'S' || lenh_sms[5] != 's') lenh_khong_hop_le = 1;
      00443D 20 10 08         [24]10593 	jb	_lenh_khong_hop_le,00119$
      004440 90 00 1C         [24]10594 	mov	dptr,#(_lenh_sms + 0x0005)
      004443 E0               [24]10595 	movx	a,@dptr
      004444 FE               [12]10596 	mov	r6,a
      004445 BE 53 0A         [24]10597 	cjne	r6,#0x53,00116$
      004448                      10598 00119$:
      004448 90 00 1C         [24]10599 	mov	dptr,#(_lenh_sms + 0x0005)
      00444B E0               [24]10600 	movx	a,@dptr
      00444C FE               [12]10601 	mov	r6,a
      00444D BE 73 02         [24]10602 	cjne	r6,#0x73,01709$
      004450 80 02            [24]10603 	sjmp	00122$
      004452                      10604 01709$:
      004452                      10605 00116$:
                                  10606 ;	assignBit
      004452 D2 10            [12]10607 	setb	_lenh_khong_hop_le
      004454                      10608 00122$:
                                  10609 ;	include/xu_ly_tin_nhan.c:19: phutdelta += lenh_sms[3]-48;
      004454 8F 06            [24]10610 	mov	ar6,r7
      004456 EE               [12]10611 	mov	a,r6
      004457 24 D0            [12]10612 	add	a,#0xd0
      004459 2D               [12]10613 	add	a,r5
      00445A FE               [12]10614 	mov	r6,a
                                  10615 ;	include/xu_ly_tin_nhan.c:20: IAP_docxoasector1();
      00445B C0 06            [24]10616 	push	ar6
      00445D 12 03 34         [24]10617 	lcall	_IAP_docxoasector1
      004460 D0 06            [24]10618 	pop	ar6
                                  10619 ;	include/xu_ly_tin_nhan.c:21: eeprom_buf[MOTOR_EEPROM] = phutdelta;
      004462 90 00 BD         [24]10620 	mov	dptr,#_eeprom_buf
      004465 EE               [12]10621 	mov	a,r6
      004466 F0               [24]10622 	movx	@dptr,a
                                  10623 ;	include/xu_ly_tin_nhan.c:22: IAP_ghisector1();
      004467 12 03 6F         [24]10624 	lcall	_IAP_ghisector1
                                  10625 ;	include/xu_ly_tin_nhan.c:23: baocaosms(CHINH,"\rthay doi may va reset bo dieu khien");
                                  10626 ;	assignBit
      00446A D2 46            [12]10627 	setb	_baocaosms_PARM_1
      00446C 90 8C 43         [24]10628 	mov	dptr,#___str_81
      00446F 75 F0 80         [24]10629 	mov	b,#0x80
      004472 12 20 30         [24]10630 	lcall	_baocaosms
                                  10631 ;	include/xu_ly_tin_nhan.c:24: EA=0;
                                  10632 ;	assignBit
      004475 C2 AF            [12]10633 	clr	_EA
                                  10634 ;	include/xu_ly_tin_nhan.c:25: IAP_xoasector(SECTOR2);
      004477 90 02 00         [24]10635 	mov	dptr,#0x0200
      00447A 12 03 1C         [24]10636 	lcall	_IAP_xoasector
                                  10637 ;	include/xu_ly_tin_nhan.c:26: gsm_pw = 0;
                                  10638 ;	assignBit
      00447D C2 A0            [12]10639 	clr	_P20
                                  10640 ;	include/xu_ly_tin_nhan.c:27: IAP_ghibyte(NORRESET_EEPROM,0);
      00447F 75 18 00         [24]10641 	mov	_IAP_ghibyte_PARM_2,#0x00
      004482 90 00 05         [24]10642 	mov	dptr,#0x0005
      004485 12 03 01         [24]10643 	lcall	_IAP_ghibyte
                                  10644 ;	include/xu_ly_tin_nhan.c:28: RingRelay = 1;
                                  10645 ;	assignBit
      004488 D2 A3            [12]10646 	setb	_P23
                                  10647 ;	include/xu_ly_tin_nhan.c:29: delay_ms(4000);
      00448A 90 0F A0         [24]10648 	mov	dptr,#0x0fa0
      00448D 12 04 BB         [24]10649 	lcall	_delay_ms
                                  10650 ;	include/xu_ly_tin_nhan.c:30: IAP_CONTR = 0x60;
      004490 75 C7 60         [24]10651 	mov	_IAP_CONTR,#0x60
      004493 02 4A 76         [24]10652 	ljmp	00217$
      004496                      10653 00216$:
                                  10654 ;	include/xu_ly_tin_nhan.c:32: else if(lenh_sms[3]=='+'){
      004496 BF 2B 02         [24]10655 	cjne	r7,#0x2b,01710$
      004499 80 03            [24]10656 	sjmp	01711$
      00449B                      10657 01710$:
      00449B 02 46 53         [24]10658 	ljmp	00213$
      00449E                      10659 01711$:
                                  10660 ;	include/xu_ly_tin_nhan.c:33: if (lenh_sms[4]>47 && lenh_sms[4]<51 && lenh_sms[5]>47 && lenh_sms[5]<58 &&
      00449E 90 00 1B         [24]10661 	mov	dptr,#(_lenh_sms + 0x0004)
      0044A1 E0               [24]10662 	movx	a,@dptr
      0044A2 FE               [12]10663 	mov	r6,a
      0044A3 C3               [12]10664 	clr	c
      0044A4 74 2F            [12]10665 	mov	a,#0x2f
      0044A6 9E               [12]10666 	subb	a,r6
      0044A7 E4               [12]10667 	clr	a
      0044A8 33               [12]10668 	rlc	a
      0044A9 FD               [12]10669 	mov	r5,a
      0044AA 70 03            [24]10670 	jnz	01712$
      0044AC 02 45 DE         [24]10671 	ljmp	00133$
      0044AF                      10672 01712$:
      0044AF BE 33 00         [24]10673 	cjne	r6,#0x33,01713$
      0044B2                      10674 01713$:
      0044B2 40 03            [24]10675 	jc	01714$
      0044B4 02 45 DE         [24]10676 	ljmp	00133$
      0044B7                      10677 01714$:
      0044B7 90 00 1C         [24]10678 	mov	dptr,#(_lenh_sms + 0x0005)
      0044BA E0               [24]10679 	movx	a,@dptr
      0044BB FC               [12]10680 	mov  r4,a
      0044BC 24 D0            [12]10681 	add	a,#0xff - 0x2f
      0044BE 40 03            [24]10682 	jc	01715$
      0044C0 02 45 DE         [24]10683 	ljmp	00133$
      0044C3                      10684 01715$:
      0044C3 BC 3A 00         [24]10685 	cjne	r4,#0x3a,01716$
      0044C6                      10686 01716$:
      0044C6 40 03            [24]10687 	jc	01717$
      0044C8 02 45 DE         [24]10688 	ljmp	00133$
      0044CB                      10689 01717$:
                                  10690 ;	include/xu_ly_tin_nhan.c:34: lenh_sms[6]>47 && lenh_sms[6]<54 && lenh_sms[7]>47 && lenh_sms[7]<58 &&
      0044CB 90 00 1D         [24]10691 	mov	dptr,#(_lenh_sms + 0x0006)
      0044CE E0               [24]10692 	movx	a,@dptr
      0044CF FB               [12]10693 	mov  r3,a
      0044D0 24 D0            [12]10694 	add	a,#0xff - 0x2f
      0044D2 40 03            [24]10695 	jc	01718$
      0044D4 02 45 DE         [24]10696 	ljmp	00133$
      0044D7                      10697 01718$:
      0044D7 BB 36 00         [24]10698 	cjne	r3,#0x36,01719$
      0044DA                      10699 01719$:
      0044DA 40 03            [24]10700 	jc	01720$
      0044DC 02 45 DE         [24]10701 	ljmp	00133$
      0044DF                      10702 01720$:
      0044DF 90 00 1E         [24]10703 	mov	dptr,#(_lenh_sms + 0x0007)
      0044E2 E0               [24]10704 	movx	a,@dptr
      0044E3 F5 6D            [12]10705 	mov  _xu_ly_tin_nhan_sloc4_1_0,a
      0044E5 24 D0            [12]10706 	add	a,#0xff - 0x2f
      0044E7 40 03            [24]10707 	jc	01721$
      0044E9 02 45 DE         [24]10708 	ljmp	00133$
      0044EC                      10709 01721$:
      0044EC 74 C6            [12]10710 	mov	a,#0x100 - 0x3a
      0044EE 25 6D            [12]10711 	add	a,_xu_ly_tin_nhan_sloc4_1_0
      0044F0 50 03            [24]10712 	jnc	01722$
      0044F2 02 45 DE         [24]10713 	ljmp	00133$
      0044F5                      10714 01722$:
                                  10715 ;	include/xu_ly_tin_nhan.c:35: lenh_sms[9]>47 && lenh_sms[9]<51 && lenh_sms[10]>47 && lenh_sms[10]<58 &&
      0044F5 90 00 20         [24]10716 	mov	dptr,#(_lenh_sms + 0x0009)
      0044F8 E0               [24]10717 	movx	a,@dptr
      0044F9 F5 69            [12]10718 	mov  _xu_ly_tin_nhan_sloc0_1_0,a
      0044FB 24 D0            [12]10719 	add	a,#0xff - 0x2f
      0044FD 40 03            [24]10720 	jc	01723$
      0044FF 02 45 DE         [24]10721 	ljmp	00133$
      004502                      10722 01723$:
      004502 74 CD            [12]10723 	mov	a,#0x100 - 0x33
      004504 25 69            [12]10724 	add	a,_xu_ly_tin_nhan_sloc0_1_0
      004506 50 03            [24]10725 	jnc	01724$
      004508 02 45 DE         [24]10726 	ljmp	00133$
      00450B                      10727 01724$:
      00450B 90 00 21         [24]10728 	mov	dptr,#(_lenh_sms + 0x000a)
      00450E E0               [24]10729 	movx	a,@dptr
      00450F F5 6A            [12]10730 	mov  _xu_ly_tin_nhan_sloc1_1_0,a
      004511 24 D0            [12]10731 	add	a,#0xff - 0x2f
      004513 40 03            [24]10732 	jc	01725$
      004515 02 45 DE         [24]10733 	ljmp	00133$
      004518                      10734 01725$:
      004518 74 C6            [12]10735 	mov	a,#0x100 - 0x3a
      00451A 25 6A            [12]10736 	add	a,_xu_ly_tin_nhan_sloc1_1_0
      00451C 50 03            [24]10737 	jnc	01726$
      00451E 02 45 DE         [24]10738 	ljmp	00133$
      004521                      10739 01726$:
                                  10740 ;	include/xu_ly_tin_nhan.c:36: lenh_sms[11]>47 && lenh_sms[11]<54 && lenh_sms[12]>47 && lenh_sms[12]<58){
      004521 90 00 22         [24]10741 	mov	dptr,#(_lenh_sms + 0x000b)
      004524 E0               [24]10742 	movx	a,@dptr
      004525 F5 6B            [12]10743 	mov  _xu_ly_tin_nhan_sloc2_1_0,a
      004527 24 D0            [12]10744 	add	a,#0xff - 0x2f
      004529 40 03            [24]10745 	jc	01727$
      00452B 02 45 DE         [24]10746 	ljmp	00133$
      00452E                      10747 01727$:
      00452E 74 CA            [12]10748 	mov	a,#0x100 - 0x36
      004530 25 6B            [12]10749 	add	a,_xu_ly_tin_nhan_sloc2_1_0
      004532 50 03            [24]10750 	jnc	01728$
      004534 02 45 DE         [24]10751 	ljmp	00133$
      004537                      10752 01728$:
      004537 90 00 23         [24]10753 	mov	dptr,#(_lenh_sms + 0x000c)
      00453A E0               [24]10754 	movx	a,@dptr
      00453B F5 6C            [12]10755 	mov  _xu_ly_tin_nhan_sloc3_1_0,a
      00453D 24 D0            [12]10756 	add	a,#0xff - 0x2f
      00453F 40 03            [24]10757 	jc	01729$
      004541 02 45 DE         [24]10758 	ljmp	00133$
      004544                      10759 01729$:
      004544 74 C6            [12]10760 	mov	a,#0x100 - 0x3a
      004546 25 6C            [12]10761 	add	a,_xu_ly_tin_nhan_sloc3_1_0
      004548 50 03            [24]10762 	jnc	01730$
      00454A 02 45 DE         [24]10763 	ljmp	00133$
      00454D                      10764 01730$:
                                  10765 ;	include/xu_ly_tin_nhan.c:37: giodelta = 2+lenh_sms[4]-lenh_sms[9];
      00454D 8E 02            [24]10766 	mov	ar2,r6
      00454F 74 02            [12]10767 	mov	a,#0x02
      004551 2A               [12]10768 	add	a,r2
      004552 F5 6E            [12]10769 	mov	_xu_ly_tin_nhan_sloc5_1_0,a
      004554 AA 69            [24]10770 	mov	r2,_xu_ly_tin_nhan_sloc0_1_0
      004556 C3               [12]10771 	clr	c
      004557 9A               [12]10772 	subb	a,r2
                                  10773 ;	include/xu_ly_tin_nhan.c:38: giodelta = giodelta*10 + 4 + hour + lenh_sms[5]-lenh_sms[10];
      004558 75 F0 0A         [24]10774 	mov	b,#0x0a
      00455B A4               [48]10775 	mul	ab
      00455C 24 04            [12]10776 	add	a,#0x04
      00455E F5 6E            [12]10777 	mov	_xu_ly_tin_nhan_sloc5_1_0,a
      004560 25 4B            [12]10778 	add	a,_hour
      004562 2C               [12]10779 	add	a,r4
      004563 AC 6A            [24]10780 	mov	r4,_xu_ly_tin_nhan_sloc1_1_0
      004565 C3               [12]10781 	clr	c
      004566 9C               [12]10782 	subb	a,r4
      004567 FA               [12]10783 	mov	r2,a
                                  10784 ;	include/xu_ly_tin_nhan.c:39: phutdelta = 6+lenh_sms[11]-lenh_sms[6];
      004568 AC 6B            [24]10785 	mov	r4,_xu_ly_tin_nhan_sloc2_1_0
      00456A 74 06            [12]10786 	mov	a,#0x06
      00456C 2C               [12]10787 	add	a,r4
      00456D C3               [12]10788 	clr	c
      00456E 9B               [12]10789 	subb	a,r3
                                  10790 ;	include/xu_ly_tin_nhan.c:40: phutdelta = phutdelta*10 + lenh_sms[12]-lenh_sms[7];
      00456F 75 F0 0A         [24]10791 	mov	b,#0x0a
      004572 A4               [48]10792 	mul	ab
      004573 25 6C            [12]10793 	add	a,_xu_ly_tin_nhan_sloc3_1_0
      004575 AB 6D            [24]10794 	mov	r3,_xu_ly_tin_nhan_sloc4_1_0
      004577 C3               [12]10795 	clr	c
      004578 9B               [12]10796 	subb	a,r3
      004579 F5 67            [12]10797 	mov	_xu_ly_tin_nhan_phutdelta_65537_185,a
                                  10798 ;	include/xu_ly_tin_nhan.c:41: gio[0]  = (giodelta - (minute+60<phutdelta))%12;
      00457B 8A 6F            [24]10799 	mov	_xu_ly_tin_nhan_sloc6_1_0,r2
      00457D 75 70 00         [24]10800 	mov	(_xu_ly_tin_nhan_sloc6_1_0 + 1),#0x00
      004580 AB 4A            [24]10801 	mov	r3,_minute
      004582 7C 00            [12]10802 	mov	r4,#0x00
      004584 74 3C            [12]10803 	mov	a,#0x3c
      004586 2B               [12]10804 	add	a,r3
      004587 F5 71            [12]10805 	mov	_xu_ly_tin_nhan_sloc7_1_0,a
      004589 E4               [12]10806 	clr	a
      00458A 3C               [12]10807 	addc	a,r4
      00458B F5 72            [12]10808 	mov	(_xu_ly_tin_nhan_sloc7_1_0 + 1),a
      00458D AA 67            [24]10809 	mov	r2,_xu_ly_tin_nhan_phutdelta_65537_185
      00458F 7C 00            [12]10810 	mov	r4,#0x00
      004591 C3               [12]10811 	clr	c
      004592 E5 71            [12]10812 	mov	a,_xu_ly_tin_nhan_sloc7_1_0
      004594 9A               [12]10813 	subb	a,r2
      004595 E5 72            [12]10814 	mov	a,(_xu_ly_tin_nhan_sloc7_1_0 + 1)
      004597 64 80            [12]10815 	xrl	a,#0x80
      004599 8C F0            [24]10816 	mov	b,r4
      00459B 63 F0 80         [24]10817 	xrl	b,#0x80
      00459E 95 F0            [12]10818 	subb	a,b
      0045A0 E4               [12]10819 	clr	a
      0045A1 33               [12]10820 	rlc	a
      0045A2 FA               [12]10821 	mov	r2,a
      0045A3 7C 00            [12]10822 	mov	r4,#0x00
      0045A5 E5 6F            [12]10823 	mov	a,_xu_ly_tin_nhan_sloc6_1_0
      0045A7 C3               [12]10824 	clr	c
      0045A8 9A               [12]10825 	subb	a,r2
      0045A9 F5 82            [12]10826 	mov	dpl,a
      0045AB E5 70            [12]10827 	mov	a,(_xu_ly_tin_nhan_sloc6_1_0 + 1)
      0045AD 9C               [12]10828 	subb	a,r4
      0045AE F5 83            [12]10829 	mov	dph,a
      0045B0 75 1B 0C         [24]10830 	mov	__modsint_PARM_2,#0x0c
                                  10831 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0045B3 8C 1C            [24]10832 	mov	(__modsint_PARM_2 + 1),r4
      0045B5 12 84 67         [24]10833 	lcall	__modsint
      0045B8 AB 82            [24]10834 	mov	r3,dpl
      0045BA 8B 4D            [24]10835 	mov	_gio,r3
                                  10836 ;	include/xu_ly_tin_nhan.c:42: phutdelta = minute+120-phutdelta;
      0045BC AC 4A            [24]10837 	mov	r4,_minute
      0045BE 74 78            [12]10838 	mov	a,#0x78
      0045C0 2C               [12]10839 	add	a,r4
      0045C1 AB 67            [24]10840 	mov	r3,_xu_ly_tin_nhan_phutdelta_65537_185
      0045C3 C3               [12]10841 	clr	c
      0045C4 9B               [12]10842 	subb	a,r3
      0045C5 FC               [12]10843 	mov	r4,a
                                  10844 ;	include/xu_ly_tin_nhan.c:43: phut[0] = phutdelta%60;
      0045C6 7B 00            [12]10845 	mov	r3,#0x00
      0045C8 75 1B 3C         [24]10846 	mov	__modsint_PARM_2,#0x3c
                                  10847 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0045CB 8B 1C            [24]10848 	mov	(__modsint_PARM_2 + 1),r3
      0045CD 8C 82            [24]10849 	mov	dpl,r4
      0045CF 8B 83            [24]10850 	mov	dph,r3
      0045D1 12 84 67         [24]10851 	lcall	__modsint
      0045D4 AB 82            [24]10852 	mov	r3,dpl
      0045D6 8B 51            [24]10853 	mov	_phut,r3
                                  10854 ;	include/xu_ly_tin_nhan.c:44: luu_gio_kim();
      0045D8 12 0F 81         [24]10855 	lcall	_luu_gio_kim
      0045DB 02 4A 76         [24]10856 	ljmp	00217$
      0045DE                      10857 00133$:
                                  10858 ;	include/xu_ly_tin_nhan.c:45: }else if(lenh_sms[4]>47 && lenh_sms[4]<54 && lenh_sms[5]>47 && lenh_sms[5]<58){
      0045DE ED               [12]10859 	mov	a,r5
      0045DF 60 6D            [24]10860 	jz	00127$
      0045E1 BE 36 00         [24]10861 	cjne	r6,#0x36,01732$
      0045E4                      10862 01732$:
      0045E4 50 68            [24]10863 	jnc	00127$
      0045E6 90 00 1C         [24]10864 	mov	dptr,#(_lenh_sms + 0x0005)
      0045E9 E0               [24]10865 	movx	a,@dptr
      0045EA FD               [12]10866 	mov  r5,a
      0045EB 24 D0            [12]10867 	add	a,#0xff - 0x2f
      0045ED 50 5F            [24]10868 	jnc	00127$
      0045EF BD 3A 00         [24]10869 	cjne	r5,#0x3a,01735$
      0045F2                      10870 01735$:
      0045F2 50 5A            [24]10871 	jnc	00127$
                                  10872 ;	include/xu_ly_tin_nhan.c:46: phutdelta = (lenh_sms[4] - '0')*10 +lenh_sms[5]-'0';
      0045F4 EE               [12]10873 	mov	a,r6
      0045F5 24 D0            [12]10874 	add	a,#0xd0
      0045F7 75 F0 0A         [24]10875 	mov	b,#0x0a
      0045FA A4               [48]10876 	mul	ab
      0045FB 2D               [12]10877 	add	a,r5
      0045FC 24 D0            [12]10878 	add	a,#0xd0
      0045FE FE               [12]10879 	mov	r6,a
                                  10880 ;	include/xu_ly_tin_nhan.c:47: giodelta = 12 + gio[0] - (phut[0]<phutdelta);
      0045FF AD 4D            [24]10881 	mov	r5,_gio
      004601 74 0C            [12]10882 	mov	a,#0x0c
      004603 2D               [12]10883 	add	a,r5
      004604 FD               [12]10884 	mov	r5,a
      004605 C3               [12]10885 	clr	c
      004606 E5 51            [12]10886 	mov	a,_phut
      004608 9E               [12]10887 	subb	a,r6
      004609 E4               [12]10888 	clr	a
      00460A 33               [12]10889 	rlc	a
      00460B FC               [12]10890 	mov	r4,a
      00460C ED               [12]10891 	mov	a,r5
      00460D C3               [12]10892 	clr	c
      00460E 9C               [12]10893 	subb	a,r4
      00460F FD               [12]10894 	mov	r5,a
                                  10895 ;	include/xu_ly_tin_nhan.c:48: gio[0] = giodelta%12;
      004610 7C 00            [12]10896 	mov	r4,#0x00
      004612 75 1B 0C         [24]10897 	mov	__modsint_PARM_2,#0x0c
                                  10898 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      004615 8C 1C            [24]10899 	mov	(__modsint_PARM_2 + 1),r4
      004617 8D 82            [24]10900 	mov	dpl,r5
      004619 8C 83            [24]10901 	mov	dph,r4
      00461B C0 06            [24]10902 	push	ar6
      00461D 12 84 67         [24]10903 	lcall	__modsint
      004620 AC 82            [24]10904 	mov	r4,dpl
      004622 D0 06            [24]10905 	pop	ar6
      004624 8C 4D            [24]10906 	mov	_gio,r4
                                  10907 ;	include/xu_ly_tin_nhan.c:49: phut[0] = (60+phut[0]-phutdelta)%60;
      004626 AC 51            [24]10908 	mov	r4,_phut
      004628 7D 00            [12]10909 	mov	r5,#0x00
      00462A 74 3C            [12]10910 	mov	a,#0x3c
      00462C 2C               [12]10911 	add	a,r4
      00462D FC               [12]10912 	mov	r4,a
      00462E E4               [12]10913 	clr	a
      00462F 3D               [12]10914 	addc	a,r5
      004630 FD               [12]10915 	mov	r5,a
      004631 7B 00            [12]10916 	mov	r3,#0x00
      004633 EC               [12]10917 	mov	a,r4
      004634 C3               [12]10918 	clr	c
      004635 9E               [12]10919 	subb	a,r6
      004636 F5 82            [12]10920 	mov	dpl,a
      004638 ED               [12]10921 	mov	a,r5
      004639 9B               [12]10922 	subb	a,r3
      00463A F5 83            [12]10923 	mov	dph,a
      00463C 75 1B 3C         [24]10924 	mov	__modsint_PARM_2,#0x3c
                                  10925 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      00463F 8B 1C            [24]10926 	mov	(__modsint_PARM_2 + 1),r3
      004641 12 84 67         [24]10927 	lcall	__modsint
      004644 AD 82            [24]10928 	mov	r5,dpl
      004646 8D 51            [24]10929 	mov	_phut,r5
                                  10930 ;	include/xu_ly_tin_nhan.c:50: luu_gio_kim();
      004648 12 0F 81         [24]10931 	lcall	_luu_gio_kim
      00464B 02 4A 76         [24]10932 	ljmp	00217$
      00464E                      10933 00127$:
                                  10934 ;	include/xu_ly_tin_nhan.c:53: }else lenh_khong_hop_le=1;
                                  10935 ;	assignBit
      00464E D2 10            [12]10936 	setb	_lenh_khong_hop_le
      004650 02 4A 76         [24]10937 	ljmp	00217$
      004653                      10938 00213$:
                                  10939 ;	include/xu_ly_tin_nhan.c:54: }else if(lenh_sms[3]=='-'){
      004653 BF 2D 46         [24]10940 	cjne	r7,#0x2d,00210$
                                  10941 ;	include/xu_ly_tin_nhan.c:55: if(lenh_sms[4]>47 && lenh_sms[4]<54 && lenh_sms[5]>47 && lenh_sms[5]<58){
      004656 90 00 1B         [24]10942 	mov	dptr,#(_lenh_sms + 0x0004)
      004659 E0               [24]10943 	movx	a,@dptr
      00465A FF               [12]10944 	mov  r7,a
      00465B 24 D0            [12]10945 	add	a,#0xff - 0x2f
      00465D 50 38            [24]10946 	jnc	00153$
      00465F BF 36 00         [24]10947 	cjne	r7,#0x36,01740$
      004662                      10948 01740$:
      004662 50 33            [24]10949 	jnc	00153$
      004664 90 00 1C         [24]10950 	mov	dptr,#(_lenh_sms + 0x0005)
      004667 E0               [24]10951 	movx	a,@dptr
      004668 FE               [12]10952 	mov  r6,a
      004669 24 D0            [12]10953 	add	a,#0xff - 0x2f
      00466B 50 2A            [24]10954 	jnc	00153$
      00466D BE 3A 00         [24]10955 	cjne	r6,#0x3a,01743$
      004670                      10956 01743$:
      004670 50 25            [24]10957 	jnc	00153$
                                  10958 ;	include/xu_ly_tin_nhan.c:56: phut[0] = phut[0] + (lenh_sms[4]-'0')*10 + lenh_sms[5]-'0';
      004672 EF               [12]10959 	mov	a,r7
      004673 24 D0            [12]10960 	add	a,#0xd0
      004675 75 F0 0A         [24]10961 	mov	b,#0x0a
      004678 A4               [48]10962 	mul	ab
      004679 AD 51            [24]10963 	mov	r5,_phut
      00467B 2D               [12]10964 	add	a,r5
      00467C 2E               [12]10965 	add	a,r6
      00467D 24 D0            [12]10966 	add	a,#0xd0
                                  10967 ;	include/xu_ly_tin_nhan.c:57: if(phut[0]>59){
      00467F F5 51            [12]10968 	mov  _phut,a
      004681 24 C4            [12]10969 	add	a,#0xff - 0x3b
      004683 50 0C            [24]10970 	jnc	00151$
                                  10971 ;	include/xu_ly_tin_nhan.c:58: gio[0]++;
      004685 E5 4D            [12]10972 	mov	a,_gio
      004687 04               [12]10973 	inc	a
      004688 F5 4D            [12]10974 	mov	_gio,a
                                  10975 ;	include/xu_ly_tin_nhan.c:59: phut[0]-=60;
      00468A E5 51            [12]10976 	mov	a,_phut
      00468C FF               [12]10977 	mov	r7,a
      00468D 24 C4            [12]10978 	add	a,#0xc4
      00468F F5 51            [12]10979 	mov	_phut,a
      004691                      10980 00151$:
                                  10981 ;	include/xu_ly_tin_nhan.c:61: luu_gio_kim();
      004691 12 0F 81         [24]10982 	lcall	_luu_gio_kim
      004694 02 4A 76         [24]10983 	ljmp	00217$
      004697                      10984 00153$:
                                  10985 ;	include/xu_ly_tin_nhan.c:64: }else lenh_khong_hop_le=1;
                                  10986 ;	assignBit
      004697 D2 10            [12]10987 	setb	_lenh_khong_hop_le
      004699 02 4A 76         [24]10988 	ljmp	00217$
      00469C                      10989 00210$:
                                  10990 ;	include/xu_ly_tin_nhan.c:65: }else if(lenh_sms[4]=='N' || lenh_sms[4]=='n'){
      00469C 90 00 1B         [24]10991 	mov	dptr,#(_lenh_sms + 0x0004)
      00469F E0               [24]10992 	movx	a,@dptr
      0046A0 FF               [12]10993 	mov	r7,a
      0046A1 BF 4E 02         [24]10994 	cjne	r7,#0x4e,01746$
      0046A4 80 03            [24]10995 	sjmp	00205$
      0046A6                      10996 01746$:
      0046A6 BF 6E 24         [24]10997 	cjne	r7,#0x6e,00206$
      0046A9                      10998 00205$:
                                  10999 ;	include/xu_ly_tin_nhan.c:67: if(phone_chinh_so_sanh_that_bai)break;
      0046A9 30 08 03         [24]11000 	jnb	_phone_chinh_so_sanh_that_bai,01749$
      0046AC 02 56 FD         [24]11001 	ljmp	00479$
      0046AF                      11002 01749$:
                                  11003 ;	include/xu_ly_tin_nhan.c:68: IAP_docxoasector1();
      0046AF 12 03 34         [24]11004 	lcall	_IAP_docxoasector1
                                  11005 ;	include/xu_ly_tin_nhan.c:69: eeprom_buf[MOTOR_EEPROM] &= 0xef;
      0046B2 90 00 BD         [24]11006 	mov	dptr,#_eeprom_buf
      0046B5 E0               [24]11007 	movx	a,@dptr
      0046B6 54 EF            [12]11008 	anl	a,#0xef
      0046B8 F0               [24]11009 	movx	@dptr,a
                                  11010 ;	include/xu_ly_tin_nhan.c:70: IAP_ghisector1();
      0046B9 12 03 6F         [24]11011 	lcall	_IAP_ghisector1
                                  11012 ;	include/xu_ly_tin_nhan.c:71: motor_dung = 0;
                                  11013 ;	assignBit
      0046BC C2 36            [12]11014 	clr	_motor_dung
                                  11015 ;	include/xu_ly_tin_nhan.c:72: mp3_status = mp3_IDLE;
      0046BE 78 7E            [12]11016 	mov	r0,#_mp3_status
      0046C0 76 00            [12]11017 	mov	@r0,#0x00
                                  11018 ;	include/xu_ly_tin_nhan.c:73: mp3_hour= 24;
      0046C2 78 80            [12]11019 	mov	r0,#_mp3_hour
      0046C4 76 18            [12]11020 	mov	@r0,#0x18
                                  11021 ;	include/xu_ly_tin_nhan.c:74: mp3_minute = 60;
      0046C6 78 81            [12]11022 	mov	r0,#_mp3_minute
      0046C8 76 3C            [12]11023 	mov	@r0,#0x3c
      0046CA 02 4A 76         [24]11024 	ljmp	00217$
      0046CD                      11025 00206$:
                                  11026 ;	include/xu_ly_tin_nhan.c:75: }else if(lenh_sms[4]=='F' || lenh_sms[4]=='f'){
      0046CD BF 46 02         [24]11027 	cjne	r7,#0x46,01750$
      0046D0 80 03            [24]11028 	sjmp	00201$
      0046D2                      11029 01750$:
      0046D2 BF 66 39         [24]11030 	cjne	r7,#0x66,00202$
      0046D5                      11031 00201$:
                                  11032 ;	include/xu_ly_tin_nhan.c:77: if(phone_chinh_so_sanh_that_bai)break;
      0046D5 30 08 03         [24]11033 	jnb	_phone_chinh_so_sanh_that_bai,01753$
      0046D8 02 56 FD         [24]11034 	ljmp	00479$
      0046DB                      11035 01753$:
                                  11036 ;	include/xu_ly_tin_nhan.c:78: IAP_docxoasector1();
      0046DB 12 03 34         [24]11037 	lcall	_IAP_docxoasector1
                                  11038 ;	include/xu_ly_tin_nhan.c:79: eeprom_buf[MOTOR_EEPROM] |= 0x10;
      0046DE 90 00 BD         [24]11039 	mov	dptr,#_eeprom_buf
      0046E1 E0               [24]11040 	movx	a,@dptr
      0046E2 44 10            [12]11041 	orl	a,#0x10
      0046E4 F0               [24]11042 	movx	@dptr,a
                                  11043 ;	include/xu_ly_tin_nhan.c:80: IAP_ghisector1();
      0046E5 12 03 6F         [24]11044 	lcall	_IAP_ghisector1
                                  11045 ;	include/xu_ly_tin_nhan.c:81: motor_dung = 1;
                                  11046 ;	assignBit
      0046E8 D2 36            [12]11047 	setb	_motor_dung
                                  11048 ;	include/xu_ly_tin_nhan.c:82: if(eep_mp3%4==2 && mp3_playing) mp3_play(9,0,0);
      0046EA 90 F0 10         [24]11049 	mov	dptr,#_eep_mp3
      0046ED E4               [12]11050 	clr	a
      0046EE 93               [24]11051 	movc	a,@a+dptr
      0046EF 54 03            [12]11052 	anl	a,#0x03
      0046F1 FE               [12]11053 	mov	r6,a
      0046F2 7F 00            [12]11054 	mov	r7,#0x00
      0046F4 BE 02 12         [24]11055 	cjne	r6,#0x02,00163$
      0046F7 BF 00 0F         [24]11056 	cjne	r7,#0x00,00163$
      0046FA 30 92 0C         [24]11057 	jnb	_P12,00163$
      0046FD 75 19 00         [24]11058 	mov	_mp3_play_PARM_2,#0x00
      004700 75 1A 00         [24]11059 	mov	_mp3_play_PARM_3,#0x00
      004703 75 82 09         [24]11060 	mov	dpl,#0x09
      004706 12 82 9E         [24]11061 	lcall	_mp3_play
      004709                      11062 00163$:
                                  11063 ;	include/xu_ly_tin_nhan.c:83: AmplyRelay = 0;
                                  11064 ;	assignBit
      004709 C2 C2            [12]11065 	clr	_P42
      00470B 02 4A 76         [24]11066 	ljmp	00217$
      00470E                      11067 00202$:
                                  11068 ;	include/xu_ly_tin_nhan.c:86: i = 3;
      00470E 90 01 34         [24]11069 	mov	dptr,#_xu_ly_tin_nhan_i_65537_185
      004711 74 03            [12]11070 	mov	a,#0x03
      004713 F0               [24]11071 	movx	@dptr,a
                                  11072 ;	include/xu_ly_tin_nhan.c:87: kim_index = 1;
      004714 75 68 01         [24]11073 	mov	_xu_ly_tin_nhan_kim_index_65537_185,#0x01
                                  11074 ;	include/xu_ly_tin_nhan.c:88: do{
      004717                      11075 00198$:
                                  11076 ;	include/xu_ly_tin_nhan.c:89: if(lenh_sms[i]==','){
      004717 90 01 34         [24]11077 	mov	dptr,#_xu_ly_tin_nhan_i_65537_185
      00471A E0               [24]11078 	movx	a,@dptr
      00471B FE               [12]11079 	mov	r6,a
      00471C 24 17            [12]11080 	add	a,#_lenh_sms
      00471E F5 82            [12]11081 	mov	dpl,a
      004720 E4               [12]11082 	clr	a
      004721 34 00            [12]11083 	addc	a,#(_lenh_sms >> 8)
      004723 F5 83            [12]11084 	mov	dph,a
      004725 E0               [24]11085 	movx	a,@dptr
      004726 FD               [12]11086 	mov	r5,a
      004727 BD 2C 46         [24]11087 	cjne	r5,#0x2c,00196$
                                  11088 ;	include/xu_ly_tin_nhan.c:90: if(!kim_index)i = 101;
      00472A E5 68            [12]11089 	mov	a,_xu_ly_tin_nhan_kim_index_65537_185
      00472C 70 09            [24]11090 	jnz	00166$
      00472E 90 01 34         [24]11091 	mov	dptr,#_xu_ly_tin_nhan_i_65537_185
      004731 74 65            [12]11092 	mov	a,#0x65
      004733 F0               [24]11093 	movx	@dptr,a
      004734 02 4A 60         [24]11094 	ljmp	00199$
      004737                      11095 00166$:
                                  11096 ;	include/xu_ly_tin_nhan.c:92: kim_index = (kim_index+1)%(so_motor+1);
      004737 AB 68            [24]11097 	mov	r3,_xu_ly_tin_nhan_kim_index_65537_185
      004739 7C 00            [12]11098 	mov	r4,#0x00
      00473B 74 01            [12]11099 	mov	a,#0x01
      00473D 2B               [12]11100 	add	a,r3
      00473E F5 71            [12]11101 	mov	_xu_ly_tin_nhan_sloc7_1_0,a
      004740 E4               [12]11102 	clr	a
      004741 3C               [12]11103 	addc	a,r4
      004742 F5 72            [12]11104 	mov	(_xu_ly_tin_nhan_sloc7_1_0 + 1),a
      004744 90 01 2F         [24]11105 	mov	dptr,#_so_motor
      004747 E0               [24]11106 	movx	a,@dptr
      004748 FA               [12]11107 	mov	r2,a
      004749 7C 00            [12]11108 	mov	r4,#0x00
      00474B 74 01            [12]11109 	mov	a,#0x01
      00474D 2A               [12]11110 	add	a,r2
      00474E F5 1B            [12]11111 	mov	__modsint_PARM_2,a
      004750 E4               [12]11112 	clr	a
      004751 3C               [12]11113 	addc	a,r4
      004752 F5 1C            [12]11114 	mov	(__modsint_PARM_2 + 1),a
      004754 85 71 82         [24]11115 	mov	dpl,_xu_ly_tin_nhan_sloc7_1_0
      004757 85 72 83         [24]11116 	mov	dph,(_xu_ly_tin_nhan_sloc7_1_0 + 1)
      00475A C0 06            [24]11117 	push	ar6
      00475C 12 84 67         [24]11118 	lcall	__modsint
      00475F AB 82            [24]11119 	mov	r3,dpl
      004761 AC 83            [24]11120 	mov	r4,dph
      004763 D0 06            [24]11121 	pop	ar6
      004765 8B 68            [24]11122 	mov	_xu_ly_tin_nhan_kim_index_65537_185,r3
                                  11123 ;	include/xu_ly_tin_nhan.c:93: i++;
      004767 90 01 34         [24]11124 	mov	dptr,#_xu_ly_tin_nhan_i_65537_185
      00476A EE               [12]11125 	mov	a,r6
      00476B 04               [12]11126 	inc	a
      00476C F0               [24]11127 	movx	@dptr,a
      00476D 02 4A 60         [24]11128 	ljmp	00199$
      004770                      11129 00196$:
                                  11130 ;	include/xu_ly_tin_nhan.c:96: else if(lenh_sms[i]<48) i = !kim_index?101:202;
      004770 BD 30 00         [24]11131 	cjne	r5,#0x30,01760$
      004773                      11132 01760$:
      004773 50 15            [24]11133 	jnc	00193$
      004775 E5 68            [12]11134 	mov	a,_xu_ly_tin_nhan_kim_index_65537_185
      004777 70 05            [24]11135 	jnz	00496$
      004779 7C 65            [12]11136 	mov	r4,#0x65
      00477B FE               [12]11137 	mov	r6,a
      00477C 80 04            [24]11138 	sjmp	00497$
      00477E                      11139 00496$:
      00477E 7C CA            [12]11140 	mov	r4,#0xca
      004780 7E 00            [12]11141 	mov	r6,#0x00
      004782                      11142 00497$:
      004782 90 01 34         [24]11143 	mov	dptr,#_xu_ly_tin_nhan_i_65537_185
      004785 EC               [12]11144 	mov	a,r4
      004786 F0               [24]11145 	movx	@dptr,a
      004787 02 4A 60         [24]11146 	ljmp	00199$
      00478A                      11147 00193$:
                                  11148 ;	include/xu_ly_tin_nhan.c:97: else if(!kim_index && (lenh_sms[i]=='g' || lenh_sms[i]=='G' || lenh_sms[i]=='a' || lenh_sms[i]=='A')){
      00478A E5 68            [12]11149 	mov	a,_xu_ly_tin_nhan_kim_index_65537_185
      00478C 70 51            [24]11150 	jnz	00186$
      00478E BD 67 02         [24]11151 	cjne	r5,#0x67,01764$
      004791 80 0D            [24]11152 	sjmp	00185$
      004793                      11153 01764$:
      004793 BD 47 02         [24]11154 	cjne	r5,#0x47,01765$
      004796 80 08            [24]11155 	sjmp	00185$
      004798                      11156 01765$:
      004798 BD 61 02         [24]11157 	cjne	r5,#0x61,01766$
      00479B 80 03            [24]11158 	sjmp	00185$
      00479D                      11159 01766$:
      00479D BD 41 3F         [24]11160 	cjne	r5,#0x41,00186$
      0047A0                      11161 00185$:
                                  11162 ;	include/xu_ly_tin_nhan.c:99: if(mp3_playing) mp3_play(9,0,0);
      0047A0 30 92 0C         [24]11163 	jnb	_P12,00169$
      0047A3 75 19 00         [24]11164 	mov	_mp3_play_PARM_2,#0x00
      0047A6 75 1A 00         [24]11165 	mov	_mp3_play_PARM_3,#0x00
      0047A9 75 82 09         [24]11166 	mov	dpl,#0x09
      0047AC 12 82 9E         [24]11167 	lcall	_mp3_play
      0047AF                      11168 00169$:
                                  11169 ;	include/xu_ly_tin_nhan.c:100: AmplyRelay=0;
                                  11170 ;	assignBit
      0047AF C2 C2            [12]11171 	clr	_P42
                                  11172 ;	include/xu_ly_tin_nhan.c:101: mp3_status = mp3_IDLE;
      0047B1 78 7E            [12]11173 	mov	r0,#_mp3_status
      0047B3 76 00            [12]11174 	mov	@r0,#0x00
                                  11175 ;	include/xu_ly_tin_nhan.c:103: gsm_thietlapngaygiothuc();
      0047B5 12 25 33         [24]11176 	lcall	_gsm_thietlapngaygiothuc
                                  11177 ;	include/xu_ly_tin_nhan.c:104: hour12 = hour%12;
      0047B8 AD 4B            [24]11178 	mov	r5,_hour
      0047BA 7E 00            [12]11179 	mov	r6,#0x00
      0047BC 75 1B 0C         [24]11180 	mov	__modsint_PARM_2,#0x0c
                                  11181 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0047BF 8E 1C            [24]11182 	mov	(__modsint_PARM_2 + 1),r6
      0047C1 8D 82            [24]11183 	mov	dpl,r5
      0047C3 8E 83            [24]11184 	mov	dph,r6
      0047C5 12 84 67         [24]11185 	lcall	__modsint
      0047C8 AD 82            [24]11186 	mov	r5,dpl
      0047CA AE 83            [24]11187 	mov	r6,dph
      0047CC 8D 4C            [24]11188 	mov	_hour12,r5
                                  11189 ;	include/xu_ly_tin_nhan.c:105: mp3_hour = 24;
      0047CE 78 80            [12]11190 	mov	r0,#_mp3_hour
      0047D0 76 18            [12]11191 	mov	@r0,#0x18
                                  11192 ;	include/xu_ly_tin_nhan.c:106: mp3_minute = 60;
      0047D2 78 81            [12]11193 	mov	r0,#_mp3_minute
      0047D4 76 3C            [12]11194 	mov	@r0,#0x3c
                                  11195 ;	include/xu_ly_tin_nhan.c:107: i = 101;
      0047D6 90 01 34         [24]11196 	mov	dptr,#_xu_ly_tin_nhan_i_65537_185
      0047D9 74 65            [12]11197 	mov	a,#0x65
      0047DB F0               [24]11198 	movx	@dptr,a
      0047DC 02 4A 60         [24]11199 	ljmp	00199$
      0047DF                      11200 00186$:
                                  11201 ;	include/xu_ly_tin_nhan.c:109: else if(lenh_sms[i]>47 && lenh_sms[i]<51 && lenh_sms[i+1]>47 && lenh_sms[i+1]<58 &&
      0047DF 90 01 34         [24]11202 	mov	dptr,#_xu_ly_tin_nhan_i_65537_185
      0047E2 E0               [24]11203 	movx	a,@dptr
      0047E3 FE               [12]11204 	mov	r6,a
      0047E4 24 17            [12]11205 	add	a,#_lenh_sms
      0047E6 F5 82            [12]11206 	mov	dpl,a
      0047E8 E4               [12]11207 	clr	a
      0047E9 34 00            [12]11208 	addc	a,#(_lenh_sms >> 8)
      0047EB F5 83            [12]11209 	mov	dph,a
      0047ED E0               [24]11210 	movx	a,@dptr
      0047EE FD               [12]11211 	mov  r5,a
      0047EF 24 D0            [12]11212 	add	a,#0xff - 0x2f
      0047F1 40 03            [24]11213 	jc	01770$
      0047F3 02 4A 5A         [24]11214 	ljmp	00176$
      0047F6                      11215 01770$:
      0047F6 BD 33 00         [24]11216 	cjne	r5,#0x33,01771$
      0047F9                      11217 01771$:
      0047F9 40 03            [24]11218 	jc	01772$
      0047FB 02 4A 5A         [24]11219 	ljmp	00176$
      0047FE                      11220 01772$:
      0047FE 8E 03            [24]11221 	mov	ar3,r6
      004800 7C 00            [12]11222 	mov	r4,#0x00
      004802 74 01            [12]11223 	mov	a,#0x01
      004804 2B               [12]11224 	add	a,r3
      004805 FA               [12]11225 	mov	r2,a
      004806 E4               [12]11226 	clr	a
      004807 3C               [12]11227 	addc	a,r4
      004808 FF               [12]11228 	mov	r7,a
      004809 EA               [12]11229 	mov	a,r2
      00480A 24 17            [12]11230 	add	a,#_lenh_sms
      00480C F5 82            [12]11231 	mov	dpl,a
      00480E EF               [12]11232 	mov	a,r7
      00480F 34 00            [12]11233 	addc	a,#(_lenh_sms >> 8)
      004811 F5 83            [12]11234 	mov	dph,a
      004813 E0               [24]11235 	movx	a,@dptr
      004814 FF               [12]11236 	mov  r7,a
      004815 24 D0            [12]11237 	add	a,#0xff - 0x2f
      004817 40 03            [24]11238 	jc	01773$
      004819 02 4A 5A         [24]11239 	ljmp	00176$
      00481C                      11240 01773$:
      00481C 74 01            [12]11241 	mov	a,#0x01
      00481E 2B               [12]11242 	add	a,r3
      00481F FA               [12]11243 	mov	r2,a
      004820 E4               [12]11244 	clr	a
      004821 3C               [12]11245 	addc	a,r4
      004822 FF               [12]11246 	mov	r7,a
      004823 EA               [12]11247 	mov	a,r2
      004824 24 17            [12]11248 	add	a,#_lenh_sms
      004826 F5 82            [12]11249 	mov	dpl,a
      004828 EF               [12]11250 	mov	a,r7
      004829 34 00            [12]11251 	addc	a,#(_lenh_sms >> 8)
      00482B F5 83            [12]11252 	mov	dph,a
      00482D E0               [24]11253 	movx	a,@dptr
      00482E FF               [12]11254 	mov	r7,a
      00482F BF 3A 00         [24]11255 	cjne	r7,#0x3a,01774$
      004832                      11256 01774$:
      004832 40 03            [24]11257 	jc	01775$
      004834 02 4A 5A         [24]11258 	ljmp	00176$
      004837                      11259 01775$:
                                  11260 ;	include/xu_ly_tin_nhan.c:110: lenh_sms[i+2]>47 && lenh_sms[i+2]<54 && lenh_sms[i+3]>47 && lenh_sms[i+3]<58){
      004837 74 02            [12]11261 	mov	a,#0x02
      004839 2B               [12]11262 	add	a,r3
      00483A FA               [12]11263 	mov	r2,a
      00483B E4               [12]11264 	clr	a
      00483C 3C               [12]11265 	addc	a,r4
      00483D FF               [12]11266 	mov	r7,a
      00483E EA               [12]11267 	mov	a,r2
      00483F 24 17            [12]11268 	add	a,#_lenh_sms
      004841 F5 82            [12]11269 	mov	dpl,a
      004843 EF               [12]11270 	mov	a,r7
      004844 34 00            [12]11271 	addc	a,#(_lenh_sms >> 8)
      004846 F5 83            [12]11272 	mov	dph,a
      004848 E0               [24]11273 	movx	a,@dptr
      004849 FF               [12]11274 	mov  r7,a
      00484A 24 D0            [12]11275 	add	a,#0xff - 0x2f
      00484C 40 03            [24]11276 	jc	01776$
      00484E 02 4A 5A         [24]11277 	ljmp	00176$
      004851                      11278 01776$:
      004851 74 02            [12]11279 	mov	a,#0x02
      004853 2B               [12]11280 	add	a,r3
      004854 FA               [12]11281 	mov	r2,a
      004855 E4               [12]11282 	clr	a
      004856 3C               [12]11283 	addc	a,r4
      004857 FF               [12]11284 	mov	r7,a
      004858 EA               [12]11285 	mov	a,r2
      004859 24 17            [12]11286 	add	a,#_lenh_sms
      00485B F5 82            [12]11287 	mov	dpl,a
      00485D EF               [12]11288 	mov	a,r7
      00485E 34 00            [12]11289 	addc	a,#(_lenh_sms >> 8)
      004860 F5 83            [12]11290 	mov	dph,a
      004862 E0               [24]11291 	movx	a,@dptr
      004863 FF               [12]11292 	mov	r7,a
      004864 BF 36 00         [24]11293 	cjne	r7,#0x36,01777$
      004867                      11294 01777$:
      004867 40 03            [24]11295 	jc	01778$
      004869 02 4A 5A         [24]11296 	ljmp	00176$
      00486C                      11297 01778$:
      00486C 74 03            [12]11298 	mov	a,#0x03
      00486E 2B               [12]11299 	add	a,r3
      00486F FA               [12]11300 	mov	r2,a
      004870 E4               [12]11301 	clr	a
      004871 3C               [12]11302 	addc	a,r4
      004872 FF               [12]11303 	mov	r7,a
      004873 EA               [12]11304 	mov	a,r2
      004874 24 17            [12]11305 	add	a,#_lenh_sms
      004876 F5 82            [12]11306 	mov	dpl,a
      004878 EF               [12]11307 	mov	a,r7
      004879 34 00            [12]11308 	addc	a,#(_lenh_sms >> 8)
      00487B F5 83            [12]11309 	mov	dph,a
      00487D E0               [24]11310 	movx	a,@dptr
      00487E FF               [12]11311 	mov  r7,a
      00487F 24 D0            [12]11312 	add	a,#0xff - 0x2f
      004881 40 03            [24]11313 	jc	01779$
      004883 02 4A 5A         [24]11314 	ljmp	00176$
      004886                      11315 01779$:
      004886 74 03            [12]11316 	mov	a,#0x03
      004888 2B               [12]11317 	add	a,r3
      004889 FA               [12]11318 	mov	r2,a
      00488A E4               [12]11319 	clr	a
      00488B 3C               [12]11320 	addc	a,r4
      00488C FF               [12]11321 	mov	r7,a
      00488D EA               [12]11322 	mov	a,r2
      00488E 24 17            [12]11323 	add	a,#_lenh_sms
      004890 F5 82            [12]11324 	mov	dpl,a
      004892 EF               [12]11325 	mov	a,r7
      004893 34 00            [12]11326 	addc	a,#(_lenh_sms >> 8)
      004895 F5 83            [12]11327 	mov	dph,a
      004897 E0               [24]11328 	movx	a,@dptr
      004898 FF               [12]11329 	mov	r7,a
      004899 BF 3A 00         [24]11330 	cjne	r7,#0x3a,01780$
      00489C                      11331 01780$:
      00489C 40 03            [24]11332 	jc	01781$
      00489E 02 4A 5A         [24]11333 	ljmp	00176$
      0048A1                      11334 01781$:
                                  11335 ;	include/xu_ly_tin_nhan.c:111: if(kim_index){
      0048A1 E5 68            [12]11336 	mov	a,_xu_ly_tin_nhan_kim_index_65537_185
      0048A3 70 03            [24]11337 	jnz	01782$
      0048A5 02 49 82         [24]11338 	ljmp	00173$
      0048A8                      11339 01782$:
                                  11340 ;	include/xu_ly_tin_nhan.c:112: gio[kim_index-1] = ((lenh_sms[i]-'0')*10 + lenh_sms[i+1] - '0')%12;
      0048A8 AF 68            [24]11341 	mov	r7,_xu_ly_tin_nhan_kim_index_65537_185
      0048AA 1F               [12]11342 	dec	r7
      0048AB EF               [12]11343 	mov	a,r7
      0048AC 24 4D            [12]11344 	add	a,#_gio
      0048AE F5 71            [12]11345 	mov	_xu_ly_tin_nhan_sloc7_1_0,a
      0048B0 7A 00            [12]11346 	mov	r2,#0x00
      0048B2 ED               [12]11347 	mov	a,r5
      0048B3 24 D0            [12]11348 	add	a,#0xd0
      0048B5 F5 1B            [12]11349 	mov	__mulint_PARM_2,a
      0048B7 EA               [12]11350 	mov	a,r2
      0048B8 34 FF            [12]11351 	addc	a,#0xff
      0048BA F5 1C            [12]11352 	mov	(__mulint_PARM_2 + 1),a
      0048BC 90 00 0A         [24]11353 	mov	dptr,#0x000a
      0048BF C0 07            [24]11354 	push	ar7
      0048C1 C0 06            [24]11355 	push	ar6
      0048C3 C0 04            [24]11356 	push	ar4
      0048C5 C0 03            [24]11357 	push	ar3
      0048C7 12 83 E1         [24]11358 	lcall	__mulint
      0048CA 85 82 6F         [24]11359 	mov	_xu_ly_tin_nhan_sloc6_1_0,dpl
      0048CD 85 83 70         [24]11360 	mov	(_xu_ly_tin_nhan_sloc6_1_0 + 1),dph
      0048D0 D0 03            [24]11361 	pop	ar3
      0048D2 D0 04            [24]11362 	pop	ar4
      0048D4 74 01            [12]11363 	mov	a,#0x01
      0048D6 2B               [12]11364 	add	a,r3
      0048D7 FA               [12]11365 	mov	r2,a
      0048D8 E4               [12]11366 	clr	a
      0048D9 3C               [12]11367 	addc	a,r4
      0048DA FD               [12]11368 	mov	r5,a
      0048DB EA               [12]11369 	mov	a,r2
      0048DC 24 17            [12]11370 	add	a,#_lenh_sms
      0048DE F5 82            [12]11371 	mov	dpl,a
      0048E0 ED               [12]11372 	mov	a,r5
      0048E1 34 00            [12]11373 	addc	a,#(_lenh_sms >> 8)
      0048E3 F5 83            [12]11374 	mov	dph,a
      0048E5 E0               [24]11375 	movx	a,@dptr
      0048E6 7A 00            [12]11376 	mov	r2,#0x00
      0048E8 25 6F            [12]11377 	add	a,_xu_ly_tin_nhan_sloc6_1_0
      0048EA FD               [12]11378 	mov	r5,a
      0048EB EA               [12]11379 	mov	a,r2
      0048EC 35 70            [12]11380 	addc	a,(_xu_ly_tin_nhan_sloc6_1_0 + 1)
      0048EE FA               [12]11381 	mov	r2,a
      0048EF ED               [12]11382 	mov	a,r5
      0048F0 24 D0            [12]11383 	add	a,#0xd0
      0048F2 F5 82            [12]11384 	mov	dpl,a
      0048F4 EA               [12]11385 	mov	a,r2
      0048F5 34 FF            [12]11386 	addc	a,#0xff
      0048F7 F5 83            [12]11387 	mov	dph,a
      0048F9 75 1B 0C         [24]11388 	mov	__modsint_PARM_2,#0x0c
      0048FC 75 1C 00         [24]11389 	mov	(__modsint_PARM_2 + 1),#0x00
      0048FF C0 04            [24]11390 	push	ar4
      004901 C0 03            [24]11391 	push	ar3
      004903 12 84 67         [24]11392 	lcall	__modsint
      004906 AA 82            [24]11393 	mov	r2,dpl
      004908 D0 03            [24]11394 	pop	ar3
      00490A D0 04            [24]11395 	pop	ar4
      00490C D0 06            [24]11396 	pop	ar6
      00490E D0 07            [24]11397 	pop	ar7
      004910 A8 71            [24]11398 	mov	r0,_xu_ly_tin_nhan_sloc7_1_0
      004912 A6 02            [24]11399 	mov	@r0,ar2
                                  11400 ;	include/xu_ly_tin_nhan.c:113: phut[kim_index-1] = (lenh_sms[i+2]-'0')*10 + lenh_sms[i+3] - '0';
      004914 EF               [12]11401 	mov	a,r7
      004915 24 51            [12]11402 	add	a,#_phut
      004917 F9               [12]11403 	mov	r1,a
      004918 74 02            [12]11404 	mov	a,#0x02
      00491A 2B               [12]11405 	add	a,r3
      00491B FD               [12]11406 	mov	r5,a
      00491C E4               [12]11407 	clr	a
      00491D 3C               [12]11408 	addc	a,r4
      00491E FF               [12]11409 	mov	r7,a
      00491F ED               [12]11410 	mov	a,r5
      004920 24 17            [12]11411 	add	a,#_lenh_sms
      004922 F5 82            [12]11412 	mov	dpl,a
      004924 EF               [12]11413 	mov	a,r7
      004925 34 00            [12]11414 	addc	a,#(_lenh_sms >> 8)
      004927 F5 83            [12]11415 	mov	dph,a
      004929 E0               [24]11416 	movx	a,@dptr
      00492A 24 D0            [12]11417 	add	a,#0xd0
      00492C 75 F0 0A         [24]11418 	mov	b,#0x0a
      00492F A4               [48]11419 	mul	ab
      004930 FF               [12]11420 	mov	r7,a
      004931 74 03            [12]11421 	mov	a,#0x03
      004933 2B               [12]11422 	add	a,r3
      004934 FB               [12]11423 	mov	r3,a
      004935 E4               [12]11424 	clr	a
      004936 3C               [12]11425 	addc	a,r4
      004937 FC               [12]11426 	mov	r4,a
      004938 EB               [12]11427 	mov	a,r3
      004939 24 17            [12]11428 	add	a,#_lenh_sms
      00493B F5 82            [12]11429 	mov	dpl,a
      00493D EC               [12]11430 	mov	a,r4
      00493E 34 00            [12]11431 	addc	a,#(_lenh_sms >> 8)
      004940 F5 83            [12]11432 	mov	dph,a
      004942 E0               [24]11433 	movx	a,@dptr
      004943 2F               [12]11434 	add	a,r7
      004944 24 D0            [12]11435 	add	a,#0xd0
      004946 F7               [12]11436 	mov	@r1,a
                                  11437 ;	include/xu_ly_tin_nhan.c:114: luu_gio_kim();
      004947 C0 06            [24]11438 	push	ar6
      004949 12 0F 81         [24]11439 	lcall	_luu_gio_kim
      00494C D0 06            [24]11440 	pop	ar6
                                  11441 ;	include/xu_ly_tin_nhan.c:115: kim_index = (kim_index+1)%(so_motor+1);
      00494E AD 68            [24]11442 	mov	r5,_xu_ly_tin_nhan_kim_index_65537_185
      004950 7F 00            [12]11443 	mov	r7,#0x00
      004952 0D               [12]11444 	inc	r5
      004953 BD 00 01         [24]11445 	cjne	r5,#0x00,01783$
      004956 0F               [12]11446 	inc	r7
      004957                      11447 01783$:
      004957 90 01 2F         [24]11448 	mov	dptr,#_so_motor
      00495A E0               [24]11449 	movx	a,@dptr
      00495B FC               [12]11450 	mov	r4,a
      00495C 7B 00            [12]11451 	mov	r3,#0x00
      00495E 74 01            [12]11452 	mov	a,#0x01
      004960 2C               [12]11453 	add	a,r4
      004961 F5 1B            [12]11454 	mov	__modsint_PARM_2,a
      004963 E4               [12]11455 	clr	a
      004964 3B               [12]11456 	addc	a,r3
      004965 F5 1C            [12]11457 	mov	(__modsint_PARM_2 + 1),a
      004967 8D 82            [24]11458 	mov	dpl,r5
      004969 8F 83            [24]11459 	mov	dph,r7
      00496B C0 06            [24]11460 	push	ar6
      00496D 12 84 67         [24]11461 	lcall	__modsint
      004970 AD 82            [24]11462 	mov	r5,dpl
      004972 AF 83            [24]11463 	mov	r7,dph
      004974 D0 06            [24]11464 	pop	ar6
      004976 8D 68            [24]11465 	mov	_xu_ly_tin_nhan_kim_index_65537_185,r5
                                  11466 ;	include/xu_ly_tin_nhan.c:116: i+=5;
      004978 90 01 34         [24]11467 	mov	dptr,#_xu_ly_tin_nhan_i_65537_185
      00497B 74 05            [12]11468 	mov	a,#0x05
      00497D 2E               [12]11469 	add	a,r6
      00497E F0               [24]11470 	movx	@dptr,a
      00497F 02 4A 60         [24]11471 	ljmp	00199$
      004982                      11472 00173$:
                                  11473 ;	include/xu_ly_tin_nhan.c:118: if(mp3_playing) mp3_play(9,0,0);
      004982 30 92 0C         [24]11474 	jnb	_P12,00171$
      004985 75 19 00         [24]11475 	mov	_mp3_play_PARM_2,#0x00
      004988 75 1A 00         [24]11476 	mov	_mp3_play_PARM_3,#0x00
      00498B 75 82 09         [24]11477 	mov	dpl,#0x09
      00498E 12 82 9E         [24]11478 	lcall	_mp3_play
      004991                      11479 00171$:
                                  11480 ;	include/xu_ly_tin_nhan.c:119: AmplyRelay=0;
                                  11481 ;	assignBit
      004991 C2 C2            [12]11482 	clr	_P42
                                  11483 ;	include/xu_ly_tin_nhan.c:120: mp3_status = mp3_IDLE;
      004993 78 7E            [12]11484 	mov	r0,#_mp3_status
      004995 76 00            [12]11485 	mov	@r0,#0x00
                                  11486 ;	include/xu_ly_tin_nhan.c:121: hour = ((lenh_sms[i]-'0')*10 + lenh_sms[i+1] - '0')%24;
      004997 90 01 34         [24]11487 	mov	dptr,#_xu_ly_tin_nhan_i_65537_185
      00499A E0               [24]11488 	movx	a,@dptr
      00499B FF               [12]11489 	mov	r7,a
      00499C 24 17            [12]11490 	add	a,#_lenh_sms
      00499E F5 82            [12]11491 	mov	dpl,a
      0049A0 E4               [12]11492 	clr	a
      0049A1 34 00            [12]11493 	addc	a,#(_lenh_sms >> 8)
      0049A3 F5 83            [12]11494 	mov	dph,a
      0049A5 E0               [24]11495 	movx	a,@dptr
      0049A6 7D 00            [12]11496 	mov	r5,#0x00
      0049A8 24 D0            [12]11497 	add	a,#0xd0
      0049AA F5 1B            [12]11498 	mov	__mulint_PARM_2,a
      0049AC ED               [12]11499 	mov	a,r5
      0049AD 34 FF            [12]11500 	addc	a,#0xff
      0049AF F5 1C            [12]11501 	mov	(__mulint_PARM_2 + 1),a
      0049B1 90 00 0A         [24]11502 	mov	dptr,#0x000a
      0049B4 C0 07            [24]11503 	push	ar7
      0049B6 12 83 E1         [24]11504 	lcall	__mulint
      0049B9 AD 82            [24]11505 	mov	r5,dpl
      0049BB AE 83            [24]11506 	mov	r6,dph
      0049BD D0 07            [24]11507 	pop	ar7
      0049BF 7C 00            [12]11508 	mov	r4,#0x00
      0049C1 74 01            [12]11509 	mov	a,#0x01
      0049C3 2F               [12]11510 	add	a,r7
      0049C4 FA               [12]11511 	mov	r2,a
      0049C5 E4               [12]11512 	clr	a
      0049C6 3C               [12]11513 	addc	a,r4
      0049C7 FB               [12]11514 	mov	r3,a
      0049C8 EA               [12]11515 	mov	a,r2
      0049C9 24 17            [12]11516 	add	a,#_lenh_sms
      0049CB F5 82            [12]11517 	mov	dpl,a
      0049CD EB               [12]11518 	mov	a,r3
      0049CE 34 00            [12]11519 	addc	a,#(_lenh_sms >> 8)
      0049D0 F5 83            [12]11520 	mov	dph,a
      0049D2 E0               [24]11521 	movx	a,@dptr
      0049D3 7A 00            [12]11522 	mov	r2,#0x00
      0049D5 2D               [12]11523 	add	a,r5
      0049D6 FD               [12]11524 	mov	r5,a
      0049D7 EA               [12]11525 	mov	a,r2
      0049D8 3E               [12]11526 	addc	a,r6
      0049D9 FE               [12]11527 	mov	r6,a
      0049DA ED               [12]11528 	mov	a,r5
      0049DB 24 D0            [12]11529 	add	a,#0xd0
      0049DD F5 82            [12]11530 	mov	dpl,a
      0049DF EE               [12]11531 	mov	a,r6
      0049E0 34 FF            [12]11532 	addc	a,#0xff
      0049E2 F5 83            [12]11533 	mov	dph,a
      0049E4 75 1B 18         [24]11534 	mov	__modsint_PARM_2,#0x18
                                  11535 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0049E7 8C 1C            [24]11536 	mov	(__modsint_PARM_2 + 1),r4
      0049E9 C0 07            [24]11537 	push	ar7
      0049EB C0 04            [24]11538 	push	ar4
      0049ED 12 84 67         [24]11539 	lcall	__modsint
      0049F0 AD 82            [24]11540 	mov	r5,dpl
      0049F2 D0 04            [24]11541 	pop	ar4
      0049F4 D0 07            [24]11542 	pop	ar7
      0049F6 8D 4B            [24]11543 	mov	_hour,r5
                                  11544 ;	include/xu_ly_tin_nhan.c:122: minute = (lenh_sms[i+2]-'0')*10 + lenh_sms[i+3] - '0';
      0049F8 74 02            [12]11545 	mov	a,#0x02
      0049FA 2F               [12]11546 	add	a,r7
      0049FB FD               [12]11547 	mov	r5,a
      0049FC E4               [12]11548 	clr	a
      0049FD 3C               [12]11549 	addc	a,r4
      0049FE FE               [12]11550 	mov	r6,a
      0049FF ED               [12]11551 	mov	a,r5
      004A00 24 17            [12]11552 	add	a,#_lenh_sms
      004A02 F5 82            [12]11553 	mov	dpl,a
      004A04 EE               [12]11554 	mov	a,r6
      004A05 34 00            [12]11555 	addc	a,#(_lenh_sms >> 8)
      004A07 F5 83            [12]11556 	mov	dph,a
      004A09 E0               [24]11557 	movx	a,@dptr
      004A0A 24 D0            [12]11558 	add	a,#0xd0
      004A0C 75 F0 0A         [24]11559 	mov	b,#0x0a
      004A0F A4               [48]11560 	mul	ab
      004A10 FE               [12]11561 	mov	r6,a
      004A11 74 03            [12]11562 	mov	a,#0x03
      004A13 2F               [12]11563 	add	a,r7
      004A14 FF               [12]11564 	mov	r7,a
      004A15 E4               [12]11565 	clr	a
      004A16 3C               [12]11566 	addc	a,r4
      004A17 FC               [12]11567 	mov	r4,a
      004A18 EF               [12]11568 	mov	a,r7
      004A19 24 17            [12]11569 	add	a,#_lenh_sms
      004A1B F5 82            [12]11570 	mov	dpl,a
      004A1D EC               [12]11571 	mov	a,r4
      004A1E 34 00            [12]11572 	addc	a,#(_lenh_sms >> 8)
      004A20 F5 83            [12]11573 	mov	dph,a
      004A22 E0               [24]11574 	movx	a,@dptr
      004A23 2E               [12]11575 	add	a,r6
      004A24 24 D0            [12]11576 	add	a,#0xd0
      004A26 F5 4A            [12]11577 	mov	_minute,a
                                  11578 ;	include/xu_ly_tin_nhan.c:123: hour12=hour%12;
      004A28 AE 4B            [24]11579 	mov	r6,_hour
      004A2A 7F 00            [12]11580 	mov	r7,#0x00
      004A2C 75 1B 0C         [24]11581 	mov	__modsint_PARM_2,#0x0c
                                  11582 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      004A2F 8F 1C            [24]11583 	mov	(__modsint_PARM_2 + 1),r7
      004A31 8E 82            [24]11584 	mov	dpl,r6
      004A33 8F 83            [24]11585 	mov	dph,r7
      004A35 12 84 67         [24]11586 	lcall	__modsint
      004A38 AE 82            [24]11587 	mov	r6,dpl
      004A3A 8E 4C            [24]11588 	mov	_hour12,r6
                                  11589 ;	include/xu_ly_tin_nhan.c:124: rtc_settime(hour,minute,second);
      004A3C 85 4A 3A         [24]11590 	mov	_rtc_settime_PARM_2,_minute
      004A3F 85 49 3B         [24]11591 	mov	_rtc_settime_PARM_3,_second
      004A42 85 4B 82         [24]11592 	mov	dpl,_hour
      004A45 12 02 63         [24]11593 	lcall	_rtc_settime
                                  11594 ;	include/xu_ly_tin_nhan.c:125: GPS_time = 0;
                                  11595 ;	assignBit
      004A48 C2 1D            [12]11596 	clr	_GPS_time
                                  11597 ;	include/xu_ly_tin_nhan.c:126: mp3_hour = 24;
      004A4A 78 80            [12]11598 	mov	r0,#_mp3_hour
      004A4C 76 18            [12]11599 	mov	@r0,#0x18
                                  11600 ;	include/xu_ly_tin_nhan.c:127: mp3_minute = 60;
      004A4E 78 81            [12]11601 	mov	r0,#_mp3_minute
      004A50 76 3C            [12]11602 	mov	@r0,#0x3c
                                  11603 ;	include/xu_ly_tin_nhan.c:128: i= 101;
      004A52 90 01 34         [24]11604 	mov	dptr,#_xu_ly_tin_nhan_i_65537_185
      004A55 74 65            [12]11605 	mov	a,#0x65
      004A57 F0               [24]11606 	movx	@dptr,a
      004A58 80 06            [24]11607 	sjmp	00199$
      004A5A                      11608 00176$:
                                  11609 ;	include/xu_ly_tin_nhan.c:130: }else i = 202;
      004A5A 90 01 34         [24]11610 	mov	dptr,#_xu_ly_tin_nhan_i_65537_185
      004A5D 74 CA            [12]11611 	mov	a,#0xca
      004A5F F0               [24]11612 	movx	@dptr,a
      004A60                      11613 00199$:
                                  11614 ;	include/xu_ly_tin_nhan.c:131: }while(i<100);
      004A60 90 01 34         [24]11615 	mov	dptr,#_xu_ly_tin_nhan_i_65537_185
      004A63 E0               [24]11616 	movx	a,@dptr
      004A64 FF               [12]11617 	mov	r7,a
      004A65 BF 64 00         [24]11618 	cjne	r7,#0x64,01785$
      004A68                      11619 01785$:
      004A68 50 03            [24]11620 	jnc	01786$
      004A6A 02 47 17         [24]11621 	ljmp	00198$
      004A6D                      11622 01786$:
                                  11623 ;	include/xu_ly_tin_nhan.c:132: lenh_khong_hop_le = i==202;
      004A6D BF CA 03         [24]11624 	cjne	r7,#0xca,01787$
      004A70 D3               [12]11625 	setb	c
      004A71 80 01            [24]11626 	sjmp	01788$
      004A73                      11627 01787$:
      004A73 C3               [12]11628 	clr	c
      004A74                      11629 01788$:
      004A74 92 10            [24]11630 	mov	_lenh_khong_hop_le,c
      004A76                      11631 00217$:
                                  11632 ;	include/xu_ly_tin_nhan.c:138: motor_index = motor_run_check();
      004A76 12 0A 8C         [24]11633 	lcall	_motor_run_check
      004A79 85 82 56         [24]11634 	mov	_motor_index,dpl
                                  11635 ;	include/xu_ly_tin_nhan.c:139: motor_index2 = motor_run_check2();
      004A7C 12 0D 04         [24]11636 	lcall	_motor_run_check2
      004A7F 85 82 57         [24]11637 	mov	_motor_index2,dpl
                                  11638 ;	include/xu_ly_tin_nhan.c:140: if(lenh_khong_hop_le){
      004A82 30 10 2A         [24]11639 	jnb	_lenh_khong_hop_le,00227$
                                  11640 ;	include/xu_ly_tin_nhan.c:141: if(phone_phu_so_sanh_that_bai)
      004A85 30 09 0E         [24]11641 	jnb	_phone_phu_so_sanh_that_bai,00221$
                                  11642 ;	include/xu_ly_tin_nhan.c:142: baocaosms(CHINH,"\rlenh khong hop le");
                                  11643 ;	assignBit
      004A88 D2 46            [12]11644 	setb	_baocaosms_PARM_1
      004A8A 90 8C 68         [24]11645 	mov	dptr,#___str_82
      004A8D 75 F0 80         [24]11646 	mov	b,#0x80
      004A90 12 20 30         [24]11647 	lcall	_baocaosms
      004A93 02 56 FD         [24]11648 	ljmp	00479$
      004A96                      11649 00221$:
                                  11650 ;	include/xu_ly_tin_nhan.c:144: baocaosms(CHINH,"\rlenh dong ho khong hop le\rPhone phu gui lenh");
                                  11651 ;	assignBit
      004A96 D2 46            [12]11652 	setb	_baocaosms_PARM_1
      004A98 90 8C 7B         [24]11653 	mov	dptr,#___str_83
      004A9B 75 F0 80         [24]11654 	mov	b,#0x80
      004A9E 12 20 30         [24]11655 	lcall	_baocaosms
                                  11656 ;	include/xu_ly_tin_nhan.c:145: baocaosms(PHU,"\rlenh khong hop le");
                                  11657 ;	assignBit
      004AA1 C2 46            [12]11658 	clr	_baocaosms_PARM_1
      004AA3 90 8C 68         [24]11659 	mov	dptr,#___str_82
      004AA6 75 F0 80         [24]11660 	mov	b,#0x80
      004AA9 12 20 30         [24]11661 	lcall	_baocaosms
      004AAC 02 56 FD         [24]11662 	ljmp	00479$
      004AAF                      11663 00227$:
                                  11664 ;	include/xu_ly_tin_nhan.c:150: if(phone_phu_so_sanh_that_bai)
      004AAF 30 09 0E         [24]11665 	jnb	_phone_phu_so_sanh_that_bai,00224$
                                  11666 ;	include/xu_ly_tin_nhan.c:151: baocaosms(CHINH,"\rchinh dong ho thanh cong");
                                  11667 ;	assignBit
      004AB2 D2 46            [12]11668 	setb	_baocaosms_PARM_1
      004AB4 90 8C A9         [24]11669 	mov	dptr,#___str_84
      004AB7 75 F0 80         [24]11670 	mov	b,#0x80
      004ABA 12 20 30         [24]11671 	lcall	_baocaosms
      004ABD 02 56 FD         [24]11672 	ljmp	00479$
      004AC0                      11673 00224$:
                                  11674 ;	include/xu_ly_tin_nhan.c:153: baocaosms(CHINH,"\rchinh dong ho thanh cong\rPhone phu gui lenh");
                                  11675 ;	assignBit
      004AC0 D2 46            [12]11676 	setb	_baocaosms_PARM_1
      004AC2 90 8C C3         [24]11677 	mov	dptr,#___str_85
      004AC5 75 F0 80         [24]11678 	mov	b,#0x80
      004AC8 12 20 30         [24]11679 	lcall	_baocaosms
                                  11680 ;	include/xu_ly_tin_nhan.c:154: baocaosms(PHU,"\rchinh dong ho thanh cong");
                                  11681 ;	assignBit
      004ACB C2 46            [12]11682 	clr	_baocaosms_PARM_1
      004ACD 90 8C A9         [24]11683 	mov	dptr,#___str_84
      004AD0 75 F0 80         [24]11684 	mov	b,#0x80
      004AD3 12 20 30         [24]11685 	lcall	_baocaosms
                                  11686 ;	include/xu_ly_tin_nhan.c:157: break;
      004AD6 02 56 FD         [24]11687 	ljmp	00479$
                                  11688 ;	include/xu_ly_tin_nhan.c:159: case 'C':
      004AD9                      11689 00230$:
                                  11690 ;	include/xu_ly_tin_nhan.c:160: if(lenh_sms[4]=='e' || lenh_sms[4]=='E'){
      004AD9 90 00 1B         [24]11691 	mov	dptr,#(_lenh_sms + 0x0004)
      004ADC E0               [24]11692 	movx	a,@dptr
      004ADD FF               [12]11693 	mov	r7,a
      004ADE BF 65 02         [24]11694 	cjne	r7,#0x65,01792$
      004AE1 80 03            [24]11695 	sjmp	00251$
      004AE3                      11696 01792$:
      004AE3 BF 45 14         [24]11697 	cjne	r7,#0x45,00252$
      004AE6                      11698 00251$:
                                  11699 ;	include/xu_ly_tin_nhan.c:161: if(phone_chinh_so_sanh_that_bai)break;
      004AE6 30 08 03         [24]11700 	jnb	_phone_chinh_so_sanh_that_bai,01795$
      004AE9 02 56 FD         [24]11701 	ljmp	00479$
      004AEC                      11702 01795$:
                                  11703 ;	include/xu_ly_tin_nhan.c:162: baocaoden(CHINH,"\rbao cao den thanh cong");
                                  11704 ;	assignBit
      004AEC D2 47            [12]11705 	setb	_baocaoden_PARM_1
      004AEE 90 8C F0         [24]11706 	mov	dptr,#___str_86
      004AF1 75 F0 80         [24]11707 	mov	b,#0x80
      004AF4 12 24 3A         [24]11708 	lcall	_baocaoden
                                  11709 ;	include/xu_ly_tin_nhan.c:164: break;
      004AF7 02 56 FD         [24]11710 	ljmp	00479$
      004AFA                      11711 00252$:
                                  11712 ;	include/xu_ly_tin_nhan.c:166: else if(lenh_sms[4]=='n' || lenh_sms[4]=='N'){
      004AFA BF 6E 02         [24]11713 	cjne	r7,#0x6e,01796$
      004AFD 80 03            [24]11714 	sjmp	00247$
      004AFF                      11715 01796$:
      004AFF BF 4E 14         [24]11716 	cjne	r7,#0x4e,00248$
      004B02                      11717 00247$:
                                  11718 ;	include/xu_ly_tin_nhan.c:167: if(phone_chinh_so_sanh_that_bai)break;
      004B02 30 08 03         [24]11719 	jnb	_phone_chinh_so_sanh_that_bai,01799$
      004B05 02 56 FD         [24]11720 	ljmp	00479$
      004B08                      11721 01799$:
                                  11722 ;	include/xu_ly_tin_nhan.c:168: IAP_docxoasector1();
      004B08 12 03 34         [24]11723 	lcall	_IAP_docxoasector1
                                  11724 ;	include/xu_ly_tin_nhan.c:169: eeprom_buf[BAOCAO_EEPROM] = 1;
      004B0B 90 00 BE         [24]11725 	mov	dptr,#(_eeprom_buf + 0x0001)
      004B0E 74 01            [12]11726 	mov	a,#0x01
      004B10 F0               [24]11727 	movx	@dptr,a
                                  11728 ;	include/xu_ly_tin_nhan.c:170: IAP_ghisector1();
      004B11 12 03 6F         [24]11729 	lcall	_IAP_ghisector1
      004B14 80 51            [24]11730 	sjmp	00253$
      004B16                      11731 00248$:
                                  11732 ;	include/xu_ly_tin_nhan.c:171: }else if(lenh_sms[4]=='f' || lenh_sms[4]=='F'){
      004B16 BF 66 02         [24]11733 	cjne	r7,#0x66,01800$
      004B19 80 03            [24]11734 	sjmp	00243$
      004B1B                      11735 01800$:
      004B1B BF 46 13         [24]11736 	cjne	r7,#0x46,00244$
      004B1E                      11737 00243$:
                                  11738 ;	include/xu_ly_tin_nhan.c:172: if(phone_chinh_so_sanh_that_bai)break;
      004B1E 30 08 03         [24]11739 	jnb	_phone_chinh_so_sanh_that_bai,01803$
      004B21 02 56 FD         [24]11740 	ljmp	00479$
      004B24                      11741 01803$:
                                  11742 ;	include/xu_ly_tin_nhan.c:173: IAP_docxoasector1();
      004B24 12 03 34         [24]11743 	lcall	_IAP_docxoasector1
                                  11744 ;	include/xu_ly_tin_nhan.c:174: eeprom_buf[BAOCAO_EEPROM] = 0;
      004B27 90 00 BE         [24]11745 	mov	dptr,#(_eeprom_buf + 0x0001)
      004B2A E4               [12]11746 	clr	a
      004B2B F0               [24]11747 	movx	@dptr,a
                                  11748 ;	include/xu_ly_tin_nhan.c:175: IAP_ghisector1();
      004B2C 12 03 6F         [24]11749 	lcall	_IAP_ghisector1
      004B2F 80 36            [24]11750 	sjmp	00253$
      004B31                      11751 00244$:
                                  11752 ;	include/xu_ly_tin_nhan.c:176: }else if(lenh_sms[2] && lenh_sms[3]){
      004B31 90 00 19         [24]11753 	mov	dptr,#(_lenh_sms + 0x0002)
      004B34 E0               [24]11754 	movx	a,@dptr
      004B35 60 30            [24]11755 	jz	00253$
      004B37 90 00 1A         [24]11756 	mov	dptr,#(_lenh_sms + 0x0003)
      004B3A E0               [24]11757 	movx	a,@dptr
      004B3B 60 2A            [24]11758 	jz	00253$
                                  11759 ;	include/xu_ly_tin_nhan.c:177: if(phone_phu_so_sanh_that_bai)
      004B3D 30 09 0E         [24]11760 	jnb	_phone_phu_so_sanh_that_bai,00238$
                                  11761 ;	include/xu_ly_tin_nhan.c:178: baocaosms(CHINH,"\rlenh khong hop le");
                                  11762 ;	assignBit
      004B40 D2 46            [12]11763 	setb	_baocaosms_PARM_1
      004B42 90 8C 68         [24]11764 	mov	dptr,#___str_82
      004B45 75 F0 80         [24]11765 	mov	b,#0x80
      004B48 12 20 30         [24]11766 	lcall	_baocaosms
      004B4B 02 56 FD         [24]11767 	ljmp	00479$
      004B4E                      11768 00238$:
                                  11769 ;	include/xu_ly_tin_nhan.c:180: baocaosms(CHINH,"\rlenh khong hop le\rPhone phu gui lenh den");
                                  11770 ;	assignBit
      004B4E D2 46            [12]11771 	setb	_baocaosms_PARM_1
      004B50 90 8D 08         [24]11772 	mov	dptr,#___str_87
      004B53 75 F0 80         [24]11773 	mov	b,#0x80
      004B56 12 20 30         [24]11774 	lcall	_baocaosms
                                  11775 ;	include/xu_ly_tin_nhan.c:181: baocaosms(PHU,"\rlenh khong hop le");
                                  11776 ;	assignBit
      004B59 C2 46            [12]11777 	clr	_baocaosms_PARM_1
      004B5B 90 8C 68         [24]11778 	mov	dptr,#___str_82
      004B5E 75 F0 80         [24]11779 	mov	b,#0x80
      004B61 12 20 30         [24]11780 	lcall	_baocaosms
                                  11781 ;	include/xu_ly_tin_nhan.c:183: break;
      004B64 02 56 FD         [24]11782 	ljmp	00479$
      004B67                      11783 00253$:
                                  11784 ;	include/xu_ly_tin_nhan.c:185: if(phone_phu_so_sanh_that_bai)
      004B67 30 09 0E         [24]11785 	jnb	_phone_phu_so_sanh_that_bai,00256$
                                  11786 ;	include/xu_ly_tin_nhan.c:186: baocaosms(CHINH,"\rbao cao thanh cong");
                                  11787 ;	assignBit
      004B6A D2 46            [12]11788 	setb	_baocaosms_PARM_1
      004B6C 90 8D 32         [24]11789 	mov	dptr,#___str_88
      004B6F 75 F0 80         [24]11790 	mov	b,#0x80
      004B72 12 20 30         [24]11791 	lcall	_baocaosms
      004B75 02 56 FD         [24]11792 	ljmp	00479$
      004B78                      11793 00256$:
                                  11794 ;	include/xu_ly_tin_nhan.c:188: baocaosms(CHINH,"\rbao cao thanh cong\rPhone phu gui lenh");
                                  11795 ;	assignBit
      004B78 D2 46            [12]11796 	setb	_baocaosms_PARM_1
      004B7A 90 8D 46         [24]11797 	mov	dptr,#___str_89
      004B7D 75 F0 80         [24]11798 	mov	b,#0x80
      004B80 12 20 30         [24]11799 	lcall	_baocaosms
                                  11800 ;	include/xu_ly_tin_nhan.c:189: baocaosms(PHU,"\rbao cao thanh cong");
                                  11801 ;	assignBit
      004B83 C2 46            [12]11802 	clr	_baocaosms_PARM_1
      004B85 90 8D 32         [24]11803 	mov	dptr,#___str_88
      004B88 75 F0 80         [24]11804 	mov	b,#0x80
      004B8B 12 20 30         [24]11805 	lcall	_baocaosms
                                  11806 ;	include/xu_ly_tin_nhan.c:191: break;
      004B8E 02 56 FD         [24]11807 	ljmp	00479$
                                  11808 ;	include/xu_ly_tin_nhan.c:193: case 'S':
      004B91                      11809 00259$:
                                  11810 ;	include/xu_ly_tin_nhan.c:195: if(phone_chinh_so_sanh_that_bai)break;
      004B91 30 08 03         [24]11811 	jnb	_phone_chinh_so_sanh_that_bai,01808$
      004B94 02 56 FD         [24]11812 	ljmp	00479$
      004B97                      11813 01808$:
                                  11814 ;	include/xu_ly_tin_nhan.c:196: if(lenh_sms[4]=='y' || lenh_sms[4]=='Y' || lenh_sms[4]=='D' || lenh_sms[4]=='d'){
      004B97 90 00 1B         [24]11815 	mov	dptr,#(_lenh_sms + 0x0004)
      004B9A E0               [24]11816 	movx	a,@dptr
      004B9B FF               [12]11817 	mov	r7,a
      004B9C BF 79 02         [24]11818 	cjne	r7,#0x79,01809$
      004B9F 80 0D            [24]11819 	sjmp	00281$
      004BA1                      11820 01809$:
      004BA1 BF 59 02         [24]11821 	cjne	r7,#0x59,01810$
      004BA4 80 08            [24]11822 	sjmp	00281$
      004BA6                      11823 01810$:
      004BA6 BF 44 02         [24]11824 	cjne	r7,#0x44,01811$
      004BA9 80 03            [24]11825 	sjmp	00281$
      004BAB                      11826 01811$:
      004BAB BF 64 26         [24]11827 	cjne	r7,#0x64,00282$
      004BAE                      11828 00281$:
                                  11829 ;	include/xu_ly_tin_nhan.c:197: baocaosms(CHINH,"\rreset bo dieu khien");
                                  11830 ;	assignBit
      004BAE D2 46            [12]11831 	setb	_baocaosms_PARM_1
      004BB0 90 8D 6D         [24]11832 	mov	dptr,#___str_90
      004BB3 75 F0 80         [24]11833 	mov	b,#0x80
      004BB6 12 20 30         [24]11834 	lcall	_baocaosms
                                  11835 ;	include/xu_ly_tin_nhan.c:198: EA=0;
                                  11836 ;	assignBit
      004BB9 C2 AF            [12]11837 	clr	_EA
                                  11838 ;	include/xu_ly_tin_nhan.c:199: gsm_pw = 0;
                                  11839 ;	assignBit
      004BBB C2 A0            [12]11840 	clr	_P20
                                  11841 ;	include/xu_ly_tin_nhan.c:200: IAP_ghibyte(NORRESET_EEPROM,0);
      004BBD 75 18 00         [24]11842 	mov	_IAP_ghibyte_PARM_2,#0x00
      004BC0 90 00 05         [24]11843 	mov	dptr,#0x0005
      004BC3 12 03 01         [24]11844 	lcall	_IAP_ghibyte
                                  11845 ;	include/xu_ly_tin_nhan.c:201: RingRelay = 1;
                                  11846 ;	assignBit
      004BC6 D2 A3            [12]11847 	setb	_P23
                                  11848 ;	include/xu_ly_tin_nhan.c:202: delay_ms(4000);
      004BC8 90 0F A0         [24]11849 	mov	dptr,#0x0fa0
      004BCB 12 04 BB         [24]11850 	lcall	_delay_ms
                                  11851 ;	include/xu_ly_tin_nhan.c:203: IAP_CONTR = 0x60;
      004BCE 75 C7 60         [24]11852 	mov	_IAP_CONTR,#0x60
      004BD1 02 56 FD         [24]11853 	ljmp	00479$
      004BD4                      11854 00282$:
                                  11855 ;	include/xu_ly_tin_nhan.c:206: else if(lenh_sms[4]=='g' || lenh_sms[4]=='G'){
      004BD4 BF 67 02         [24]11856 	cjne	r7,#0x67,01814$
      004BD7 80 03            [24]11857 	sjmp	00277$
      004BD9                      11858 01814$:
      004BD9 BF 47 71         [24]11859 	cjne	r7,#0x47,00278$
      004BDC                      11860 00277$:
                                  11861 ;	include/xu_ly_tin_nhan.c:207: if(lenh_sms[8]>47 && lenh_sms[8]<58){
      004BDC 90 00 1F         [24]11862 	mov	dptr,#(_lenh_sms + 0x0008)
      004BDF E0               [24]11863 	movx	a,@dptr
      004BE0 FE               [12]11864 	mov  r6,a
      004BE1 24 D0            [12]11865 	add	a,#0xff - 0x2f
      004BE3 50 5A            [24]11866 	jnc	00270$
      004BE5 BE 3A 00         [24]11867 	cjne	r6,#0x3a,01818$
      004BE8                      11868 01818$:
      004BE8 50 55            [24]11869 	jnc	00270$
                                  11870 ;	include/xu_ly_tin_nhan.c:208: IAP_docxoasector1();
      004BEA 12 03 34         [24]11871 	lcall	_IAP_docxoasector1
                                  11872 ;	include/xu_ly_tin_nhan.c:209: ngay_reset_con_lai = eeprom_buf[NGAYRESET_EEPROM] = lenh_sms[8]-'0';
      004BED 90 00 1F         [24]11873 	mov	dptr,#(_lenh_sms + 0x0008)
      004BF0 E0               [24]11874 	movx	a,@dptr
      004BF1 24 D0            [12]11875 	add	a,#0xd0
      004BF3 FE               [12]11876 	mov	r6,a
      004BF4 90 00 C0         [24]11877 	mov	dptr,#(_eeprom_buf + 0x0003)
      004BF7 F0               [24]11878 	movx	@dptr,a
      004BF8 90 00 E6         [24]11879 	mov	dptr,#_ngay_reset_con_lai
      004BFB EE               [12]11880 	mov	a,r6
      004BFC F0               [24]11881 	movx	@dptr,a
                                  11882 ;	include/xu_ly_tin_nhan.c:210: if (lenh_sms[10]>47 && lenh_sms[10]<51 && lenh_sms[11]>47 && lenh_sms[11]<58){
      004BFD 90 00 21         [24]11883 	mov	dptr,#(_lenh_sms + 0x000a)
      004C00 E0               [24]11884 	movx	a,@dptr
      004C01 FE               [12]11885 	mov  r6,a
      004C02 24 D0            [12]11886 	add	a,#0xff - 0x2f
      004C04 50 28            [24]11887 	jnc	00265$
      004C06 BE 33 00         [24]11888 	cjne	r6,#0x33,01821$
      004C09                      11889 01821$:
      004C09 50 23            [24]11890 	jnc	00265$
      004C0B 90 00 22         [24]11891 	mov	dptr,#(_lenh_sms + 0x000b)
      004C0E E0               [24]11892 	movx	a,@dptr
      004C0F FD               [12]11893 	mov  r5,a
      004C10 24 D0            [12]11894 	add	a,#0xff - 0x2f
      004C12 50 1A            [24]11895 	jnc	00265$
      004C14 BD 3A 00         [24]11896 	cjne	r5,#0x3a,01824$
      004C17                      11897 01824$:
      004C17 50 15            [24]11898 	jnc	00265$
                                  11899 ;	include/xu_ly_tin_nhan.c:211: giodelta = (lenh_sms[10] - '0')*10 + lenh_sms[11] - '0';
      004C19 EE               [12]11900 	mov	a,r6
      004C1A 24 D0            [12]11901 	add	a,#0xd0
      004C1C 75 F0 0A         [24]11902 	mov	b,#0x0a
      004C1F A4               [48]11903 	mul	ab
      004C20 2D               [12]11904 	add	a,r5
      004C21 24 D0            [12]11905 	add	a,#0xd0
      004C23 FE               [12]11906 	mov	r6,a
                                  11907 ;	include/xu_ly_tin_nhan.c:212: if(giodelta<24)
      004C24 BE 18 00         [24]11908 	cjne	r6,#0x18,01826$
      004C27                      11909 01826$:
      004C27 50 05            [24]11910 	jnc	00265$
                                  11911 ;	include/xu_ly_tin_nhan.c:213: eeprom_buf[GIORESET_EEPROM] = giodelta;
      004C29 90 00 C1         [24]11912 	mov	dptr,#(_eeprom_buf + 0x0004)
      004C2C EE               [12]11913 	mov	a,r6
      004C2D F0               [24]11914 	movx	@dptr,a
      004C2E                      11915 00265$:
                                  11916 ;	include/xu_ly_tin_nhan.c:215: IAP_ghisector1();
      004C2E 12 03 6F         [24]11917 	lcall	_IAP_ghisector1
                                  11918 ;	include/xu_ly_tin_nhan.c:216: baocaosms(CHINH,"\rdat reset thanh cong");
                                  11919 ;	assignBit
      004C31 D2 46            [12]11920 	setb	_baocaosms_PARM_1
      004C33 90 8D 82         [24]11921 	mov	dptr,#___str_91
      004C36 75 F0 80         [24]11922 	mov	b,#0x80
      004C39 12 20 30         [24]11923 	lcall	_baocaosms
      004C3C 02 56 FD         [24]11924 	ljmp	00479$
      004C3F                      11925 00270$:
                                  11926 ;	include/xu_ly_tin_nhan.c:219: baocaosms(CHINH,"\rdat reset khong hop le");   
                                  11927 ;	assignBit
      004C3F D2 46            [12]11928 	setb	_baocaosms_PARM_1
      004C41 90 8D 98         [24]11929 	mov	dptr,#___str_92
      004C44 75 F0 80         [24]11930 	mov	b,#0x80
      004C47 12 20 30         [24]11931 	lcall	_baocaosms
                                  11932 ;	include/xu_ly_tin_nhan.c:220: break;
      004C4A 02 56 FD         [24]11933 	ljmp	00479$
      004C4D                      11934 00278$:
                                  11935 ;	include/xu_ly_tin_nhan.c:224: else if(lenh_sms[4] == 'i' || lenh_sms[4] == 'I'){
      004C4D BF 69 02         [24]11936 	cjne	r7,#0x69,01828$
      004C50 80 03            [24]11937 	sjmp	00273$
      004C52                      11938 01828$:
      004C52 BF 49 10         [24]11939 	cjne	r7,#0x49,00274$
      004C55                      11940 00273$:
                                  11941 ;	include/xu_ly_tin_nhan.c:225: baocaosms(CHINH,"\rreset gsm sau10s");
                                  11942 ;	assignBit
      004C55 D2 46            [12]11943 	setb	_baocaosms_PARM_1
      004C57 90 8D B0         [24]11944 	mov	dptr,#___str_93
      004C5A 75 F0 80         [24]11945 	mov	b,#0x80
      004C5D 12 20 30         [24]11946 	lcall	_baocaosms
                                  11947 ;	include/xu_ly_tin_nhan.c:226: gsm_pw = 0;
                                  11948 ;	assignBit
      004C60 C2 A0            [12]11949 	clr	_P20
      004C62 02 56 FD         [24]11950 	ljmp	00479$
      004C65                      11951 00274$:
                                  11952 ;	include/xu_ly_tin_nhan.c:227: }else baocaosms(CHINH,"\rlenh reset khong hop le");
                                  11953 ;	assignBit
      004C65 D2 46            [12]11954 	setb	_baocaosms_PARM_1
      004C67 90 8D C2         [24]11955 	mov	dptr,#___str_94
      004C6A 75 F0 80         [24]11956 	mov	b,#0x80
      004C6D 12 20 30         [24]11957 	lcall	_baocaosms
                                  11958 ;	include/xu_ly_tin_nhan.c:232: break;
      004C70 02 56 FD         [24]11959 	ljmp	00479$
                                  11960 ;	include/xu_ly_tin_nhan.c:247: case 'E':
      004C73                      11961 00288$:
                                  11962 ;	include/xu_ly_tin_nhan.c:248: if(phone_chinh_so_sanh_that_bai)break;
      004C73 30 08 03         [24]11963 	jnb	_phone_chinh_so_sanh_that_bai,01831$
      004C76 02 56 FD         [24]11964 	ljmp	00479$
      004C79                      11965 01831$:
                                  11966 ;	include/xu_ly_tin_nhan.c:249: if(lenh_sms[4]=='X' || lenh_sms[4]=='x'){
      004C79 90 00 1B         [24]11967 	mov	dptr,#(_lenh_sms + 0x0004)
      004C7C E0               [24]11968 	movx	a,@dptr
      004C7D FF               [12]11969 	mov	r7,a
      004C7E BF 58 02         [24]11970 	cjne	r7,#0x58,01832$
      004C81 80 03            [24]11971 	sjmp	00315$
      004C83                      11972 01832$:
      004C83 BF 78 19         [24]11973 	cjne	r7,#0x78,00316$
      004C86                      11974 00315$:
                                  11975 ;	include/xu_ly_tin_nhan.c:250: IAP_docxoasector1();
      004C86 12 03 34         [24]11976 	lcall	_IAP_docxoasector1
                                  11977 ;	include/xu_ly_tin_nhan.c:251: eeprom_buf[TATMODEN_EEPROM] = 0;
      004C89 90 00 C4         [24]11978 	mov	dptr,#(_eeprom_buf + 0x0007)
      004C8C E4               [12]11979 	clr	a
      004C8D F0               [24]11980 	movx	@dptr,a
                                  11981 ;	include/xu_ly_tin_nhan.c:252: IAP_ghisector1();
      004C8E 12 03 6F         [24]11982 	lcall	_IAP_ghisector1
                                  11983 ;	include/xu_ly_tin_nhan.c:253: baocaoden(CHINH,"\rxoa gio den thanh cong");
                                  11984 ;	assignBit
      004C91 D2 47            [12]11985 	setb	_baocaoden_PARM_1
      004C93 90 8D DB         [24]11986 	mov	dptr,#___str_95
      004C96 75 F0 80         [24]11987 	mov	b,#0x80
      004C99 12 24 3A         [24]11988 	lcall	_baocaoden
      004C9C 02 56 FD         [24]11989 	ljmp	00479$
      004C9F                      11990 00316$:
                                  11991 ;	include/xu_ly_tin_nhan.c:256: IAP_docxoasector1();
      004C9F 12 03 34         [24]11992 	lcall	_IAP_docxoasector1
                                  11993 ;	include/xu_ly_tin_nhan.c:257: IAP_ghisector1();
      004CA2 12 03 6F         [24]11994 	lcall	_IAP_ghisector1
                                  11995 ;	include/xu_ly_tin_nhan.c:258: eeprom_buf[TATMODEN_EEPROM] = 0;
      004CA5 90 00 C4         [24]11996 	mov	dptr,#(_eeprom_buf + 0x0007)
      004CA8 E4               [12]11997 	clr	a
      004CA9 F0               [24]11998 	movx	@dptr,a
                                  11999 ;	include/xu_ly_tin_nhan.c:259: for(i=4;i<75;i+=10){
      004CAA 90 01 34         [24]12000 	mov	dptr,#_xu_ly_tin_nhan_i_65537_185
      004CAD 74 04            [12]12001 	mov	a,#0x04
      004CAF F0               [24]12002 	movx	@dptr,a
      004CB0                      12003 00488$:
                                  12004 ;	include/xu_ly_tin_nhan.c:260: if(lenh_sms[i]>47 && lenh_sms[i]<51 && lenh_sms[i+1]>47 && lenh_sms[i+1]<58 &&
      004CB0 90 01 34         [24]12005 	mov	dptr,#_xu_ly_tin_nhan_i_65537_185
      004CB3 E0               [24]12006 	movx	a,@dptr
      004CB4 FF               [12]12007 	mov	r7,a
      004CB5 24 17            [12]12008 	add	a,#_lenh_sms
      004CB7 F5 82            [12]12009 	mov	dpl,a
      004CB9 E4               [12]12010 	clr	a
      004CBA 34 00            [12]12011 	addc	a,#(_lenh_sms >> 8)
      004CBC F5 83            [12]12012 	mov	dph,a
      004CBE E0               [24]12013 	movx	a,@dptr
      004CBF FE               [12]12014 	mov  r6,a
      004CC0 24 D0            [12]12015 	add	a,#0xff - 0x2f
      004CC2 40 03            [24]12016 	jc	01835$
      004CC4 02 4F C5         [24]12017 	ljmp	00292$
      004CC7                      12018 01835$:
      004CC7 BE 33 00         [24]12019 	cjne	r6,#0x33,01836$
      004CCA                      12020 01836$:
      004CCA 40 03            [24]12021 	jc	01837$
      004CCC 02 4F C5         [24]12022 	ljmp	00292$
      004CCF                      12023 01837$:
      004CCF 8F 05            [24]12024 	mov	ar5,r7
      004CD1 7F 00            [12]12025 	mov	r7,#0x00
      004CD3 74 01            [12]12026 	mov	a,#0x01
      004CD5 2D               [12]12027 	add	a,r5
      004CD6 FB               [12]12028 	mov	r3,a
      004CD7 E4               [12]12029 	clr	a
      004CD8 3F               [12]12030 	addc	a,r7
      004CD9 FC               [12]12031 	mov	r4,a
      004CDA EB               [12]12032 	mov	a,r3
      004CDB 24 17            [12]12033 	add	a,#_lenh_sms
      004CDD F5 82            [12]12034 	mov	dpl,a
      004CDF EC               [12]12035 	mov	a,r4
      004CE0 34 00            [12]12036 	addc	a,#(_lenh_sms >> 8)
      004CE2 F5 83            [12]12037 	mov	dph,a
      004CE4 E0               [24]12038 	movx	a,@dptr
      004CE5 FC               [12]12039 	mov  r4,a
      004CE6 24 D0            [12]12040 	add	a,#0xff - 0x2f
      004CE8 40 03            [24]12041 	jc	01838$
      004CEA 02 4F C5         [24]12042 	ljmp	00292$
      004CED                      12043 01838$:
      004CED 74 01            [12]12044 	mov	a,#0x01
      004CEF 2D               [12]12045 	add	a,r5
      004CF0 FB               [12]12046 	mov	r3,a
      004CF1 E4               [12]12047 	clr	a
      004CF2 3F               [12]12048 	addc	a,r7
      004CF3 FC               [12]12049 	mov	r4,a
      004CF4 EB               [12]12050 	mov	a,r3
      004CF5 24 17            [12]12051 	add	a,#_lenh_sms
      004CF7 F5 82            [12]12052 	mov	dpl,a
      004CF9 EC               [12]12053 	mov	a,r4
      004CFA 34 00            [12]12054 	addc	a,#(_lenh_sms >> 8)
      004CFC F5 83            [12]12055 	mov	dph,a
      004CFE E0               [24]12056 	movx	a,@dptr
      004CFF FC               [12]12057 	mov	r4,a
      004D00 BC 3A 00         [24]12058 	cjne	r4,#0x3a,01839$
      004D03                      12059 01839$:
      004D03 40 03            [24]12060 	jc	01840$
      004D05 02 4F C5         [24]12061 	ljmp	00292$
      004D08                      12062 01840$:
                                  12063 ;	include/xu_ly_tin_nhan.c:261: lenh_sms[i+2]>47 && lenh_sms[i+2]<54 && lenh_sms[i+3]>47 && lenh_sms[i+3]<58 &&
      004D08 74 02            [12]12064 	mov	a,#0x02
      004D0A 2D               [12]12065 	add	a,r5
      004D0B FB               [12]12066 	mov	r3,a
      004D0C E4               [12]12067 	clr	a
      004D0D 3F               [12]12068 	addc	a,r7
      004D0E FC               [12]12069 	mov	r4,a
      004D0F EB               [12]12070 	mov	a,r3
      004D10 24 17            [12]12071 	add	a,#_lenh_sms
      004D12 F5 82            [12]12072 	mov	dpl,a
      004D14 EC               [12]12073 	mov	a,r4
      004D15 34 00            [12]12074 	addc	a,#(_lenh_sms >> 8)
      004D17 F5 83            [12]12075 	mov	dph,a
      004D19 E0               [24]12076 	movx	a,@dptr
      004D1A FC               [12]12077 	mov  r4,a
      004D1B 24 D0            [12]12078 	add	a,#0xff - 0x2f
      004D1D 40 03            [24]12079 	jc	01841$
      004D1F 02 4F C5         [24]12080 	ljmp	00292$
      004D22                      12081 01841$:
      004D22 74 02            [12]12082 	mov	a,#0x02
      004D24 2D               [12]12083 	add	a,r5
      004D25 FB               [12]12084 	mov	r3,a
      004D26 E4               [12]12085 	clr	a
      004D27 3F               [12]12086 	addc	a,r7
      004D28 FC               [12]12087 	mov	r4,a
      004D29 EB               [12]12088 	mov	a,r3
      004D2A 24 17            [12]12089 	add	a,#_lenh_sms
      004D2C F5 82            [12]12090 	mov	dpl,a
      004D2E EC               [12]12091 	mov	a,r4
      004D2F 34 00            [12]12092 	addc	a,#(_lenh_sms >> 8)
      004D31 F5 83            [12]12093 	mov	dph,a
      004D33 E0               [24]12094 	movx	a,@dptr
      004D34 FC               [12]12095 	mov	r4,a
      004D35 BC 36 00         [24]12096 	cjne	r4,#0x36,01842$
      004D38                      12097 01842$:
      004D38 40 03            [24]12098 	jc	01843$
      004D3A 02 4F C5         [24]12099 	ljmp	00292$
      004D3D                      12100 01843$:
      004D3D 74 03            [12]12101 	mov	a,#0x03
      004D3F 2D               [12]12102 	add	a,r5
      004D40 FB               [12]12103 	mov	r3,a
      004D41 E4               [12]12104 	clr	a
      004D42 3F               [12]12105 	addc	a,r7
      004D43 FC               [12]12106 	mov	r4,a
      004D44 EB               [12]12107 	mov	a,r3
      004D45 24 17            [12]12108 	add	a,#_lenh_sms
      004D47 F5 82            [12]12109 	mov	dpl,a
      004D49 EC               [12]12110 	mov	a,r4
      004D4A 34 00            [12]12111 	addc	a,#(_lenh_sms >> 8)
      004D4C F5 83            [12]12112 	mov	dph,a
      004D4E E0               [24]12113 	movx	a,@dptr
      004D4F FC               [12]12114 	mov  r4,a
      004D50 24 D0            [12]12115 	add	a,#0xff - 0x2f
      004D52 40 03            [24]12116 	jc	01844$
      004D54 02 4F C5         [24]12117 	ljmp	00292$
      004D57                      12118 01844$:
      004D57 74 03            [12]12119 	mov	a,#0x03
      004D59 2D               [12]12120 	add	a,r5
      004D5A FB               [12]12121 	mov	r3,a
      004D5B E4               [12]12122 	clr	a
      004D5C 3F               [12]12123 	addc	a,r7
      004D5D FC               [12]12124 	mov	r4,a
      004D5E EB               [12]12125 	mov	a,r3
      004D5F 24 17            [12]12126 	add	a,#_lenh_sms
      004D61 F5 82            [12]12127 	mov	dpl,a
      004D63 EC               [12]12128 	mov	a,r4
      004D64 34 00            [12]12129 	addc	a,#(_lenh_sms >> 8)
      004D66 F5 83            [12]12130 	mov	dph,a
      004D68 E0               [24]12131 	movx	a,@dptr
      004D69 FC               [12]12132 	mov	r4,a
      004D6A BC 3A 00         [24]12133 	cjne	r4,#0x3a,01845$
      004D6D                      12134 01845$:
      004D6D 40 03            [24]12135 	jc	01846$
      004D6F 02 4F C5         [24]12136 	ljmp	00292$
      004D72                      12137 01846$:
                                  12138 ;	include/xu_ly_tin_nhan.c:262: lenh_sms[i+5]>47 && lenh_sms[i+5]<51 && lenh_sms[i+6]>47 && lenh_sms[i+6]<58 &&
      004D72 74 05            [12]12139 	mov	a,#0x05
      004D74 2D               [12]12140 	add	a,r5
      004D75 FB               [12]12141 	mov	r3,a
      004D76 E4               [12]12142 	clr	a
      004D77 3F               [12]12143 	addc	a,r7
      004D78 FC               [12]12144 	mov	r4,a
      004D79 EB               [12]12145 	mov	a,r3
      004D7A 24 17            [12]12146 	add	a,#_lenh_sms
      004D7C F5 82            [12]12147 	mov	dpl,a
      004D7E EC               [12]12148 	mov	a,r4
      004D7F 34 00            [12]12149 	addc	a,#(_lenh_sms >> 8)
      004D81 F5 83            [12]12150 	mov	dph,a
      004D83 E0               [24]12151 	movx	a,@dptr
      004D84 FC               [12]12152 	mov  r4,a
      004D85 24 D0            [12]12153 	add	a,#0xff - 0x2f
      004D87 40 03            [24]12154 	jc	01847$
      004D89 02 4F C5         [24]12155 	ljmp	00292$
      004D8C                      12156 01847$:
      004D8C 74 05            [12]12157 	mov	a,#0x05
      004D8E 2D               [12]12158 	add	a,r5
      004D8F FB               [12]12159 	mov	r3,a
      004D90 E4               [12]12160 	clr	a
      004D91 3F               [12]12161 	addc	a,r7
      004D92 FC               [12]12162 	mov	r4,a
      004D93 EB               [12]12163 	mov	a,r3
      004D94 24 17            [12]12164 	add	a,#_lenh_sms
      004D96 F5 82            [12]12165 	mov	dpl,a
      004D98 EC               [12]12166 	mov	a,r4
      004D99 34 00            [12]12167 	addc	a,#(_lenh_sms >> 8)
      004D9B F5 83            [12]12168 	mov	dph,a
      004D9D E0               [24]12169 	movx	a,@dptr
      004D9E FC               [12]12170 	mov	r4,a
      004D9F BC 33 00         [24]12171 	cjne	r4,#0x33,01848$
      004DA2                      12172 01848$:
      004DA2 40 03            [24]12173 	jc	01849$
      004DA4 02 4F C5         [24]12174 	ljmp	00292$
      004DA7                      12175 01849$:
      004DA7 74 06            [12]12176 	mov	a,#0x06
      004DA9 2D               [12]12177 	add	a,r5
      004DAA FB               [12]12178 	mov	r3,a
      004DAB E4               [12]12179 	clr	a
      004DAC 3F               [12]12180 	addc	a,r7
      004DAD FC               [12]12181 	mov	r4,a
      004DAE EB               [12]12182 	mov	a,r3
      004DAF 24 17            [12]12183 	add	a,#_lenh_sms
      004DB1 F5 82            [12]12184 	mov	dpl,a
      004DB3 EC               [12]12185 	mov	a,r4
      004DB4 34 00            [12]12186 	addc	a,#(_lenh_sms >> 8)
      004DB6 F5 83            [12]12187 	mov	dph,a
      004DB8 E0               [24]12188 	movx	a,@dptr
      004DB9 FC               [12]12189 	mov  r4,a
      004DBA 24 D0            [12]12190 	add	a,#0xff - 0x2f
      004DBC 40 03            [24]12191 	jc	01850$
      004DBE 02 4F C5         [24]12192 	ljmp	00292$
      004DC1                      12193 01850$:
      004DC1 74 06            [12]12194 	mov	a,#0x06
      004DC3 2D               [12]12195 	add	a,r5
      004DC4 FB               [12]12196 	mov	r3,a
      004DC5 E4               [12]12197 	clr	a
      004DC6 3F               [12]12198 	addc	a,r7
      004DC7 FC               [12]12199 	mov	r4,a
      004DC8 EB               [12]12200 	mov	a,r3
      004DC9 24 17            [12]12201 	add	a,#_lenh_sms
      004DCB F5 82            [12]12202 	mov	dpl,a
      004DCD EC               [12]12203 	mov	a,r4
      004DCE 34 00            [12]12204 	addc	a,#(_lenh_sms >> 8)
      004DD0 F5 83            [12]12205 	mov	dph,a
      004DD2 E0               [24]12206 	movx	a,@dptr
      004DD3 FC               [12]12207 	mov	r4,a
      004DD4 BC 3A 00         [24]12208 	cjne	r4,#0x3a,01851$
      004DD7                      12209 01851$:
      004DD7 40 03            [24]12210 	jc	01852$
      004DD9 02 4F C5         [24]12211 	ljmp	00292$
      004DDC                      12212 01852$:
                                  12213 ;	include/xu_ly_tin_nhan.c:263: lenh_sms[i+7]>47 && lenh_sms[i+7]<54 && lenh_sms[i+8]>47 && lenh_sms[i+8]<58 &&
      004DDC 74 07            [12]12214 	mov	a,#0x07
      004DDE 2D               [12]12215 	add	a,r5
      004DDF FB               [12]12216 	mov	r3,a
      004DE0 E4               [12]12217 	clr	a
      004DE1 3F               [12]12218 	addc	a,r7
      004DE2 FC               [12]12219 	mov	r4,a
      004DE3 EB               [12]12220 	mov	a,r3
      004DE4 24 17            [12]12221 	add	a,#_lenh_sms
      004DE6 F5 82            [12]12222 	mov	dpl,a
      004DE8 EC               [12]12223 	mov	a,r4
      004DE9 34 00            [12]12224 	addc	a,#(_lenh_sms >> 8)
      004DEB F5 83            [12]12225 	mov	dph,a
      004DED E0               [24]12226 	movx	a,@dptr
      004DEE FC               [12]12227 	mov  r4,a
      004DEF 24 D0            [12]12228 	add	a,#0xff - 0x2f
      004DF1 40 03            [24]12229 	jc	01853$
      004DF3 02 4F C5         [24]12230 	ljmp	00292$
      004DF6                      12231 01853$:
      004DF6 74 07            [12]12232 	mov	a,#0x07
      004DF8 2D               [12]12233 	add	a,r5
      004DF9 FB               [12]12234 	mov	r3,a
      004DFA E4               [12]12235 	clr	a
      004DFB 3F               [12]12236 	addc	a,r7
      004DFC FC               [12]12237 	mov	r4,a
      004DFD EB               [12]12238 	mov	a,r3
      004DFE 24 17            [12]12239 	add	a,#_lenh_sms
      004E00 F5 82            [12]12240 	mov	dpl,a
      004E02 EC               [12]12241 	mov	a,r4
      004E03 34 00            [12]12242 	addc	a,#(_lenh_sms >> 8)
      004E05 F5 83            [12]12243 	mov	dph,a
      004E07 E0               [24]12244 	movx	a,@dptr
      004E08 FC               [12]12245 	mov	r4,a
      004E09 BC 36 00         [24]12246 	cjne	r4,#0x36,01854$
      004E0C                      12247 01854$:
      004E0C 40 03            [24]12248 	jc	01855$
      004E0E 02 4F C5         [24]12249 	ljmp	00292$
      004E11                      12250 01855$:
      004E11 74 08            [12]12251 	mov	a,#0x08
      004E13 2D               [12]12252 	add	a,r5
      004E14 FB               [12]12253 	mov	r3,a
      004E15 E4               [12]12254 	clr	a
      004E16 3F               [12]12255 	addc	a,r7
      004E17 FC               [12]12256 	mov	r4,a
      004E18 EB               [12]12257 	mov	a,r3
      004E19 24 17            [12]12258 	add	a,#_lenh_sms
      004E1B F5 82            [12]12259 	mov	dpl,a
      004E1D EC               [12]12260 	mov	a,r4
      004E1E 34 00            [12]12261 	addc	a,#(_lenh_sms >> 8)
      004E20 F5 83            [12]12262 	mov	dph,a
      004E22 E0               [24]12263 	movx	a,@dptr
      004E23 FC               [12]12264 	mov  r4,a
      004E24 24 D0            [12]12265 	add	a,#0xff - 0x2f
      004E26 40 03            [24]12266 	jc	01856$
      004E28 02 4F C5         [24]12267 	ljmp	00292$
      004E2B                      12268 01856$:
      004E2B 74 08            [12]12269 	mov	a,#0x08
      004E2D 2D               [12]12270 	add	a,r5
      004E2E FB               [12]12271 	mov	r3,a
      004E2F E4               [12]12272 	clr	a
      004E30 3F               [12]12273 	addc	a,r7
      004E31 FC               [12]12274 	mov	r4,a
      004E32 EB               [12]12275 	mov	a,r3
      004E33 24 17            [12]12276 	add	a,#_lenh_sms
      004E35 F5 82            [12]12277 	mov	dpl,a
      004E37 EC               [12]12278 	mov	a,r4
      004E38 34 00            [12]12279 	addc	a,#(_lenh_sms >> 8)
      004E3A F5 83            [12]12280 	mov	dph,a
      004E3C E0               [24]12281 	movx	a,@dptr
      004E3D FC               [12]12282 	mov	r4,a
      004E3E BC 3A 00         [24]12283 	cjne	r4,#0x3a,01857$
      004E41                      12284 01857$:
      004E41 40 03            [24]12285 	jc	01858$
      004E43 02 4F C5         [24]12286 	ljmp	00292$
      004E46                      12287 01858$:
                                  12288 ;	include/xu_ly_tin_nhan.c:264: lenh_sms[i]*10+lenh_sms[i+1]<552 && lenh_sms[i+5]*10+lenh_sms[i+6]<552){
      004E46 8E 1B            [24]12289 	mov	__mulint_PARM_2,r6
      004E48 75 1C 00         [24]12290 	mov	(__mulint_PARM_2 + 1),#0x00
      004E4B 90 00 0A         [24]12291 	mov	dptr,#0x000a
      004E4E C0 07            [24]12292 	push	ar7
      004E50 C0 06            [24]12293 	push	ar6
      004E52 C0 05            [24]12294 	push	ar5
      004E54 12 83 E1         [24]12295 	lcall	__mulint
      004E57 AB 82            [24]12296 	mov	r3,dpl
      004E59 AC 83            [24]12297 	mov	r4,dph
      004E5B D0 05            [24]12298 	pop	ar5
      004E5D D0 06            [24]12299 	pop	ar6
      004E5F D0 07            [24]12300 	pop	ar7
      004E61 C0 06            [24]12301 	push	ar6
      004E63 74 01            [12]12302 	mov	a,#0x01
      004E65 2D               [12]12303 	add	a,r5
      004E66 FA               [12]12304 	mov	r2,a
      004E67 E4               [12]12305 	clr	a
      004E68 3F               [12]12306 	addc	a,r7
      004E69 FE               [12]12307 	mov	r6,a
      004E6A EA               [12]12308 	mov	a,r2
      004E6B 24 17            [12]12309 	add	a,#_lenh_sms
      004E6D F5 82            [12]12310 	mov	dpl,a
      004E6F EE               [12]12311 	mov	a,r6
      004E70 34 00            [12]12312 	addc	a,#(_lenh_sms >> 8)
      004E72 F5 83            [12]12313 	mov	dph,a
      004E74 E0               [24]12314 	movx	a,@dptr
      004E75 7A 00            [12]12315 	mov	r2,#0x00
      004E77 2B               [12]12316 	add	a,r3
      004E78 FB               [12]12317 	mov	r3,a
      004E79 EA               [12]12318 	mov	a,r2
      004E7A 3C               [12]12319 	addc	a,r4
      004E7B FC               [12]12320 	mov	r4,a
      004E7C C3               [12]12321 	clr	c
      004E7D EB               [12]12322 	mov	a,r3
      004E7E 94 28            [12]12323 	subb	a,#0x28
      004E80 EC               [12]12324 	mov	a,r4
      004E81 64 80            [12]12325 	xrl	a,#0x80
      004E83 94 82            [12]12326 	subb	a,#0x82
      004E85 D0 06            [24]12327 	pop	ar6
      004E87 40 03            [24]12328 	jc	01859$
      004E89 02 4F C5         [24]12329 	ljmp	00292$
      004E8C                      12330 01859$:
      004E8C C0 06            [24]12331 	push	ar6
      004E8E 74 05            [12]12332 	mov	a,#0x05
      004E90 2D               [12]12333 	add	a,r5
      004E91 FB               [12]12334 	mov	r3,a
      004E92 E4               [12]12335 	clr	a
      004E93 3F               [12]12336 	addc	a,r7
      004E94 FC               [12]12337 	mov	r4,a
      004E95 EB               [12]12338 	mov	a,r3
      004E96 24 17            [12]12339 	add	a,#_lenh_sms
      004E98 F5 82            [12]12340 	mov	dpl,a
      004E9A EC               [12]12341 	mov	a,r4
      004E9B 34 00            [12]12342 	addc	a,#(_lenh_sms >> 8)
      004E9D F5 83            [12]12343 	mov	dph,a
      004E9F E0               [24]12344 	movx	a,@dptr
      004EA0 FC               [12]12345 	mov	r4,a
      004EA1 8C 1B            [24]12346 	mov	__mulint_PARM_2,r4
      004EA3 75 1C 00         [24]12347 	mov	(__mulint_PARM_2 + 1),#0x00
      004EA6 90 00 0A         [24]12348 	mov	dptr,#0x000a
      004EA9 C0 07            [24]12349 	push	ar7
      004EAB C0 06            [24]12350 	push	ar6
      004EAD C0 05            [24]12351 	push	ar5
      004EAF 12 83 E1         [24]12352 	lcall	__mulint
      004EB2 AB 82            [24]12353 	mov	r3,dpl
      004EB4 AC 83            [24]12354 	mov	r4,dph
      004EB6 D0 05            [24]12355 	pop	ar5
      004EB8 D0 06            [24]12356 	pop	ar6
      004EBA D0 07            [24]12357 	pop	ar7
      004EBC 74 06            [12]12358 	mov	a,#0x06
      004EBE 2D               [12]12359 	add	a,r5
      004EBF FA               [12]12360 	mov	r2,a
      004EC0 E4               [12]12361 	clr	a
      004EC1 3F               [12]12362 	addc	a,r7
      004EC2 FE               [12]12363 	mov	r6,a
      004EC3 EA               [12]12364 	mov	a,r2
      004EC4 24 17            [12]12365 	add	a,#_lenh_sms
      004EC6 F5 82            [12]12366 	mov	dpl,a
      004EC8 EE               [12]12367 	mov	a,r6
      004EC9 34 00            [12]12368 	addc	a,#(_lenh_sms >> 8)
      004ECB F5 83            [12]12369 	mov	dph,a
      004ECD E0               [24]12370 	movx	a,@dptr
      004ECE 7A 00            [12]12371 	mov	r2,#0x00
      004ED0 2B               [12]12372 	add	a,r3
      004ED1 FB               [12]12373 	mov	r3,a
      004ED2 EA               [12]12374 	mov	a,r2
      004ED3 3C               [12]12375 	addc	a,r4
      004ED4 FC               [12]12376 	mov	r4,a
      004ED5 C3               [12]12377 	clr	c
      004ED6 EB               [12]12378 	mov	a,r3
      004ED7 94 28            [12]12379 	subb	a,#0x28
      004ED9 EC               [12]12380 	mov	a,r4
      004EDA 64 80            [12]12381 	xrl	a,#0x80
      004EDC 94 82            [12]12382 	subb	a,#0x82
      004EDE D0 06            [24]12383 	pop	ar6
      004EE0 40 03            [24]12384 	jc	01860$
      004EE2 02 4F C5         [24]12385 	ljmp	00292$
      004EE5                      12386 01860$:
                                  12387 ;	include/xu_ly_tin_nhan.c:265: eeprom_buf[TATMODEN_EEPROM+(i-4)/5+1] = ((lenh_sms[i] -'0')*10 + lenh_sms[i+1] -'0')*6 + lenh_sms[i+2]-'0';
      004EE5 ED               [12]12388 	mov	a,r5
      004EE6 24 FC            [12]12389 	add	a,#0xfc
      004EE8 F5 82            [12]12390 	mov	dpl,a
      004EEA EF               [12]12391 	mov	a,r7
      004EEB 34 FF            [12]12392 	addc	a,#0xff
      004EED F5 83            [12]12393 	mov	dph,a
      004EEF 75 1B 05         [24]12394 	mov	__divsint_PARM_2,#0x05
      004EF2 75 1C 00         [24]12395 	mov	(__divsint_PARM_2 + 1),#0x00
      004EF5 C0 07            [24]12396 	push	ar7
      004EF7 C0 06            [24]12397 	push	ar6
      004EF9 C0 05            [24]12398 	push	ar5
      004EFB 12 84 9D         [24]12399 	lcall	__divsint
      004EFE AB 82            [24]12400 	mov	r3,dpl
      004F00 D0 05            [24]12401 	pop	ar5
      004F02 D0 06            [24]12402 	pop	ar6
      004F04 D0 07            [24]12403 	pop	ar7
      004F06 74 08            [12]12404 	mov	a,#0x08
      004F08 2B               [12]12405 	add	a,r3
      004F09 FC               [12]12406 	mov	r4,a
      004F0A 33               [12]12407 	rlc	a
      004F0B 95 E0            [12]12408 	subb	a,acc
      004F0D FA               [12]12409 	mov	r2,a
      004F0E EC               [12]12410 	mov	a,r4
      004F0F 24 BD            [12]12411 	add	a,#_eeprom_buf
      004F11 F5 6F            [12]12412 	mov	_xu_ly_tin_nhan_sloc6_1_0,a
      004F13 EA               [12]12413 	mov	a,r2
      004F14 34 00            [12]12414 	addc	a,#(_eeprom_buf >> 8)
      004F16 F5 70            [12]12415 	mov	(_xu_ly_tin_nhan_sloc6_1_0 + 1),a
      004F18 EE               [12]12416 	mov	a,r6
      004F19 24 D0            [12]12417 	add	a,#0xd0
      004F1B 75 F0 0A         [24]12418 	mov	b,#0x0a
      004F1E A4               [48]12419 	mul	ab
      004F1F F5 71            [12]12420 	mov	_xu_ly_tin_nhan_sloc7_1_0,a
      004F21 74 01            [12]12421 	mov	a,#0x01
      004F23 2D               [12]12422 	add	a,r5
      004F24 FC               [12]12423 	mov	r4,a
      004F25 E4               [12]12424 	clr	a
      004F26 3F               [12]12425 	addc	a,r7
      004F27 FE               [12]12426 	mov	r6,a
      004F28 EC               [12]12427 	mov	a,r4
      004F29 24 17            [12]12428 	add	a,#_lenh_sms
      004F2B F5 82            [12]12429 	mov	dpl,a
      004F2D EE               [12]12430 	mov	a,r6
      004F2E 34 00            [12]12431 	addc	a,#(_lenh_sms >> 8)
      004F30 F5 83            [12]12432 	mov	dph,a
      004F32 E0               [24]12433 	movx	a,@dptr
      004F33 25 71            [12]12434 	add	a,_xu_ly_tin_nhan_sloc7_1_0
      004F35 24 D0            [12]12435 	add	a,#0xd0
      004F37 75 F0 06         [24]12436 	mov	b,#0x06
      004F3A A4               [48]12437 	mul	ab
      004F3B FE               [12]12438 	mov	r6,a
      004F3C 74 02            [12]12439 	mov	a,#0x02
      004F3E 2D               [12]12440 	add	a,r5
      004F3F FA               [12]12441 	mov	r2,a
      004F40 E4               [12]12442 	clr	a
      004F41 3F               [12]12443 	addc	a,r7
      004F42 FC               [12]12444 	mov	r4,a
      004F43 EA               [12]12445 	mov	a,r2
      004F44 24 17            [12]12446 	add	a,#_lenh_sms
      004F46 F5 82            [12]12447 	mov	dpl,a
      004F48 EC               [12]12448 	mov	a,r4
      004F49 34 00            [12]12449 	addc	a,#(_lenh_sms >> 8)
      004F4B F5 83            [12]12450 	mov	dph,a
      004F4D E0               [24]12451 	movx	a,@dptr
      004F4E 2E               [12]12452 	add	a,r6
      004F4F 24 D0            [12]12453 	add	a,#0xd0
      004F51 85 6F 82         [24]12454 	mov	dpl,_xu_ly_tin_nhan_sloc6_1_0
      004F54 85 70 83         [24]12455 	mov	dph,(_xu_ly_tin_nhan_sloc6_1_0 + 1)
      004F57 F0               [24]12456 	movx	@dptr,a
                                  12457 ;	include/xu_ly_tin_nhan.c:266: eeprom_buf[TATMODEN_EEPROM+(i-4)/5+2] = ((lenh_sms[i+5]-'0')*10 + lenh_sms[i+6]-'0')*6 + lenh_sms[i+7]-'0';
      004F58 74 09            [12]12458 	mov	a,#0x09
      004F5A 2B               [12]12459 	add	a,r3
      004F5B FB               [12]12460 	mov	r3,a
      004F5C 33               [12]12461 	rlc	a
      004F5D 95 E0            [12]12462 	subb	a,acc
      004F5F FE               [12]12463 	mov	r6,a
      004F60 EB               [12]12464 	mov	a,r3
      004F61 24 BD            [12]12465 	add	a,#_eeprom_buf
      004F63 FB               [12]12466 	mov	r3,a
      004F64 EE               [12]12467 	mov	a,r6
      004F65 34 00            [12]12468 	addc	a,#(_eeprom_buf >> 8)
      004F67 FE               [12]12469 	mov	r6,a
      004F68 74 05            [12]12470 	mov	a,#0x05
      004F6A 2D               [12]12471 	add	a,r5
      004F6B FA               [12]12472 	mov	r2,a
      004F6C E4               [12]12473 	clr	a
      004F6D 3F               [12]12474 	addc	a,r7
      004F6E FC               [12]12475 	mov	r4,a
      004F6F EA               [12]12476 	mov	a,r2
      004F70 24 17            [12]12477 	add	a,#_lenh_sms
      004F72 F5 82            [12]12478 	mov	dpl,a
      004F74 EC               [12]12479 	mov	a,r4
      004F75 34 00            [12]12480 	addc	a,#(_lenh_sms >> 8)
      004F77 F5 83            [12]12481 	mov	dph,a
      004F79 E0               [24]12482 	movx	a,@dptr
      004F7A 24 D0            [12]12483 	add	a,#0xd0
      004F7C 75 F0 0A         [24]12484 	mov	b,#0x0a
      004F7F A4               [48]12485 	mul	ab
      004F80 F5 71            [12]12486 	mov	_xu_ly_tin_nhan_sloc7_1_0,a
      004F82 74 06            [12]12487 	mov	a,#0x06
      004F84 2D               [12]12488 	add	a,r5
      004F85 FA               [12]12489 	mov	r2,a
      004F86 E4               [12]12490 	clr	a
      004F87 3F               [12]12491 	addc	a,r7
      004F88 FC               [12]12492 	mov	r4,a
      004F89 EA               [12]12493 	mov	a,r2
      004F8A 24 17            [12]12494 	add	a,#_lenh_sms
      004F8C F5 82            [12]12495 	mov	dpl,a
      004F8E EC               [12]12496 	mov	a,r4
      004F8F 34 00            [12]12497 	addc	a,#(_lenh_sms >> 8)
      004F91 F5 83            [12]12498 	mov	dph,a
      004F93 E0               [24]12499 	movx	a,@dptr
      004F94 25 71            [12]12500 	add	a,_xu_ly_tin_nhan_sloc7_1_0
      004F96 24 D0            [12]12501 	add	a,#0xd0
      004F98 75 F0 06         [24]12502 	mov	b,#0x06
      004F9B A4               [48]12503 	mul	ab
      004F9C FC               [12]12504 	mov	r4,a
      004F9D 74 07            [12]12505 	mov	a,#0x07
      004F9F 2D               [12]12506 	add	a,r5
      004FA0 FD               [12]12507 	mov	r5,a
      004FA1 E4               [12]12508 	clr	a
      004FA2 3F               [12]12509 	addc	a,r7
      004FA3 FF               [12]12510 	mov	r7,a
      004FA4 ED               [12]12511 	mov	a,r5
      004FA5 24 17            [12]12512 	add	a,#_lenh_sms
      004FA7 F5 82            [12]12513 	mov	dpl,a
      004FA9 EF               [12]12514 	mov	a,r7
      004FAA 34 00            [12]12515 	addc	a,#(_lenh_sms >> 8)
      004FAC F5 83            [12]12516 	mov	dph,a
      004FAE E0               [24]12517 	movx	a,@dptr
      004FAF 2C               [12]12518 	add	a,r4
      004FB0 24 D0            [12]12519 	add	a,#0xd0
      004FB2 8B 82            [24]12520 	mov	dpl,r3
      004FB4 8E 83            [24]12521 	mov	dph,r6
      004FB6 F0               [24]12522 	movx	@dptr,a
                                  12523 ;	include/xu_ly_tin_nhan.c:267: eeprom_buf[TATMODEN_EEPROM]+=2;
      004FB7 90 00 C4         [24]12524 	mov	dptr,#(_eeprom_buf + 0x0007)
      004FBA E0               [24]12525 	movx	a,@dptr
      004FBB FF               [12]12526 	mov	r7,a
      004FBC 0F               [12]12527 	inc	r7
      004FBD 0F               [12]12528 	inc	r7
      004FBE 90 00 C4         [24]12529 	mov	dptr,#(_eeprom_buf + 0x0007)
      004FC1 EF               [12]12530 	mov	a,r7
      004FC2 F0               [24]12531 	movx	@dptr,a
      004FC3 80 06            [24]12532 	sjmp	00489$
      004FC5                      12533 00292$:
                                  12534 ;	include/xu_ly_tin_nhan.c:269: else i = 75;
      004FC5 90 01 34         [24]12535 	mov	dptr,#_xu_ly_tin_nhan_i_65537_185
      004FC8 74 4B            [12]12536 	mov	a,#0x4b
      004FCA F0               [24]12537 	movx	@dptr,a
      004FCB                      12538 00489$:
                                  12539 ;	include/xu_ly_tin_nhan.c:259: for(i=4;i<75;i+=10){
      004FCB 90 01 34         [24]12540 	mov	dptr,#_xu_ly_tin_nhan_i_65537_185
      004FCE E0               [24]12541 	movx	a,@dptr
      004FCF 24 0A            [12]12542 	add	a,#0x0a
      004FD1 F0               [24]12543 	movx	@dptr,a
      004FD2 E0               [24]12544 	movx	a,@dptr
      004FD3 FF               [12]12545 	mov	r7,a
      004FD4 BF 4B 00         [24]12546 	cjne	r7,#0x4b,01861$
      004FD7                      12547 01861$:
      004FD7 50 03            [24]12548 	jnc	01862$
      004FD9 02 4C B0         [24]12549 	ljmp	00488$
      004FDC                      12550 01862$:
                                  12551 ;	include/xu_ly_tin_nhan.c:271: if(eeprom_buf[TATMODEN_EEPROM]){
      004FDC 90 00 C4         [24]12552 	mov	dptr,#(_eeprom_buf + 0x0007)
      004FDF E0               [24]12553 	movx	a,@dptr
      004FE0 60 17            [24]12554 	jz	00313$
                                  12555 ;	include/xu_ly_tin_nhan.c:272: IAP_xoasector(SECTOR1);
      004FE2 90 00 00         [24]12556 	mov	dptr,#0x0000
      004FE5 12 03 1C         [24]12557 	lcall	_IAP_xoasector
                                  12558 ;	include/xu_ly_tin_nhan.c:273: IAP_ghisector1();
      004FE8 12 03 6F         [24]12559 	lcall	_IAP_ghisector1
                                  12560 ;	include/xu_ly_tin_nhan.c:274: baocaoden(CHINH,"\rlenh den thanh cong");
                                  12561 ;	assignBit
      004FEB D2 47            [12]12562 	setb	_baocaoden_PARM_1
      004FED 90 8D F3         [24]12563 	mov	dptr,#___str_96
      004FF0 75 F0 80         [24]12564 	mov	b,#0x80
      004FF3 12 24 3A         [24]12565 	lcall	_baocaoden
      004FF6 02 56 FD         [24]12566 	ljmp	00479$
      004FF9                      12567 00313$:
                                  12568 ;	include/xu_ly_tin_nhan.c:276: }else baocaosms(CHINH,"\rthong so den khong hop le");
                                  12569 ;	assignBit
      004FF9 D2 46            [12]12570 	setb	_baocaosms_PARM_1
      004FFB 90 8E 08         [24]12571 	mov	dptr,#___str_97
      004FFE 75 F0 80         [24]12572 	mov	b,#0x80
      005001 12 20 30         [24]12573 	lcall	_baocaosms
                                  12574 ;	include/xu_ly_tin_nhan.c:279: break;
      005004 02 56 FD         [24]12575 	ljmp	00479$
                                  12576 ;	include/xu_ly_tin_nhan.c:281: case 'P':
      005007                      12577 00320$:
                                  12578 ;	include/xu_ly_tin_nhan.c:282: if(!phone_chinh_so_sanh_that_bai){
      005007 30 08 03         [24]12579 	jnb	_phone_chinh_so_sanh_that_bai,01864$
      00500A 02 56 FD         [24]12580 	ljmp	00479$
      00500D                      12581 01864$:
                                  12582 ;	include/xu_ly_tin_nhan.c:283: if(!(eep_mp3%4)){
      00500D 90 F0 10         [24]12583 	mov	dptr,#_eep_mp3
      005010 E4               [12]12584 	clr	a
      005011 93               [24]12585 	movc	a,@a+dptr
      005012 54 03            [12]12586 	anl	a,#0x03
      005014 70 0E            [24]12587 	jnz	00372$
                                  12588 ;	include/xu_ly_tin_nhan.c:284: baocaosms(CHINH,"\rKhong Co Module Mp3");
                                  12589 ;	assignBit
      005016 D2 46            [12]12590 	setb	_baocaosms_PARM_1
      005018 90 8E 23         [24]12591 	mov	dptr,#___str_98
      00501B 75 F0 80         [24]12592 	mov	b,#0x80
      00501E 12 20 30         [24]12593 	lcall	_baocaosms
      005021 02 56 FD         [24]12594 	ljmp	00479$
      005024                      12595 00372$:
                                  12596 ;	include/xu_ly_tin_nhan.c:286: else if(lenh_sms[5]=='T' || lenh_sms[5]=='t'){
      005024 90 00 1C         [24]12597 	mov	dptr,#(_lenh_sms + 0x0005)
      005027 E0               [24]12598 	movx	a,@dptr
      005028 FF               [12]12599 	mov	r7,a
      005029 BF 54 02         [24]12600 	cjne	r7,#0x54,01867$
      00502C 80 03            [24]12601 	sjmp	00367$
      00502E                      12602 01867$:
      00502E BF 74 1F         [24]12603 	cjne	r7,#0x74,00368$
      005031                      12604 00367$:
                                  12605 ;	include/xu_ly_tin_nhan.c:287: if(mp3_playing) mp3_play(9,0,0); //mp3_stop() TODO
      005031 30 92 0C         [24]12606 	jnb	_P12,00322$
      005034 75 19 00         [24]12607 	mov	_mp3_play_PARM_2,#0x00
      005037 75 1A 00         [24]12608 	mov	_mp3_play_PARM_3,#0x00
      00503A 75 82 09         [24]12609 	mov	dpl,#0x09
      00503D 12 82 9E         [24]12610 	lcall	_mp3_play
      005040                      12611 00322$:
                                  12612 ;	include/xu_ly_tin_nhan.c:288: AmplyRelay = 0;
                                  12613 ;	assignBit
      005040 C2 C2            [12]12614 	clr	_P42
                                  12615 ;	include/xu_ly_tin_nhan.c:289: baocaosms(CHINH,"\rDung Mp3");    
                                  12616 ;	assignBit
      005042 D2 46            [12]12617 	setb	_baocaosms_PARM_1
      005044 90 8E 38         [24]12618 	mov	dptr,#___str_99
      005047 75 F0 80         [24]12619 	mov	b,#0x80
      00504A 12 20 30         [24]12620 	lcall	_baocaosms
      00504D 02 56 FD         [24]12621 	ljmp	00479$
      005050                      12622 00368$:
                                  12623 ;	include/xu_ly_tin_nhan.c:291: else if(lenh_sms[5]=='N' || lenh_sms[5]=='n'){
      005050 BF 4E 02         [24]12624 	cjne	r7,#0x4e,01871$
      005053 80 03            [24]12625 	sjmp	00363$
      005055                      12626 01871$:
      005055 BF 6E 3B         [24]12627 	cjne	r7,#0x6e,00364$
      005058                      12628 00363$:
                                  12629 ;	include/xu_ly_tin_nhan.c:292: if(eep_mp3%4==1){
      005058 90 F0 10         [24]12630 	mov	dptr,#_eep_mp3
      00505B E4               [12]12631 	clr	a
      00505C 93               [24]12632 	movc	a,@a+dptr
      00505D 54 03            [12]12633 	anl	a,#0x03
      00505F FD               [12]12634 	mov	r5,a
      005060 7E 00            [12]12635 	mov	r6,#0x00
      005062 BD 01 20         [24]12636 	cjne	r5,#0x01,00324$
      005065 BE 00 1D         [24]12637 	cjne	r6,#0x00,00324$
                                  12638 ;	include/xu_ly_tin_nhan.c:293: IAP_docxoasector1();
      005068 12 03 34         [24]12639 	lcall	_IAP_docxoasector1
                                  12640 ;	include/xu_ly_tin_nhan.c:294: eeprom_buf[MP3_EEPROM] += 1;
      00506B 90 00 CD         [24]12641 	mov	dptr,#(_eeprom_buf + 0x0010)
      00506E E0               [24]12642 	movx	a,@dptr
      00506F FE               [12]12643 	mov	r6,a
      005070 0E               [12]12644 	inc	r6
      005071 90 00 CD         [24]12645 	mov	dptr,#(_eeprom_buf + 0x0010)
      005074 EE               [12]12646 	mov	a,r6
      005075 F0               [24]12647 	movx	@dptr,a
                                  12648 ;	include/xu_ly_tin_nhan.c:295: IAP_ghisector1();
      005076 12 03 6F         [24]12649 	lcall	_IAP_ghisector1
                                  12650 ;	include/xu_ly_tin_nhan.c:296: mp3_status = mp3_IDLE;
      005079 78 7E            [12]12651 	mov	r0,#_mp3_status
      00507B 76 00            [12]12652 	mov	@r0,#0x00
                                  12653 ;	include/xu_ly_tin_nhan.c:297: mp3_hour= 24;
      00507D 78 80            [12]12654 	mov	r0,#_mp3_hour
      00507F 76 18            [12]12655 	mov	@r0,#0x18
                                  12656 ;	include/xu_ly_tin_nhan.c:298: mp3_minute = 60;
      005081 78 81            [12]12657 	mov	r0,#_mp3_minute
      005083 76 3C            [12]12658 	mov	@r0,#0x3c
      005085                      12659 00324$:
                                  12660 ;	include/xu_ly_tin_nhan.c:300: baocaosms(CHINH,"\rBat mp3");
                                  12661 ;	assignBit
      005085 D2 46            [12]12662 	setb	_baocaosms_PARM_1
      005087 90 8E 42         [24]12663 	mov	dptr,#___str_100
      00508A 75 F0 80         [24]12664 	mov	b,#0x80
      00508D 12 20 30         [24]12665 	lcall	_baocaosms
      005090 02 56 FD         [24]12666 	ljmp	00479$
      005093                      12667 00364$:
                                  12668 ;	include/xu_ly_tin_nhan.c:301: }else if(lenh_sms[5]=='F' || lenh_sms[5]=='f'){
      005093 BF 46 02         [24]12669 	cjne	r7,#0x46,01876$
      005096 80 03            [24]12670 	sjmp	00359$
      005098                      12671 01876$:
      005098 BF 66 40         [24]12672 	cjne	r7,#0x66,00360$
      00509B                      12673 00359$:
                                  12674 ;	include/xu_ly_tin_nhan.c:302: if(eep_mp3%4==2){
      00509B 90 F0 10         [24]12675 	mov	dptr,#_eep_mp3
      00509E E4               [12]12676 	clr	a
      00509F 93               [24]12677 	movc	a,@a+dptr
      0050A0 54 03            [12]12678 	anl	a,#0x03
      0050A2 FD               [12]12679 	mov	r5,a
      0050A3 7E 00            [12]12680 	mov	r6,#0x00
      0050A5 BD 02 25         [24]12681 	cjne	r5,#0x02,00328$
      0050A8 BE 00 22         [24]12682 	cjne	r6,#0x00,00328$
                                  12683 ;	include/xu_ly_tin_nhan.c:303: if(mp3_playing) mp3_play(9,0,0);
      0050AB 30 92 0C         [24]12684 	jnb	_P12,00326$
      0050AE 75 19 00         [24]12685 	mov	_mp3_play_PARM_2,#0x00
      0050B1 75 1A 00         [24]12686 	mov	_mp3_play_PARM_3,#0x00
      0050B4 75 82 09         [24]12687 	mov	dpl,#0x09
      0050B7 12 82 9E         [24]12688 	lcall	_mp3_play
      0050BA                      12689 00326$:
                                  12690 ;	include/xu_ly_tin_nhan.c:304: AmplyRelay = 0;
                                  12691 ;	assignBit
      0050BA C2 C2            [12]12692 	clr	_P42
                                  12693 ;	include/xu_ly_tin_nhan.c:305: IAP_docxoasector1();
      0050BC 12 03 34         [24]12694 	lcall	_IAP_docxoasector1
                                  12695 ;	include/xu_ly_tin_nhan.c:306: eeprom_buf[MP3_EEPROM] -= 1;
      0050BF 90 00 CD         [24]12696 	mov	dptr,#(_eeprom_buf + 0x0010)
      0050C2 E0               [24]12697 	movx	a,@dptr
      0050C3 FE               [12]12698 	mov	r6,a
      0050C4 1E               [12]12699 	dec	r6
      0050C5 90 00 CD         [24]12700 	mov	dptr,#(_eeprom_buf + 0x0010)
      0050C8 EE               [12]12701 	mov	a,r6
      0050C9 F0               [24]12702 	movx	@dptr,a
                                  12703 ;	include/xu_ly_tin_nhan.c:307: IAP_ghisector1();
      0050CA 12 03 6F         [24]12704 	lcall	_IAP_ghisector1
      0050CD                      12705 00328$:
                                  12706 ;	include/xu_ly_tin_nhan.c:309: baocaosms(CHINH,"\rTat mp3");
                                  12707 ;	assignBit
      0050CD D2 46            [12]12708 	setb	_baocaosms_PARM_1
      0050CF 90 8E 4B         [24]12709 	mov	dptr,#___str_101
      0050D2 75 F0 80         [24]12710 	mov	b,#0x80
      0050D5 12 20 30         [24]12711 	lcall	_baocaosms
      0050D8 02 56 FD         [24]12712 	ljmp	00479$
      0050DB                      12713 00360$:
                                  12714 ;	include/xu_ly_tin_nhan.c:310: }else if(lenh_sms[4]>47 && lenh_sms[4]<51 && lenh_sms[5]>47 && lenh_sms[5]<58 &&
      0050DB 90 00 1B         [24]12715 	mov	dptr,#(_lenh_sms + 0x0004)
      0050DE E0               [24]12716 	movx	a,@dptr
      0050DF FE               [12]12717 	mov  r6,a
      0050E0 24 D0            [12]12718 	add	a,#0xff - 0x2f
      0050E2 40 03            [24]12719 	jc	01882$
      0050E4 02 53 2B         [24]12720 	ljmp	00338$
      0050E7                      12721 01882$:
      0050E7 BE 33 00         [24]12722 	cjne	r6,#0x33,01883$
      0050EA                      12723 01883$:
      0050EA 40 03            [24]12724 	jc	01884$
      0050EC 02 53 2B         [24]12725 	ljmp	00338$
      0050EF                      12726 01884$:
      0050EF EF               [12]12727 	mov	a,r7
      0050F0 24 D0            [12]12728 	add	a,#0xff - 0x2f
      0050F2 40 03            [24]12729 	jc	01885$
      0050F4 02 53 2B         [24]12730 	ljmp	00338$
      0050F7                      12731 01885$:
      0050F7 BF 3A 00         [24]12732 	cjne	r7,#0x3a,01886$
      0050FA                      12733 01886$:
      0050FA 40 03            [24]12734 	jc	01887$
      0050FC 02 53 2B         [24]12735 	ljmp	00338$
      0050FF                      12736 01887$:
                                  12737 ;	include/xu_ly_tin_nhan.c:311: lenh_sms[6]>47 && lenh_sms[6]<54 && (lenh_sms[7]==48 || lenh_sms[7]==53) &&
      0050FF 90 00 1D         [24]12738 	mov	dptr,#(_lenh_sms + 0x0006)
      005102 E0               [24]12739 	movx	a,@dptr
      005103 FF               [12]12740 	mov  r7,a
      005104 24 D0            [12]12741 	add	a,#0xff - 0x2f
      005106 40 03            [24]12742 	jc	01888$
      005108 02 53 2B         [24]12743 	ljmp	00338$
      00510B                      12744 01888$:
      00510B BF 36 00         [24]12745 	cjne	r7,#0x36,01889$
      00510E                      12746 01889$:
      00510E 40 03            [24]12747 	jc	01890$
      005110 02 53 2B         [24]12748 	ljmp	00338$
      005113                      12749 01890$:
      005113 90 00 1E         [24]12750 	mov	dptr,#(_lenh_sms + 0x0007)
      005116 E0               [24]12751 	movx	a,@dptr
      005117 FF               [12]12752 	mov	r7,a
      005118 BF 30 02         [24]12753 	cjne	r7,#0x30,01891$
      00511B 80 08            [24]12754 	sjmp	00347$
      00511D                      12755 01891$:
      00511D BF 35 02         [24]12756 	cjne	r7,#0x35,01892$
      005120 80 03            [24]12757 	sjmp	01893$
      005122                      12758 01892$:
      005122 02 53 2B         [24]12759 	ljmp	00338$
      005125                      12760 01893$:
      005125                      12761 00347$:
                                  12762 ;	include/xu_ly_tin_nhan.c:312: lenh_sms[9]>47 && lenh_sms[9]<52 && lenh_sms[10]>47 && lenh_sms[10]<58 &&
      005125 90 00 20         [24]12763 	mov	dptr,#(_lenh_sms + 0x0009)
      005128 E0               [24]12764 	movx	a,@dptr
      005129 FF               [12]12765 	mov  r7,a
      00512A 24 D0            [12]12766 	add	a,#0xff - 0x2f
      00512C 40 03            [24]12767 	jc	01894$
      00512E 02 53 2B         [24]12768 	ljmp	00338$
      005131                      12769 01894$:
      005131 BF 34 00         [24]12770 	cjne	r7,#0x34,01895$
      005134                      12771 01895$:
      005134 40 03            [24]12772 	jc	01896$
      005136 02 53 2B         [24]12773 	ljmp	00338$
      005139                      12774 01896$:
      005139 90 00 21         [24]12775 	mov	dptr,#(_lenh_sms + 0x000a)
      00513C E0               [24]12776 	movx	a,@dptr
      00513D FF               [12]12777 	mov  r7,a
      00513E 24 D0            [12]12778 	add	a,#0xff - 0x2f
      005140 40 03            [24]12779 	jc	01897$
      005142 02 53 2B         [24]12780 	ljmp	00338$
      005145                      12781 01897$:
      005145 BF 3A 00         [24]12782 	cjne	r7,#0x3a,01898$
      005148                      12783 01898$:
      005148 40 03            [24]12784 	jc	01899$
      00514A 02 53 2B         [24]12785 	ljmp	00338$
      00514D                      12786 01899$:
                                  12787 ;	include/xu_ly_tin_nhan.c:313: lenh_sms[11]>47 && lenh_sms[11]<50 && lenh_sms[12]>47 && lenh_sms[12]<58 &&
      00514D 90 00 22         [24]12788 	mov	dptr,#(_lenh_sms + 0x000b)
      005150 E0               [24]12789 	movx	a,@dptr
      005151 FF               [12]12790 	mov  r7,a
      005152 24 D0            [12]12791 	add	a,#0xff - 0x2f
      005154 40 03            [24]12792 	jc	01900$
      005156 02 53 2B         [24]12793 	ljmp	00338$
      005159                      12794 01900$:
      005159 BF 32 00         [24]12795 	cjne	r7,#0x32,01901$
      00515C                      12796 01901$:
      00515C 40 03            [24]12797 	jc	01902$
      00515E 02 53 2B         [24]12798 	ljmp	00338$
      005161                      12799 01902$:
      005161 90 00 23         [24]12800 	mov	dptr,#(_lenh_sms + 0x000c)
      005164 E0               [24]12801 	movx	a,@dptr
      005165 FF               [12]12802 	mov  r7,a
      005166 24 D0            [12]12803 	add	a,#0xff - 0x2f
      005168 40 03            [24]12804 	jc	01903$
      00516A 02 53 2B         [24]12805 	ljmp	00338$
      00516D                      12806 01903$:
      00516D BF 3A 00         [24]12807 	cjne	r7,#0x3a,01904$
      005170                      12808 01904$:
      005170 40 03            [24]12809 	jc	01905$
      005172 02 53 2B         [24]12810 	ljmp	00338$
      005175                      12811 01905$:
                                  12812 ;	include/xu_ly_tin_nhan.c:314: lenh_sms[13]>47 && lenh_sms[13]<58 && lenh_sms[14]>47 && lenh_sms[14]<58){
      005175 90 00 24         [24]12813 	mov	dptr,#(_lenh_sms + 0x000d)
      005178 E0               [24]12814 	movx	a,@dptr
      005179 FF               [12]12815 	mov  r7,a
      00517A 24 D0            [12]12816 	add	a,#0xff - 0x2f
      00517C 40 03            [24]12817 	jc	01906$
      00517E 02 53 2B         [24]12818 	ljmp	00338$
      005181                      12819 01906$:
      005181 BF 3A 00         [24]12820 	cjne	r7,#0x3a,01907$
      005184                      12821 01907$:
      005184 40 03            [24]12822 	jc	01908$
      005186 02 53 2B         [24]12823 	ljmp	00338$
      005189                      12824 01908$:
      005189 90 00 25         [24]12825 	mov	dptr,#(_lenh_sms + 0x000e)
      00518C E0               [24]12826 	movx	a,@dptr
      00518D FF               [12]12827 	mov  r7,a
      00518E 24 D0            [12]12828 	add	a,#0xff - 0x2f
      005190 40 03            [24]12829 	jc	01909$
      005192 02 53 2B         [24]12830 	ljmp	00338$
      005195                      12831 01909$:
      005195 BF 3A 00         [24]12832 	cjne	r7,#0x3a,01910$
      005198                      12833 01910$:
      005198 40 03            [24]12834 	jc	01911$
      00519A 02 53 2B         [24]12835 	ljmp	00338$
      00519D                      12836 01911$:
                                  12837 ;	include/xu_ly_tin_nhan.c:315: if(mp3_playing) mp3_play(9,0,0);
      00519D 30 92 0C         [24]12838 	jnb	_P12,00330$
      0051A0 75 19 00         [24]12839 	mov	_mp3_play_PARM_2,#0x00
      0051A3 75 1A 00         [24]12840 	mov	_mp3_play_PARM_3,#0x00
      0051A6 75 82 09         [24]12841 	mov	dpl,#0x09
      0051A9 12 82 9E         [24]12842 	lcall	_mp3_play
      0051AC                      12843 00330$:
                                  12844 ;	include/xu_ly_tin_nhan.c:316: if(!mp3_playing){
      0051AC 30 92 03         [24]12845 	jnb	_P12,01913$
      0051AF 02 53 1D         [24]12846 	ljmp	00335$
      0051B2                      12847 01913$:
                                  12848 ;	include/xu_ly_tin_nhan.c:317: AmplyRelay = 1;
                                  12849 ;	assignBit
      0051B2 D2 C2            [12]12850 	setb	_P42
                                  12851 ;	include/xu_ly_tin_nhan.c:318: u8 nam = (lenh_sms[13]-'0')*10+lenh_sms[14]-'0';
      0051B4 90 00 24         [24]12852 	mov	dptr,#(_lenh_sms + 0x000d)
      0051B7 E0               [24]12853 	movx	a,@dptr
      0051B8 24 D0            [12]12854 	add	a,#0xd0
      0051BA 75 F0 0A         [24]12855 	mov	b,#0x0a
      0051BD A4               [48]12856 	mul	ab
      0051BE FF               [12]12857 	mov	r7,a
      0051BF 90 00 25         [24]12858 	mov	dptr,#(_lenh_sms + 0x000e)
      0051C2 E0               [24]12859 	movx	a,@dptr
      0051C3 2F               [12]12860 	add	a,r7
      0051C4 24 D0            [12]12861 	add	a,#0xd0
      0051C6 FF               [12]12862 	mov	r7,a
                                  12863 ;	include/xu_ly_tin_nhan.c:319: u16 check = (23*((lenh_sms[11]-'0')*10+lenh_sms[12]-'0')/9 + ((lenh_sms[9]-'0')*10+lenh_sms[10]-'0') + 
      0051C7 90 00 22         [24]12864 	mov	dptr,#(_lenh_sms + 0x000b)
      0051CA E0               [24]12865 	movx	a,@dptr
      0051CB 7D 00            [12]12866 	mov	r5,#0x00
      0051CD 24 D0            [12]12867 	add	a,#0xd0
      0051CF F5 1B            [12]12868 	mov	__mulint_PARM_2,a
      0051D1 ED               [12]12869 	mov	a,r5
      0051D2 34 FF            [12]12870 	addc	a,#0xff
      0051D4 F5 1C            [12]12871 	mov	(__mulint_PARM_2 + 1),a
      0051D6 90 00 0A         [24]12872 	mov	dptr,#0x000a
      0051D9 C0 07            [24]12873 	push	ar7
      0051DB 12 83 E1         [24]12874 	lcall	__mulint
      0051DE AD 82            [24]12875 	mov	r5,dpl
      0051E0 AE 83            [24]12876 	mov	r6,dph
      0051E2 90 00 23         [24]12877 	mov	dptr,#(_lenh_sms + 0x000c)
      0051E5 E0               [24]12878 	movx	a,@dptr
      0051E6 7B 00            [12]12879 	mov	r3,#0x00
      0051E8 2D               [12]12880 	add	a,r5
      0051E9 FD               [12]12881 	mov	r5,a
      0051EA EB               [12]12882 	mov	a,r3
      0051EB 3E               [12]12883 	addc	a,r6
      0051EC FE               [12]12884 	mov	r6,a
      0051ED ED               [12]12885 	mov	a,r5
      0051EE 24 D0            [12]12886 	add	a,#0xd0
      0051F0 FD               [12]12887 	mov	r5,a
      0051F1 EE               [12]12888 	mov	a,r6
      0051F2 34 FF            [12]12889 	addc	a,#0xff
      0051F4 FE               [12]12890 	mov	r6,a
      0051F5 8D 1B            [24]12891 	mov	__mulint_PARM_2,r5
      0051F7 8E 1C            [24]12892 	mov	(__mulint_PARM_2 + 1),r6
      0051F9 90 00 17         [24]12893 	mov	dptr,#0x0017
      0051FC C0 06            [24]12894 	push	ar6
      0051FE C0 05            [24]12895 	push	ar5
      005200 12 83 E1         [24]12896 	lcall	__mulint
      005203 75 1B 09         [24]12897 	mov	__divsint_PARM_2,#0x09
      005206 75 1C 00         [24]12898 	mov	(__divsint_PARM_2 + 1),#0x00
      005209 12 84 9D         [24]12899 	lcall	__divsint
      00520C E5 82            [12]12900 	mov	a,dpl
      00520E 85 83 F0         [24]12901 	mov	b,dph
      005211 D0 05            [24]12902 	pop	ar5
      005213 D0 06            [24]12903 	pop	ar6
      005215 D0 07            [24]12904 	pop	ar7
      005217 24 D1            [12]12905 	add	a,#0xd1
      005219 FB               [12]12906 	mov	r3,a
      00521A 74 FF            [12]12907 	mov	a,#0xff
      00521C 35 F0            [12]12908 	addc	a,b
      00521E FC               [12]12909 	mov	r4,a
      00521F C3               [12]12910 	clr	c
      005220 74 02            [12]12911 	mov	a,#0x02
      005222 9D               [12]12912 	subb	a,r5
      005223 74 80            [12]12913 	mov	a,#(0x00 ^ 0x80)
      005225 8E F0            [24]12914 	mov	b,r6
      005227 63 F0 80         [24]12915 	xrl	b,#0x80
      00522A 95 F0            [12]12916 	subb	a,b
      00522C 50 12            [24]12917 	jnc	00498$
      00522E 74 03            [12]12918 	mov	a,#0x03
      005230 5F               [12]12919 	anl	a,r7
      005231 7E 00            [12]12920 	mov	r6,#0x00
      005233 4E               [12]12921 	orl	a,r6
      005234 B4 01 00         [24]12922 	cjne	a,#0x01,01915$
      005237                      12923 01915$:
      005237 92 4C            [24]12924 	mov  _xu_ly_tin_nhan_sloc8_1_0,c
      005239 E4               [12]12925 	clr	a
      00523A 33               [12]12926 	rlc	a
      00523B FD               [12]12927 	mov	r5,a
      00523C 7E 00            [12]12928 	mov	r6,#0x00
      00523E 80 04            [24]12929 	sjmp	00499$
      005240                      12930 00498$:
      005240 7D 02            [12]12931 	mov	r5,#0x02
      005242 7E 00            [12]12932 	mov	r6,#0x00
      005244                      12933 00499$:
      005244 ED               [12]12934 	mov	a,r5
      005245 2B               [12]12935 	add	a,r3
      005246 FB               [12]12936 	mov	r3,a
      005247 EE               [12]12937 	mov	a,r6
      005248 3C               [12]12938 	addc	a,r4
      005249 FC               [12]12939 	mov	r4,a
      00524A 7E 00            [12]12940 	mov	r6,#0x00
      00524C EF               [12]12941 	mov	a,r7
      00524D 2B               [12]12942 	add	a,r3
      00524E FB               [12]12943 	mov	r3,a
      00524F EE               [12]12944 	mov	a,r6
      005250 3C               [12]12945 	addc	a,r4
      005251 FC               [12]12946 	mov	r4,a
      005252 8F 82            [24]12947 	mov	dpl,r7
      005254 8E 83            [24]12948 	mov	dph,r6
      005256 A3               [24]12949 	inc	dptr
      005257 A3               [24]12950 	inc	dptr
      005258 A3               [24]12951 	inc	dptr
      005259 75 1B 04         [24]12952 	mov	__divsint_PARM_2,#0x04
                                  12953 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      00525C 8E 1C            [24]12954 	mov	(__divsint_PARM_2 + 1),r6
      00525E C0 04            [24]12955 	push	ar4
      005260 C0 03            [24]12956 	push	ar3
      005262 12 84 9D         [24]12957 	lcall	__divsint
      005265 AE 82            [24]12958 	mov	r6,dpl
      005267 AF 83            [24]12959 	mov	r7,dph
      005269 D0 03            [24]12960 	pop	ar3
      00526B D0 04            [24]12961 	pop	ar4
      00526D EE               [12]12962 	mov	a,r6
      00526E 2B               [12]12963 	add	a,r3
      00526F FB               [12]12964 	mov	r3,a
      005270 EF               [12]12965 	mov	a,r7
      005271 3C               [12]12966 	addc	a,r4
      005272 FC               [12]12967 	mov	r4,a
      005273 90 00 20         [24]12968 	mov	dptr,#(_lenh_sms + 0x0009)
      005276 E0               [24]12969 	movx	a,@dptr
      005277 7E 00            [12]12970 	mov	r6,#0x00
      005279 24 D0            [12]12971 	add	a,#0xd0
      00527B F5 1B            [12]12972 	mov	__mulint_PARM_2,a
      00527D EE               [12]12973 	mov	a,r6
      00527E 34 FF            [12]12974 	addc	a,#0xff
      005280 F5 1C            [12]12975 	mov	(__mulint_PARM_2 + 1),a
      005282 90 00 0A         [24]12976 	mov	dptr,#0x000a
      005285 C0 04            [24]12977 	push	ar4
      005287 C0 03            [24]12978 	push	ar3
      005289 12 83 E1         [24]12979 	lcall	__mulint
      00528C AE 82            [24]12980 	mov	r6,dpl
      00528E AF 83            [24]12981 	mov	r7,dph
      005290 D0 03            [24]12982 	pop	ar3
      005292 D0 04            [24]12983 	pop	ar4
      005294 90 00 21         [24]12984 	mov	dptr,#(_lenh_sms + 0x000a)
      005297 E0               [24]12985 	movx	a,@dptr
      005298 FD               [12]12986 	mov	r5,a
      005299 7A 00            [12]12987 	mov	r2,#0x00
      00529B 2E               [12]12988 	add	a,r6
      00529C FE               [12]12989 	mov	r6,a
      00529D EA               [12]12990 	mov	a,r2
      00529E 3F               [12]12991 	addc	a,r7
      00529F FF               [12]12992 	mov	r7,a
      0052A0 EE               [12]12993 	mov	a,r6
      0052A1 2B               [12]12994 	add	a,r3
      0052A2 FE               [12]12995 	mov	r6,a
      0052A3 EF               [12]12996 	mov	a,r7
      0052A4 3C               [12]12997 	addc	a,r4
      0052A5 FF               [12]12998 	mov	r7,a
                                  12999 ;	include/xu_ly_tin_nhan.c:321: mp3_play(eep_mp3>3?check%7+1:10,(lenh_sms[4]-'0')*10+lenh_sms[5]-'0',(lenh_sms[6]-'0')*10+lenh_sms[7]-'0');
      0052A6 90 F0 10         [24]13000 	mov	dptr,#_eep_mp3
      0052A9 E4               [12]13001 	clr	a
      0052AA 93               [24]13002 	movc	a,@a+dptr
      0052AB FD               [12]13003 	mov  r5,a
      0052AC 24 FC            [12]13004 	add	a,#0xff - 0x03
      0052AE 50 17            [24]13005 	jnc	00500$
      0052B0 75 1B 07         [24]13006 	mov	__moduint_PARM_2,#0x07
      0052B3 75 1C 00         [24]13007 	mov	(__moduint_PARM_2 + 1),#0x00
      0052B6 8E 82            [24]13008 	mov	dpl,r6
      0052B8 8F 83            [24]13009 	mov	dph,r7
      0052BA 12 83 FE         [24]13010 	lcall	__moduint
      0052BD AE 82            [24]13011 	mov	r6,dpl
      0052BF 0E               [12]13012 	inc	r6
      0052C0 EE               [12]13013 	mov	a,r6
      0052C1 33               [12]13014 	rlc	a
      0052C2 95 E0            [12]13015 	subb	a,acc
      0052C4 FF               [12]13016 	mov	r7,a
      0052C5 80 04            [24]13017 	sjmp	00501$
      0052C7                      13018 00500$:
      0052C7 7E 0A            [12]13019 	mov	r6,#0x0a
      0052C9 7F 00            [12]13020 	mov	r7,#0x00
      0052CB                      13021 00501$:
      0052CB 90 00 1B         [24]13022 	mov	dptr,#(_lenh_sms + 0x0004)
      0052CE E0               [24]13023 	movx	a,@dptr
      0052CF 24 D0            [12]13024 	add	a,#0xd0
      0052D1 75 F0 0A         [24]13025 	mov	b,#0x0a
      0052D4 A4               [48]13026 	mul	ab
      0052D5 FF               [12]13027 	mov	r7,a
      0052D6 90 00 1C         [24]13028 	mov	dptr,#(_lenh_sms + 0x0005)
      0052D9 E0               [24]13029 	movx	a,@dptr
      0052DA 2F               [12]13030 	add	a,r7
      0052DB 24 D0            [12]13031 	add	a,#0xd0
      0052DD F5 19            [12]13032 	mov	_mp3_play_PARM_2,a
      0052DF 90 00 1D         [24]13033 	mov	dptr,#(_lenh_sms + 0x0006)
      0052E2 E0               [24]13034 	movx	a,@dptr
      0052E3 24 D0            [12]13035 	add	a,#0xd0
      0052E5 75 F0 0A         [24]13036 	mov	b,#0x0a
      0052E8 A4               [48]13037 	mul	ab
      0052E9 FF               [12]13038 	mov	r7,a
      0052EA 90 00 1E         [24]13039 	mov	dptr,#(_lenh_sms + 0x0007)
      0052ED E0               [24]13040 	movx	a,@dptr
      0052EE 2F               [12]13041 	add	a,r7
      0052EF 24 D0            [12]13042 	add	a,#0xd0
      0052F1 F5 1A            [12]13043 	mov	_mp3_play_PARM_3,a
      0052F3 8E 82            [24]13044 	mov	dpl,r6
      0052F5 12 82 9E         [24]13045 	lcall	_mp3_play
                                  13046 ;	include/xu_ly_tin_nhan.c:322: delay_ms(1500);
      0052F8 90 05 DC         [24]13047 	mov	dptr,#0x05dc
      0052FB 12 04 BB         [24]13048 	lcall	_delay_ms
                                  13049 ;	include/xu_ly_tin_nhan.c:323: if(mp3_playing) baocaosms(CHINH,"\rTest mp3 thanh cong");
      0052FE 30 92 0E         [24]13050 	jnb	_P12,00332$
                                  13051 ;	assignBit
      005301 D2 46            [12]13052 	setb	_baocaosms_PARM_1
      005303 90 8E 54         [24]13053 	mov	dptr,#___str_102
      005306 75 F0 80         [24]13054 	mov	b,#0x80
      005309 12 20 30         [24]13055 	lcall	_baocaosms
      00530C 02 56 FD         [24]13056 	ljmp	00479$
      00530F                      13057 00332$:
                                  13058 ;	include/xu_ly_tin_nhan.c:324: else baocaosms(CHINH,"\rkhong dung gio phat hoac mp3 loi");
                                  13059 ;	assignBit
      00530F D2 46            [12]13060 	setb	_baocaosms_PARM_1
      005311 90 8E 69         [24]13061 	mov	dptr,#___str_103
      005314 75 F0 80         [24]13062 	mov	b,#0x80
      005317 12 20 30         [24]13063 	lcall	_baocaosms
      00531A 02 56 FD         [24]13064 	ljmp	00479$
      00531D                      13065 00335$:
                                  13066 ;	include/xu_ly_tin_nhan.c:325: }else baocaosms(CHINH,"\rMp3 dang choi nhac nen chua the test");
                                  13067 ;	assignBit
      00531D D2 46            [12]13068 	setb	_baocaosms_PARM_1
      00531F 90 8E 8B         [24]13069 	mov	dptr,#___str_104
      005322 75 F0 80         [24]13070 	mov	b,#0x80
      005325 12 20 30         [24]13071 	lcall	_baocaosms
      005328 02 56 FD         [24]13072 	ljmp	00479$
      00532B                      13073 00338$:
                                  13074 ;	include/xu_ly_tin_nhan.c:326: }else baocaosms(CHINH,"\rLenh MP3 khong hop le");
                                  13075 ;	assignBit
      00532B D2 46            [12]13076 	setb	_baocaosms_PARM_1
      00532D 90 8E B1         [24]13077 	mov	dptr,#___str_105
      005330 75 F0 80         [24]13078 	mov	b,#0x80
      005333 12 20 30         [24]13079 	lcall	_baocaosms
                                  13080 ;	include/xu_ly_tin_nhan.c:328: break;
      005336 02 56 FD         [24]13081 	ljmp	00479$
                                  13082 ;	include/xu_ly_tin_nhan.c:330: case 'I':
      005339                      13083 00377$:
                                  13084 ;	include/xu_ly_tin_nhan.c:331: if(!phone_chinh_so_sanh_that_bai){
      005339 30 08 03         [24]13085 	jnb	_phone_chinh_so_sanh_that_bai,01918$
      00533C 02 56 FD         [24]13086 	ljmp	00479$
      00533F                      13087 01918$:
                                  13088 ;	include/xu_ly_tin_nhan.c:332: if(lenh_sms[4]=='B' || lenh_sms[4]=='b' || lenh_sms[5]=='N' || lenh_sms[5]=='n' ){
      00533F 90 00 1B         [24]13089 	mov	dptr,#(_lenh_sms + 0x0004)
      005342 E0               [24]13090 	movx	a,@dptr
      005343 FF               [12]13091 	mov	r7,a
      005344 BF 42 02         [24]13092 	cjne	r7,#0x42,01919$
      005347 80 12            [24]13093 	sjmp	00383$
      005349                      13094 01919$:
      005349 BF 62 02         [24]13095 	cjne	r7,#0x62,01920$
      00534C 80 0D            [24]13096 	sjmp	00383$
      00534E                      13097 01920$:
      00534E 90 00 1C         [24]13098 	mov	dptr,#(_lenh_sms + 0x0005)
      005351 E0               [24]13099 	movx	a,@dptr
      005352 FE               [12]13100 	mov	r6,a
      005353 BE 4E 02         [24]13101 	cjne	r6,#0x4e,01921$
      005356 80 03            [24]13102 	sjmp	00383$
      005358                      13103 01921$:
      005358 BE 6E 1D         [24]13104 	cjne	r6,#0x6e,00384$
      00535B                      13105 00383$:
                                  13106 ;	include/xu_ly_tin_nhan.c:333: IAP_docxoasector1();
      00535B 12 03 34         [24]13107 	lcall	_IAP_docxoasector1
                                  13108 ;	include/xu_ly_tin_nhan.c:334: eeprom_buf[GPSON_EEPROM] = 1;
      00535E 90 00 BF         [24]13109 	mov	dptr,#(_eeprom_buf + 0x0002)
      005361 74 01            [12]13110 	mov	a,#0x01
      005363 F0               [24]13111 	movx	@dptr,a
                                  13112 ;	include/xu_ly_tin_nhan.c:335: IAP_ghisector1();
      005364 12 03 6F         [24]13113 	lcall	_IAP_ghisector1
                                  13114 ;	include/xu_ly_tin_nhan.c:337: gsm_thietlapngaygiothuc();
      005367 12 25 33         [24]13115 	lcall	_gsm_thietlapngaygiothuc
                                  13116 ;	include/xu_ly_tin_nhan.c:338: baocaosms(CHINH,"\rBat GPS");
                                  13117 ;	assignBit
      00536A D2 46            [12]13118 	setb	_baocaosms_PARM_1
      00536C 90 8E C8         [24]13119 	mov	dptr,#___str_106
      00536F 75 F0 80         [24]13120 	mov	b,#0x80
      005372 12 20 30         [24]13121 	lcall	_baocaosms
      005375 02 56 FD         [24]13122 	ljmp	00479$
      005378                      13123 00384$:
                                  13124 ;	include/xu_ly_tin_nhan.c:340: else if(lenh_sms[4]=='T' || lenh_sms[4]=='t' || lenh_sms[5]=='B' || lenh_sms[5]=='b' ){
      005378 BF 54 02         [24]13125 	cjne	r7,#0x54,01924$
      00537B 80 12            [24]13126 	sjmp	00378$
      00537D                      13127 01924$:
      00537D BF 74 02         [24]13128 	cjne	r7,#0x74,01925$
      005380 80 0D            [24]13129 	sjmp	00378$
      005382                      13130 01925$:
      005382 BE 42 02         [24]13131 	cjne	r6,#0x42,01926$
      005385 80 08            [24]13132 	sjmp	00378$
      005387                      13133 01926$:
      005387 BE 62 02         [24]13134 	cjne	r6,#0x62,01927$
      00538A 80 03            [24]13135 	sjmp	01928$
      00538C                      13136 01927$:
      00538C 02 56 FD         [24]13137 	ljmp	00479$
      00538F                      13138 01928$:
      00538F                      13139 00378$:
                                  13140 ;	include/xu_ly_tin_nhan.c:341: IAP_docxoasector1();
      00538F 12 03 34         [24]13141 	lcall	_IAP_docxoasector1
                                  13142 ;	include/xu_ly_tin_nhan.c:342: eeprom_buf[GPSON_EEPROM] = 0;
      005392 90 00 BF         [24]13143 	mov	dptr,#(_eeprom_buf + 0x0002)
      005395 E4               [12]13144 	clr	a
      005396 F0               [24]13145 	movx	@dptr,a
                                  13146 ;	include/xu_ly_tin_nhan.c:343: IAP_ghisector1();
      005397 12 03 6F         [24]13147 	lcall	_IAP_ghisector1
                                  13148 ;	include/xu_ly_tin_nhan.c:344: GPS_time = 0;
                                  13149 ;	assignBit
      00539A C2 1D            [12]13150 	clr	_GPS_time
                                  13151 ;	include/xu_ly_tin_nhan.c:345: baocaosms(CHINH,"\rTat GPS"); 
                                  13152 ;	assignBit
      00539C D2 46            [12]13153 	setb	_baocaosms_PARM_1
      00539E 90 8E D1         [24]13154 	mov	dptr,#___str_107
      0053A1 75 F0 80         [24]13155 	mov	b,#0x80
      0053A4 12 20 30         [24]13156 	lcall	_baocaosms
                                  13157 ;	include/xu_ly_tin_nhan.c:348: break;
      0053A7 02 56 FD         [24]13158 	ljmp	00479$
                                  13159 ;	include/xu_ly_tin_nhan.c:350: case 'T':
      0053AA                      13160 00392$:
                                  13161 ;	include/xu_ly_tin_nhan.c:351: if(!phone_chinh_so_sanh_that_bai){
      0053AA 30 08 03         [24]13162 	jnb	_phone_chinh_so_sanh_that_bai,01929$
      0053AD 02 56 C9         [24]13163 	ljmp	00474$
      0053B0                      13164 01929$:
                                  13165 ;	include/xu_ly_tin_nhan.c:352: if(lenh_sms[3]=='G' || lenh_sms[3]=='g' || lenh_sms[3]=='C' || lenh_sms[3]=='c' ){
      0053B0 90 00 1A         [24]13166 	mov	dptr,#(_lenh_sms + 0x0003)
      0053B3 E0               [24]13167 	movx	a,@dptr
      0053B4 FF               [12]13168 	mov	r7,a
      0053B5 BF 47 02         [24]13169 	cjne	r7,#0x47,01930$
      0053B8 80 0D            [24]13170 	sjmp	00467$
      0053BA                      13171 01930$:
      0053BA BF 67 02         [24]13172 	cjne	r7,#0x67,01931$
      0053BD 80 08            [24]13173 	sjmp	00467$
      0053BF                      13174 01931$:
      0053BF BF 43 02         [24]13175 	cjne	r7,#0x43,01932$
      0053C2 80 03            [24]13176 	sjmp	00467$
      0053C4                      13177 01932$:
      0053C4 BF 63 10         [24]13178 	cjne	r7,#0x63,00468$
      0053C7                      13179 00467$:
                                  13180 ;	include/xu_ly_tin_nhan.c:353: goi_dien_thoai = 1;
                                  13181 ;	assignBit
      0053C7 D2 07            [12]13182 	setb	_goi_dien_thoai
                                  13183 ;	include/xu_ly_tin_nhan.c:354: baocaosms(CHINH,"\rDang goi dien thoai ve ...."); 
                                  13184 ;	assignBit
      0053C9 D2 46            [12]13185 	setb	_baocaosms_PARM_1
      0053CB 90 8E DA         [24]13186 	mov	dptr,#___str_108
      0053CE 75 F0 80         [24]13187 	mov	b,#0x80
      0053D1 12 20 30         [24]13188 	lcall	_baocaosms
      0053D4 02 56 C9         [24]13189 	ljmp	00474$
      0053D7                      13190 00468$:
                                  13191 ;	include/xu_ly_tin_nhan.c:356: else if(lenh_sms[3]=='+' && lenh_sms[4]=='8' && lenh_sms[5]=='4'){
      0053D7 BF 2B 02         [24]13192 	cjne	r7,#0x2b,01935$
      0053DA 80 03            [24]13193 	sjmp	01936$
      0053DC                      13194 01935$:
      0053DC 02 55 11         [24]13195 	ljmp	00463$
      0053DF                      13196 01936$:
      0053DF 90 00 1B         [24]13197 	mov	dptr,#(_lenh_sms + 0x0004)
      0053E2 E0               [24]13198 	movx	a,@dptr
      0053E3 FE               [12]13199 	mov	r6,a
      0053E4 BE 38 02         [24]13200 	cjne	r6,#0x38,01937$
      0053E7 80 03            [24]13201 	sjmp	01938$
      0053E9                      13202 01937$:
      0053E9 02 55 11         [24]13203 	ljmp	00463$
      0053EC                      13204 01938$:
      0053EC 90 00 1C         [24]13205 	mov	dptr,#(_lenh_sms + 0x0005)
      0053EF E0               [24]13206 	movx	a,@dptr
      0053F0 FE               [12]13207 	mov	r6,a
      0053F1 BE 34 02         [24]13208 	cjne	r6,#0x34,01939$
      0053F4 80 03            [24]13209 	sjmp	01940$
      0053F6                      13210 01939$:
      0053F6 02 55 11         [24]13211 	ljmp	00463$
      0053F9                      13212 01940$:
                                  13213 ;	include/xu_ly_tin_nhan.c:357: if(lenh_sms[6]>='0' && lenh_sms[6]<='9' && lenh_sms[7]>='0' && lenh_sms[7]<='9' &&
      0053F9 90 00 1D         [24]13214 	mov	dptr,#(_lenh_sms + 0x0006)
      0053FC E0               [24]13215 	movx	a,@dptr
      0053FD FE               [12]13216 	mov	r6,a
      0053FE BE 30 00         [24]13217 	cjne	r6,#0x30,01941$
      005401                      13218 01941$:
      005401 50 03            [24]13219 	jnc	01942$
      005403 02 55 03         [24]13220 	ljmp	00397$
      005406                      13221 01942$:
      005406 EE               [12]13222 	mov	a,r6
      005407 24 C6            [12]13223 	add	a,#0xff - 0x39
      005409 50 03            [24]13224 	jnc	01943$
      00540B 02 55 03         [24]13225 	ljmp	00397$
      00540E                      13226 01943$:
      00540E 90 00 1E         [24]13227 	mov	dptr,#(_lenh_sms + 0x0007)
      005411 E0               [24]13228 	movx	a,@dptr
      005412 FE               [12]13229 	mov	r6,a
      005413 BE 30 00         [24]13230 	cjne	r6,#0x30,01944$
      005416                      13231 01944$:
      005416 50 03            [24]13232 	jnc	01945$
      005418 02 55 03         [24]13233 	ljmp	00397$
      00541B                      13234 01945$:
      00541B EE               [12]13235 	mov	a,r6
      00541C 24 C6            [12]13236 	add	a,#0xff - 0x39
      00541E 50 03            [24]13237 	jnc	01946$
      005420 02 55 03         [24]13238 	ljmp	00397$
      005423                      13239 01946$:
                                  13240 ;	include/xu_ly_tin_nhan.c:358: lenh_sms[8]>='0' && lenh_sms[8]<='9' && lenh_sms[9]>='0' && lenh_sms[9]<='9' &&
      005423 90 00 1F         [24]13241 	mov	dptr,#(_lenh_sms + 0x0008)
      005426 E0               [24]13242 	movx	a,@dptr
      005427 FE               [12]13243 	mov	r6,a
      005428 BE 30 00         [24]13244 	cjne	r6,#0x30,01947$
      00542B                      13245 01947$:
      00542B 50 03            [24]13246 	jnc	01948$
      00542D 02 55 03         [24]13247 	ljmp	00397$
      005430                      13248 01948$:
      005430 EE               [12]13249 	mov	a,r6
      005431 24 C6            [12]13250 	add	a,#0xff - 0x39
      005433 50 03            [24]13251 	jnc	01949$
      005435 02 55 03         [24]13252 	ljmp	00397$
      005438                      13253 01949$:
      005438 90 00 20         [24]13254 	mov	dptr,#(_lenh_sms + 0x0009)
      00543B E0               [24]13255 	movx	a,@dptr
      00543C FE               [12]13256 	mov	r6,a
      00543D BE 30 00         [24]13257 	cjne	r6,#0x30,01950$
      005440                      13258 01950$:
      005440 50 03            [24]13259 	jnc	01951$
      005442 02 55 03         [24]13260 	ljmp	00397$
      005445                      13261 01951$:
      005445 EE               [12]13262 	mov	a,r6
      005446 24 C6            [12]13263 	add	a,#0xff - 0x39
      005448 50 03            [24]13264 	jnc	01952$
      00544A 02 55 03         [24]13265 	ljmp	00397$
      00544D                      13266 01952$:
                                  13267 ;	include/xu_ly_tin_nhan.c:359: lenh_sms[10]>='0' && lenh_sms[10]<='9' && lenh_sms[11]>='0' && lenh_sms[11]<='9' &&
      00544D 90 00 21         [24]13268 	mov	dptr,#(_lenh_sms + 0x000a)
      005450 E0               [24]13269 	movx	a,@dptr
      005451 FE               [12]13270 	mov	r6,a
      005452 BE 30 00         [24]13271 	cjne	r6,#0x30,01953$
      005455                      13272 01953$:
      005455 50 03            [24]13273 	jnc	01954$
      005457 02 55 03         [24]13274 	ljmp	00397$
      00545A                      13275 01954$:
      00545A EE               [12]13276 	mov	a,r6
      00545B 24 C6            [12]13277 	add	a,#0xff - 0x39
      00545D 50 03            [24]13278 	jnc	01955$
      00545F 02 55 03         [24]13279 	ljmp	00397$
      005462                      13280 01955$:
      005462 90 00 22         [24]13281 	mov	dptr,#(_lenh_sms + 0x000b)
      005465 E0               [24]13282 	movx	a,@dptr
      005466 FE               [12]13283 	mov	r6,a
      005467 BE 30 00         [24]13284 	cjne	r6,#0x30,01956$
      00546A                      13285 01956$:
      00546A 50 03            [24]13286 	jnc	01957$
      00546C 02 55 03         [24]13287 	ljmp	00397$
      00546F                      13288 01957$:
      00546F EE               [12]13289 	mov	a,r6
      005470 24 C6            [12]13290 	add	a,#0xff - 0x39
      005472 50 03            [24]13291 	jnc	01958$
      005474 02 55 03         [24]13292 	ljmp	00397$
      005477                      13293 01958$:
                                  13294 ;	include/xu_ly_tin_nhan.c:360: lenh_sms[12]>='0' && lenh_sms[12]<='9' && lenh_sms[13]>='0' && lenh_sms[13]<='9' &&
      005477 90 00 23         [24]13295 	mov	dptr,#(_lenh_sms + 0x000c)
      00547A E0               [24]13296 	movx	a,@dptr
      00547B FE               [12]13297 	mov	r6,a
      00547C BE 30 00         [24]13298 	cjne	r6,#0x30,01959$
      00547F                      13299 01959$:
      00547F 50 03            [24]13300 	jnc	01960$
      005481 02 55 03         [24]13301 	ljmp	00397$
      005484                      13302 01960$:
      005484 EE               [12]13303 	mov	a,r6
      005485 24 C6            [12]13304 	add	a,#0xff - 0x39
      005487 40 7A            [24]13305 	jc	00397$
      005489 90 00 24         [24]13306 	mov	dptr,#(_lenh_sms + 0x000d)
      00548C E0               [24]13307 	movx	a,@dptr
      00548D FE               [12]13308 	mov	r6,a
      00548E BE 30 00         [24]13309 	cjne	r6,#0x30,01962$
      005491                      13310 01962$:
      005491 40 70            [24]13311 	jc	00397$
      005493 EE               [12]13312 	mov	a,r6
      005494 24 C6            [12]13313 	add	a,#0xff - 0x39
      005496 40 6B            [24]13314 	jc	00397$
                                  13315 ;	include/xu_ly_tin_nhan.c:361: lenh_sms[14]>='0' && lenh_sms[14]<='9'){
      005498 90 00 25         [24]13316 	mov	dptr,#(_lenh_sms + 0x000e)
      00549B E0               [24]13317 	movx	a,@dptr
      00549C FE               [12]13318 	mov	r6,a
      00549D BE 30 00         [24]13319 	cjne	r6,#0x30,01965$
      0054A0                      13320 01965$:
      0054A0 40 61            [24]13321 	jc	00397$
      0054A2 EE               [12]13322 	mov	a,r6
      0054A3 24 C6            [12]13323 	add	a,#0xff - 0x39
      0054A5 40 5C            [24]13324 	jc	00397$
                                  13325 ;	include/xu_ly_tin_nhan.c:362: IAP_docxoasector1();
      0054A7 12 03 34         [24]13326 	lcall	_IAP_docxoasector1
                                  13327 ;	include/xu_ly_tin_nhan.c:363: eeprom_buf[PHONEPHU_EEPROM] = 0;
      0054AA 90 00 CE         [24]13328 	mov	dptr,#(_eeprom_buf + 0x0011)
      0054AD E4               [12]13329 	clr	a
      0054AE F0               [24]13330 	movx	@dptr,a
                                  13331 ;	include/xu_ly_tin_nhan.c:364: for(i=1;i<10;i++)
      0054AF 7E 01            [12]13332 	mov	r6,#0x01
      0054B1                      13333 00490$:
                                  13334 ;	include/xu_ly_tin_nhan.c:365: eeprom_buf[PHONEPHU_EEPROM+i] = lenh_sms[6+i];
      0054B1 8E 05            [24]13335 	mov	ar5,r6
      0054B3 74 11            [12]13336 	mov	a,#0x11
      0054B5 2D               [12]13337 	add	a,r5
      0054B6 FD               [12]13338 	mov	r5,a
      0054B7 33               [12]13339 	rlc	a
      0054B8 95 E0            [12]13340 	subb	a,acc
      0054BA FC               [12]13341 	mov	r4,a
      0054BB ED               [12]13342 	mov	a,r5
      0054BC 24 BD            [12]13343 	add	a,#_eeprom_buf
      0054BE FD               [12]13344 	mov	r5,a
      0054BF EC               [12]13345 	mov	a,r4
      0054C0 34 00            [12]13346 	addc	a,#(_eeprom_buf >> 8)
      0054C2 FC               [12]13347 	mov	r4,a
      0054C3 8E 02            [24]13348 	mov	ar2,r6
      0054C5 7B 00            [12]13349 	mov	r3,#0x00
      0054C7 74 06            [12]13350 	mov	a,#0x06
      0054C9 2A               [12]13351 	add	a,r2
      0054CA FA               [12]13352 	mov	r2,a
      0054CB E4               [12]13353 	clr	a
      0054CC 3B               [12]13354 	addc	a,r3
      0054CD FB               [12]13355 	mov	r3,a
      0054CE EA               [12]13356 	mov	a,r2
      0054CF 24 17            [12]13357 	add	a,#_lenh_sms
      0054D1 F5 82            [12]13358 	mov	dpl,a
      0054D3 EB               [12]13359 	mov	a,r3
      0054D4 34 00            [12]13360 	addc	a,#(_lenh_sms >> 8)
      0054D6 F5 83            [12]13361 	mov	dph,a
      0054D8 E0               [24]13362 	movx	a,@dptr
      0054D9 8D 82            [24]13363 	mov	dpl,r5
      0054DB 8C 83            [24]13364 	mov	dph,r4
      0054DD F0               [24]13365 	movx	@dptr,a
                                  13366 ;	include/xu_ly_tin_nhan.c:364: for(i=1;i<10;i++)
      0054DE 0E               [12]13367 	inc	r6
      0054DF BE 0A 00         [24]13368 	cjne	r6,#0x0a,01968$
      0054E2                      13369 01968$:
      0054E2 40 CD            [24]13370 	jc	00490$
                                  13371 ;	include/xu_ly_tin_nhan.c:366: if(eeprom_buf[PHONEPHU_EEPROM+11]==2) eeprom_buf[PHONEPHU_EEPROM+11] = 1;
      0054E4 90 00 D9         [24]13372 	mov	dptr,#(_eeprom_buf + 0x001c)
      0054E7 E0               [24]13373 	movx	a,@dptr
      0054E8 FE               [12]13374 	mov	r6,a
      0054E9 BE 02 06         [24]13375 	cjne	r6,#0x02,00395$
      0054EC 90 00 D9         [24]13376 	mov	dptr,#(_eeprom_buf + 0x001c)
      0054EF 74 01            [12]13377 	mov	a,#0x01
      0054F1 F0               [24]13378 	movx	@dptr,a
      0054F2                      13379 00395$:
                                  13380 ;	include/xu_ly_tin_nhan.c:367: IAP_ghisector1();
      0054F2 12 03 6F         [24]13381 	lcall	_IAP_ghisector1
                                  13382 ;	include/xu_ly_tin_nhan.c:368: baocaosms(CHINH,"\rghi phone phu moi thanh cong");
                                  13383 ;	assignBit
      0054F5 D2 46            [12]13384 	setb	_baocaosms_PARM_1
      0054F7 90 8E F7         [24]13385 	mov	dptr,#___str_109
      0054FA 75 F0 80         [24]13386 	mov	b,#0x80
      0054FD 12 20 30         [24]13387 	lcall	_baocaosms
      005500 02 56 C9         [24]13388 	ljmp	00474$
      005503                      13389 00397$:
                                  13390 ;	include/xu_ly_tin_nhan.c:369: }else baocaosms(CHINH,"\rthay doi phone phu khong thanh cong");
                                  13391 ;	assignBit
      005503 D2 46            [12]13392 	setb	_baocaosms_PARM_1
      005505 90 8F 15         [24]13393 	mov	dptr,#___str_110
      005508 75 F0 80         [24]13394 	mov	b,#0x80
      00550B 12 20 30         [24]13395 	lcall	_baocaosms
      00550E 02 56 C9         [24]13396 	ljmp	00474$
      005511                      13397 00463$:
                                  13398 ;	include/xu_ly_tin_nhan.c:371: else if(lenh_sms[3]=='0'){
      005511 BF 30 02         [24]13399 	cjne	r7,#0x30,01972$
      005514 80 03            [24]13400 	sjmp	01973$
      005516                      13401 01972$:
      005516 02 56 29         [24]13402 	ljmp	00460$
      005519                      13403 01973$:
                                  13404 ;	include/xu_ly_tin_nhan.c:372: if(lenh_sms[4]>='0' && lenh_sms[4]<='9' && lenh_sms[5]>='0' && lenh_sms[5]<='9' &&
      005519 90 00 1B         [24]13405 	mov	dptr,#(_lenh_sms + 0x0004)
      00551C E0               [24]13406 	movx	a,@dptr
      00551D FE               [12]13407 	mov	r6,a
      00551E BE 30 00         [24]13408 	cjne	r6,#0x30,01974$
      005521                      13409 01974$:
      005521 50 03            [24]13410 	jnc	01975$
      005523 02 56 1B         [24]13411 	ljmp	00420$
      005526                      13412 01975$:
      005526 EE               [12]13413 	mov	a,r6
      005527 24 C6            [12]13414 	add	a,#0xff - 0x39
      005529 50 03            [24]13415 	jnc	01976$
      00552B 02 56 1B         [24]13416 	ljmp	00420$
      00552E                      13417 01976$:
      00552E 90 00 1C         [24]13418 	mov	dptr,#(_lenh_sms + 0x0005)
      005531 E0               [24]13419 	movx	a,@dptr
      005532 FE               [12]13420 	mov	r6,a
      005533 BE 30 00         [24]13421 	cjne	r6,#0x30,01977$
      005536                      13422 01977$:
      005536 50 03            [24]13423 	jnc	01978$
      005538 02 56 1B         [24]13424 	ljmp	00420$
      00553B                      13425 01978$:
      00553B EE               [12]13426 	mov	a,r6
      00553C 24 C6            [12]13427 	add	a,#0xff - 0x39
      00553E 50 03            [24]13428 	jnc	01979$
      005540 02 56 1B         [24]13429 	ljmp	00420$
      005543                      13430 01979$:
                                  13431 ;	include/xu_ly_tin_nhan.c:373: lenh_sms[6]>='0' && lenh_sms[6]<='9' && lenh_sms[7]>='0' && lenh_sms[7]<='9' &&
      005543 90 00 1D         [24]13432 	mov	dptr,#(_lenh_sms + 0x0006)
      005546 E0               [24]13433 	movx	a,@dptr
      005547 FE               [12]13434 	mov	r6,a
      005548 BE 30 00         [24]13435 	cjne	r6,#0x30,01980$
      00554B                      13436 01980$:
      00554B 50 03            [24]13437 	jnc	01981$
      00554D 02 56 1B         [24]13438 	ljmp	00420$
      005550                      13439 01981$:
      005550 EE               [12]13440 	mov	a,r6
      005551 24 C6            [12]13441 	add	a,#0xff - 0x39
      005553 50 03            [24]13442 	jnc	01982$
      005555 02 56 1B         [24]13443 	ljmp	00420$
      005558                      13444 01982$:
      005558 90 00 1E         [24]13445 	mov	dptr,#(_lenh_sms + 0x0007)
      00555B E0               [24]13446 	movx	a,@dptr
      00555C FE               [12]13447 	mov	r6,a
      00555D BE 30 00         [24]13448 	cjne	r6,#0x30,01983$
      005560                      13449 01983$:
      005560 50 03            [24]13450 	jnc	01984$
      005562 02 56 1B         [24]13451 	ljmp	00420$
      005565                      13452 01984$:
      005565 EE               [12]13453 	mov	a,r6
      005566 24 C6            [12]13454 	add	a,#0xff - 0x39
      005568 50 03            [24]13455 	jnc	01985$
      00556A 02 56 1B         [24]13456 	ljmp	00420$
      00556D                      13457 01985$:
                                  13458 ;	include/xu_ly_tin_nhan.c:374: lenh_sms[8]>='0' && lenh_sms[8]<='9' && lenh_sms[9]>='0' && lenh_sms[9]<='9' &&
      00556D 90 00 1F         [24]13459 	mov	dptr,#(_lenh_sms + 0x0008)
      005570 E0               [24]13460 	movx	a,@dptr
      005571 FE               [12]13461 	mov	r6,a
      005572 BE 30 00         [24]13462 	cjne	r6,#0x30,01986$
      005575                      13463 01986$:
      005575 50 03            [24]13464 	jnc	01987$
      005577 02 56 1B         [24]13465 	ljmp	00420$
      00557A                      13466 01987$:
      00557A EE               [12]13467 	mov	a,r6
      00557B 24 C6            [12]13468 	add	a,#0xff - 0x39
      00557D 50 03            [24]13469 	jnc	01988$
      00557F 02 56 1B         [24]13470 	ljmp	00420$
      005582                      13471 01988$:
      005582 90 00 20         [24]13472 	mov	dptr,#(_lenh_sms + 0x0009)
      005585 E0               [24]13473 	movx	a,@dptr
      005586 FE               [12]13474 	mov	r6,a
      005587 BE 30 00         [24]13475 	cjne	r6,#0x30,01989$
      00558A                      13476 01989$:
      00558A 50 03            [24]13477 	jnc	01990$
      00558C 02 56 1B         [24]13478 	ljmp	00420$
      00558F                      13479 01990$:
      00558F EE               [12]13480 	mov	a,r6
      005590 24 C6            [12]13481 	add	a,#0xff - 0x39
      005592 50 03            [24]13482 	jnc	01991$
      005594 02 56 1B         [24]13483 	ljmp	00420$
      005597                      13484 01991$:
                                  13485 ;	include/xu_ly_tin_nhan.c:375: lenh_sms[10]>='0' && lenh_sms[10]<='9' && lenh_sms[11]>='0' && lenh_sms[11]<='9' &&
      005597 90 00 21         [24]13486 	mov	dptr,#(_lenh_sms + 0x000a)
      00559A E0               [24]13487 	movx	a,@dptr
      00559B FE               [12]13488 	mov	r6,a
      00559C BE 30 00         [24]13489 	cjne	r6,#0x30,01992$
      00559F                      13490 01992$:
      00559F 40 7A            [24]13491 	jc	00420$
      0055A1 EE               [12]13492 	mov	a,r6
      0055A2 24 C6            [12]13493 	add	a,#0xff - 0x39
      0055A4 40 75            [24]13494 	jc	00420$
      0055A6 90 00 22         [24]13495 	mov	dptr,#(_lenh_sms + 0x000b)
      0055A9 E0               [24]13496 	movx	a,@dptr
      0055AA FE               [12]13497 	mov	r6,a
      0055AB BE 30 00         [24]13498 	cjne	r6,#0x30,01995$
      0055AE                      13499 01995$:
      0055AE 40 6B            [24]13500 	jc	00420$
      0055B0 EE               [12]13501 	mov	a,r6
      0055B1 24 C6            [12]13502 	add	a,#0xff - 0x39
      0055B3 40 66            [24]13503 	jc	00420$
                                  13504 ;	include/xu_ly_tin_nhan.c:376: lenh_sms[12]>='0' && lenh_sms[12]<='9'){
      0055B5 90 00 23         [24]13505 	mov	dptr,#(_lenh_sms + 0x000c)
      0055B8 E0               [24]13506 	movx	a,@dptr
      0055B9 FE               [12]13507 	mov	r6,a
      0055BA BE 30 00         [24]13508 	cjne	r6,#0x30,01998$
      0055BD                      13509 01998$:
      0055BD 40 5C            [24]13510 	jc	00420$
      0055BF EE               [12]13511 	mov	a,r6
      0055C0 24 C6            [12]13512 	add	a,#0xff - 0x39
      0055C2 40 57            [24]13513 	jc	00420$
                                  13514 ;	include/xu_ly_tin_nhan.c:377: IAP_docxoasector1();
      0055C4 12 03 34         [24]13515 	lcall	_IAP_docxoasector1
                                  13516 ;	include/xu_ly_tin_nhan.c:378: for(i=0;i<10;i++)
      0055C7 7E 00            [12]13517 	mov	r6,#0x00
      0055C9                      13518 00492$:
                                  13519 ;	include/xu_ly_tin_nhan.c:379: eeprom_buf[PHONEPHU_EEPROM+i] = lenh_sms[3+i];
      0055C9 8E 05            [24]13520 	mov	ar5,r6
      0055CB 74 11            [12]13521 	mov	a,#0x11
      0055CD 2D               [12]13522 	add	a,r5
      0055CE FD               [12]13523 	mov	r5,a
      0055CF 33               [12]13524 	rlc	a
      0055D0 95 E0            [12]13525 	subb	a,acc
      0055D2 FC               [12]13526 	mov	r4,a
      0055D3 ED               [12]13527 	mov	a,r5
      0055D4 24 BD            [12]13528 	add	a,#_eeprom_buf
      0055D6 FD               [12]13529 	mov	r5,a
      0055D7 EC               [12]13530 	mov	a,r4
      0055D8 34 00            [12]13531 	addc	a,#(_eeprom_buf >> 8)
      0055DA FC               [12]13532 	mov	r4,a
      0055DB 8E 02            [24]13533 	mov	ar2,r6
      0055DD 7B 00            [12]13534 	mov	r3,#0x00
      0055DF 74 03            [12]13535 	mov	a,#0x03
      0055E1 2A               [12]13536 	add	a,r2
      0055E2 FA               [12]13537 	mov	r2,a
      0055E3 E4               [12]13538 	clr	a
      0055E4 3B               [12]13539 	addc	a,r3
      0055E5 FB               [12]13540 	mov	r3,a
      0055E6 EA               [12]13541 	mov	a,r2
      0055E7 24 17            [12]13542 	add	a,#_lenh_sms
      0055E9 F5 82            [12]13543 	mov	dpl,a
      0055EB EB               [12]13544 	mov	a,r3
      0055EC 34 00            [12]13545 	addc	a,#(_lenh_sms >> 8)
      0055EE F5 83            [12]13546 	mov	dph,a
      0055F0 E0               [24]13547 	movx	a,@dptr
      0055F1 8D 82            [24]13548 	mov	dpl,r5
      0055F3 8C 83            [24]13549 	mov	dph,r4
      0055F5 F0               [24]13550 	movx	@dptr,a
                                  13551 ;	include/xu_ly_tin_nhan.c:378: for(i=0;i<10;i++)
      0055F6 0E               [12]13552 	inc	r6
      0055F7 BE 0A 00         [24]13553 	cjne	r6,#0x0a,02001$
      0055FA                      13554 02001$:
      0055FA 40 CD            [24]13555 	jc	00492$
                                  13556 ;	include/xu_ly_tin_nhan.c:380: if(eeprom_buf[PHONEPHU_EEPROM+11]==2) eeprom_buf[PHONEPHU_EEPROM+11] = 1;
      0055FC 90 00 D9         [24]13557 	mov	dptr,#(_eeprom_buf + 0x001c)
      0055FF E0               [24]13558 	movx	a,@dptr
      005600 FE               [12]13559 	mov	r6,a
      005601 BE 02 06         [24]13560 	cjne	r6,#0x02,00418$
      005604 90 00 D9         [24]13561 	mov	dptr,#(_eeprom_buf + 0x001c)
      005607 74 01            [12]13562 	mov	a,#0x01
      005609 F0               [24]13563 	movx	@dptr,a
      00560A                      13564 00418$:
                                  13565 ;	include/xu_ly_tin_nhan.c:381: IAP_ghisector1();
      00560A 12 03 6F         [24]13566 	lcall	_IAP_ghisector1
                                  13567 ;	include/xu_ly_tin_nhan.c:382: baocaosms(CHINH,"\rghi phone phu moi thanh cong");
                                  13568 ;	assignBit
      00560D D2 46            [12]13569 	setb	_baocaosms_PARM_1
      00560F 90 8E F7         [24]13570 	mov	dptr,#___str_109
      005612 75 F0 80         [24]13571 	mov	b,#0x80
      005615 12 20 30         [24]13572 	lcall	_baocaosms
      005618 02 56 C9         [24]13573 	ljmp	00474$
      00561B                      13574 00420$:
                                  13575 ;	include/xu_ly_tin_nhan.c:383: }else baocaosms(CHINH,"\rthay doi phone phu khong thanh cong");
                                  13576 ;	assignBit
      00561B D2 46            [12]13577 	setb	_baocaosms_PARM_1
      00561D 90 8F 15         [24]13578 	mov	dptr,#___str_110
      005620 75 F0 80         [24]13579 	mov	b,#0x80
      005623 12 20 30         [24]13580 	lcall	_baocaosms
      005626 02 56 C9         [24]13581 	ljmp	00474$
      005629                      13582 00460$:
                                  13583 ;	include/xu_ly_tin_nhan.c:384: }else if(lenh_sms[3]=='x' || lenh_sms[3]=='X'){
      005629 BF 78 02         [24]13584 	cjne	r7,#0x78,02005$
      00562C 80 03            [24]13585 	sjmp	00455$
      00562E                      13586 02005$:
      00562E BF 58 1A         [24]13587 	cjne	r7,#0x58,00456$
      005631                      13588 00455$:
                                  13589 ;	include/xu_ly_tin_nhan.c:385: IAP_docxoasector1();
      005631 12 03 34         [24]13590 	lcall	_IAP_docxoasector1
                                  13591 ;	include/xu_ly_tin_nhan.c:386: eeprom_buf[PHONEPHU_EEPROM+11] = 2;
      005634 90 00 D9         [24]13592 	mov	dptr,#(_eeprom_buf + 0x001c)
      005637 74 02            [12]13593 	mov	a,#0x02
      005639 F0               [24]13594 	movx	@dptr,a
                                  13595 ;	include/xu_ly_tin_nhan.c:387: IAP_ghisector1();
      00563A 12 03 6F         [24]13596 	lcall	_IAP_ghisector1
                                  13597 ;	include/xu_ly_tin_nhan.c:388: baocaosms(CHINH,"\rXoa phone phu");
                                  13598 ;	assignBit
      00563D D2 46            [12]13599 	setb	_baocaosms_PARM_1
      00563F 90 8F 3A         [24]13600 	mov	dptr,#___str_111
      005642 75 F0 80         [24]13601 	mov	b,#0x80
      005645 12 20 30         [24]13602 	lcall	_baocaosms
      005648 02 56 C9         [24]13603 	ljmp	00474$
      00564B                      13604 00456$:
                                  13605 ;	include/xu_ly_tin_nhan.c:389: }else if(eep_phonephu[11]==2){
      00564B 90 F0 1C         [24]13606 	mov	dptr,#(_eep_phonephu + 0x000b)
      00564E E4               [12]13607 	clr	a
      00564F 93               [24]13608 	movc	a,@a+dptr
      005650 FF               [12]13609 	mov	r7,a
      005651 BF 02 24         [24]13610 	cjne	r7,#0x02,00453$
                                  13611 ;	include/xu_ly_tin_nhan.c:390: if(lenh_sms[4]=='n' || lenh_sms[4]=='N'|| lenh_sms[4]=='f'|| lenh_sms[4]=='F')
      005654 90 00 1B         [24]13612 	mov	dptr,#(_lenh_sms + 0x0004)
      005657 E0               [24]13613 	movx	a,@dptr
      005658 FF               [12]13614 	mov	r7,a
      005659 BF 6E 02         [24]13615 	cjne	r7,#0x6e,02010$
      00565C 80 0D            [24]13616 	sjmp	00439$
      00565E                      13617 02010$:
      00565E BF 4E 02         [24]13618 	cjne	r7,#0x4e,02011$
      005661 80 08            [24]13619 	sjmp	00439$
      005663                      13620 02011$:
      005663 BF 66 02         [24]13621 	cjne	r7,#0x66,02012$
      005666 80 03            [24]13622 	sjmp	00439$
      005668                      13623 02012$:
      005668 BF 46 5E         [24]13624 	cjne	r7,#0x46,00474$
      00566B                      13625 00439$:
                                  13626 ;	include/xu_ly_tin_nhan.c:391: baocaosms(CHINH,"\rlenh khong thanh cong do chua khoi tao phone phu");
                                  13627 ;	assignBit
      00566B D2 46            [12]13628 	setb	_baocaosms_PARM_1
      00566D 90 8F 49         [24]13629 	mov	dptr,#___str_112
      005670 75 F0 80         [24]13630 	mov	b,#0x80
      005673 12 20 30         [24]13631 	lcall	_baocaosms
      005676 80 51            [24]13632 	sjmp	00474$
      005678                      13633 00453$:
                                  13634 ;	include/xu_ly_tin_nhan.c:392: }else if(lenh_sms[4]=='N' || lenh_sms[4]=='n'){
      005678 90 00 1B         [24]13635 	mov	dptr,#(_lenh_sms + 0x0004)
      00567B E0               [24]13636 	movx	a,@dptr
      00567C FF               [12]13637 	mov	r7,a
      00567D BF 4E 02         [24]13638 	cjne	r7,#0x4e,02015$
      005680 80 03            [24]13639 	sjmp	00448$
      005682                      13640 02015$:
      005682 BF 6E 19         [24]13641 	cjne	r7,#0x6e,00449$
      005685                      13642 00448$:
                                  13643 ;	include/xu_ly_tin_nhan.c:393: IAP_docxoasector1();
      005685 12 03 34         [24]13644 	lcall	_IAP_docxoasector1
                                  13645 ;	include/xu_ly_tin_nhan.c:394: eeprom_buf[PHONEPHU_EEPROM+11] = 1;
      005688 90 00 D9         [24]13646 	mov	dptr,#(_eeprom_buf + 0x001c)
      00568B 74 01            [12]13647 	mov	a,#0x01
      00568D F0               [24]13648 	movx	@dptr,a
                                  13649 ;	include/xu_ly_tin_nhan.c:395: IAP_ghisector1();
      00568E 12 03 6F         [24]13650 	lcall	_IAP_ghisector1
                                  13651 ;	include/xu_ly_tin_nhan.c:396: baocaosms(CHINH,"\rBat phone phu");
                                  13652 ;	assignBit
      005691 D2 46            [12]13653 	setb	_baocaosms_PARM_1
      005693 90 8F 7B         [24]13654 	mov	dptr,#___str_113
      005696 75 F0 80         [24]13655 	mov	b,#0x80
      005699 12 20 30         [24]13656 	lcall	_baocaosms
      00569C 80 2B            [24]13657 	sjmp	00474$
      00569E                      13658 00449$:
                                  13659 ;	include/xu_ly_tin_nhan.c:397: }else if(lenh_sms[4]=='F' || lenh_sms[4]=='f'){
      00569E BF 46 02         [24]13660 	cjne	r7,#0x46,02018$
      0056A1 80 03            [24]13661 	sjmp	00444$
      0056A3                      13662 02018$:
      0056A3 BF 66 18         [24]13663 	cjne	r7,#0x66,00445$
      0056A6                      13664 00444$:
                                  13665 ;	include/xu_ly_tin_nhan.c:399: IAP_docxoasector1();
      0056A6 12 03 34         [24]13666 	lcall	_IAP_docxoasector1
                                  13667 ;	include/xu_ly_tin_nhan.c:400: eeprom_buf[PHONEPHU_EEPROM+11] = 0;
      0056A9 90 00 D9         [24]13668 	mov	dptr,#(_eeprom_buf + 0x001c)
      0056AC E4               [12]13669 	clr	a
      0056AD F0               [24]13670 	movx	@dptr,a
                                  13671 ;	include/xu_ly_tin_nhan.c:401: IAP_ghisector1();
      0056AE 12 03 6F         [24]13672 	lcall	_IAP_ghisector1
                                  13673 ;	include/xu_ly_tin_nhan.c:402: baocaosms(CHINH,"\rTat phone phu");
                                  13674 ;	assignBit
      0056B1 D2 46            [12]13675 	setb	_baocaosms_PARM_1
      0056B3 90 8F 8A         [24]13676 	mov	dptr,#___str_114
      0056B6 75 F0 80         [24]13677 	mov	b,#0x80
      0056B9 12 20 30         [24]13678 	lcall	_baocaosms
      0056BC 80 0B            [24]13679 	sjmp	00474$
      0056BE                      13680 00445$:
                                  13681 ;	include/xu_ly_tin_nhan.c:403: }else baocaosms(CHINH,"\rLenh phone phu khong hop le");
                                  13682 ;	assignBit
      0056BE D2 46            [12]13683 	setb	_baocaosms_PARM_1
      0056C0 90 8F 99         [24]13684 	mov	dptr,#___str_115
      0056C3 75 F0 80         [24]13685 	mov	b,#0x80
      0056C6 12 20 30         [24]13686 	lcall	_baocaosms
      0056C9                      13687 00474$:
                                  13688 ;	include/xu_ly_tin_nhan.c:405: bat_phone_phu = eep_phonephu[11]&1;
      0056C9 90 F0 1C         [24]13689 	mov	dptr,#(_eep_phonephu + 0x000b)
      0056CC E4               [12]13690 	clr	a
      0056CD 93               [24]13691 	movc	a,@a+dptr
      0056CE 54 01            [12]13692 	anl	a,#0x01
                                  13693 ;	assignBit
      0056D0 FF               [12]13694 	mov	r7,a
      0056D1 24 FF            [12]13695 	add	a,#0xff
      0056D3 92 0A            [24]13696 	mov	_bat_phone_phu,c
                                  13697 ;	include/xu_ly_tin_nhan.c:406: break;
                                  13698 ;	include/xu_ly_tin_nhan.c:407: default:
      0056D5 80 26            [24]13699 	sjmp	00479$
      0056D7                      13700 00475$:
                                  13701 ;	include/xu_ly_tin_nhan.c:408: if(phone_phu_so_sanh_that_bai)
      0056D7 30 09 0D         [24]13702 	jnb	_phone_phu_so_sanh_that_bai,00477$
                                  13703 ;	include/xu_ly_tin_nhan.c:409: baocaosms(CHINH,"\rLenh khong hop le");
                                  13704 ;	assignBit
      0056DA D2 46            [12]13705 	setb	_baocaosms_PARM_1
      0056DC 90 8F B6         [24]13706 	mov	dptr,#___str_116
      0056DF 75 F0 80         [24]13707 	mov	b,#0x80
      0056E2 12 20 30         [24]13708 	lcall	_baocaosms
      0056E5 80 16            [24]13709 	sjmp	00479$
      0056E7                      13710 00477$:
                                  13711 ;	include/xu_ly_tin_nhan.c:411: baocaosms(CHINH,"\rLenh khong hop le\rPhone phu gui lenh");
                                  13712 ;	assignBit
      0056E7 D2 46            [12]13713 	setb	_baocaosms_PARM_1
      0056E9 90 8F C9         [24]13714 	mov	dptr,#___str_117
      0056EC 75 F0 80         [24]13715 	mov	b,#0x80
      0056EF 12 20 30         [24]13716 	lcall	_baocaosms
                                  13717 ;	include/xu_ly_tin_nhan.c:412: baocaosms(PHU,"\rLenh khong hop le");
                                  13718 ;	assignBit
      0056F2 C2 46            [12]13719 	clr	_baocaosms_PARM_1
      0056F4 90 8F B6         [24]13720 	mov	dptr,#___str_116
      0056F7 75 F0 80         [24]13721 	mov	b,#0x80
      0056FA 12 20 30         [24]13722 	lcall	_baocaosms
                                  13723 ;	include/xu_ly_tin_nhan.c:414: }
      0056FD                      13724 00479$:
                                  13725 ;	include/xu_ly_tin_nhan.c:417: WATCHDOG;
      0056FD 43 C1 10         [24]13726 	orl	_WDT_CONTR,#0x10
                                  13727 ;	include/xu_ly_tin_nhan.c:418: while(lenh_sms[phutdelta])lenh_sms[phutdelta++] = 0;
      005700 7F 00            [12]13728 	mov	r7,#0x00
      005702                      13729 00480$:
      005702 EF               [12]13730 	mov	a,r7
      005703 24 17            [12]13731 	add	a,#_lenh_sms
      005705 FD               [12]13732 	mov	r5,a
      005706 E4               [12]13733 	clr	a
      005707 34 00            [12]13734 	addc	a,#(_lenh_sms >> 8)
      005709 FE               [12]13735 	mov	r6,a
      00570A 8D 82            [24]13736 	mov	dpl,r5
      00570C 8E 83            [24]13737 	mov	dph,r6
      00570E E0               [24]13738 	movx	a,@dptr
      00570F 60 0F            [24]13739 	jz	00494$
      005711 EF               [12]13740 	mov	a,r7
      005712 24 17            [12]13741 	add	a,#_lenh_sms
      005714 F5 82            [12]13742 	mov	dpl,a
      005716 E4               [12]13743 	clr	a
      005717 34 00            [12]13744 	addc	a,#(_lenh_sms >> 8)
      005719 F5 83            [12]13745 	mov	dph,a
      00571B 0F               [12]13746 	inc	r7
      00571C E4               [12]13747 	clr	a
      00571D F0               [24]13748 	movx	@dptr,a
      00571E 80 E2            [24]13749 	sjmp	00480$
      005720                      13750 00494$:
                                  13751 ;	include/xu_ly_tin_nhan.c:420: }
      005720 22               [24]13752 	ret
                                  13753 ;------------------------------------------------------------
                                  13754 ;Allocation info for local variables in function 'main'
                                  13755 ;------------------------------------------------------------
                                  13756 ;giotemp                   Allocated with name '_main_giotemp_65536_253'
                                  13757 ;phuttemp                  Allocated to registers r5 
                                  13758 ;debug_dem                 Allocated with name '_main_debug_dem_131073_263'
                                  13759 ;mp3temp                   Allocated with name '_main_mp3temp_131073_263'
                                  13760 ;retry                     Allocated with name '_main_retry_131073_284'
                                  13761 ;retry                     Allocated with name '_main_retry_131073_287'
                                  13762 ;sloc0                     Allocated with name '_main_sloc0_1_0'
                                  13763 ;sloc1                     Allocated with name '_main_sloc1_1_0'
                                  13764 ;sloc2                     Allocated with name '_main_sloc2_1_0'
                                  13765 ;ngaytemp                  Allocated with name '_main_ngaytemp_65536_253'
                                  13766 ;thangtemp                 Allocated with name '_main_thangtemp_65536_253'
                                  13767 ;namtemp                   Allocated with name '_main_namtemp_65536_253'
                                  13768 ;thutemp                   Allocated with name '_main_thutemp_65536_253'
                                  13769 ;check                     Allocated with name '_main_check_65536_253'
                                  13770 ;i                         Allocated with name '_main_i_65537_254'
                                  13771 ;------------------------------------------------------------
                                  13772 ;	src\main.c:22: void main() {
                                  13773 ;	-----------------------------------------
                                  13774 ;	 function main
                                  13775 ;	-----------------------------------------
      005721                      13776 _main:
                                  13777 ;	src\main.c:23: u8 __data giotemp=0,phuttemp=0;
      005721 7F 00            [12]13778 	mov	r7,#0x00
      005723 7E 00            [12]13779 	mov	r6,#0x00
                                  13780 ;	src\main.c:24: u8 __xdata  ngaytemp = 1, thangtemp=1, namtemp = 21, thutemp = 1;
      005725 90 01 35         [24]13781 	mov	dptr,#_main_ngaytemp_65536_253
      005728 74 01            [12]13782 	mov	a,#0x01
      00572A F0               [24]13783 	movx	@dptr,a
      00572B 90 01 36         [24]13784 	mov	dptr,#_main_thangtemp_65536_253
      00572E F0               [24]13785 	movx	@dptr,a
      00572F 90 01 37         [24]13786 	mov	dptr,#_main_namtemp_65536_253
      005732 74 15            [12]13787 	mov	a,#0x15
      005734 F0               [24]13788 	movx	@dptr,a
      005735 90 01 38         [24]13789 	mov	dptr,#_main_thutemp_65536_253
      005738 74 01            [12]13790 	mov	a,#0x01
      00573A F0               [24]13791 	movx	@dptr,a
                                  13792 ;	src\main.c:27: P0M1 = 0; P0M0 = 0xff; //port LCD -- chân xuất với điện trở kéo lên nhỏ, dòng lớn -> 20mA
                                  13793 ;	1-genFromRTrack replaced	mov	_P0M1,#0x00
      00573B 8F 93            [24]13794 	mov	_P0M1,r7
      00573D 75 94 FF         [24]13795 	mov	_P0M0,#0xff
                                  13796 ;	src\main.c:28: P1M1 = P1M0 = 0;
                                  13797 ;	1-genFromRTrack replaced	mov	_P1M0,#0x00
      005740 8F 92            [24]13798 	mov	_P1M0,r7
                                  13799 ;	1-genFromRTrack replaced	mov	_P1M1,#0x00
      005742 8F 91            [24]13800 	mov	_P1M1,r7
                                  13801 ;	src\main.c:29: P2M1 = 0; P2M0 = 0xff; // output
                                  13802 ;	1-genFromRTrack replaced	mov	_P2M1,#0x00
      005744 8F 95            [24]13803 	mov	_P2M1,r7
      005746 75 96 FF         [24]13804 	mov	_P2M0,#0xff
                                  13805 ;	src\main.c:30: P3M1 = P3M0 = 0; //full compatip 8051 -- key and cam
                                  13806 ;	1-genFromRTrack replaced	mov	_P3M0,#0x00
      005749 8F B2            [24]13807 	mov	_P3M0,r7
                                  13808 ;	1-genFromRTrack replaced	mov	_P3M1,#0x00
      00574B 8F B1            [24]13809 	mov	_P3M1,r7
                                  13810 ;	src\main.c:31: P4M1 = 2; P4M0 = 0x1c;//full compatip 8051 --motor port
      00574D 75 B3 02         [24]13811 	mov	_P4M1,#0x02
      005750 75 B4 1C         [24]13812 	mov	_P4M0,#0x1c
                                  13813 ;	src\main.c:32: P5M1 = P5M0 = 0; // full compatip 8051
                                  13814 ;	1-genFromRTrack replaced	mov	_P5M0,#0x00
      005753 8F CA            [24]13815 	mov	_P5M0,r7
                                  13816 ;	1-genFromRTrack replaced	mov	_P5M1,#0x00
      005755 8F C9            [24]13817 	mov	_P5M1,r7
                                  13818 ;	src\main.c:33: P4 = 0;
                                  13819 ;	1-genFromRTrack replaced	mov	_P4,#0x00
      005757 8F C0            [24]13820 	mov	_P4,r7
                                  13821 ;	src\main.c:34: P3 = 0xff;
      005759 75 B0 FF         [24]13822 	mov	_P3,#0xff
                                  13823 ;	src\main.c:35: P2 = 0;
                                  13824 ;	1-genFromRTrack replaced	mov	_P2,#0x00
      00575C 8F A0            [24]13825 	mov	_P2,r7
                                  13826 ;	src\main.c:37: IP = 0x81; //priority PCA
      00575E 75 B8 81         [24]13827 	mov	_IP,#0x81
                                  13828 ;	src\main.c:39: P1ASF = 8;
      005761 75 9D 08         [24]13829 	mov	_P1ASF,#0x08
                                  13830 ;	src\main.c:40: CLK_DIV = 0;
                                  13831 ;	1-genFromRTrack replaced	mov	_CLK_DIV,#0x00
      005764 8F 97            [24]13832 	mov	_CLK_DIV,r7
                                  13833 ;	src\main.c:41: ADC_RES = 0;
                                  13834 ;	1-genFromRTrack replaced	mov	_ADC_RES,#0x00
      005766 8F BD            [24]13835 	mov	_ADC_RES,r7
                                  13836 ;	src\main.c:42: ADC_CONTR = 0x83;
      005768 75 BC 83         [24]13837 	mov	_ADC_CONTR,#0x83
                                  13838 ;	src\main.c:43: EADC = 1;
                                  13839 ;	assignBit
      00576B D2 AD            [12]13840 	setb	_EADC
                                  13841 ;	src\main.c:44: EA = 1; //bat tat ca interupt
                                  13842 ;	assignBit
      00576D D2 AF            [12]13843 	setb	_EA
                                  13844 ;	src\main.c:47: xung_giay_check=250;
      00576F 90 00 E7         [24]13845 	mov	dptr,#_xung_giay_check
      005772 74 FA            [12]13846 	mov	a,#0xfa
      005774 F0               [24]13847 	movx	@dptr,a
                                  13848 ;	src\main.c:48: so_lan_goi_dien = 0;
      005775 90 00 B9         [24]13849 	mov	dptr,#_so_lan_goi_dien
      005778 E4               [12]13850 	clr	a
      005779 F0               [24]13851 	movx	@dptr,a
                                  13852 ;	src\main.c:49: motor_index = motor_index2 = 5;
      00577A 75 57 05         [24]13853 	mov	_motor_index2,#0x05
      00577D 75 56 05         [24]13854 	mov	_motor_index,#0x05
                                  13855 ;	src\main.c:50: phone[0]='0';
      005780 90 00 0C         [24]13856 	mov	dptr,#_phone
      005783 74 30            [12]13857 	mov	a,#0x30
      005785 F0               [24]13858 	movx	@dptr,a
                                  13859 ;	src\main.c:53: gsm_delay_reset=10;
      005786 90 00 B8         [24]13860 	mov	dptr,#_gsm_delay_reset
      005789 74 0A            [12]13861 	mov	a,#0x0a
      00578B F0               [24]13862 	movx	@dptr,a
                                  13863 ;	src\main.c:54: phim_mode_doi = phim_back_doi = phim_cong_doi = 2;
      00578C 90 00 F3         [24]13864 	mov	dptr,#_phim_cong_doi
      00578F 74 02            [12]13865 	mov	a,#0x02
      005791 F0               [24]13866 	movx	@dptr,a
      005792 90 00 F2         [24]13867 	mov	dptr,#_phim_back_doi
      005795 F0               [24]13868 	movx	@dptr,a
      005796 90 00 F1         [24]13869 	mov	dptr,#_phim_mode_doi
      005799 F0               [24]13870 	movx	@dptr,a
                                  13871 ;	src\main.c:55: mode = SELECT; sub_mode = GIOKIM;
      00579A 90 00 F4         [24]13872 	mov	dptr,#_mode
      00579D 74 07            [12]13873 	mov	a,#0x07
      00579F F0               [24]13874 	movx	@dptr,a
      0057A0 90 00 F5         [24]13875 	mov	dptr,#_sub_mode
      0057A3 74 01            [12]13876 	mov	a,#0x01
      0057A5 F0               [24]13877 	movx	@dptr,a
                                  13878 ;	src\main.c:59: LCD_Init();
      0057A6 C0 07            [24]13879 	push	ar7
      0057A8 C0 06            [24]13880 	push	ar6
      0057AA 12 06 5B         [24]13881 	lcall	_LCD_Init
                                  13882 ;	src\main.c:60: LCD_guilenh(0x80);
      0057AD 75 82 80         [24]13883 	mov	dpl,#0x80
      0057B0 12 05 71         [24]13884 	lcall	_LCD_guilenh
                                  13885 ;	src\main.c:61: LCD_guichuoi(ver);
      0057B3 90 85 7F         [24]13886 	mov	dptr,#_ver
      0057B6 75 F0 80         [24]13887 	mov	b,#0x80
      0057B9 12 05 F1         [24]13888 	lcall	_LCD_guichuoi
                                  13889 ;	src\main.c:64: delay_ms(5000);
      0057BC 90 13 88         [24]13890 	mov	dptr,#0x1388
      0057BF 12 04 BB         [24]13891 	lcall	_delay_ms
                                  13892 ;	src\main.c:70: LCD_guilenh(0x80);
      0057C2 75 82 80         [24]13893 	mov	dpl,#0x80
      0057C5 12 05 71         [24]13894 	lcall	_LCD_guilenh
                                  13895 ;	src\main.c:71: LCD_guichuoi("THIET LAP EEPROM");
      0057C8 90 8F EF         [24]13896 	mov	dptr,#___str_118
      0057CB 75 F0 80         [24]13897 	mov	b,#0x80
      0057CE 12 05 F1         [24]13898 	lcall	_LCD_guichuoi
                                  13899 ;	src\main.c:72: IAP_docxoasector1();
      0057D1 12 03 34         [24]13900 	lcall	_IAP_docxoasector1
      0057D4 D0 06            [24]13901 	pop	ar6
      0057D6 D0 07            [24]13902 	pop	ar7
                                  13903 ;	src\main.c:73: if(eeprom_buf[MOTOR_EEPROM]==0xff)eeprom_buf[MOTOR_EEPROM] = MOTOR_DEFAULT;
      0057D8 90 00 BD         [24]13904 	mov	dptr,#_eeprom_buf
      0057DB E0               [24]13905 	movx	a,@dptr
      0057DC FD               [12]13906 	mov	r5,a
      0057DD BD FF 06         [24]13907 	cjne	r5,#0xff,00102$
      0057E0 90 00 BD         [24]13908 	mov	dptr,#_eeprom_buf
      0057E3 74 05            [12]13909 	mov	a,#0x05
      0057E5 F0               [24]13910 	movx	@dptr,a
      0057E6                      13911 00102$:
                                  13912 ;	src\main.c:88: if(eeprom_buf[BAOCAO_EEPROM]>1)eeprom_buf[BAOCAO_EEPROM] = 0;
      0057E6 90 00 BE         [24]13913 	mov	dptr,#(_eeprom_buf + 0x0001)
      0057E9 E0               [24]13914 	movx	a,@dptr
      0057EA 24 FE            [12]13915 	add	a,#0xff - 0x01
      0057EC 50 05            [24]13916 	jnc	00104$
      0057EE 90 00 BE         [24]13917 	mov	dptr,#(_eeprom_buf + 0x0001)
      0057F1 E4               [12]13918 	clr	a
      0057F2 F0               [24]13919 	movx	@dptr,a
      0057F3                      13920 00104$:
                                  13921 ;	src\main.c:89: if(eeprom_buf[GPSON_EEPROM]>1)eeprom_buf[GPSON_EEPROM] = 1;
      0057F3 90 00 BF         [24]13922 	mov	dptr,#(_eeprom_buf + 0x0002)
      0057F6 E0               [24]13923 	movx	a,@dptr
      0057F7 24 FE            [12]13924 	add	a,#0xff - 0x01
      0057F9 50 06            [24]13925 	jnc	00106$
      0057FB 90 00 BF         [24]13926 	mov	dptr,#(_eeprom_buf + 0x0002)
      0057FE 74 01            [12]13927 	mov	a,#0x01
      005800 F0               [24]13928 	movx	@dptr,a
      005801                      13929 00106$:
                                  13930 ;	src\main.c:90: if(eeprom_buf[NGAYRESET_EEPROM]>9)eeprom_buf[NGAYRESET_EEPROM] = 1;
      005801 90 00 C0         [24]13931 	mov	dptr,#(_eeprom_buf + 0x0003)
      005804 E0               [24]13932 	movx	a,@dptr
      005805 24 F6            [12]13933 	add	a,#0xff - 0x09
      005807 50 06            [24]13934 	jnc	00108$
      005809 90 00 C0         [24]13935 	mov	dptr,#(_eeprom_buf + 0x0003)
      00580C 74 01            [12]13936 	mov	a,#0x01
      00580E F0               [24]13937 	movx	@dptr,a
      00580F                      13938 00108$:
                                  13939 ;	src\main.c:92: if(eeprom_buf[GIORESET_EEPROM]>23)eeprom_buf[GIORESET_EEPROM] = 0;
      00580F 90 00 C1         [24]13940 	mov	dptr,#(_eeprom_buf + 0x0004)
      005812 E0               [24]13941 	movx	a,@dptr
      005813 24 E8            [12]13942 	add	a,#0xff - 0x17
      005815 50 05            [24]13943 	jnc	00110$
      005817 90 00 C1         [24]13944 	mov	dptr,#(_eeprom_buf + 0x0004)
      00581A E4               [12]13945 	clr	a
      00581B F0               [24]13946 	movx	@dptr,a
      00581C                      13947 00110$:
                                  13948 ;	src\main.c:93: if((eeprom_buf[GIOSACXA_EEPROM]>>4) -1 > 8) eeprom_buf[GIOSACXA_EEPROM] = eeprom_buf[GIOSACXA_EEPROM] & 0x0f | 0x50;
      00581C 90 00 C3         [24]13949 	mov	dptr,#(_eeprom_buf + 0x0006)
      00581F E0               [24]13950 	movx	a,@dptr
      005820 FD               [12]13951 	mov	r5,a
      005821 C4               [12]13952 	swap	a
      005822 54 0F            [12]13953 	anl	a,#0x0f
      005824 FC               [12]13954 	mov	r4,a
      005825 7B 00            [12]13955 	mov	r3,#0x00
      005827 1C               [12]13956 	dec	r4
      005828 BC FF 01         [24]13957 	cjne	r4,#0xff,02361$
      00582B 1B               [12]13958 	dec	r3
      00582C                      13959 02361$:
      00582C C3               [12]13960 	clr	c
      00582D 74 08            [12]13961 	mov	a,#0x08
      00582F 9C               [12]13962 	subb	a,r4
      005830 74 80            [12]13963 	mov	a,#(0x00 ^ 0x80)
      005832 8B F0            [24]13964 	mov	b,r3
      005834 63 F0 80         [24]13965 	xrl	b,#0x80
      005837 95 F0            [12]13966 	subb	a,b
      005839 50 0A            [24]13967 	jnc	00112$
      00583B 74 0F            [12]13968 	mov	a,#0x0f
      00583D 5D               [12]13969 	anl	a,r5
      00583E 44 50            [12]13970 	orl	a,#0x50
      005840 FD               [12]13971 	mov	r5,a
      005841 90 00 C3         [24]13972 	mov	dptr,#(_eeprom_buf + 0x0006)
      005844 F0               [24]13973 	movx	@dptr,a
      005845                      13974 00112$:
                                  13975 ;	src\main.c:94: if((eeprom_buf[GIOSACXA_EEPROM] & 0x0f) -1 > 8) eeprom_buf[GIOSACXA_EEPROM] = eeprom_buf[GIOSACXA_EEPROM] & 0xf0 | 0x01;	
      005845 90 00 C3         [24]13976 	mov	dptr,#(_eeprom_buf + 0x0006)
      005848 E0               [24]13977 	movx	a,@dptr
      005849 FD               [12]13978 	mov	r5,a
      00584A 53 05 0F         [24]13979 	anl	ar5,#0x0f
      00584D 7C 00            [12]13980 	mov	r4,#0x00
      00584F 1D               [12]13981 	dec	r5
      005850 BD FF 01         [24]13982 	cjne	r5,#0xff,02363$
      005853 1C               [12]13983 	dec	r4
      005854                      13984 02363$:
      005854 C3               [12]13985 	clr	c
      005855 74 08            [12]13986 	mov	a,#0x08
      005857 9D               [12]13987 	subb	a,r5
      005858 74 80            [12]13988 	mov	a,#(0x00 ^ 0x80)
      00585A 8C F0            [24]13989 	mov	b,r4
      00585C 63 F0 80         [24]13990 	xrl	b,#0x80
      00585F 95 F0            [12]13991 	subb	a,b
      005861 50 0F            [24]13992 	jnc	00114$
      005863 90 00 C3         [24]13993 	mov	dptr,#(_eeprom_buf + 0x0006)
      005866 E0               [24]13994 	movx	a,@dptr
      005867 FD               [12]13995 	mov	r5,a
      005868 74 F0            [12]13996 	mov	a,#0xf0
      00586A 5D               [12]13997 	anl	a,r5
      00586B 44 01            [12]13998 	orl	a,#0x01
      00586D FD               [12]13999 	mov	r5,a
      00586E 90 00 C3         [24]14000 	mov	dptr,#(_eeprom_buf + 0x0006)
      005871 F0               [24]14001 	movx	@dptr,a
      005872                      14002 00114$:
                                  14003 ;	src\main.c:95: i=1;
      005872 90 01 39         [24]14004 	mov	dptr,#_main_i_65537_254
      005875 74 01            [12]14005 	mov	a,#0x01
      005877 F0               [24]14006 	movx	@dptr,a
                                  14007 ;	src\main.c:96: if(eeprom_buf[TATMODEN_EEPROM]<9 && !(eeprom_buf[TATMODEN_EEPROM]&1))
      005878 90 00 C4         [24]14008 	mov	dptr,#(_eeprom_buf + 0x0007)
      00587B E0               [24]14009 	movx	a,@dptr
      00587C FD               [12]14010 	mov	r5,a
      00587D BD 09 00         [24]14011 	cjne	r5,#0x09,02365$
      005880                      14012 02365$:
      005880 50 2E            [24]14013 	jnc	00117$
      005882 ED               [12]14014 	mov	a,r5
      005883 20 E0 2A         [24]14015 	jb	acc.0,00117$
                                  14016 ;	src\main.c:97: for(i=1;i<=eeprom_buf[TATMODEN_EEPROM] && eeprom_buf[TATMODEN_EEPROM+i]<144;i++);
      005886 7C 01            [12]14017 	mov	r4,#0x01
      005888                      14018 00649$:
      005888 C3               [12]14019 	clr	c
      005889 ED               [12]14020 	mov	a,r5
      00588A 9C               [12]14021 	subb	a,r4
      00588B 40 1E            [24]14022 	jc	01097$
      00588D 8C 03            [24]14023 	mov	ar3,r4
      00588F 74 07            [12]14024 	mov	a,#0x07
      005891 2B               [12]14025 	add	a,r3
      005892 FB               [12]14026 	mov	r3,a
      005893 33               [12]14027 	rlc	a
      005894 95 E0            [12]14028 	subb	a,acc
      005896 FA               [12]14029 	mov	r2,a
      005897 EB               [12]14030 	mov	a,r3
      005898 24 BD            [12]14031 	add	a,#_eeprom_buf
      00589A F5 82            [12]14032 	mov	dpl,a
      00589C EA               [12]14033 	mov	a,r2
      00589D 34 00            [12]14034 	addc	a,#(_eeprom_buf >> 8)
      00589F F5 83            [12]14035 	mov	dph,a
      0058A1 E0               [24]14036 	movx	a,@dptr
      0058A2 FB               [12]14037 	mov	r3,a
      0058A3 BB 90 00         [24]14038 	cjne	r3,#0x90,02369$
      0058A6                      14039 02369$:
      0058A6 50 03            [24]14040 	jnc	01097$
      0058A8 0C               [12]14041 	inc	r4
      0058A9 80 DD            [24]14042 	sjmp	00649$
      0058AB                      14043 01097$:
      0058AB 90 01 39         [24]14044 	mov	dptr,#_main_i_65537_254
      0058AE EC               [12]14045 	mov	a,r4
      0058AF F0               [24]14046 	movx	@dptr,a
      0058B0                      14047 00117$:
                                  14048 ;	src\main.c:98: if(i<=eeprom_buf[TATMODEN_EEPROM]){
      0058B0 90 01 39         [24]14049 	mov	dptr,#_main_i_65537_254
      0058B3 E0               [24]14050 	movx	a,@dptr
      0058B4 FC               [12]14051 	mov	r4,a
      0058B5 C3               [12]14052 	clr	c
      0058B6 ED               [12]14053 	mov	a,r5
      0058B7 9C               [12]14054 	subb	a,r4
      0058B8 40 12            [24]14055 	jc	00120$
                                  14056 ;	src\main.c:99: eeprom_buf[TATMODEN_EEPROM] = 2;
      0058BA 90 00 C4         [24]14057 	mov	dptr,#(_eeprom_buf + 0x0007)
      0058BD 74 02            [12]14058 	mov	a,#0x02
      0058BF F0               [24]14059 	movx	@dptr,a
                                  14060 ;	src\main.c:100: eeprom_buf[TATMODEN_EEPROM+1] = 36;
      0058C0 90 00 C5         [24]14061 	mov	dptr,#(_eeprom_buf + 0x0008)
      0058C3 74 24            [12]14062 	mov	a,#0x24
      0058C5 F0               [24]14063 	movx	@dptr,a
                                  14064 ;	src\main.c:101: eeprom_buf[TATMODEN_EEPROM+2] = 108;
      0058C6 90 00 C6         [24]14065 	mov	dptr,#(_eeprom_buf + 0x0009)
      0058C9 74 6C            [12]14066 	mov	a,#0x6c
      0058CB F0               [24]14067 	movx	@dptr,a
      0058CC                      14068 00120$:
                                  14069 ;	src\main.c:103: i=0;
      0058CC 90 01 39         [24]14070 	mov	dptr,#_main_i_65537_254
      0058CF E4               [12]14071 	clr	a
      0058D0 F0               [24]14072 	movx	@dptr,a
                                  14073 ;	src\main.c:104: if(eeprom_buf[PHONEPHU_EEPROM+11]<2 && !eeprom_buf[PHONEPHU_EEPROM+10])
      0058D1 90 00 D9         [24]14074 	mov	dptr,#(_eeprom_buf + 0x001c)
      0058D4 E0               [24]14075 	movx	a,@dptr
      0058D5 FD               [12]14076 	mov	r5,a
      0058D6 BD 02 00         [24]14077 	cjne	r5,#0x02,02372$
      0058D9                      14078 02372$:
      0058D9 50 47            [24]14079 	jnc	00123$
      0058DB 90 00 D8         [24]14080 	mov	dptr,#(_eeprom_buf + 0x001b)
      0058DE E0               [24]14081 	movx	a,@dptr
                                  14082 ;	src\main.c:105: for(i=0;i<10 && eeprom_buf[PHONEPHU_EEPROM+i]>='0' && eeprom_buf[PHONEPHU_EEPROM+i]<='9';i++);
      0058DF 70 41            [24]14083 	jnz	00123$
      0058E1 FD               [12]14084 	mov	r5,a
      0058E2                      14085 00654$:
      0058E2 BD 0A 00         [24]14086 	cjne	r5,#0x0a,02375$
      0058E5                      14087 02375$:
      0058E5 50 36            [24]14088 	jnc	01098$
      0058E7 8D 04            [24]14089 	mov	ar4,r5
      0058E9 74 11            [12]14090 	mov	a,#0x11
      0058EB 2C               [12]14091 	add	a,r4
      0058EC FB               [12]14092 	mov	r3,a
      0058ED 33               [12]14093 	rlc	a
      0058EE 95 E0            [12]14094 	subb	a,acc
      0058F0 FA               [12]14095 	mov	r2,a
      0058F1 EB               [12]14096 	mov	a,r3
      0058F2 24 BD            [12]14097 	add	a,#_eeprom_buf
      0058F4 F5 82            [12]14098 	mov	dpl,a
      0058F6 EA               [12]14099 	mov	a,r2
      0058F7 34 00            [12]14100 	addc	a,#(_eeprom_buf >> 8)
      0058F9 F5 83            [12]14101 	mov	dph,a
      0058FB E0               [24]14102 	movx	a,@dptr
      0058FC FB               [12]14103 	mov	r3,a
      0058FD BB 30 00         [24]14104 	cjne	r3,#0x30,02377$
      005900                      14105 02377$:
      005900 40 1B            [24]14106 	jc	01098$
      005902 74 11            [12]14107 	mov	a,#0x11
      005904 2C               [12]14108 	add	a,r4
      005905 FC               [12]14109 	mov	r4,a
      005906 33               [12]14110 	rlc	a
      005907 95 E0            [12]14111 	subb	a,acc
      005909 FB               [12]14112 	mov	r3,a
      00590A EC               [12]14113 	mov	a,r4
      00590B 24 BD            [12]14114 	add	a,#_eeprom_buf
      00590D F5 82            [12]14115 	mov	dpl,a
      00590F EB               [12]14116 	mov	a,r3
      005910 34 00            [12]14117 	addc	a,#(_eeprom_buf >> 8)
      005912 F5 83            [12]14118 	mov	dph,a
      005914 E0               [24]14119 	movx	a,@dptr
      005915 FC               [12]14120 	mov  r4,a
      005916 24 C6            [12]14121 	add	a,#0xff - 0x39
      005918 40 03            [24]14122 	jc	01098$
      00591A 0D               [12]14123 	inc	r5
      00591B 80 C5            [24]14124 	sjmp	00654$
      00591D                      14125 01098$:
      00591D 90 01 39         [24]14126 	mov	dptr,#_main_i_65537_254
      005920 ED               [12]14127 	mov	a,r5
      005921 F0               [24]14128 	movx	@dptr,a
      005922                      14129 00123$:
                                  14130 ;	src\main.c:106: if(i<10){
      005922 90 01 39         [24]14131 	mov	dptr,#_main_i_65537_254
      005925 E0               [24]14132 	movx	a,@dptr
      005926 FD               [12]14133 	mov	r5,a
      005927 BD 0A 00         [24]14134 	cjne	r5,#0x0a,02380$
      00592A                      14135 02380$:
      00592A 50 0B            [24]14136 	jnc	00126$
                                  14137 ;	src\main.c:107: eeprom_buf[PHONEPHU_EEPROM+10] = 0;
      00592C 90 00 D8         [24]14138 	mov	dptr,#(_eeprom_buf + 0x001b)
      00592F E4               [12]14139 	clr	a
      005930 F0               [24]14140 	movx	@dptr,a
                                  14141 ;	src\main.c:108: eeprom_buf[PHONEPHU_EEPROM+11] = 2;
      005931 90 00 D9         [24]14142 	mov	dptr,#(_eeprom_buf + 0x001c)
      005934 74 02            [12]14143 	mov	a,#0x02
      005936 F0               [24]14144 	movx	@dptr,a
      005937                      14145 00126$:
                                  14146 ;	src\main.c:111: if(eeprom_buf[LOITHESIM_EEPROM]>24)eeprom_buf[LOITHESIM_EEPROM] = 0;
      005937 90 00 DA         [24]14147 	mov	dptr,#(_eeprom_buf + 0x001d)
      00593A E0               [24]14148 	movx	a,@dptr
      00593B FD               [12]14149 	mov  r5,a
      00593C 24 E7            [12]14150 	add	a,#0xff - 0x18
      00593E 50 05            [24]14151 	jnc	00128$
      005940 90 00 DA         [24]14152 	mov	dptr,#(_eeprom_buf + 0x001d)
      005943 E4               [12]14153 	clr	a
      005944 F0               [24]14154 	movx	@dptr,a
      005945                      14155 00128$:
                                  14156 ;	src\main.c:112: if(mp3_playing) eeprom_buf[MP3_EEPROM] &= 4;
      005945 30 92 0A         [24]14157 	jnb	_P12,00135$
      005948 90 00 CD         [24]14158 	mov	dptr,#(_eeprom_buf + 0x0010)
      00594B E0               [24]14159 	movx	a,@dptr
      00594C 54 04            [12]14160 	anl	a,#0x04
      00594E FD               [12]14161 	mov	r5,a
      00594F F0               [24]14162 	movx	@dptr,a
      005950 80 1D            [24]14163 	sjmp	00136$
      005952                      14164 00135$:
                                  14165 ;	src\main.c:113: else if(eeprom_buf[MP3_EEPROM]>6)eeprom_buf[MP3_EEPROM] = 2;
      005952 90 00 CD         [24]14166 	mov	dptr,#(_eeprom_buf + 0x0010)
      005955 E0               [24]14167 	movx	a,@dptr
      005956 FD               [12]14168 	mov  r5,a
      005957 24 F9            [12]14169 	add	a,#0xff - 0x06
      005959 50 08            [24]14170 	jnc	00132$
      00595B 90 00 CD         [24]14171 	mov	dptr,#(_eeprom_buf + 0x0010)
      00595E 74 02            [12]14172 	mov	a,#0x02
      005960 F0               [24]14173 	movx	@dptr,a
      005961 80 0C            [24]14174 	sjmp	00136$
      005963                      14175 00132$:
                                  14176 ;	src\main.c:114: else if(!(eeprom_buf[MP3_EEPROM]&3))eeprom_buf[MP3_EEPROM] += 2;
      005963 ED               [12]14177 	mov	a,r5
      005964 54 03            [12]14178 	anl	a,#0x03
      005966 70 07            [24]14179 	jnz	00136$
      005968 0D               [12]14180 	inc	r5
      005969 0D               [12]14181 	inc	r5
      00596A 90 00 CD         [24]14182 	mov	dptr,#(_eeprom_buf + 0x0010)
      00596D ED               [12]14183 	mov	a,r5
      00596E F0               [24]14184 	movx	@dptr,a
      00596F                      14185 00136$:
                                  14186 ;	src\main.c:115: if((eeprom_buf[DEBUG_EEPROM]&15) -1 > 10)eeprom_buf[DEBUG_EEPROM] = 0x3b; 	
      00596F 90 00 DB         [24]14187 	mov	dptr,#(_eeprom_buf + 0x001e)
      005972 E0               [24]14188 	movx	a,@dptr
      005973 FD               [12]14189 	mov	r5,a
      005974 53 05 0F         [24]14190 	anl	ar5,#0x0f
      005977 7C 00            [12]14191 	mov	r4,#0x00
      005979 1D               [12]14192 	dec	r5
      00597A BD FF 01         [24]14193 	cjne	r5,#0xff,02387$
      00597D 1C               [12]14194 	dec	r4
      00597E                      14195 02387$:
      00597E C3               [12]14196 	clr	c
      00597F 74 0A            [12]14197 	mov	a,#0x0a
      005981 9D               [12]14198 	subb	a,r5
      005982 74 80            [12]14199 	mov	a,#(0x00 ^ 0x80)
      005984 8C F0            [24]14200 	mov	b,r4
      005986 63 F0 80         [24]14201 	xrl	b,#0x80
      005989 95 F0            [12]14202 	subb	a,b
      00598B 50 06            [24]14203 	jnc	00138$
      00598D 90 00 DB         [24]14204 	mov	dptr,#(_eeprom_buf + 0x001e)
      005990 74 3B            [12]14205 	mov	a,#0x3b
      005992 F0               [24]14206 	movx	@dptr,a
      005993                      14207 00138$:
                                  14208 ;	src\main.c:116: if(eeprom_buf[CAM_EEPROM]>1)eeprom_buf[CAM_EEPROM] = 1;
      005993 90 00 DC         [24]14209 	mov	dptr,#(_eeprom_buf + 0x001f)
      005996 E0               [24]14210 	movx	a,@dptr
      005997 24 FE            [12]14211 	add	a,#0xff - 0x01
      005999 50 06            [24]14212 	jnc	00140$
      00599B 90 00 DC         [24]14213 	mov	dptr,#(_eeprom_buf + 0x001f)
      00599E 74 01            [12]14214 	mov	a,#0x01
      0059A0 F0               [24]14215 	movx	@dptr,a
      0059A1                      14216 00140$:
                                  14217 ;	src\main.c:118: IAP_ghisector1();
      0059A1 C0 07            [24]14218 	push	ar7
      0059A3 C0 06            [24]14219 	push	ar6
      0059A5 12 03 6F         [24]14220 	lcall	_IAP_ghisector1
      0059A8 D0 06            [24]14221 	pop	ar6
      0059AA D0 07            [24]14222 	pop	ar7
                                  14223 ;	src\main.c:119: so_motor = (eep_motor & 3) + 1;
      0059AC 90 F0 00         [24]14224 	mov	dptr,#_eep_motor
      0059AF E4               [12]14225 	clr	a
      0059B0 93               [24]14226 	movc	a,@a+dptr
      0059B1 FD               [12]14227 	mov	r5,a
      0059B2 74 03            [12]14228 	mov	a,#0x03
      0059B4 5D               [12]14229 	anl	a,r5
      0059B5 90 01 2F         [24]14230 	mov	dptr,#_so_motor
      0059B8 04               [12]14231 	inc	a
      0059B9 F0               [24]14232 	movx	@dptr,a
                                  14233 ;	src\main.c:120: may_dc   = (eep_motor & 4);
      0059BA 90 F0 00         [24]14234 	mov	dptr,#_eep_motor
      0059BD E4               [12]14235 	clr	a
      0059BE 93               [24]14236 	movc	a,@a+dptr
      0059BF 03               [12]14237 	rr	a
      0059C0 03               [12]14238 	rr	a
      0059C1 54 01            [12]14239 	anl	a,#0x01
                                  14240 ;	assignBit
      0059C3 24 FF            [12]14241 	add	a,#0xff
      0059C5 92 34            [24]14242 	mov	_may_dc,c
                                  14243 ;	src\main.c:121: motorDir = atmel_phat = (eep_motor & 8);
      0059C7 E4               [12]14244 	clr	a
      0059C8 93               [24]14245 	movc	a,@a+dptr
      0059C9 A2 E3            [12]14246 	mov	c,acc[3]
      0059CB E4               [12]14247 	clr	a
      0059CC 33               [12]14248 	rlc	a
                                  14249 ;	assignBit
      0059CD 24 FF            [12]14250 	add	a,#0xff
                                  14251 ;	assignBit
      0059CF 92 35            [24]14252 	mov  _atmel_phat,c
      0059D1 92 12            [24]14253 	mov	_motorDir,c
                                  14254 ;	src\main.c:122: motor_dung  = (eep_motor & 16);
      0059D3 90 F0 00         [24]14255 	mov	dptr,#_eep_motor
      0059D6 E4               [12]14256 	clr	a
      0059D7 93               [24]14257 	movc	a,@a+dptr
      0059D8 C4               [12]14258 	swap	a
      0059D9 54 01            [12]14259 	anl	a,#0x01
                                  14260 ;	assignBit
      0059DB 24 FF            [12]14261 	add	a,#0xff
      0059DD 92 36            [24]14262 	mov	_motor_dung,c
                                  14263 ;	src\main.c:123: motor_debug = (eep_motor & 32);
      0059DF E4               [12]14264 	clr	a
      0059E0 93               [24]14265 	movc	a,@a+dptr
      0059E1 A2 E5            [12]14266 	mov	c,acc[5]
      0059E3 E4               [12]14267 	clr	a
      0059E4 33               [12]14268 	rlc	a
                                  14269 ;	assignBit
      0059E5 FD               [12]14270 	mov	r5,a
      0059E6 24 FF            [12]14271 	add	a,#0xff
      0059E8 92 37            [24]14272 	mov	_motor_debug,c
                                  14273 ;	src\main.c:124: if(!may_dc && !atmel_phat) toc_do_motor_step = (eep_motor & 192) >> 64;
      0059EA 20 34 19         [24]14274 	jb	_may_dc,00142$
      0059ED 20 35 16         [24]14275 	jb	_atmel_phat,00142$
      0059F0 90 F0 00         [24]14276 	mov	dptr,#_eep_motor
      0059F3 E4               [12]14277 	clr	a
      0059F4 93               [24]14278 	movc	a,@a+dptr
      0059F5 FD               [12]14279 	mov	r5,a
      0059F6 53 05 C0         [24]14280 	anl	ar5,#0xc0
      0059F9 E4               [12]14281 	clr	a
      0059FA 33               [12]14282 	rlc	a
      0059FB 95 E0            [12]14283 	subb	a,acc
      0059FD FD               [12]14284 	mov	r5,a
      0059FE FC               [12]14285 	mov	r4,a
      0059FF 90 00 ED         [24]14286 	mov	dptr,#_toc_do_motor_step
      005A02 ED               [12]14287 	mov	a,r5
      005A03 F0               [24]14288 	movx	@dptr,a
      005A04 80 05            [24]14289 	sjmp	00143$
      005A06                      14290 00142$:
                                  14291 ;	src\main.c:125: else toc_do_motor_step = 0;
      005A06 90 00 ED         [24]14292 	mov	dptr,#_toc_do_motor_step
      005A09 E4               [12]14293 	clr	a
      005A0A F0               [24]14294 	movx	@dptr,a
      005A0B                      14295 00143$:
                                  14296 ;	src\main.c:127: sms_on = (eep_debug & 96)>>5;
      005A0B 90 F0 1E         [24]14297 	mov	dptr,#_eep_debug
      005A0E E4               [12]14298 	clr	a
      005A0F 93               [24]14299 	movc	a,@a+dptr
      005A10 FD               [12]14300 	mov	r5,a
      005A11 53 05 60         [24]14301 	anl	ar5,#0x60
      005A14 E4               [12]14302 	clr	a
      005A15 03               [12]14303 	rr	a
      005A16 CD               [12]14304 	xch	a,r5
      005A17 C4               [12]14305 	swap	a
      005A18 03               [12]14306 	rr	a
      005A19 54 07            [12]14307 	anl	a,#0x07
      005A1B 6D               [12]14308 	xrl	a,r5
      005A1C CD               [12]14309 	xch	a,r5
      005A1D 54 07            [12]14310 	anl	a,#0x07
      005A1F CD               [12]14311 	xch	a,r5
      005A20 6D               [12]14312 	xrl	a,r5
      005A21 CD               [12]14313 	xch	a,r5
      005A22 30 E2 02         [24]14314 	jnb	acc.2,02392$
      005A25 44 F8            [12]14315 	orl	a,#0xf8
      005A27                      14316 02392$:
      005A27 FC               [12]14317 	mov	r4,a
      005A28 90 01 32         [24]14318 	mov	dptr,#_sms_on
      005A2B ED               [12]14319 	mov	a,r5
      005A2C F0               [24]14320 	movx	@dptr,a
                                  14321 ;	src\main.c:128: if(sms_on==2) for(i=0;i<11;i++)phone_chinh[i]= phone2[i];
      005A2D BD 02 1D         [24]14322 	cjne	r5,#0x02,00821$
      005A30 7D 00            [12]14323 	mov	r5,#0x00
      005A32                      14324 00656$:
      005A32 ED               [12]14325 	mov	a,r5
      005A33 24 01            [12]14326 	add	a,#_phone_chinh
      005A35 FB               [12]14327 	mov	r3,a
      005A36 E4               [12]14328 	clr	a
      005A37 34 00            [12]14329 	addc	a,#(_phone_chinh >> 8)
      005A39 FC               [12]14330 	mov	r4,a
      005A3A ED               [12]14331 	mov	a,r5
      005A3B 90 84 F5         [24]14332 	mov	dptr,#_phone2
      005A3E 93               [24]14333 	movc	a,@a+dptr
      005A3F FA               [12]14334 	mov	r2,a
      005A40 8B 82            [24]14335 	mov	dpl,r3
      005A42 8C 83            [24]14336 	mov	dph,r4
      005A44 F0               [24]14337 	movx	@dptr,a
      005A45 0D               [12]14338 	inc	r5
      005A46 BD 0B 00         [24]14339 	cjne	r5,#0x0b,02395$
      005A49                      14340 02395$:
      005A49 40 E7            [24]14341 	jc	00656$
                                  14342 ;	src\main.c:129: else for(i=0;i<11;i++)phone_chinh[i]= phone1[i];
      005A4B 80 1B            [24]14343 	sjmp	00149$
      005A4D                      14344 00821$:
      005A4D 7D 00            [12]14345 	mov	r5,#0x00
      005A4F                      14346 00658$:
      005A4F ED               [12]14347 	mov	a,r5
      005A50 24 01            [12]14348 	add	a,#_phone_chinh
      005A52 FB               [12]14349 	mov	r3,a
      005A53 E4               [12]14350 	clr	a
      005A54 34 00            [12]14351 	addc	a,#(_phone_chinh >> 8)
      005A56 FC               [12]14352 	mov	r4,a
      005A57 ED               [12]14353 	mov	a,r5
      005A58 90 84 EA         [24]14354 	mov	dptr,#_phone1
      005A5B 93               [24]14355 	movc	a,@a+dptr
      005A5C FA               [12]14356 	mov	r2,a
      005A5D 8B 82            [24]14357 	mov	dpl,r3
      005A5F 8C 83            [24]14358 	mov	dph,r4
      005A61 F0               [24]14359 	movx	@dptr,a
      005A62 0D               [12]14360 	inc	r5
      005A63 BD 0B 00         [24]14361 	cjne	r5,#0x0b,02397$
      005A66                      14362 02397$:
      005A66 40 E7            [24]14363 	jc	00658$
      005A68                      14364 00149$:
                                  14365 ;	src\main.c:130: sim_test_sec = 0;
      005A68 90 01 31         [24]14366 	mov	dptr,#_sim_test_sec
      005A6B E4               [12]14367 	clr	a
      005A6C F0               [24]14368 	movx	@dptr,a
                                  14369 ;	src\main.c:131: max_second = (eep_debug & 15)<6?(eep_debug & 15) + 1 : (60/(12-(eep_debug & 15)));
      005A6D 90 F0 1E         [24]14370 	mov	dptr,#_eep_debug
                                  14371 ;	genFromRTrack removed	clr	a
      005A70 93               [24]14372 	movc	a,@a+dptr
      005A71 FD               [12]14373 	mov	r5,a
      005A72 53 05 0F         [24]14374 	anl	ar5,#0x0f
      005A75 7C 00            [12]14375 	mov	r4,#0x00
      005A77 C3               [12]14376 	clr	c
      005A78 ED               [12]14377 	mov	a,r5
      005A79 94 06            [12]14378 	subb	a,#0x06
      005A7B EC               [12]14379 	mov	a,r4
      005A7C 64 80            [12]14380 	xrl	a,#0x80
      005A7E 94 80            [12]14381 	subb	a,#0x80
      005A80 50 11            [24]14382 	jnc	00662$
      005A82 90 F0 1E         [24]14383 	mov	dptr,#_eep_debug
      005A85 E4               [12]14384 	clr	a
      005A86 93               [24]14385 	movc	a,@a+dptr
      005A87 FD               [12]14386 	mov	r5,a
      005A88 74 0F            [12]14387 	mov	a,#0x0f
      005A8A 5D               [12]14388 	anl	a,r5
      005A8B 04               [12]14389 	inc	a
      005A8C FC               [12]14390 	mov	r4,a
      005A8D 33               [12]14391 	rlc	a
      005A8E 95 E0            [12]14392 	subb	a,acc
      005A90 FD               [12]14393 	mov	r5,a
      005A91 80 27            [24]14394 	sjmp	00663$
      005A93                      14395 00662$:
      005A93 90 F0 1E         [24]14396 	mov	dptr,#_eep_debug
      005A96 E4               [12]14397 	clr	a
      005A97 93               [24]14398 	movc	a,@a+dptr
      005A98 FB               [12]14399 	mov	r3,a
      005A99 53 03 0F         [24]14400 	anl	ar3,#0x0f
      005A9C 7A 00            [12]14401 	mov	r2,#0x00
      005A9E 74 0C            [12]14402 	mov	a,#0x0c
      005AA0 C3               [12]14403 	clr	c
      005AA1 9B               [12]14404 	subb	a,r3
      005AA2 F5 1B            [12]14405 	mov	__divsint_PARM_2,a
      005AA4 E4               [12]14406 	clr	a
      005AA5 9A               [12]14407 	subb	a,r2
      005AA6 F5 1C            [12]14408 	mov	(__divsint_PARM_2 + 1),a
      005AA8 90 00 3C         [24]14409 	mov	dptr,#0x003c
      005AAB C0 07            [24]14410 	push	ar7
      005AAD C0 06            [24]14411 	push	ar6
      005AAF 12 84 9D         [24]14412 	lcall	__divsint
      005AB2 AC 82            [24]14413 	mov	r4,dpl
      005AB4 AD 83            [24]14414 	mov	r5,dph
      005AB6 D0 06            [24]14415 	pop	ar6
      005AB8 D0 07            [24]14416 	pop	ar7
      005ABA                      14417 00663$:
      005ABA 90 01 30         [24]14418 	mov	dptr,#_max_second
      005ABD EC               [12]14419 	mov	a,r4
      005ABE F0               [24]14420 	movx	@dptr,a
                                  14421 ;	src\main.c:132: if(!(eep_debug & 16) || max_second<60) sim_test_sec = 61;
      005ABF 90 F0 1E         [24]14422 	mov	dptr,#_eep_debug
      005AC2 E4               [12]14423 	clr	a
      005AC3 93               [24]14424 	movc	a,@a+dptr
      005AC4 30 E4 05         [24]14425 	jnb	acc.4,00150$
      005AC7 BC 3C 00         [24]14426 	cjne	r4,#0x3c,02401$
      005ACA                      14427 02401$:
      005ACA 50 06            [24]14428 	jnc	00151$
      005ACC                      14429 00150$:
      005ACC 90 01 31         [24]14430 	mov	dptr,#_sim_test_sec
      005ACF 74 3D            [12]14431 	mov	a,#0x3d
      005AD1 F0               [24]14432 	movx	@dptr,a
      005AD2                      14433 00151$:
                                  14434 ;	src\main.c:134: thoi_gian_doi_cam_chuan = (eep_motor & 64)?255:(may_dc?30:10);
      005AD2 90 F0 00         [24]14435 	mov	dptr,#_eep_motor
      005AD5 E4               [12]14436 	clr	a
      005AD6 93               [24]14437 	movc	a,@a+dptr
      005AD7 30 E6 06         [24]14438 	jnb	acc.6,00664$
      005ADA 7C FF            [12]14439 	mov	r4,#0xff
      005ADC 7D 00            [12]14440 	mov	r5,#0x00
      005ADE 80 11            [24]14441 	sjmp	00665$
      005AE0                      14442 00664$:
      005AE0 30 34 06         [24]14443 	jnb	_may_dc,00666$
      005AE3 7A 1E            [12]14444 	mov	r2,#0x1e
      005AE5 7B 00            [12]14445 	mov	r3,#0x00
      005AE7 80 04            [24]14446 	sjmp	00667$
      005AE9                      14447 00666$:
      005AE9 7A 0A            [12]14448 	mov	r2,#0x0a
      005AEB 7B 00            [12]14449 	mov	r3,#0x00
      005AED                      14450 00667$:
      005AED 8A 04            [24]14451 	mov	ar4,r2
      005AEF 8B 05            [24]14452 	mov	ar5,r3
      005AF1                      14453 00665$:
      005AF1 90 00 EC         [24]14454 	mov	dptr,#_thoi_gian_doi_cam_chuan
      005AF4 EC               [12]14455 	mov	a,r4
      005AF5 F0               [24]14456 	movx	@dptr,a
                                  14457 ;	src\main.c:136: switch(so_motor){
      005AF6 90 01 2F         [24]14458 	mov	dptr,#_so_motor
      005AF9 E0               [24]14459 	movx	a,@dptr
      005AFA FD               [12]14460 	mov	r5,a
      005AFB BD 01 03         [24]14461 	cjne	r5,#0x01,02405$
      005AFE 02 5B B1         [24]14462 	ljmp	00165$
      005B01                      14463 02405$:
      005B01 BD 02 02         [24]14464 	cjne	r5,#0x02,02406$
      005B04 80 75            [24]14465 	sjmp	00161$
      005B06                      14466 02406$:
      005B06 BD 03 02         [24]14467 	cjne	r5,#0x03,02407$
      005B09 80 3A            [24]14468 	sjmp	00157$
      005B0B                      14469 02407$:
      005B0B BD 04 02         [24]14470 	cjne	r5,#0x04,02408$
      005B0E 80 03            [24]14471 	sjmp	02409$
      005B10                      14472 02408$:
      005B10 02 5B E7         [24]14473 	ljmp	00170$
      005B13                      14474 02409$:
                                  14475 ;	src\main.c:137: case 4: thoi_gian_doi_doc_cam[3]=thoi_gian_doi_cam_chuan;
      005B13 90 00 EB         [24]14476 	mov	dptr,#(_thoi_gian_doi_doc_cam + 0x0003)
      005B16 EC               [12]14477 	mov	a,r4
      005B17 F0               [24]14478 	movx	@dptr,a
                                  14479 ;	src\main.c:138: if(eep_phut4>59 || eep_gio4>11)
      005B18 90 F2 06         [24]14480 	mov	dptr,#_eep_phut4
      005B1B E4               [12]14481 	clr	a
      005B1C 93               [24]14482 	movc	a,@a+dptr
      005B1D FD               [12]14483 	mov  r5,a
      005B1E 24 C4            [12]14484 	add	a,#0xff - 0x3b
      005B20 40 0A            [24]14485 	jc	00154$
      005B22 90 F2 07         [24]14486 	mov	dptr,#_eep_gio4
      005B25 E4               [12]14487 	clr	a
      005B26 93               [24]14488 	movc	a,@a+dptr
      005B27 FD               [12]14489 	mov  r5,a
      005B28 24 F4            [12]14490 	add	a,#0xff - 0x0b
      005B2A 50 0B            [24]14491 	jnc	00155$
      005B2C                      14492 00154$:
                                  14493 ;	src\main.c:139: luu_gio_kim();
      005B2C C0 07            [24]14494 	push	ar7
      005B2E C0 06            [24]14495 	push	ar6
      005B30 12 0F 81         [24]14496 	lcall	_luu_gio_kim
      005B33 D0 06            [24]14497 	pop	ar6
      005B35 D0 07            [24]14498 	pop	ar7
      005B37                      14499 00155$:
                                  14500 ;	src\main.c:140: phut[3] = eep_phut4; 
      005B37 90 F2 06         [24]14501 	mov	dptr,#_eep_phut4
      005B3A E4               [12]14502 	clr	a
      005B3B 93               [24]14503 	movc	a,@a+dptr
      005B3C F5 54            [12]14504 	mov	(_phut + 0x0003),a
                                  14505 ;	src\main.c:141: gio[3] = eep_gio4;
      005B3E 90 F2 07         [24]14506 	mov	dptr,#_eep_gio4
      005B41 E4               [12]14507 	clr	a
      005B42 93               [24]14508 	movc	a,@a+dptr
      005B43 F5 50            [12]14509 	mov	(_gio + 0x0003),a
                                  14510 ;	src\main.c:142: case 3: thoi_gian_doi_doc_cam[2]=thoi_gian_doi_cam_chuan;
      005B45                      14511 00157$:
      005B45 90 00 EC         [24]14512 	mov	dptr,#_thoi_gian_doi_cam_chuan
      005B48 E0               [24]14513 	movx	a,@dptr
      005B49 FD               [12]14514 	mov	r5,a
      005B4A 90 00 EA         [24]14515 	mov	dptr,#(_thoi_gian_doi_doc_cam + 0x0002)
      005B4D F0               [24]14516 	movx	@dptr,a
                                  14517 ;	src\main.c:143: if(eep_phut3>59 || eep_gio3>11)
      005B4E 90 F2 04         [24]14518 	mov	dptr,#_eep_phut3
      005B51 E4               [12]14519 	clr	a
      005B52 93               [24]14520 	movc	a,@a+dptr
      005B53 FD               [12]14521 	mov  r5,a
      005B54 24 C4            [12]14522 	add	a,#0xff - 0x3b
      005B56 40 0A            [24]14523 	jc	00158$
      005B58 90 F2 05         [24]14524 	mov	dptr,#_eep_gio3
      005B5B E4               [12]14525 	clr	a
      005B5C 93               [24]14526 	movc	a,@a+dptr
      005B5D FD               [12]14527 	mov  r5,a
      005B5E 24 F4            [12]14528 	add	a,#0xff - 0x0b
      005B60 50 0B            [24]14529 	jnc	00159$
      005B62                      14530 00158$:
                                  14531 ;	src\main.c:144: luu_gio_kim();
      005B62 C0 07            [24]14532 	push	ar7
      005B64 C0 06            [24]14533 	push	ar6
      005B66 12 0F 81         [24]14534 	lcall	_luu_gio_kim
      005B69 D0 06            [24]14535 	pop	ar6
      005B6B D0 07            [24]14536 	pop	ar7
      005B6D                      14537 00159$:
                                  14538 ;	src\main.c:145: phut[2] = eep_phut3; gio[2] = eep_gio3;
      005B6D 90 F2 04         [24]14539 	mov	dptr,#_eep_phut3
      005B70 E4               [12]14540 	clr	a
      005B71 93               [24]14541 	movc	a,@a+dptr
      005B72 F5 53            [12]14542 	mov	(_phut + 0x0002),a
      005B74 90 F2 05         [24]14543 	mov	dptr,#_eep_gio3
      005B77 E4               [12]14544 	clr	a
      005B78 93               [24]14545 	movc	a,@a+dptr
      005B79 F5 4F            [12]14546 	mov	(_gio + 0x0002),a
                                  14547 ;	src\main.c:146: case 2: thoi_gian_doi_doc_cam[1]=thoi_gian_doi_cam_chuan;
      005B7B                      14548 00161$:
      005B7B 90 00 EC         [24]14549 	mov	dptr,#_thoi_gian_doi_cam_chuan
      005B7E E0               [24]14550 	movx	a,@dptr
      005B7F FD               [12]14551 	mov	r5,a
      005B80 90 00 E9         [24]14552 	mov	dptr,#(_thoi_gian_doi_doc_cam + 0x0001)
      005B83 F0               [24]14553 	movx	@dptr,a
                                  14554 ;	src\main.c:147: if(eep_phut2>59 || eep_gio2>11)
      005B84 90 F2 02         [24]14555 	mov	dptr,#_eep_phut2
      005B87 E4               [12]14556 	clr	a
      005B88 93               [24]14557 	movc	a,@a+dptr
      005B89 FD               [12]14558 	mov  r5,a
      005B8A 24 C4            [12]14559 	add	a,#0xff - 0x3b
      005B8C 40 0A            [24]14560 	jc	00162$
      005B8E 90 F2 03         [24]14561 	mov	dptr,#_eep_gio2
      005B91 E4               [12]14562 	clr	a
      005B92 93               [24]14563 	movc	a,@a+dptr
      005B93 FD               [12]14564 	mov  r5,a
      005B94 24 F4            [12]14565 	add	a,#0xff - 0x0b
      005B96 50 0B            [24]14566 	jnc	00163$
      005B98                      14567 00162$:
                                  14568 ;	src\main.c:148: luu_gio_kim();
      005B98 C0 07            [24]14569 	push	ar7
      005B9A C0 06            [24]14570 	push	ar6
      005B9C 12 0F 81         [24]14571 	lcall	_luu_gio_kim
      005B9F D0 06            [24]14572 	pop	ar6
      005BA1 D0 07            [24]14573 	pop	ar7
      005BA3                      14574 00163$:
                                  14575 ;	src\main.c:149: phut[1] = eep_phut2; gio[1] = eep_gio2;
      005BA3 90 F2 02         [24]14576 	mov	dptr,#_eep_phut2
      005BA6 E4               [12]14577 	clr	a
      005BA7 93               [24]14578 	movc	a,@a+dptr
      005BA8 F5 52            [12]14579 	mov	(_phut + 0x0001),a
      005BAA 90 F2 03         [24]14580 	mov	dptr,#_eep_gio2
      005BAD E4               [12]14581 	clr	a
      005BAE 93               [24]14582 	movc	a,@a+dptr
      005BAF F5 4E            [12]14583 	mov	(_gio + 0x0001),a
                                  14584 ;	src\main.c:150: case 1: thoi_gian_doi_doc_cam[0]=thoi_gian_doi_cam_chuan;
      005BB1                      14585 00165$:
      005BB1 90 00 EC         [24]14586 	mov	dptr,#_thoi_gian_doi_cam_chuan
      005BB4 E0               [24]14587 	movx	a,@dptr
      005BB5 FD               [12]14588 	mov	r5,a
      005BB6 90 00 E8         [24]14589 	mov	dptr,#_thoi_gian_doi_doc_cam
      005BB9 F0               [24]14590 	movx	@dptr,a
                                  14591 ;	src\main.c:151: if(eep_phut1>59 || eep_gio1>11)
      005BBA 90 F2 00         [24]14592 	mov	dptr,#_eep_phut1
      005BBD E4               [12]14593 	clr	a
      005BBE 93               [24]14594 	movc	a,@a+dptr
      005BBF FD               [12]14595 	mov  r5,a
      005BC0 24 C4            [12]14596 	add	a,#0xff - 0x3b
      005BC2 40 0A            [24]14597 	jc	00166$
      005BC4 90 F2 01         [24]14598 	mov	dptr,#_eep_gio1
      005BC7 E4               [12]14599 	clr	a
      005BC8 93               [24]14600 	movc	a,@a+dptr
      005BC9 FD               [12]14601 	mov  r5,a
      005BCA 24 F4            [12]14602 	add	a,#0xff - 0x0b
      005BCC 50 0B            [24]14603 	jnc	00167$
      005BCE                      14604 00166$:
                                  14605 ;	src\main.c:152: luu_gio_kim();
      005BCE C0 07            [24]14606 	push	ar7
      005BD0 C0 06            [24]14607 	push	ar6
      005BD2 12 0F 81         [24]14608 	lcall	_luu_gio_kim
      005BD5 D0 06            [24]14609 	pop	ar6
      005BD7 D0 07            [24]14610 	pop	ar7
      005BD9                      14611 00167$:
                                  14612 ;	src\main.c:153: phut[0] = eep_phut1; gio[0] = eep_gio1;
      005BD9 90 F2 00         [24]14613 	mov	dptr,#_eep_phut1
      005BDC E4               [12]14614 	clr	a
      005BDD 93               [24]14615 	movc	a,@a+dptr
      005BDE F5 51            [12]14616 	mov	_phut,a
      005BE0 90 F2 01         [24]14617 	mov	dptr,#_eep_gio1
      005BE3 E4               [12]14618 	clr	a
      005BE4 93               [24]14619 	movc	a,@a+dptr
      005BE5 F5 4D            [12]14620 	mov	_gio,a
                                  14621 ;	src\main.c:155: }
      005BE7                      14622 00170$:
                                  14623 ;	src\main.c:157: ChargeRelay = 1;
                                  14624 ;	assignBit
      005BE7 D2 A2            [12]14625 	setb	_P22
                                  14626 ;	src\main.c:160: LCD_guilenh(0x80);
      005BE9 75 82 80         [24]14627 	mov	dpl,#0x80
      005BEC C0 07            [24]14628 	push	ar7
      005BEE C0 06            [24]14629 	push	ar6
      005BF0 12 05 71         [24]14630 	lcall	_LCD_guilenh
                                  14631 ;	src\main.c:161: LCD_guichuoi("POWER ON SIM800 ");
      005BF3 90 90 00         [24]14632 	mov	dptr,#___str_119
      005BF6 75 F0 80         [24]14633 	mov	b,#0x80
      005BF9 12 05 F1         [24]14634 	lcall	_LCD_guichuoi
                                  14635 ;	src\main.c:162: gsm_init();
      005BFC 12 03 A0         [24]14636 	lcall	_gsm_init
                                  14637 ;	src\main.c:166: LCD_guilenh(0x80);
      005BFF 75 82 80         [24]14638 	mov	dpl,#0x80
      005C02 12 05 71         [24]14639 	lcall	_LCD_guilenh
                                  14640 ;	src\main.c:167: LCD_guichuoi("  KHOI TAO MP3  ");
      005C05 90 90 11         [24]14641 	mov	dptr,#___str_120
      005C08 75 F0 80         [24]14642 	mov	b,#0x80
      005C0B 12 05 F1         [24]14643 	lcall	_LCD_guichuoi
      005C0E D0 06            [24]14644 	pop	ar6
      005C10 D0 07            [24]14645 	pop	ar7
                                  14646 ;	src\main.c:168: if(eep_mp3%4==2){
      005C12 90 F0 10         [24]14647 	mov	dptr,#_eep_mp3
      005C15 E4               [12]14648 	clr	a
      005C16 93               [24]14649 	movc	a,@a+dptr
      005C17 54 03            [12]14650 	anl	a,#0x03
      005C19 FC               [12]14651 	mov	r4,a
      005C1A 7D 00            [12]14652 	mov	r5,#0x00
      005C1C BC 02 1A         [24]14653 	cjne	r4,#0x02,00172$
      005C1F BD 00 17         [24]14654 	cjne	r5,#0x00,00172$
                                  14655 ;	src\main.c:169: mp3_serial_init();
      005C22 C0 07            [24]14656 	push	ar7
      005C24 C0 06            [24]14657 	push	ar6
      005C26 12 82 88         [24]14658 	lcall	_mp3_serial_init
      005C29 D0 06            [24]14659 	pop	ar6
      005C2B D0 07            [24]14660 	pop	ar7
                                  14661 ;	src\main.c:170: mp3_status= mp3_IDLE;
      005C2D 78 7E            [12]14662 	mov	r0,#_mp3_status
      005C2F 76 00            [12]14663 	mov	@r0,#0x00
                                  14664 ;	src\main.c:171: mp3_hour = 24;
      005C31 78 80            [12]14665 	mov	r0,#_mp3_hour
      005C33 76 18            [12]14666 	mov	@r0,#0x18
                                  14667 ;	src\main.c:172: mp3_minute = 60;
      005C35 78 81            [12]14668 	mov	r0,#_mp3_minute
      005C37 76 3C            [12]14669 	mov	@r0,#0x3c
      005C39                      14670 00172$:
                                  14671 ;	src\main.c:176: da_gui_bao_cao = 1;
                                  14672 ;	assignBit
      005C39 D2 03            [12]14673 	setb	_da_gui_bao_cao
                                  14674 ;	src\main.c:177: ngay_reset_con_lai = eep_ngayreset;
      005C3B 90 F0 03         [24]14675 	mov	dptr,#_eep_ngayreset
      005C3E E4               [12]14676 	clr	a
      005C3F 93               [24]14677 	movc	a,@a+dptr
      005C40 90 00 E6         [24]14678 	mov	dptr,#_ngay_reset_con_lai
      005C43 F0               [24]14679 	movx	@dptr,a
                                  14680 ;	src\main.c:180: PCA_Timer_init();
      005C44 C0 07            [24]14681 	push	ar7
      005C46 C0 06            [24]14682 	push	ar6
      005C48 12 0F E7         [24]14683 	lcall	_PCA_Timer_init
      005C4B D0 06            [24]14684 	pop	ar6
      005C4D D0 07            [24]14685 	pop	ar7
                                  14686 ;	src\main.c:187: if(phim_mode_nhan && phim_back_nhan && phim_cong_nhan){
      005C4F 20 22 03         [24]14687 	jb	_phim_mode_nhan,02420$
      005C52 02 64 0D         [24]14688 	ljmp	00251$
      005C55                      14689 02420$:
      005C55 20 26 03         [24]14690 	jb	_phim_back_nhan,02421$
      005C58 02 64 0D         [24]14691 	ljmp	00251$
      005C5B                      14692 02421$:
      005C5B 20 2A 03         [24]14693 	jb	_phim_cong_nhan,02422$
      005C5E 02 64 0D         [24]14694 	ljmp	00251$
      005C61                      14695 02422$:
                                  14696 ;	src\main.c:188: u8 debug_dem = 0;
      005C61 75 74 00         [24]14697 	mov	_main_debug_dem_131073_263,#0x00
                                  14698 ;	src\main.c:190: u8 mp3temp = eep_mp3;
      005C64 90 F0 10         [24]14699 	mov	dptr,#_eep_mp3
      005C67 E4               [12]14700 	clr	a
      005C68 93               [24]14701 	movc	a,@a+dptr
      005C69 F5 75            [12]14702 	mov	_main_mp3temp_131073_263,a
                                  14703 ;	src\main.c:191: __bit debug = 0;
                                  14704 ;	assignBit
      005C6B C2 4D            [12]14705 	clr	_main_debug_131073_263
                                  14706 ;	src\main.c:192: giotemp = eep_debug;
      005C6D 90 F0 1E         [24]14707 	mov	dptr,#_eep_debug
      005C70 E4               [12]14708 	clr	a
      005C71 93               [24]14709 	movc	a,@a+dptr
      005C72 F5 73            [12]14710 	mov	_main_giotemp_65536_253,a
                                  14711 ;	src\main.c:194: i = eep_motor;
      005C74 90 F0 00         [24]14712 	mov	dptr,#_eep_motor
      005C77 E4               [12]14713 	clr	a
      005C78 93               [24]14714 	movc	a,@a+dptr
      005C79 FA               [12]14715 	mov	r2,a
                                  14716 ;	src\main.c:196: phim_mode_nhan = phim_back_nhan = phim_cong_nhan = 0;
                                  14717 ;	assignBit
      005C7A C2 2A            [12]14718 	clr	_phim_cong_nhan
                                  14719 ;	assignBit
      005C7C C2 26            [12]14720 	clr	_phim_back_nhan
                                  14721 ;	assignBit
      005C7E C2 22            [12]14722 	clr	_phim_mode_nhan
                                  14723 ;	src\main.c:197: LCD_guichuoi("\200 NHA PHAT TRIEN");
      005C80 90 90 22         [24]14724 	mov	dptr,#___str_121
      005C83 75 F0 80         [24]14725 	mov	b,#0x80
      005C86 C0 02            [24]14726 	push	ar2
      005C88 12 05 F1         [24]14727 	lcall	_LCD_guichuoi
                                  14728 ;	src\main.c:198: LCD_guichuoi("\300MAY:");
      005C8B 90 90 33         [24]14729 	mov	dptr,#___str_122
      005C8E 75 F0 80         [24]14730 	mov	b,#0x80
      005C91 12 05 F1         [24]14731 	lcall	_LCD_guichuoi
                                  14732 ;	src\main.c:199: LCD_guidulieu(so_motor+'0');
      005C94 90 01 2F         [24]14733 	mov	dptr,#_so_motor
      005C97 E0               [24]14734 	movx	a,@dptr
      005C98 24 30            [12]14735 	add	a,#0x30
      005C9A F5 82            [12]14736 	mov	dpl,a
      005C9C 12 05 13         [24]14737 	lcall	_LCD_guidulieu
      005C9F D0 02            [24]14738 	pop	ar2
                                  14739 ;	src\main.c:200: LCD_guichuoi(may_dc?"\305 DC ":"\305 ST ");
      005CA1 30 34 08         [24]14740 	jnb	_may_dc,00668$
      005CA4 75 78 39         [24]14741 	mov	_main_sloc0_1_0,#___str_123
      005CA7 75 79 90         [24]14742 	mov	(_main_sloc0_1_0 + 1),#(___str_123 >> 8)
      005CAA 80 06            [24]14743 	sjmp	00669$
      005CAC                      14744 00668$:
      005CAC 75 78 3F         [24]14745 	mov	_main_sloc0_1_0,#___str_124
      005CAF 75 79 90         [24]14746 	mov	(_main_sloc0_1_0 + 1),#(___str_124 >> 8)
      005CB2                      14747 00669$:
      005CB2 AB 78            [24]14748 	mov	r3,_main_sloc0_1_0
      005CB4 AC 79            [24]14749 	mov	r4,(_main_sloc0_1_0 + 1)
      005CB6 7D 80            [12]14750 	mov	r5,#0x80
      005CB8 8B 82            [24]14751 	mov	dpl,r3
      005CBA 8C 83            [24]14752 	mov	dph,r4
      005CBC 8D F0            [24]14753 	mov	b,r5
      005CBE C0 02            [24]14754 	push	ar2
      005CC0 12 05 F1         [24]14755 	lcall	_LCD_guichuoi
      005CC3 D0 02            [24]14756 	pop	ar2
                                  14757 ;	src\main.c:201: LCD_guichuoi(atmel_phat?"\311C55 ":"\311STC ");
      005CC5 30 35 06         [24]14758 	jnb	_atmel_phat,00670$
      005CC8 7C 45            [12]14759 	mov	r4,#___str_125
      005CCA 7D 90            [12]14760 	mov	r5,#(___str_125 >> 8)
      005CCC 80 04            [24]14761 	sjmp	00671$
      005CCE                      14762 00670$:
      005CCE 7C 4B            [12]14763 	mov	r4,#___str_126
      005CD0 7D 90            [12]14764 	mov	r5,#(___str_126 >> 8)
      005CD2                      14765 00671$:
      005CD2 7B 80            [12]14766 	mov	r3,#0x80
      005CD4 8C 82            [24]14767 	mov	dpl,r4
      005CD6 8D 83            [24]14768 	mov	dph,r5
      005CD8 8B F0            [24]14769 	mov	b,r3
      005CDA C0 02            [24]14770 	push	ar2
      005CDC 12 05 F1         [24]14771 	lcall	_LCD_guichuoi
                                  14772 ;	src\main.c:202: LCD_guichuoi("\315S:");
      005CDF 90 90 51         [24]14773 	mov	dptr,#___str_127
      005CE2 75 F0 80         [24]14774 	mov	b,#0x80
      005CE5 12 05 F1         [24]14775 	lcall	_LCD_guichuoi
                                  14776 ;	src\main.c:203: LCD_guidulieu(toc_do_motor_step+'0');
      005CE8 90 00 ED         [24]14777 	mov	dptr,#_toc_do_motor_step
      005CEB E0               [24]14778 	movx	a,@dptr
      005CEC 24 30            [12]14779 	add	a,#0x30
      005CEE F5 82            [12]14780 	mov	dpl,a
      005CF0 12 05 13         [24]14781 	lcall	_LCD_guidulieu
                                  14782 ;	src\main.c:204: LCD_blinkXY(DUOI,4);
      005CF3 75 3F 04         [24]14783 	mov	_LCD_blinkXY_PARM_2,#0x04
      005CF6 75 82 C0         [24]14784 	mov	dpl,#0xc0
      005CF9 12 04 E8         [24]14785 	lcall	_LCD_blinkXY
      005CFC D0 02            [24]14786 	pop	ar2
                                  14787 ;	src\main.c:205: sub_mode = so_motor-1;
      005CFE 90 01 2F         [24]14788 	mov	dptr,#_so_motor
      005D01 E0               [24]14789 	movx	a,@dptr
      005D02 FD               [12]14790 	mov	r5,a
      005D03 14               [12]14791 	dec	a
      005D04 90 00 F5         [24]14792 	mov	dptr,#_sub_mode
      005D07 F0               [24]14793 	movx	@dptr,a
                                  14794 ;	src\main.c:206: mode = 0;
      005D08 90 00 F4         [24]14795 	mov	dptr,#_mode
      005D0B E4               [12]14796 	clr	a
      005D0C F0               [24]14797 	movx	@dptr,a
                                  14798 ;	src\main.c:207: while(1){
      005D0D                      14799 00248$:
                                  14800 ;	src\main.c:208: if(debug){
      005D0D 20 4D 03         [24]14801 	jb	_main_debug_131073_263,02425$
      005D10 02 60 AD         [24]14802 	ljmp	00245$
      005D13                      14803 02425$:
                                  14804 ;	src\main.c:209: if(lcd_update_chop){
      005D13 20 3F 03         [24]14805 	jb	_lcd_update_chop,02426$
      005D16 02 5E F9         [24]14806 	ljmp	00174$
      005D19                      14807 02426$:
                                  14808 ;	src\main.c:210: lcd_update_chop = 0;
      005D19 C0 02            [24]14809 	push	ar2
                                  14810 ;	assignBit
      005D1B C2 3F            [12]14811 	clr	_lcd_update_chop
                                  14812 ;	src\main.c:211: LCD_guichuoi("\300P:");
      005D1D 90 90 55         [24]14813 	mov	dptr,#___str_128
      005D20 75 F0 80         [24]14814 	mov	b,#0x80
      005D23 C0 02            [24]14815 	push	ar2
      005D25 12 05 F1         [24]14816 	lcall	_LCD_guichuoi
      005D28 D0 02            [24]14817 	pop	ar2
                                  14818 ;	src\main.c:212: phuttemp = (giotemp & 15) < 6?(giotemp & 15)+1:(60/(12-(giotemp & 15)));
      005D2A AB 73            [24]14819 	mov	r3,_main_giotemp_65536_253
      005D2C 7D 00            [12]14820 	mov	r5,#0x00
      005D2E 74 0F            [12]14821 	mov	a,#0x0f
      005D30 5B               [12]14822 	anl	a,r3
      005D31 FA               [12]14823 	mov	r2,a
      005D32 7C 00            [12]14824 	mov	r4,#0x00
      005D34 C3               [12]14825 	clr	c
      005D35 EA               [12]14826 	mov	a,r2
      005D36 94 06            [12]14827 	subb	a,#0x06
      005D38 EC               [12]14828 	mov	a,r4
      005D39 64 80            [12]14829 	xrl	a,#0x80
      005D3B 94 80            [12]14830 	subb	a,#0x80
      005D3D D0 02            [24]14831 	pop	ar2
      005D3F 50 10            [24]14832 	jnc	00672$
      005D41 AC 73            [24]14833 	mov	r4,_main_giotemp_65536_253
      005D43 74 0F            [12]14834 	mov	a,#0x0f
      005D45 5C               [12]14835 	anl	a,r4
      005D46 04               [12]14836 	inc	a
      005D47 FC               [12]14837 	mov	r4,a
      005D48 8C 78            [24]14838 	mov	_main_sloc0_1_0,r4
      005D4A 33               [12]14839 	rlc	a
      005D4B 95 E0            [12]14840 	subb	a,acc
      005D4D F5 79            [12]14841 	mov	(_main_sloc0_1_0 + 1),a
      005D4F 80 2C            [24]14842 	sjmp	00673$
      005D51                      14843 00672$:
      005D51 C0 02            [24]14844 	push	ar2
      005D53 74 0F            [12]14845 	mov	a,#0x0f
      005D55 5B               [12]14846 	anl	a,r3
      005D56 FA               [12]14847 	mov	r2,a
      005D57 7C 00            [12]14848 	mov	r4,#0x00
      005D59 74 0C            [12]14849 	mov	a,#0x0c
      005D5B C3               [12]14850 	clr	c
      005D5C 9A               [12]14851 	subb	a,r2
      005D5D F5 1B            [12]14852 	mov	__divsint_PARM_2,a
      005D5F E4               [12]14853 	clr	a
      005D60 9C               [12]14854 	subb	a,r4
      005D61 F5 1C            [12]14855 	mov	(__divsint_PARM_2 + 1),a
      005D63 90 00 3C         [24]14856 	mov	dptr,#0x003c
      005D66 C0 05            [24]14857 	push	ar5
      005D68 C0 03            [24]14858 	push	ar3
      005D6A C0 02            [24]14859 	push	ar2
      005D6C 12 84 9D         [24]14860 	lcall	__divsint
      005D6F 85 82 78         [24]14861 	mov	_main_sloc0_1_0,dpl
      005D72 85 83 79         [24]14862 	mov	(_main_sloc0_1_0 + 1),dph
      005D75 D0 02            [24]14863 	pop	ar2
      005D77 D0 03            [24]14864 	pop	ar3
      005D79 D0 05            [24]14865 	pop	ar5
                                  14866 ;	src\main.c:973: WATCHDOG;
      005D7B D0 02            [24]14867 	pop	ar2
                                  14868 ;	src\main.c:212: phuttemp = (giotemp & 15) < 6?(giotemp & 15)+1:(60/(12-(giotemp & 15)));
      005D7D                      14869 00673$:
      005D7D 85 78 7A         [24]14870 	mov	_main_sloc1_1_0,_main_sloc0_1_0
                                  14871 ;	src\main.c:213: LCD_guidulieu((mode==0&&chop)?'_':phuttemp/10+'0');
      005D80 90 00 F4         [24]14872 	mov	dptr,#_mode
      005D83 E0               [24]14873 	movx	a,@dptr
      005D84 70 0B            [24]14874 	jnz	00674$
      005D86 30 2D 08         [24]14875 	jnb	_chop,00674$
      005D89 75 78 5F         [24]14876 	mov	_main_sloc0_1_0,#0x5f
      005D8C 75 79 00         [24]14877 	mov	(_main_sloc0_1_0 + 1),#0x00
      005D8F 80 2B            [24]14878 	sjmp	00675$
      005D91                      14879 00674$:
      005D91 C0 02            [24]14880 	push	ar2
      005D93 AA 7A            [24]14881 	mov	r2,_main_sloc1_1_0
      005D95 7C 00            [12]14882 	mov	r4,#0x00
      005D97 75 1B 0A         [24]14883 	mov	__divsint_PARM_2,#0x0a
                                  14884 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      005D9A 8C 1C            [24]14885 	mov	(__divsint_PARM_2 + 1),r4
      005D9C 8A 82            [24]14886 	mov	dpl,r2
      005D9E 8C 83            [24]14887 	mov	dph,r4
      005DA0 C0 05            [24]14888 	push	ar5
      005DA2 C0 03            [24]14889 	push	ar3
      005DA4 12 84 9D         [24]14890 	lcall	__divsint
      005DA7 AA 82            [24]14891 	mov	r2,dpl
      005DA9 AC 83            [24]14892 	mov	r4,dph
      005DAB D0 03            [24]14893 	pop	ar3
      005DAD D0 05            [24]14894 	pop	ar5
      005DAF 74 30            [12]14895 	mov	a,#0x30
      005DB1 2A               [12]14896 	add	a,r2
      005DB2 FA               [12]14897 	mov	r2,a
      005DB3 8A 78            [24]14898 	mov	_main_sloc0_1_0,r2
      005DB5 33               [12]14899 	rlc	a
      005DB6 95 E0            [12]14900 	subb	a,acc
      005DB8 F5 79            [12]14901 	mov	(_main_sloc0_1_0 + 1),a
                                  14902 ;	src\main.c:973: WATCHDOG;
      005DBA D0 02            [24]14903 	pop	ar2
                                  14904 ;	src\main.c:213: LCD_guidulieu((mode==0&&chop)?'_':phuttemp/10+'0');
      005DBC                      14905 00675$:
      005DBC 85 78 82         [24]14906 	mov	dpl,_main_sloc0_1_0
      005DBF C0 05            [24]14907 	push	ar5
      005DC1 C0 03            [24]14908 	push	ar3
      005DC3 C0 02            [24]14909 	push	ar2
      005DC5 12 05 13         [24]14910 	lcall	_LCD_guidulieu
      005DC8 D0 02            [24]14911 	pop	ar2
      005DCA D0 03            [24]14912 	pop	ar3
      005DCC D0 05            [24]14913 	pop	ar5
                                  14914 ;	src\main.c:214: LCD_guidulieu((mode==0&&chop)?'_':phuttemp%10+'0');
      005DCE 90 00 F4         [24]14915 	mov	dptr,#_mode
      005DD1 E0               [24]14916 	movx	a,@dptr
      005DD2 70 0B            [24]14917 	jnz	00679$
      005DD4 30 2D 08         [24]14918 	jnb	_chop,00679$
      005DD7 75 78 5F         [24]14919 	mov	_main_sloc0_1_0,#0x5f
      005DDA 75 79 00         [24]14920 	mov	(_main_sloc0_1_0 + 1),#0x00
      005DDD 80 2B            [24]14921 	sjmp	00680$
      005DDF                      14922 00679$:
      005DDF C0 02            [24]14923 	push	ar2
      005DE1 AA 7A            [24]14924 	mov	r2,_main_sloc1_1_0
      005DE3 7C 00            [12]14925 	mov	r4,#0x00
      005DE5 75 1B 0A         [24]14926 	mov	__modsint_PARM_2,#0x0a
                                  14927 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      005DE8 8C 1C            [24]14928 	mov	(__modsint_PARM_2 + 1),r4
      005DEA 8A 82            [24]14929 	mov	dpl,r2
      005DEC 8C 83            [24]14930 	mov	dph,r4
      005DEE C0 05            [24]14931 	push	ar5
      005DF0 C0 03            [24]14932 	push	ar3
      005DF2 12 84 67         [24]14933 	lcall	__modsint
      005DF5 AA 82            [24]14934 	mov	r2,dpl
      005DF7 AC 83            [24]14935 	mov	r4,dph
      005DF9 D0 03            [24]14936 	pop	ar3
      005DFB D0 05            [24]14937 	pop	ar5
      005DFD 74 30            [12]14938 	mov	a,#0x30
      005DFF 2A               [12]14939 	add	a,r2
      005E00 FA               [12]14940 	mov	r2,a
      005E01 8A 78            [24]14941 	mov	_main_sloc0_1_0,r2
      005E03 33               [12]14942 	rlc	a
      005E04 95 E0            [12]14943 	subb	a,acc
      005E06 F5 79            [12]14944 	mov	(_main_sloc0_1_0 + 1),a
                                  14945 ;	src\main.c:973: WATCHDOG;
      005E08 D0 02            [24]14946 	pop	ar2
                                  14947 ;	src\main.c:214: LCD_guidulieu((mode==0&&chop)?'_':phuttemp%10+'0');
      005E0A                      14948 00680$:
      005E0A 85 78 82         [24]14949 	mov	dpl,_main_sloc0_1_0
      005E0D C0 05            [24]14950 	push	ar5
      005E0F C0 03            [24]14951 	push	ar3
      005E11 C0 02            [24]14952 	push	ar2
      005E13 12 05 13         [24]14953 	lcall	_LCD_guidulieu
                                  14954 ;	src\main.c:215: LCD_guichuoi(" T:");
      005E16 90 90 59         [24]14955 	mov	dptr,#___str_129
      005E19 75 F0 80         [24]14956 	mov	b,#0x80
      005E1C 12 05 F1         [24]14957 	lcall	_LCD_guichuoi
      005E1F D0 02            [24]14958 	pop	ar2
      005E21 D0 03            [24]14959 	pop	ar3
      005E23 D0 05            [24]14960 	pop	ar5
                                  14961 ;	src\main.c:216: LCD_guidulieu((mode==1&&chop)?'_':(((giotemp&96)>>5)+'0'));
      005E25 90 00 F4         [24]14962 	mov	dptr,#_mode
      005E28 E0               [24]14963 	movx	a,@dptr
      005E29 FC               [12]14964 	mov	r4,a
      005E2A BC 01 0B         [24]14965 	cjne	r4,#0x01,00684$
      005E2D 30 2D 08         [24]14966 	jnb	_chop,00684$
      005E30 75 78 5F         [24]14967 	mov	_main_sloc0_1_0,#0x5f
      005E33 75 79 00         [24]14968 	mov	(_main_sloc0_1_0 + 1),#0x00
      005E36 80 27            [24]14969 	sjmp	00685$
      005E38                      14970 00684$:
      005E38 C0 02            [24]14971 	push	ar2
      005E3A 74 60            [12]14972 	mov	a,#0x60
      005E3C 5B               [12]14973 	anl	a,r3
      005E3D FA               [12]14974 	mov	r2,a
      005E3E E4               [12]14975 	clr	a
      005E3F 03               [12]14976 	rr	a
      005E40 CA               [12]14977 	xch	a,r2
      005E41 C4               [12]14978 	swap	a
      005E42 03               [12]14979 	rr	a
      005E43 54 07            [12]14980 	anl	a,#0x07
      005E45 6A               [12]14981 	xrl	a,r2
      005E46 CA               [12]14982 	xch	a,r2
      005E47 54 07            [12]14983 	anl	a,#0x07
      005E49 CA               [12]14984 	xch	a,r2
      005E4A 6A               [12]14985 	xrl	a,r2
      005E4B CA               [12]14986 	xch	a,r2
      005E4C 30 E2 02         [24]14987 	jnb	acc.2,02435$
      005E4F 44 F8            [12]14988 	orl	a,#0xf8
      005E51                      14989 02435$:
      005E51 FC               [12]14990 	mov	r4,a
      005E52 74 30            [12]14991 	mov	a,#0x30
      005E54 2A               [12]14992 	add	a,r2
      005E55 FA               [12]14993 	mov	r2,a
      005E56 8A 78            [24]14994 	mov	_main_sloc0_1_0,r2
      005E58 33               [12]14995 	rlc	a
      005E59 95 E0            [12]14996 	subb	a,acc
      005E5B F5 79            [12]14997 	mov	(_main_sloc0_1_0 + 1),a
                                  14998 ;	src\main.c:973: WATCHDOG;
      005E5D D0 02            [24]14999 	pop	ar2
                                  15000 ;	src\main.c:216: LCD_guidulieu((mode==1&&chop)?'_':(((giotemp&96)>>5)+'0'));
      005E5F                      15001 00685$:
      005E5F 85 78 82         [24]15002 	mov	dpl,_main_sloc0_1_0
      005E62 C0 05            [24]15003 	push	ar5
      005E64 C0 03            [24]15004 	push	ar3
      005E66 C0 02            [24]15005 	push	ar2
      005E68 12 05 13         [24]15006 	lcall	_LCD_guidulieu
                                  15007 ;	src\main.c:217: LCD_guichuoi(" G:");
      005E6B 90 90 5D         [24]15008 	mov	dptr,#___str_130
      005E6E 75 F0 80         [24]15009 	mov	b,#0x80
      005E71 12 05 F1         [24]15010 	lcall	_LCD_guichuoi
      005E74 D0 02            [24]15011 	pop	ar2
      005E76 D0 03            [24]15012 	pop	ar3
      005E78 D0 05            [24]15013 	pop	ar5
                                  15014 ;	src\main.c:218: LCD_guidulieu((mode==2&&chop)?'_':(((giotemp&16)>>4)+'0'));
      005E7A 90 00 F4         [24]15015 	mov	dptr,#_mode
      005E7D E0               [24]15016 	movx	a,@dptr
      005E7E FC               [12]15017 	mov	r4,a
      005E7F BC 02 0B         [24]15018 	cjne	r4,#0x02,00689$
      005E82 30 2D 08         [24]15019 	jnb	_chop,00689$
      005E85 75 78 5F         [24]15020 	mov	_main_sloc0_1_0,#0x5f
      005E88 75 79 00         [24]15021 	mov	(_main_sloc0_1_0 + 1),#0x00
      005E8B 80 20            [24]15022 	sjmp	00690$
      005E8D                      15023 00689$:
      005E8D 53 03 10         [24]15024 	anl	ar3,#0x10
      005E90 E4               [12]15025 	clr	a
      005E91 CB               [12]15026 	xch	a,r3
      005E92 C4               [12]15027 	swap	a
      005E93 54 0F            [12]15028 	anl	a,#0x0f
      005E95 6B               [12]15029 	xrl	a,r3
      005E96 CB               [12]15030 	xch	a,r3
      005E97 54 0F            [12]15031 	anl	a,#0x0f
      005E99 CB               [12]15032 	xch	a,r3
      005E9A 6B               [12]15033 	xrl	a,r3
      005E9B CB               [12]15034 	xch	a,r3
      005E9C 30 E3 02         [24]15035 	jnb	acc.3,02439$
      005E9F 44 F0            [12]15036 	orl	a,#0xf0
      005EA1                      15037 02439$:
      005EA1 FD               [12]15038 	mov	r5,a
      005EA2 74 30            [12]15039 	mov	a,#0x30
      005EA4 2B               [12]15040 	add	a,r3
      005EA5 FB               [12]15041 	mov	r3,a
      005EA6 8B 78            [24]15042 	mov	_main_sloc0_1_0,r3
      005EA8 33               [12]15043 	rlc	a
      005EA9 95 E0            [12]15044 	subb	a,acc
      005EAB F5 79            [12]15045 	mov	(_main_sloc0_1_0 + 1),a
      005EAD                      15046 00690$:
      005EAD 85 78 82         [24]15047 	mov	dpl,_main_sloc0_1_0
      005EB0 C0 02            [24]15048 	push	ar2
      005EB2 12 05 13         [24]15049 	lcall	_LCD_guidulieu
                                  15050 ;	src\main.c:219: LCD_guichuoi(" M:");
      005EB5 90 90 61         [24]15051 	mov	dptr,#___str_131
      005EB8 75 F0 80         [24]15052 	mov	b,#0x80
      005EBB 12 05 F1         [24]15053 	lcall	_LCD_guichuoi
      005EBE D0 02            [24]15054 	pop	ar2
                                  15055 ;	src\main.c:220: LCD_guidulieu((mode==3&&chop)?'_':((mp3temp&4)>>2)+'0');
      005EC0 90 00 F4         [24]15056 	mov	dptr,#_mode
      005EC3 E0               [24]15057 	movx	a,@dptr
      005EC4 FD               [12]15058 	mov	r5,a
      005EC5 BD 03 09         [24]15059 	cjne	r5,#0x03,00694$
      005EC8 30 2D 06         [24]15060 	jnb	_chop,00694$
      005ECB 7C 5F            [12]15061 	mov	r4,#0x5f
      005ECD 7D 00            [12]15062 	mov	r5,#0x00
      005ECF 80 1F            [24]15063 	sjmp	00695$
      005ED1                      15064 00694$:
      005ED1 C0 02            [24]15065 	push	ar2
      005ED3 AA 75            [24]15066 	mov	r2,_main_mp3temp_131073_263
      005ED5 53 02 04         [24]15067 	anl	ar2,#0x04
      005ED8 E4               [12]15068 	clr	a
      005ED9 A2 E7            [12]15069 	mov	c,acc.7
      005EDB 13               [12]15070 	rrc	a
      005EDC CA               [12]15071 	xch	a,r2
      005EDD 13               [12]15072 	rrc	a
      005EDE CA               [12]15073 	xch	a,r2
      005EDF A2 E7            [12]15074 	mov	c,acc.7
      005EE1 13               [12]15075 	rrc	a
      005EE2 CA               [12]15076 	xch	a,r2
      005EE3 13               [12]15077 	rrc	a
      005EE4 CA               [12]15078 	xch	a,r2
      005EE5 FB               [12]15079 	mov	r3,a
      005EE6 74 30            [12]15080 	mov	a,#0x30
      005EE8 2A               [12]15081 	add	a,r2
      005EE9 FC               [12]15082 	mov	r4,a
      005EEA 33               [12]15083 	rlc	a
      005EEB 95 E0            [12]15084 	subb	a,acc
      005EED FD               [12]15085 	mov	r5,a
                                  15086 ;	src\main.c:973: WATCHDOG;
      005EEE D0 02            [24]15087 	pop	ar2
                                  15088 ;	src\main.c:220: LCD_guidulieu((mode==3&&chop)?'_':((mp3temp&4)>>2)+'0');
      005EF0                      15089 00695$:
      005EF0 8C 82            [24]15090 	mov	dpl,r4
      005EF2 C0 02            [24]15091 	push	ar2
      005EF4 12 05 13         [24]15092 	lcall	_LCD_guidulieu
      005EF7 D0 02            [24]15093 	pop	ar2
      005EF9                      15094 00174$:
                                  15095 ;	src\main.c:222: if(phim_mode_nhan){
                                  15096 ;	src\main.c:223: phim_mode_nhan = 0;
                                  15097 ;	assignBit
      005EF9 10 22 03         [24]15098 	jbc	_phim_mode_nhan,02443$
      005EFC 02 5F 9D         [24]15099 	ljmp	00181$
      005EFF                      15100 02443$:
                                  15101 ;	src\main.c:224: mode++;
      005EFF 90 00 F4         [24]15102 	mov	dptr,#_mode
      005F02 E0               [24]15103 	movx	a,@dptr
      005F03 24 01            [12]15104 	add	a,#0x01
      005F05 F0               [24]15105 	movx	@dptr,a
                                  15106 ;	src\main.c:225: switch(mode){
      005F06 E0               [24]15107 	movx	a,@dptr
      005F07 FD               [12]15108 	mov	r5,a
      005F08 BD 01 02         [24]15109 	cjne	r5,#0x01,02444$
      005F0B 80 12            [24]15110 	sjmp	00175$
      005F0D                      15111 02444$:
      005F0D BD 02 02         [24]15112 	cjne	r5,#0x02,02445$
      005F10 80 2D            [24]15113 	sjmp	00176$
      005F12                      15114 02445$:
      005F12 BD 03 02         [24]15115 	cjne	r5,#0x03,02446$
      005F15 80 46            [24]15116 	sjmp	00177$
      005F17                      15117 02446$:
      005F17 BD 04 02         [24]15118 	cjne	r5,#0x04,02447$
      005F1A 80 5B            [24]15119 	sjmp	00178$
      005F1C                      15120 02447$:
      005F1C 02 5F 9D         [24]15121 	ljmp	00181$
                                  15122 ;	src\main.c:226: case 1:sub_mode = (giotemp&96)>>5;break;
      005F1F                      15123 00175$:
      005F1F AB 73            [24]15124 	mov	r3,_main_giotemp_65536_253
      005F21 53 03 60         [24]15125 	anl	ar3,#0x60
      005F24 E4               [12]15126 	clr	a
      005F25 03               [12]15127 	rr	a
      005F26 CB               [12]15128 	xch	a,r3
      005F27 C4               [12]15129 	swap	a
      005F28 03               [12]15130 	rr	a
      005F29 54 07            [12]15131 	anl	a,#0x07
      005F2B 6B               [12]15132 	xrl	a,r3
      005F2C CB               [12]15133 	xch	a,r3
      005F2D 54 07            [12]15134 	anl	a,#0x07
      005F2F CB               [12]15135 	xch	a,r3
      005F30 6B               [12]15136 	xrl	a,r3
      005F31 CB               [12]15137 	xch	a,r3
      005F32 30 E2 02         [24]15138 	jnb	acc.2,02448$
      005F35 44 F8            [12]15139 	orl	a,#0xf8
      005F37                      15140 02448$:
      005F37 FD               [12]15141 	mov	r5,a
      005F38 90 00 F5         [24]15142 	mov	dptr,#_sub_mode
      005F3B EB               [12]15143 	mov	a,r3
      005F3C F0               [24]15144 	movx	@dptr,a
                                  15145 ;	src\main.c:227: case 2:sub_mode = (giotemp&16)>>4;break;
      005F3D 80 5E            [24]15146 	sjmp	00181$
      005F3F                      15147 00176$:
      005F3F AB 73            [24]15148 	mov	r3,_main_giotemp_65536_253
      005F41 53 03 10         [24]15149 	anl	ar3,#0x10
      005F44 E4               [12]15150 	clr	a
      005F45 CB               [12]15151 	xch	a,r3
      005F46 C4               [12]15152 	swap	a
      005F47 54 0F            [12]15153 	anl	a,#0x0f
      005F49 6B               [12]15154 	xrl	a,r3
      005F4A CB               [12]15155 	xch	a,r3
      005F4B 54 0F            [12]15156 	anl	a,#0x0f
      005F4D CB               [12]15157 	xch	a,r3
      005F4E 6B               [12]15158 	xrl	a,r3
      005F4F CB               [12]15159 	xch	a,r3
      005F50 30 E3 02         [24]15160 	jnb	acc.3,02449$
      005F53 44 F0            [12]15161 	orl	a,#0xf0
      005F55                      15162 02449$:
      005F55 FD               [12]15163 	mov	r5,a
      005F56 90 00 F5         [24]15164 	mov	dptr,#_sub_mode
      005F59 EB               [12]15165 	mov	a,r3
      005F5A F0               [24]15166 	movx	@dptr,a
                                  15167 ;	src\main.c:228: case 3:sub_mode = (mp3temp&4)>>2;break;
      005F5B 80 40            [24]15168 	sjmp	00181$
      005F5D                      15169 00177$:
      005F5D AC 75            [24]15170 	mov	r4,_main_mp3temp_131073_263
      005F5F 53 04 04         [24]15171 	anl	ar4,#0x04
      005F62 E4               [12]15172 	clr	a
      005F63 A2 E7            [12]15173 	mov	c,acc.7
      005F65 13               [12]15174 	rrc	a
      005F66 CC               [12]15175 	xch	a,r4
      005F67 13               [12]15176 	rrc	a
      005F68 CC               [12]15177 	xch	a,r4
      005F69 A2 E7            [12]15178 	mov	c,acc.7
      005F6B 13               [12]15179 	rrc	a
      005F6C CC               [12]15180 	xch	a,r4
      005F6D 13               [12]15181 	rrc	a
      005F6E CC               [12]15182 	xch	a,r4
      005F6F FD               [12]15183 	mov	r5,a
      005F70 90 00 F5         [24]15184 	mov	dptr,#_sub_mode
      005F73 EC               [12]15185 	mov	a,r4
      005F74 F0               [24]15186 	movx	@dptr,a
                                  15187 ;	src\main.c:229: case 4:IAP_docxoasector1();
      005F75 80 26            [24]15188 	sjmp	00181$
      005F77                      15189 00178$:
      005F77 C0 02            [24]15190 	push	ar2
      005F79 12 03 34         [24]15191 	lcall	_IAP_docxoasector1
                                  15192 ;	src\main.c:230: eeprom_buf[MOTOR_EEPROM] &= 0xef;
      005F7C 90 00 BD         [24]15193 	mov	dptr,#_eeprom_buf
      005F7F E0               [24]15194 	movx	a,@dptr
      005F80 54 EF            [12]15195 	anl	a,#0xef
      005F82 F0               [24]15196 	movx	@dptr,a
                                  15197 ;	src\main.c:231: eeprom_buf[DEBUG_EEPROM] =  giotemp;
      005F83 90 00 DB         [24]15198 	mov	dptr,#(_eeprom_buf + 0x001e)
      005F86 E5 73            [12]15199 	mov	a,_main_giotemp_65536_253
      005F88 F0               [24]15200 	movx	@dptr,a
                                  15201 ;	src\main.c:232: eeprom_buf[MP3_EEPROM] =  mp3temp;
      005F89 90 00 CD         [24]15202 	mov	dptr,#(_eeprom_buf + 0x0010)
      005F8C E5 75            [12]15203 	mov	a,_main_mp3temp_131073_263
      005F8E F0               [24]15204 	movx	@dptr,a
                                  15205 ;	src\main.c:234: IAP_ghisector1();
      005F8F 12 03 6F         [24]15206 	lcall	_IAP_ghisector1
                                  15207 ;	src\main.c:235: IAP_xoasector(SECTOR2);
      005F92 90 02 00         [24]15208 	mov	dptr,#0x0200
      005F95 12 03 1C         [24]15209 	lcall	_IAP_xoasector
      005F98 D0 02            [24]15210 	pop	ar2
                                  15211 ;	src\main.c:236: IAP_CONTR = 0x60;
      005F9A 75 C7 60         [24]15212 	mov	_IAP_CONTR,#0x60
                                  15213 ;	src\main.c:237: }
      005F9D                      15214 00181$:
                                  15215 ;	src\main.c:239: if(phim_back_nhan){
                                  15216 ;	src\main.c:240: phim_back_nhan = 0;
                                  15217 ;	assignBit
      005F9D 10 26 02         [24]15218 	jbc	_phim_back_nhan,02450$
      005FA0 80 65            [24]15219 	sjmp	00189$
      005FA2                      15220 02450$:
                                  15221 ;	src\main.c:241: if(mode) mode--;
      005FA2 90 00 F4         [24]15222 	mov	dptr,#_mode
      005FA5 E0               [24]15223 	movx	a,@dptr
      005FA6 FD               [12]15224 	mov	r5,a
      005FA7 E0               [24]15225 	movx	a,@dptr
      005FA8 60 06            [24]15226 	jz	00183$
      005FAA ED               [12]15227 	mov	a,r5
      005FAB 14               [12]15228 	dec	a
      005FAC 90 00 F4         [24]15229 	mov	dptr,#_mode
      005FAF F0               [24]15230 	movx	@dptr,a
      005FB0                      15231 00183$:
                                  15232 ;	src\main.c:242: switch(mode){
      005FB0 90 00 F4         [24]15233 	mov	dptr,#_mode
      005FB3 E0               [24]15234 	movx	a,@dptr
      005FB4 FD               [12]15235 	mov	r5,a
      005FB5 60 0A            [24]15236 	jz	00184$
      005FB7 BD 01 02         [24]15237 	cjne	r5,#0x01,02453$
      005FBA 80 0F            [24]15238 	sjmp	00185$
      005FBC                      15239 02453$:
                                  15240 ;	src\main.c:243: case 0:sub_mode = giotemp & 15;break;
      005FBC BD 02 48         [24]15241 	cjne	r5,#0x02,00189$
      005FBF 80 2A            [24]15242 	sjmp	00186$
      005FC1                      15243 00184$:
      005FC1 90 00 F5         [24]15244 	mov	dptr,#_sub_mode
      005FC4 74 0F            [12]15245 	mov	a,#0x0f
      005FC6 55 73            [12]15246 	anl	a,_main_giotemp_65536_253
      005FC8 F0               [24]15247 	movx	@dptr,a
                                  15248 ;	src\main.c:244: case 1:sub_mode = (giotemp&96)>>5;break;
      005FC9 80 3C            [24]15249 	sjmp	00189$
      005FCB                      15250 00185$:
      005FCB AB 73            [24]15251 	mov	r3,_main_giotemp_65536_253
      005FCD 53 03 60         [24]15252 	anl	ar3,#0x60
      005FD0 E4               [12]15253 	clr	a
      005FD1 03               [12]15254 	rr	a
      005FD2 CB               [12]15255 	xch	a,r3
      005FD3 C4               [12]15256 	swap	a
      005FD4 03               [12]15257 	rr	a
      005FD5 54 07            [12]15258 	anl	a,#0x07
      005FD7 6B               [12]15259 	xrl	a,r3
      005FD8 CB               [12]15260 	xch	a,r3
      005FD9 54 07            [12]15261 	anl	a,#0x07
      005FDB CB               [12]15262 	xch	a,r3
      005FDC 6B               [12]15263 	xrl	a,r3
      005FDD CB               [12]15264 	xch	a,r3
      005FDE 30 E2 02         [24]15265 	jnb	acc.2,02455$
      005FE1 44 F8            [12]15266 	orl	a,#0xf8
      005FE3                      15267 02455$:
      005FE3 FD               [12]15268 	mov	r5,a
      005FE4 90 00 F5         [24]15269 	mov	dptr,#_sub_mode
      005FE7 EB               [12]15270 	mov	a,r3
      005FE8 F0               [24]15271 	movx	@dptr,a
                                  15272 ;	src\main.c:245: case 2:sub_mode = (giotemp&16)>>4;break;
      005FE9 80 1C            [24]15273 	sjmp	00189$
      005FEB                      15274 00186$:
      005FEB AB 73            [24]15275 	mov	r3,_main_giotemp_65536_253
      005FED 53 03 10         [24]15276 	anl	ar3,#0x10
      005FF0 E4               [12]15277 	clr	a
      005FF1 CB               [12]15278 	xch	a,r3
      005FF2 C4               [12]15279 	swap	a
      005FF3 54 0F            [12]15280 	anl	a,#0x0f
      005FF5 6B               [12]15281 	xrl	a,r3
      005FF6 CB               [12]15282 	xch	a,r3
      005FF7 54 0F            [12]15283 	anl	a,#0x0f
      005FF9 CB               [12]15284 	xch	a,r3
      005FFA 6B               [12]15285 	xrl	a,r3
      005FFB CB               [12]15286 	xch	a,r3
      005FFC 30 E3 02         [24]15287 	jnb	acc.3,02456$
      005FFF 44 F0            [12]15288 	orl	a,#0xf0
      006001                      15289 02456$:
      006001 FD               [12]15290 	mov	r5,a
      006002 90 00 F5         [24]15291 	mov	dptr,#_sub_mode
      006005 EB               [12]15292 	mov	a,r3
      006006 F0               [24]15293 	movx	@dptr,a
                                  15294 ;	src\main.c:246: }
      006007                      15295 00189$:
                                  15296 ;	src\main.c:248: if(phim_cong_nhan){
                                  15297 ;	src\main.c:249: phim_cong_nhan = 0;
                                  15298 ;	assignBit
      006007 10 2A 03         [24]15299 	jbc	_phim_cong_nhan,02457$
      00600A 02 5D 0D         [24]15300 	ljmp	00248$
      00600D                      15301 02457$:
                                  15302 ;	src\main.c:250: sub_mode++;
      00600D 90 00 F5         [24]15303 	mov	dptr,#_sub_mode
      006010 E0               [24]15304 	movx	a,@dptr
      006011 24 01            [12]15305 	add	a,#0x01
      006013 F0               [24]15306 	movx	@dptr,a
                                  15307 ;	src\main.c:251: switch(mode){
      006014 90 00 F4         [24]15308 	mov	dptr,#_mode
      006017 E0               [24]15309 	movx	a,@dptr
      006018 FD               [12]15310 	mov  r5,a
      006019 24 FC            [12]15311 	add	a,#0xff - 0x03
      00601B 50 03            [24]15312 	jnc	02458$
      00601D 02 5D 0D         [24]15313 	ljmp	00248$
      006020                      15314 02458$:
      006020 ED               [12]15315 	mov	a,r5
      006021 2D               [12]15316 	add	a,r5
                                  15317 ;	src\main.c:252: case 0:if(sub_mode>11) sub_mode = 0;giotemp = giotemp & 0xf0 | sub_mode; break;
      006022 90 60 26         [24]15318 	mov	dptr,#02459$
      006025 73               [24]15319 	jmp	@a+dptr
      006026                      15320 02459$:
      006026 80 06            [24]15321 	sjmp	00190$
      006028 80 21            [24]15322 	sjmp	00193$
      00602A 80 40            [24]15323 	sjmp	00196$
      00602C 80 5E            [24]15324 	sjmp	00199$
      00602E                      15325 00190$:
      00602E 90 00 F5         [24]15326 	mov	dptr,#_sub_mode
      006031 E0               [24]15327 	movx	a,@dptr
      006032 24 F4            [12]15328 	add	a,#0xff - 0x0b
      006034 50 05            [24]15329 	jnc	00192$
      006036 90 00 F5         [24]15330 	mov	dptr,#_sub_mode
      006039 E4               [12]15331 	clr	a
      00603A F0               [24]15332 	movx	@dptr,a
      00603B                      15333 00192$:
      00603B 74 F0            [12]15334 	mov	a,#0xf0
      00603D 55 73            [12]15335 	anl	a,_main_giotemp_65536_253
      00603F FD               [12]15336 	mov	r5,a
      006040 90 00 F5         [24]15337 	mov	dptr,#_sub_mode
      006043 E0               [24]15338 	movx	a,@dptr
      006044 FC               [12]15339 	mov	r4,a
      006045 4D               [12]15340 	orl	a,r5
      006046 F5 73            [12]15341 	mov	_main_giotemp_65536_253,a
      006048 02 5D 0D         [24]15342 	ljmp	00248$
                                  15343 ;	src\main.c:253: case 1:if(sub_mode>3) sub_mode = 0;giotemp = giotemp & 0x9f | (sub_mode<<5); break;
      00604B                      15344 00193$:
      00604B 90 00 F5         [24]15345 	mov	dptr,#_sub_mode
      00604E E0               [24]15346 	movx	a,@dptr
      00604F 24 FC            [12]15347 	add	a,#0xff - 0x03
      006051 50 05            [24]15348 	jnc	00195$
      006053 90 00 F5         [24]15349 	mov	dptr,#_sub_mode
      006056 E4               [12]15350 	clr	a
      006057 F0               [24]15351 	movx	@dptr,a
      006058                      15352 00195$:
      006058 74 9F            [12]15353 	mov	a,#0x9f
      00605A 55 73            [12]15354 	anl	a,_main_giotemp_65536_253
      00605C FD               [12]15355 	mov	r5,a
      00605D 90 00 F5         [24]15356 	mov	dptr,#_sub_mode
      006060 E0               [24]15357 	movx	a,@dptr
      006061 C4               [12]15358 	swap	a
      006062 23               [12]15359 	rl	a
      006063 54 E0            [12]15360 	anl	a,#0xe0
      006065 FC               [12]15361 	mov	r4,a
      006066 4D               [12]15362 	orl	a,r5
      006067 F5 73            [12]15363 	mov	_main_giotemp_65536_253,a
      006069 02 5D 0D         [24]15364 	ljmp	00248$
                                  15365 ;	src\main.c:254: case 2:if(sub_mode>1) sub_mode = 0;giotemp = giotemp & 0xef | (sub_mode<<4); break;
      00606C                      15366 00196$:
      00606C 90 00 F5         [24]15367 	mov	dptr,#_sub_mode
      00606F E0               [24]15368 	movx	a,@dptr
      006070 24 FE            [12]15369 	add	a,#0xff - 0x01
      006072 50 05            [24]15370 	jnc	00198$
      006074 90 00 F5         [24]15371 	mov	dptr,#_sub_mode
      006077 E4               [12]15372 	clr	a
      006078 F0               [24]15373 	movx	@dptr,a
      006079                      15374 00198$:
      006079 74 EF            [12]15375 	mov	a,#0xef
      00607B 55 73            [12]15376 	anl	a,_main_giotemp_65536_253
      00607D FD               [12]15377 	mov	r5,a
      00607E 90 00 F5         [24]15378 	mov	dptr,#_sub_mode
      006081 E0               [24]15379 	movx	a,@dptr
      006082 C4               [12]15380 	swap	a
      006083 54 F0            [12]15381 	anl	a,#0xf0
      006085 FC               [12]15382 	mov	r4,a
      006086 4D               [12]15383 	orl	a,r5
      006087 F5 73            [12]15384 	mov	_main_giotemp_65536_253,a
      006089 02 5D 0D         [24]15385 	ljmp	00248$
                                  15386 ;	src\main.c:255: case 3:if(sub_mode>1) sub_mode = 0;mp3temp = mp3temp & 0x03 | (sub_mode<<2); break;
      00608C                      15387 00199$:
      00608C 90 00 F5         [24]15388 	mov	dptr,#_sub_mode
      00608F E0               [24]15389 	movx	a,@dptr
      006090 24 FE            [12]15390 	add	a,#0xff - 0x01
      006092 50 05            [24]15391 	jnc	00201$
      006094 90 00 F5         [24]15392 	mov	dptr,#_sub_mode
      006097 E4               [12]15393 	clr	a
      006098 F0               [24]15394 	movx	@dptr,a
      006099                      15395 00201$:
      006099 74 03            [12]15396 	mov	a,#0x03
      00609B 55 75            [12]15397 	anl	a,_main_mp3temp_131073_263
      00609D FD               [12]15398 	mov	r5,a
      00609E 90 00 F5         [24]15399 	mov	dptr,#_sub_mode
      0060A1 E0               [24]15400 	movx	a,@dptr
      0060A2 25 E0            [12]15401 	add	a,acc
      0060A4 25 E0            [12]15402 	add	a,acc
      0060A6 FC               [12]15403 	mov	r4,a
      0060A7 4D               [12]15404 	orl	a,r5
      0060A8 F5 75            [12]15405 	mov	_main_mp3temp_131073_263,a
                                  15406 ;	src\main.c:256: }
      0060AA 02 5D 0D         [24]15407 	ljmp	00248$
      0060AD                      15408 00245$:
                                  15409 ;	src\main.c:260: switch(mode){
      0060AD 90 00 F4         [24]15410 	mov	dptr,#_mode
      0060B0 E0               [24]15411 	movx	a,@dptr
      0060B1 FD               [12]15412 	mov  r5,a
      0060B2 24 FA            [12]15413 	add	a,#0xff - 0x05
      0060B4 50 03            [24]15414 	jnc	02464$
      0060B6 02 62 2E         [24]15415 	ljmp	00222$
      0060B9                      15416 02464$:
      0060B9 ED               [12]15417 	mov	a,r5
      0060BA 2D               [12]15418 	add	a,r5
      0060BB 2D               [12]15419 	add	a,r5
      0060BC 90 60 C0         [24]15420 	mov	dptr,#02465$
      0060BF 73               [24]15421 	jmp	@a+dptr
      0060C0                      15422 02465$:
      0060C0 02 60 D2         [24]15423 	ljmp	00205$
      0060C3 02 60 E8         [24]15424 	ljmp	00206$
      0060C6 02 61 2D         [24]15425 	ljmp	00209$
      0060C9 02 61 6B         [24]15426 	ljmp	00212$
      0060CC 02 61 A7         [24]15427 	ljmp	00215$
      0060CF 02 61 BF         [24]15428 	ljmp	00216$
                                  15429 ;	src\main.c:261: case 0:
      0060D2                      15430 00205$:
                                  15431 ;	src\main.c:262: sub_mode = so_motor-1;
      0060D2 90 01 2F         [24]15432 	mov	dptr,#_so_motor
      0060D5 E0               [24]15433 	movx	a,@dptr
      0060D6 14               [12]15434 	dec	a
      0060D7 90 00 F5         [24]15435 	mov	dptr,#_sub_mode
      0060DA F0               [24]15436 	movx	@dptr,a
                                  15437 ;	src\main.c:263: LCD_guilenh(0xc4); 
      0060DB 75 82 C4         [24]15438 	mov	dpl,#0xc4
      0060DE C0 02            [24]15439 	push	ar2
      0060E0 12 05 71         [24]15440 	lcall	_LCD_guilenh
      0060E3 D0 02            [24]15441 	pop	ar2
                                  15442 ;	src\main.c:264: break;
      0060E5 02 62 2E         [24]15443 	ljmp	00222$
                                  15444 ;	src\main.c:265: case 1:
      0060E8                      15445 00206$:
                                  15446 ;	src\main.c:266: sub_mode = may_dc;
      0060E8 90 00 F5         [24]15447 	mov	dptr,#_sub_mode
      0060EB A2 34            [12]15448 	mov	c,_may_dc
      0060ED E4               [12]15449 	clr	a
      0060EE 33               [12]15450 	rlc	a
      0060EF F0               [24]15451 	movx	@dptr,a
                                  15452 ;	src\main.c:267: LCD_noblink(); 
      0060F0 C0 02            [24]15453 	push	ar2
      0060F2 12 05 CC         [24]15454 	lcall	_LCD_noblink
      0060F5 D0 02            [24]15455 	pop	ar2
                                  15456 ;	src\main.c:268: if(lcd_update_chop){
                                  15457 ;	src\main.c:269: lcd_update_chop = 0;
                                  15458 ;	assignBit
      0060F7 10 3F 03         [24]15459 	jbc	_lcd_update_chop,02466$
      0060FA 02 62 2E         [24]15460 	ljmp	00222$
      0060FD                      15461 02466$:
                                  15462 ;	src\main.c:270: LCD_guichuoi(chop?"\305 __ ":(may_dc?"\305 DC ":"\305 ST "));
      0060FD 30 2D 06         [24]15463 	jnb	_chop,00699$
      006100 7C 65            [12]15464 	mov	r4,#___str_132
      006102 7D 90            [12]15465 	mov	r5,#(___str_132 >> 8)
      006104 80 15            [24]15466 	sjmp	00700$
      006106                      15467 00699$:
      006106 30 34 08         [24]15468 	jnb	_may_dc,00701$
      006109 75 78 39         [24]15469 	mov	_main_sloc0_1_0,#___str_123
      00610C 75 79 90         [24]15470 	mov	(_main_sloc0_1_0 + 1),#(___str_123 >> 8)
      00610F 80 06            [24]15471 	sjmp	00702$
      006111                      15472 00701$:
      006111 75 78 3F         [24]15473 	mov	_main_sloc0_1_0,#___str_124
      006114 75 79 90         [24]15474 	mov	(_main_sloc0_1_0 + 1),#(___str_124 >> 8)
      006117                      15475 00702$:
      006117 AC 78            [24]15476 	mov	r4,_main_sloc0_1_0
      006119 AD 79            [24]15477 	mov	r5,(_main_sloc0_1_0 + 1)
      00611B                      15478 00700$:
      00611B 7B 80            [12]15479 	mov	r3,#0x80
      00611D 8C 82            [24]15480 	mov	dpl,r4
      00611F 8D 83            [24]15481 	mov	dph,r5
      006121 8B F0            [24]15482 	mov	b,r3
      006123 C0 02            [24]15483 	push	ar2
      006125 12 05 F1         [24]15484 	lcall	_LCD_guichuoi
      006128 D0 02            [24]15485 	pop	ar2
                                  15486 ;	src\main.c:272: break;
      00612A 02 62 2E         [24]15487 	ljmp	00222$
                                  15488 ;	src\main.c:273: case 2:
      00612D                      15489 00209$:
                                  15490 ;	src\main.c:274: sub_mode = atmel_phat;
      00612D 90 00 F5         [24]15491 	mov	dptr,#_sub_mode
      006130 A2 35            [12]15492 	mov	c,_atmel_phat
      006132 E4               [12]15493 	clr	a
      006133 33               [12]15494 	rlc	a
      006134 F0               [24]15495 	movx	@dptr,a
                                  15496 ;	src\main.c:275: if(lcd_update_chop){
                                  15497 ;	src\main.c:276: lcd_update_chop = 0;
                                  15498 ;	assignBit
      006135 10 3F 03         [24]15499 	jbc	_lcd_update_chop,02469$
      006138 02 62 2E         [24]15500 	ljmp	00222$
      00613B                      15501 02469$:
                                  15502 ;	src\main.c:277: LCD_guichuoi(chop?"\311___":(atmel_phat?"\311C55 ":"\311STC "));
      00613B 30 2D 06         [24]15503 	jnb	_chop,00703$
      00613E 7C 6B            [12]15504 	mov	r4,#___str_133
      006140 7D 90            [12]15505 	mov	r5,#(___str_133 >> 8)
      006142 80 15            [24]15506 	sjmp	00704$
      006144                      15507 00703$:
      006144 30 35 08         [24]15508 	jnb	_atmel_phat,00705$
      006147 75 78 45         [24]15509 	mov	_main_sloc0_1_0,#___str_125
      00614A 75 79 90         [24]15510 	mov	(_main_sloc0_1_0 + 1),#(___str_125 >> 8)
      00614D 80 06            [24]15511 	sjmp	00706$
      00614F                      15512 00705$:
      00614F 75 78 4B         [24]15513 	mov	_main_sloc0_1_0,#___str_126
      006152 75 79 90         [24]15514 	mov	(_main_sloc0_1_0 + 1),#(___str_126 >> 8)
      006155                      15515 00706$:
      006155 AC 78            [24]15516 	mov	r4,_main_sloc0_1_0
      006157 AD 79            [24]15517 	mov	r5,(_main_sloc0_1_0 + 1)
      006159                      15518 00704$:
      006159 7B 80            [12]15519 	mov	r3,#0x80
      00615B 8C 82            [24]15520 	mov	dpl,r4
      00615D 8D 83            [24]15521 	mov	dph,r5
      00615F 8B F0            [24]15522 	mov	b,r3
      006161 C0 02            [24]15523 	push	ar2
      006163 12 05 F1         [24]15524 	lcall	_LCD_guichuoi
      006166 D0 02            [24]15525 	pop	ar2
                                  15526 ;	src\main.c:279: break;
      006168 02 62 2E         [24]15527 	ljmp	00222$
                                  15528 ;	src\main.c:280: case 3:
      00616B                      15529 00212$:
                                  15530 ;	src\main.c:281: sub_mode = toc_do_motor_step;
      00616B 90 00 ED         [24]15531 	mov	dptr,#_toc_do_motor_step
      00616E E0               [24]15532 	movx	a,@dptr
      00616F 90 00 F5         [24]15533 	mov	dptr,#_sub_mode
      006172 F0               [24]15534 	movx	@dptr,a
                                  15535 ;	src\main.c:282: if(lcd_update_chop){
                                  15536 ;	src\main.c:283: lcd_update_chop = 0;
                                  15537 ;	assignBit
      006173 10 3F 03         [24]15538 	jbc	_lcd_update_chop,02472$
      006176 02 62 2E         [24]15539 	ljmp	00222$
      006179                      15540 02472$:
                                  15541 ;	src\main.c:284: LCD_guichuoi("\315S:");
      006179 90 90 51         [24]15542 	mov	dptr,#___str_127
      00617C 75 F0 80         [24]15543 	mov	b,#0x80
      00617F C0 02            [24]15544 	push	ar2
      006181 12 05 F1         [24]15545 	lcall	_LCD_guichuoi
      006184 D0 02            [24]15546 	pop	ar2
                                  15547 ;	src\main.c:285: LCD_guidulieu(chop?'_':(toc_do_motor_step+'0'));
      006186 30 2D 06         [24]15548 	jnb	_chop,00707$
      006189 7C 5F            [12]15549 	mov	r4,#0x5f
      00618B 7D 00            [12]15550 	mov	r5,#0x00
      00618D 80 0C            [24]15551 	sjmp	00708$
      00618F                      15552 00707$:
      00618F 90 00 ED         [24]15553 	mov	dptr,#_toc_do_motor_step
      006192 E0               [24]15554 	movx	a,@dptr
      006193 24 30            [12]15555 	add	a,#0x30
      006195 FB               [12]15556 	mov	r3,a
      006196 FC               [12]15557 	mov	r4,a
      006197 33               [12]15558 	rlc	a
      006198 95 E0            [12]15559 	subb	a,acc
      00619A FD               [12]15560 	mov	r5,a
      00619B                      15561 00708$:
      00619B 8C 82            [24]15562 	mov	dpl,r4
      00619D C0 02            [24]15563 	push	ar2
      00619F 12 05 13         [24]15564 	lcall	_LCD_guidulieu
      0061A2 D0 02            [24]15565 	pop	ar2
                                  15566 ;	src\main.c:287: break;
      0061A4 02 62 2E         [24]15567 	ljmp	00222$
                                  15568 ;	src\main.c:288: case 4:
      0061A7                      15569 00215$:
                                  15570 ;	src\main.c:289: LCD_guichuoi("\200      SAVE      ");
      0061A7 90 90 70         [24]15571 	mov	dptr,#___str_134
      0061AA 75 F0 80         [24]15572 	mov	b,#0x80
      0061AD C0 02            [24]15573 	push	ar2
      0061AF 12 05 F1         [24]15574 	lcall	_LCD_guichuoi
                                  15575 ;	src\main.c:290: LCD_guichuoi("\300MODE:OK    RS:BO");
      0061B2 90 90 82         [24]15576 	mov	dptr,#___str_135
      0061B5 75 F0 80         [24]15577 	mov	b,#0x80
      0061B8 12 05 F1         [24]15578 	lcall	_LCD_guichuoi
      0061BB D0 02            [24]15579 	pop	ar2
                                  15580 ;	src\main.c:291: break;
                                  15581 ;	src\main.c:292: case 5:
      0061BD 80 6F            [24]15582 	sjmp	00222$
      0061BF                      15583 00216$:
                                  15584 ;	src\main.c:293: phuttemp = (i & 0x10);
      0061BF 74 10            [12]15585 	mov	a,#0x10
      0061C1 5A               [12]15586 	anl	a,r2
      0061C2 FD               [12]15587 	mov	r5,a
                                  15588 ;	src\main.c:294: phuttemp += (so_motor-1);
      0061C3 90 01 2F         [24]15589 	mov	dptr,#_so_motor
      0061C6 E0               [24]15590 	movx	a,@dptr
      0061C7 FC               [12]15591 	mov	r4,a
      0061C8 1C               [12]15592 	dec	r4
      0061C9 EC               [12]15593 	mov	a,r4
      0061CA 2D               [12]15594 	add	a,r5
      0061CB FD               [12]15595 	mov	r5,a
                                  15596 ;	src\main.c:295: phuttemp += (may_dc?4:0); 
      0061CC 30 34 06         [24]15597 	jnb	_may_dc,00709$
      0061CF 7B 04            [12]15598 	mov	r3,#0x04
      0061D1 7C 00            [12]15599 	mov	r4,#0x00
      0061D3 80 04            [24]15600 	sjmp	00710$
      0061D5                      15601 00709$:
      0061D5 7B 00            [12]15602 	mov	r3,#0x00
      0061D7 7C 00            [12]15603 	mov	r4,#0x00
      0061D9                      15604 00710$:
      0061D9 EB               [12]15605 	mov	a,r3
      0061DA 2D               [12]15606 	add	a,r5
      0061DB FD               [12]15607 	mov	r5,a
                                  15608 ;	src\main.c:296: if(so_motor!=1) phuttemp += (atmel_phat?8:0);
      0061DC 90 01 2F         [24]15609 	mov	dptr,#_so_motor
      0061DF E0               [24]15610 	movx	a,@dptr
      0061E0 FC               [12]15611 	mov	r4,a
      0061E1 BC 01 02         [24]15612 	cjne	r4,#0x01,02475$
      0061E4 80 12            [24]15613 	sjmp	00218$
      0061E6                      15614 02475$:
      0061E6 30 35 06         [24]15615 	jnb	_atmel_phat,00711$
      0061E9 7B 08            [12]15616 	mov	r3,#0x08
      0061EB 7C 00            [12]15617 	mov	r4,#0x00
      0061ED 80 04            [24]15618 	sjmp	00712$
      0061EF                      15619 00711$:
      0061EF 7B 00            [12]15620 	mov	r3,#0x00
      0061F1 7C 00            [12]15621 	mov	r4,#0x00
      0061F3                      15622 00712$:
      0061F3 8D 04            [24]15623 	mov	ar4,r5
      0061F5 EB               [12]15624 	mov	a,r3
      0061F6 2C               [12]15625 	add	a,r4
      0061F7 FD               [12]15626 	mov	r5,a
      0061F8                      15627 00218$:
                                  15628 ;	src\main.c:297: if(!may_dc && !atmel_phat) phuttemp += (toc_do_motor_step<<6);
      0061F8 20 34 10         [24]15629 	jb	_may_dc,00220$
      0061FB 20 35 0D         [24]15630 	jb	_atmel_phat,00220$
      0061FE 90 00 ED         [24]15631 	mov	dptr,#_toc_do_motor_step
      006201 E0               [24]15632 	movx	a,@dptr
      006202 03               [12]15633 	rr	a
      006203 03               [12]15634 	rr	a
      006204 54 C0            [12]15635 	anl	a,#0xc0
      006206 FC               [12]15636 	mov	r4,a
      006207 8D 03            [24]15637 	mov	ar3,r5
      006209 2B               [12]15638 	add	a,r3
      00620A FD               [12]15639 	mov	r5,a
      00620B                      15640 00220$:
                                  15641 ;	src\main.c:298: IAP_xoasector(SECTOR1);
      00620B 90 00 00         [24]15642 	mov	dptr,#0x0000
      00620E C0 05            [24]15643 	push	ar5
      006210 C0 02            [24]15644 	push	ar2
      006212 12 03 1C         [24]15645 	lcall	_IAP_xoasector
                                  15646 ;	src\main.c:299: IAP_xoasector(SECTOR2);
      006215 90 02 00         [24]15647 	mov	dptr,#0x0200
      006218 12 03 1C         [24]15648 	lcall	_IAP_xoasector
      00621B D0 02            [24]15649 	pop	ar2
      00621D D0 05            [24]15650 	pop	ar5
                                  15651 ;	src\main.c:300: IAP_ghibyte(MOTOR_EEPROM,phuttemp);
      00621F 8D 18            [24]15652 	mov	_IAP_ghibyte_PARM_2,r5
      006221 90 00 00         [24]15653 	mov	dptr,#0x0000
      006224 C0 02            [24]15654 	push	ar2
      006226 12 03 01         [24]15655 	lcall	_IAP_ghibyte
      006229 D0 02            [24]15656 	pop	ar2
                                  15657 ;	src\main.c:301: IAP_CONTR = 0x60;
      00622B 75 C7 60         [24]15658 	mov	_IAP_CONTR,#0x60
                                  15659 ;	src\main.c:302: }
      00622E                      15660 00222$:
                                  15661 ;	src\main.c:303: if(phim_cong_nhan){
                                  15662 ;	src\main.c:304: phim_cong_nhan = 0;
                                  15663 ;	assignBit
      00622E 10 2A 03         [24]15664 	jbc	_phim_cong_nhan,02479$
      006231 02 62 DD         [24]15665 	ljmp	00232$
      006234                      15666 02479$:
                                  15667 ;	src\main.c:305: debug_dem = 0;
      006234 75 74 00         [24]15668 	mov	_main_debug_dem_131073_263,#0x00
                                  15669 ;	src\main.c:306: switch(mode){
      006237 90 00 F4         [24]15670 	mov	dptr,#_mode
      00623A E0               [24]15671 	movx	a,@dptr
      00623B FD               [12]15672 	mov  r5,a
      00623C 24 FC            [12]15673 	add	a,#0xff - 0x03
      00623E 50 03            [24]15674 	jnc	02480$
      006240 02 62 DD         [24]15675 	ljmp	00232$
      006243                      15676 02480$:
      006243 ED               [12]15677 	mov	a,r5
      006244 2D               [12]15678 	add	a,r5
                                  15679 ;	src\main.c:307: case 0:
      006245 90 62 49         [24]15680 	mov	dptr,#02481$
      006248 73               [24]15681 	jmp	@a+dptr
      006249                      15682 02481$:
      006249 80 06            [24]15683 	sjmp	00223$
      00624B 80 3A            [24]15684 	sjmp	00224$
      00624D 80 4A            [24]15685 	sjmp	00225$
      00624F 80 6B            [24]15686 	sjmp	00229$
      006251                      15687 00223$:
                                  15688 ;	src\main.c:308: sub_mode = sub_mode<3?sub_mode+1:0;
      006251 90 00 F5         [24]15689 	mov	dptr,#_sub_mode
      006254 E0               [24]15690 	movx	a,@dptr
      006255 FD               [12]15691 	mov	r5,a
      006256 BD 03 00         [24]15692 	cjne	r5,#0x03,02482$
      006259                      15693 02482$:
      006259 50 09            [24]15694 	jnc	00713$
      00625B 0D               [12]15695 	inc	r5
      00625C ED               [12]15696 	mov	a,r5
      00625D FC               [12]15697 	mov	r4,a
      00625E 33               [12]15698 	rlc	a
      00625F 95 E0            [12]15699 	subb	a,acc
      006261 FD               [12]15700 	mov	r5,a
      006262 80 04            [24]15701 	sjmp	00714$
      006264                      15702 00713$:
      006264 7C 00            [12]15703 	mov	r4,#0x00
      006266 7D 00            [12]15704 	mov	r5,#0x00
      006268                      15705 00714$:
      006268 90 00 F5         [24]15706 	mov	dptr,#_sub_mode
      00626B EC               [12]15707 	mov	a,r4
      00626C F0               [24]15708 	movx	@dptr,a
                                  15709 ;	src\main.c:309: so_motor = sub_mode + 1;
      00626D 0C               [12]15710 	inc	r4
      00626E 90 01 2F         [24]15711 	mov	dptr,#_so_motor
      006271 EC               [12]15712 	mov	a,r4
      006272 F0               [24]15713 	movx	@dptr,a
                                  15714 ;	src\main.c:310: LCD_guidulieu(so_motor+'0');
      006273 74 30            [12]15715 	mov	a,#0x30
      006275 2C               [12]15716 	add	a,r4
      006276 F5 82            [12]15717 	mov	dpl,a
      006278 C0 02            [24]15718 	push	ar2
      00627A 12 05 13         [24]15719 	lcall	_LCD_guidulieu
                                  15720 ;	src\main.c:311: LCD_guilenh(0xc4);
      00627D 75 82 C4         [24]15721 	mov	dpl,#0xc4
      006280 12 05 71         [24]15722 	lcall	_LCD_guilenh
      006283 D0 02            [24]15723 	pop	ar2
                                  15724 ;	src\main.c:312: break;
                                  15725 ;	src\main.c:313: case 1:
      006285 80 56            [24]15726 	sjmp	00232$
      006287                      15727 00224$:
                                  15728 ;	src\main.c:314: may_dc = sub_mode = 1 - sub_mode;
      006287 90 00 F5         [24]15729 	mov	dptr,#_sub_mode
      00628A E0               [24]15730 	movx	a,@dptr
      00628B FD               [12]15731 	mov	r5,a
      00628C 74 01            [12]15732 	mov	a,#0x01
      00628E C3               [12]15733 	clr	c
      00628F 9D               [12]15734 	subb	a,r5
                                  15735 ;	assignBit
      006290 FD               [12]15736 	mov	r5,a
      006291 24 FF            [12]15737 	add	a,#0xff
      006293 92 34            [24]15738 	mov	_may_dc,c
      006295 ED               [12]15739 	mov	a,r5
      006296 F0               [24]15740 	movx	@dptr,a
                                  15741 ;	src\main.c:315: break;
                                  15742 ;	src\main.c:316: case 2:
      006297 80 44            [24]15743 	sjmp	00232$
      006299                      15744 00225$:
                                  15745 ;	src\main.c:317: if(so_motor>2) atmel_phat = sub_mode = 1;
      006299 90 01 2F         [24]15746 	mov	dptr,#_so_motor
      00629C E0               [24]15747 	movx	a,@dptr
      00629D FD               [12]15748 	mov  r5,a
      00629E 24 FD            [12]15749 	add	a,#0xff - 0x02
      0062A0 50 0A            [24]15750 	jnc	00227$
      0062A2 90 00 F5         [24]15751 	mov	dptr,#_sub_mode
      0062A5 74 01            [12]15752 	mov	a,#0x01
      0062A7 F0               [24]15753 	movx	@dptr,a
                                  15754 ;	assignBit
      0062A8 D2 35            [12]15755 	setb	_atmel_phat
      0062AA 80 10            [24]15756 	sjmp	00229$
      0062AC                      15757 00227$:
                                  15758 ;	src\main.c:318: else atmel_phat = sub_mode = 1 - sub_mode;
      0062AC 90 00 F5         [24]15759 	mov	dptr,#_sub_mode
      0062AF E0               [24]15760 	movx	a,@dptr
      0062B0 FD               [12]15761 	mov	r5,a
      0062B1 74 01            [12]15762 	mov	a,#0x01
      0062B3 C3               [12]15763 	clr	c
      0062B4 9D               [12]15764 	subb	a,r5
                                  15765 ;	assignBit
      0062B5 FD               [12]15766 	mov	r5,a
      0062B6 24 FF            [12]15767 	add	a,#0xff
      0062B8 92 35            [24]15768 	mov	_atmel_phat,c
      0062BA ED               [12]15769 	mov	a,r5
      0062BB F0               [24]15770 	movx	@dptr,a
                                  15771 ;	src\main.c:319: case 3:
      0062BC                      15772 00229$:
                                  15773 ;	src\main.c:320: sub_mode = sub_mode<3?sub_mode+1:0;
      0062BC 90 00 F5         [24]15774 	mov	dptr,#_sub_mode
      0062BF E0               [24]15775 	movx	a,@dptr
      0062C0 FD               [12]15776 	mov	r5,a
      0062C1 BD 03 00         [24]15777 	cjne	r5,#0x03,02485$
      0062C4                      15778 02485$:
      0062C4 50 09            [24]15779 	jnc	00715$
      0062C6 0D               [12]15780 	inc	r5
      0062C7 ED               [12]15781 	mov	a,r5
      0062C8 FC               [12]15782 	mov	r4,a
      0062C9 33               [12]15783 	rlc	a
      0062CA 95 E0            [12]15784 	subb	a,acc
      0062CC FD               [12]15785 	mov	r5,a
      0062CD 80 04            [24]15786 	sjmp	00716$
      0062CF                      15787 00715$:
      0062CF 7C 00            [12]15788 	mov	r4,#0x00
      0062D1 7D 00            [12]15789 	mov	r5,#0x00
      0062D3                      15790 00716$:
      0062D3 90 00 F5         [24]15791 	mov	dptr,#_sub_mode
      0062D6 EC               [12]15792 	mov	a,r4
      0062D7 F0               [24]15793 	movx	@dptr,a
                                  15794 ;	src\main.c:321: toc_do_motor_step = sub_mode;
      0062D8 90 00 ED         [24]15795 	mov	dptr,#_toc_do_motor_step
      0062DB EC               [12]15796 	mov	a,r4
      0062DC F0               [24]15797 	movx	@dptr,a
                                  15798 ;	src\main.c:323: }
      0062DD                      15799 00232$:
                                  15800 ;	src\main.c:326: if(phim_mode_nhan){
                                  15801 ;	src\main.c:327: phim_mode_nhan = 0;
                                  15802 ;	assignBit
      0062DD 10 22 02         [24]15803 	jbc	_phim_mode_nhan,02487$
      0062E0 80 71            [24]15804 	sjmp	00234$
      0062E2                      15805 02487$:
                                  15806 ;	src\main.c:328: debug_dem = 0;
      0062E2 75 74 00         [24]15807 	mov	_main_debug_dem_131073_263,#0x00
                                  15808 ;	src\main.c:329: mode++;
      0062E5 90 00 F4         [24]15809 	mov	dptr,#_mode
      0062E8 E0               [24]15810 	movx	a,@dptr
      0062E9 24 01            [12]15811 	add	a,#0x01
      0062EB F0               [24]15812 	movx	@dptr,a
                                  15813 ;	src\main.c:330: LCD_guichuoi("\300MAY:");LCD_guidulieu(so_motor+'0');
      0062EC 90 90 33         [24]15814 	mov	dptr,#___str_122
      0062EF 75 F0 80         [24]15815 	mov	b,#0x80
      0062F2 C0 02            [24]15816 	push	ar2
      0062F4 12 05 F1         [24]15817 	lcall	_LCD_guichuoi
      0062F7 90 01 2F         [24]15818 	mov	dptr,#_so_motor
      0062FA E0               [24]15819 	movx	a,@dptr
      0062FB 24 30            [12]15820 	add	a,#0x30
      0062FD F5 82            [12]15821 	mov	dpl,a
      0062FF 12 05 13         [24]15822 	lcall	_LCD_guidulieu
      006302 D0 02            [24]15823 	pop	ar2
                                  15824 ;	src\main.c:331: LCD_guichuoi(may_dc?"\305 DC ":"\305 ST ");
      006304 30 34 06         [24]15825 	jnb	_may_dc,00717$
      006307 7C 39            [12]15826 	mov	r4,#___str_123
      006309 7D 90            [12]15827 	mov	r5,#(___str_123 >> 8)
      00630B 80 04            [24]15828 	sjmp	00718$
      00630D                      15829 00717$:
      00630D 7C 3F            [12]15830 	mov	r4,#___str_124
      00630F 7D 90            [12]15831 	mov	r5,#(___str_124 >> 8)
      006311                      15832 00718$:
      006311 7B 80            [12]15833 	mov	r3,#0x80
      006313 8C 82            [24]15834 	mov	dpl,r4
      006315 8D 83            [24]15835 	mov	dph,r5
      006317 8B F0            [24]15836 	mov	b,r3
      006319 C0 02            [24]15837 	push	ar2
      00631B 12 05 F1         [24]15838 	lcall	_LCD_guichuoi
      00631E D0 02            [24]15839 	pop	ar2
                                  15840 ;	src\main.c:332: LCD_guichuoi(atmel_phat?"\311C55 ":"\311STC ");
      006320 30 35 06         [24]15841 	jnb	_atmel_phat,00719$
      006323 7C 45            [12]15842 	mov	r4,#___str_125
      006325 7D 90            [12]15843 	mov	r5,#(___str_125 >> 8)
      006327 80 04            [24]15844 	sjmp	00720$
      006329                      15845 00719$:
      006329 7C 4B            [12]15846 	mov	r4,#___str_126
      00632B 7D 90            [12]15847 	mov	r5,#(___str_126 >> 8)
      00632D                      15848 00720$:
      00632D 7B 80            [12]15849 	mov	r3,#0x80
      00632F 8C 82            [24]15850 	mov	dpl,r4
      006331 8D 83            [24]15851 	mov	dph,r5
      006333 8B F0            [24]15852 	mov	b,r3
      006335 C0 02            [24]15853 	push	ar2
      006337 12 05 F1         [24]15854 	lcall	_LCD_guichuoi
                                  15855 ;	src\main.c:333: LCD_guichuoi("\315S:");LCD_guidulieu(toc_do_motor_step+'0');
      00633A 90 90 51         [24]15856 	mov	dptr,#___str_127
      00633D 75 F0 80         [24]15857 	mov	b,#0x80
      006340 12 05 F1         [24]15858 	lcall	_LCD_guichuoi
      006343 90 00 ED         [24]15859 	mov	dptr,#_toc_do_motor_step
      006346 E0               [24]15860 	movx	a,@dptr
      006347 24 30            [12]15861 	add	a,#0x30
      006349 F5 82            [12]15862 	mov	dpl,a
      00634B 12 05 13         [24]15863 	lcall	_LCD_guidulieu
                                  15864 ;	src\main.c:334: LCD_noblink();
      00634E 12 05 CC         [24]15865 	lcall	_LCD_noblink
      006351 D0 02            [24]15866 	pop	ar2
      006353                      15867 00234$:
                                  15868 ;	src\main.c:336: if(phim_back_nhan){
                                  15869 ;	src\main.c:337: phim_back_nhan = 0;
                                  15870 ;	assignBit
      006353 10 26 03         [24]15871 	jbc	_phim_back_nhan,02490$
      006356 02 5D 0D         [24]15872 	ljmp	00248$
      006359                      15873 02490$:
                                  15874 ;	src\main.c:338: if(mode) mode--;
      006359 90 00 F4         [24]15875 	mov	dptr,#_mode
      00635C E0               [24]15876 	movx	a,@dptr
      00635D FD               [12]15877 	mov	r5,a
      00635E E0               [24]15878 	movx	a,@dptr
      00635F 60 06            [24]15879 	jz	00236$
      006361 ED               [12]15880 	mov	a,r5
      006362 14               [12]15881 	dec	a
      006363 90 00 F4         [24]15882 	mov	dptr,#_mode
      006366 F0               [24]15883 	movx	@dptr,a
      006367                      15884 00236$:
                                  15885 ;	src\main.c:339: LCD_guichuoi("\200 NHA PHAT TRIEN"); 
      006367 90 90 22         [24]15886 	mov	dptr,#___str_121
      00636A 75 F0 80         [24]15887 	mov	b,#0x80
      00636D C0 02            [24]15888 	push	ar2
      00636F 12 05 F1         [24]15889 	lcall	_LCD_guichuoi
                                  15890 ;	src\main.c:340: LCD_guichuoi("\300MAY:");LCD_guidulieu(so_motor+'0');
      006372 90 90 33         [24]15891 	mov	dptr,#___str_122
      006375 75 F0 80         [24]15892 	mov	b,#0x80
      006378 12 05 F1         [24]15893 	lcall	_LCD_guichuoi
      00637B 90 01 2F         [24]15894 	mov	dptr,#_so_motor
      00637E E0               [24]15895 	movx	a,@dptr
      00637F 24 30            [12]15896 	add	a,#0x30
      006381 F5 82            [12]15897 	mov	dpl,a
      006383 12 05 13         [24]15898 	lcall	_LCD_guidulieu
      006386 D0 02            [24]15899 	pop	ar2
                                  15900 ;	src\main.c:341: LCD_guichuoi(may_dc?"\305 DC ":"\305 ST ");
      006388 30 34 06         [24]15901 	jnb	_may_dc,00721$
      00638B 7C 39            [12]15902 	mov	r4,#___str_123
      00638D 7D 90            [12]15903 	mov	r5,#(___str_123 >> 8)
      00638F 80 04            [24]15904 	sjmp	00722$
      006391                      15905 00721$:
      006391 7C 3F            [12]15906 	mov	r4,#___str_124
      006393 7D 90            [12]15907 	mov	r5,#(___str_124 >> 8)
      006395                      15908 00722$:
      006395 7B 80            [12]15909 	mov	r3,#0x80
      006397 8C 82            [24]15910 	mov	dpl,r4
      006399 8D 83            [24]15911 	mov	dph,r5
      00639B 8B F0            [24]15912 	mov	b,r3
      00639D C0 02            [24]15913 	push	ar2
      00639F 12 05 F1         [24]15914 	lcall	_LCD_guichuoi
      0063A2 D0 02            [24]15915 	pop	ar2
                                  15916 ;	src\main.c:342: LCD_guichuoi(atmel_phat?"\311C55 ":"\311STC ");
      0063A4 30 35 06         [24]15917 	jnb	_atmel_phat,00723$
      0063A7 7C 45            [12]15918 	mov	r4,#___str_125
      0063A9 7D 90            [12]15919 	mov	r5,#(___str_125 >> 8)
      0063AB 80 04            [24]15920 	sjmp	00724$
      0063AD                      15921 00723$:
      0063AD 7C 4B            [12]15922 	mov	r4,#___str_126
      0063AF 7D 90            [12]15923 	mov	r5,#(___str_126 >> 8)
      0063B1                      15924 00724$:
      0063B1 7B 80            [12]15925 	mov	r3,#0x80
      0063B3 8C 82            [24]15926 	mov	dpl,r4
      0063B5 8D 83            [24]15927 	mov	dph,r5
      0063B7 8B F0            [24]15928 	mov	b,r3
      0063B9 C0 02            [24]15929 	push	ar2
      0063BB 12 05 F1         [24]15930 	lcall	_LCD_guichuoi
                                  15931 ;	src\main.c:343: LCD_guichuoi("\315S:");LCD_guidulieu(toc_do_motor_step+'0');
      0063BE 90 90 51         [24]15932 	mov	dptr,#___str_127
      0063C1 75 F0 80         [24]15933 	mov	b,#0x80
      0063C4 12 05 F1         [24]15934 	lcall	_LCD_guichuoi
      0063C7 90 00 ED         [24]15935 	mov	dptr,#_toc_do_motor_step
      0063CA E0               [24]15936 	movx	a,@dptr
      0063CB 24 30            [12]15937 	add	a,#0x30
      0063CD F5 82            [12]15938 	mov	dpl,a
      0063CF 12 05 13         [24]15939 	lcall	_LCD_guidulieu
      0063D2 D0 02            [24]15940 	pop	ar2
                                  15941 ;	src\main.c:344: if(!mode){ 
      0063D4 90 00 F4         [24]15942 	mov	dptr,#_mode
      0063D7 E0               [24]15943 	movx	a,@dptr
      0063D8 60 03            [24]15944 	jz	02494$
      0063DA 02 5D 0D         [24]15945 	ljmp	00248$
      0063DD                      15946 02494$:
                                  15947 ;	src\main.c:345: if(debug_dem++>8){
      0063DD AD 74            [24]15948 	mov	r5,_main_debug_dem_131073_263
      0063DF 05 74            [12]15949 	inc	_main_debug_dem_131073_263
      0063E1 ED               [12]15950 	mov	a,r5
      0063E2 24 F7            [12]15951 	add	a,#0xff - 0x08
      0063E4 50 17            [24]15952 	jnc	00238$
                                  15953 ;	src\main.c:346: debug = 1;
                                  15954 ;	assignBit
      0063E6 D2 4D            [12]15955 	setb	_main_debug_131073_263
                                  15956 ;	src\main.c:347: LCD_noblink();
      0063E8 C0 02            [24]15957 	push	ar2
      0063EA 12 05 CC         [24]15958 	lcall	_LCD_noblink
      0063ED D0 02            [24]15959 	pop	ar2
                                  15960 ;	src\main.c:348: sub_mode = eep_debug & 15;
      0063EF 90 F0 1E         [24]15961 	mov	dptr,#_eep_debug
      0063F2 E4               [12]15962 	clr	a
      0063F3 93               [24]15963 	movc	a,@a+dptr
      0063F4 90 00 F5         [24]15964 	mov	dptr,#_sub_mode
      0063F7 54 0F            [12]15965 	anl	a,#0x0f
      0063F9 F0               [24]15966 	movx	@dptr,a
      0063FA 02 5D 0D         [24]15967 	ljmp	00248$
      0063FD                      15968 00238$:
                                  15969 ;	src\main.c:350: else LCD_blinkXY(DUOI,4);
      0063FD 75 3F 04         [24]15970 	mov	_LCD_blinkXY_PARM_2,#0x04
      006400 75 82 C0         [24]15971 	mov	dpl,#0xc0
      006403 C0 02            [24]15972 	push	ar2
      006405 12 04 E8         [24]15973 	lcall	_LCD_blinkXY
      006408 D0 02            [24]15974 	pop	ar2
      00640A 02 5D 0D         [24]15975 	ljmp	00248$
      00640D                      15976 00251$:
                                  15977 ;	src\main.c:360: ADC_CONTR = 0x8b;
      00640D 75 BC 8B         [24]15978 	mov	_ADC_CONTR,#0x8b
                                  15979 ;	src\main.c:363: LCD_guilenh(0x80);
      006410 75 82 80         [24]15980 	mov	dpl,#0x80
      006413 C0 07            [24]15981 	push	ar7
      006415 C0 06            [24]15982 	push	ar6
      006417 12 05 71         [24]15983 	lcall	_LCD_guilenh
                                  15984 ;	src\main.c:364: LCD_guichuoi("KIEM TRA GIO RTC");
      00641A 90 90 94         [24]15985 	mov	dptr,#___str_136
      00641D 75 F0 80         [24]15986 	mov	b,#0x80
      006420 12 05 F1         [24]15987 	lcall	_LCD_guichuoi
                                  15988 ;	src\main.c:365: rtc_gettime(&hour, &minute, &second);
      006423 75 34 4A         [24]15989 	mov	_rtc_gettime_PARM_2,#_minute
      006426 75 35 00         [24]15990 	mov	(_rtc_gettime_PARM_2 + 1),#0x00
      006429 75 36 40         [24]15991 	mov	(_rtc_gettime_PARM_2 + 2),#0x40
      00642C 75 37 49         [24]15992 	mov	_rtc_gettime_PARM_3,#_second
      00642F 75 38 00         [24]15993 	mov	(_rtc_gettime_PARM_3 + 1),#0x00
      006432 75 39 40         [24]15994 	mov	(_rtc_gettime_PARM_3 + 2),#0x40
      006435 90 00 4B         [24]15995 	mov	dptr,#_hour
      006438 75 F0 40         [24]15996 	mov	b,#0x40
      00643B 12 01 D3         [24]15997 	lcall	_rtc_gettime
      00643E D0 06            [24]15998 	pop	ar6
      006440 D0 07            [24]15999 	pop	ar7
                                  16000 ;	src\main.c:366: if(hour>23 || minute > 59 || second >59)	
      006442 E5 4B            [12]16001 	mov	a,_hour
      006444 24 E8            [12]16002 	add	a,#0xff - 0x17
      006446 40 0C            [24]16003 	jc	00254$
      006448 E5 4A            [12]16004 	mov	a,_minute
      00644A 24 C4            [12]16005 	add	a,#0xff - 0x3b
      00644C 40 06            [24]16006 	jc	00254$
      00644E E5 49            [12]16007 	mov	a,_second
      006450 24 C4            [12]16008 	add	a,#0xff - 0x3b
      006452 50 14            [24]16009 	jnc	00255$
      006454                      16010 00254$:
                                  16011 ;	src\main.c:367: rtc_settime(0,0,0);
      006454 75 3A 00         [24]16012 	mov	_rtc_settime_PARM_2,#0x00
      006457 75 3B 00         [24]16013 	mov	_rtc_settime_PARM_3,#0x00
      00645A 75 82 00         [24]16014 	mov	dpl,#0x00
      00645D C0 07            [24]16015 	push	ar7
      00645F C0 06            [24]16016 	push	ar6
      006461 12 02 63         [24]16017 	lcall	_rtc_settime
      006464 D0 06            [24]16018 	pop	ar6
      006466 D0 07            [24]16019 	pop	ar7
      006468                      16020 00255$:
                                  16021 ;	src\main.c:370: rtc_init(); //khai bao cho ds1307 tao xung vuong moi giay
      006468 C0 07            [24]16022 	push	ar7
      00646A C0 06            [24]16023 	push	ar6
      00646C 12 00 F0         [24]16024 	lcall	_rtc_init
                                  16025 ;	src\main.c:371: INT_DHO_EX = 1; //Bat ngat ngoai 0 (EX0)
                                  16026 ;	assignBit
      00646F D2 A8            [12]16027 	setb	_EX0
                                  16028 ;	src\main.c:372: INT_DHO_IT=1; // ngat ngoai 0 cho suon len
                                  16029 ;	assignBit
      006471 D2 88            [12]16030 	setb	_IT0
                                  16031 ;	src\main.c:373: rtc_gettime(&hour, &minute, &second);
      006473 75 34 4A         [24]16032 	mov	_rtc_gettime_PARM_2,#_minute
      006476 75 35 00         [24]16033 	mov	(_rtc_gettime_PARM_2 + 1),#0x00
      006479 75 36 40         [24]16034 	mov	(_rtc_gettime_PARM_2 + 2),#0x40
      00647C 75 37 49         [24]16035 	mov	_rtc_gettime_PARM_3,#_second
      00647F 75 38 00         [24]16036 	mov	(_rtc_gettime_PARM_3 + 1),#0x00
      006482 75 39 40         [24]16037 	mov	(_rtc_gettime_PARM_3 + 2),#0x40
      006485 90 00 4B         [24]16038 	mov	dptr,#_hour
      006488 75 F0 40         [24]16039 	mov	b,#0x40
      00648B 12 01 D3         [24]16040 	lcall	_rtc_gettime
                                  16041 ;	src\main.c:376: LCD_guilenh(0x80);
      00648E 75 82 80         [24]16042 	mov	dpl,#0x80
      006491 12 05 71         [24]16043 	lcall	_LCD_guilenh
                                  16044 ;	src\main.c:377: LCD_guichuoi("KIEM MOTOR 1 - 3");
      006494 90 90 A5         [24]16045 	mov	dptr,#___str_137
      006497 75 F0 80         [24]16046 	mov	b,#0x80
      00649A 12 05 F1         [24]16047 	lcall	_LCD_guichuoi
      00649D D0 06            [24]16048 	pop	ar6
      00649F D0 07            [24]16049 	pop	ar7
                                  16050 ;	src\main.c:378: if(so_motor>2){
      0064A1 90 01 2F         [24]16051 	mov	dptr,#_so_motor
      0064A4 E0               [24]16052 	movx	a,@dptr
      0064A5 FD               [12]16053 	mov  r5,a
      0064A6 24 FD            [12]16054 	add	a,#0xff - 0x02
      0064A8 40 03            [24]16055 	jc	02499$
      0064AA 02 65 4D         [24]16056 	ljmp	00265$
      0064AD                      16057 02499$:
                                  16058 ;	src\main.c:380: while(!cam_che && retry--){
      0064AD 75 76 14         [24]16059 	mov	_main_retry_131073_284,#0x14
      0064B0                      16060 00261$:
      0064B0 30 B6 03         [24]16061 	jnb	_P36,02500$
      0064B3 02 65 4D         [24]16062 	ljmp	00265$
      0064B6                      16063 02500$:
      0064B6 AC 76            [24]16064 	mov	r4,_main_retry_131073_284
      0064B8 15 76            [12]16065 	dec	_main_retry_131073_284
      0064BA EC               [12]16066 	mov	a,r4
      0064BB 70 03            [24]16067 	jnz	02501$
      0064BD 02 65 4D         [24]16068 	ljmp	00265$
      0064C0                      16069 02501$:
                                  16070 ;	src\main.c:381: LCD_guilenh(0xc0);
      0064C0 75 82 C0         [24]16071 	mov	dpl,#0xc0
      0064C3 C0 07            [24]16072 	push	ar7
      0064C5 C0 06            [24]16073 	push	ar6
      0064C7 12 05 71         [24]16074 	lcall	_LCD_guilenh
                                  16075 ;	src\main.c:382: LCD_guidulieu(retry/10+'0');
      0064CA AB 76            [24]16076 	mov	r3,_main_retry_131073_284
      0064CC 7C 00            [12]16077 	mov	r4,#0x00
      0064CE 75 1B 0A         [24]16078 	mov	__divsint_PARM_2,#0x0a
                                  16079 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      0064D1 8C 1C            [24]16080 	mov	(__divsint_PARM_2 + 1),r4
      0064D3 8B 82            [24]16081 	mov	dpl,r3
      0064D5 8C 83            [24]16082 	mov	dph,r4
      0064D7 C0 04            [24]16083 	push	ar4
      0064D9 C0 03            [24]16084 	push	ar3
      0064DB 12 84 9D         [24]16085 	lcall	__divsint
      0064DE AA 82            [24]16086 	mov	r2,dpl
      0064E0 74 30            [12]16087 	mov	a,#0x30
      0064E2 2A               [12]16088 	add	a,r2
      0064E3 F5 82            [12]16089 	mov	dpl,a
      0064E5 12 05 13         [24]16090 	lcall	_LCD_guidulieu
      0064E8 D0 03            [24]16091 	pop	ar3
      0064EA D0 04            [24]16092 	pop	ar4
                                  16093 ;	src\main.c:383: LCD_guidulieu(retry%10+'0');
      0064EC 75 1B 0A         [24]16094 	mov	__modsint_PARM_2,#0x0a
      0064EF 75 1C 00         [24]16095 	mov	(__modsint_PARM_2 + 1),#0x00
      0064F2 8B 82            [24]16096 	mov	dpl,r3
      0064F4 8C 83            [24]16097 	mov	dph,r4
      0064F6 12 84 67         [24]16098 	lcall	__modsint
      0064F9 AC 82            [24]16099 	mov	r4,dpl
      0064FB 74 30            [12]16100 	mov	a,#0x30
      0064FD 2C               [12]16101 	add	a,r4
      0064FE F5 82            [12]16102 	mov	dpl,a
      006500 12 05 13         [24]16103 	lcall	_LCD_guidulieu
      006503 D0 06            [24]16104 	pop	ar6
      006505 D0 07            [24]16105 	pop	ar7
                                  16106 ;	src\main.c:384: motor1 = 1;
                                  16107 ;	assignBit
      006507 D2 A7            [12]16108 	setb	_P27
                                  16109 ;	src\main.c:385: delay_ms(may_dc?1000:250);
      006509 30 34 06         [24]16110 	jnb	_may_dc,00725$
      00650C 7C E8            [12]16111 	mov	r4,#0xe8
      00650E 7D 03            [12]16112 	mov	r5,#0x03
      006510 80 04            [24]16113 	sjmp	00726$
      006512                      16114 00725$:
      006512 7C FA            [12]16115 	mov	r4,#0xfa
      006514 7D 00            [12]16116 	mov	r5,#0x00
      006516                      16117 00726$:
      006516 8C 82            [24]16118 	mov	dpl,r4
      006518 8D 83            [24]16119 	mov	dph,r5
      00651A C0 07            [24]16120 	push	ar7
      00651C C0 06            [24]16121 	push	ar6
      00651E 12 04 BB         [24]16122 	lcall	_delay_ms
      006521 D0 06            [24]16123 	pop	ar6
      006523 D0 07            [24]16124 	pop	ar7
                                  16125 ;	src\main.c:386: motor1 = 0;
                                  16126 ;	assignBit
      006525 C2 A7            [12]16127 	clr	_P27
                                  16128 ;	src\main.c:387: if(!cam_che){
      006527 20 B6 86         [24]16129 	jb	_P36,00261$
                                  16130 ;	src\main.c:388: motor3 = 1;
                                  16131 ;	assignBit
      00652A D2 A6            [12]16132 	setb	_P26
                                  16133 ;	src\main.c:389: delay_ms(may_dc?1000:250);
      00652C 30 34 06         [24]16134 	jnb	_may_dc,00727$
      00652F 7C E8            [12]16135 	mov	r4,#0xe8
      006531 7D 03            [12]16136 	mov	r5,#0x03
      006533 80 04            [24]16137 	sjmp	00728$
      006535                      16138 00727$:
      006535 7C FA            [12]16139 	mov	r4,#0xfa
      006537 7D 00            [12]16140 	mov	r5,#0x00
      006539                      16141 00728$:
      006539 8C 82            [24]16142 	mov	dpl,r4
      00653B 8D 83            [24]16143 	mov	dph,r5
      00653D C0 07            [24]16144 	push	ar7
      00653F C0 06            [24]16145 	push	ar6
      006541 12 04 BB         [24]16146 	lcall	_delay_ms
      006544 D0 06            [24]16147 	pop	ar6
      006546 D0 07            [24]16148 	pop	ar7
                                  16149 ;	src\main.c:390: motor3 = 0;
                                  16150 ;	assignBit
      006548 C2 A6            [12]16151 	clr	_P26
      00654A 02 64 B0         [24]16152 	ljmp	00261$
      00654D                      16153 00265$:
                                  16154 ;	src\main.c:394: LCD_guilenh(0x80);
      00654D 75 82 80         [24]16155 	mov	dpl,#0x80
      006550 C0 07            [24]16156 	push	ar7
      006552 C0 06            [24]16157 	push	ar6
      006554 12 05 71         [24]16158 	lcall	_LCD_guilenh
                                  16159 ;	src\main.c:395: LCD_guichuoi("KIEM MOTOR 2 - 4");
      006557 90 90 B6         [24]16160 	mov	dptr,#___str_138
      00655A 75 F0 80         [24]16161 	mov	b,#0x80
      00655D 12 05 F1         [24]16162 	lcall	_LCD_guichuoi
      006560 D0 06            [24]16163 	pop	ar6
      006562 D0 07            [24]16164 	pop	ar7
                                  16165 ;	src\main.c:396: if(so_motor>3){
      006564 90 01 2F         [24]16166 	mov	dptr,#_so_motor
      006567 E0               [24]16167 	movx	a,@dptr
      006568 FD               [12]16168 	mov  r5,a
      006569 24 FC            [12]16169 	add	a,#0xff - 0x03
      00656B 40 03            [24]16170 	jc	02505$
      00656D 02 66 10         [24]16171 	ljmp	00273$
      006570                      16172 02505$:
                                  16173 ;	src\main.c:398: while(!cam_che2 && retry--){
      006570 75 77 05         [24]16174 	mov	_main_retry_131073_287,#0x05
      006573                      16175 00269$:
      006573 30 B7 03         [24]16176 	jnb	_P37,02506$
      006576 02 66 10         [24]16177 	ljmp	00273$
      006579                      16178 02506$:
      006579 AC 77            [24]16179 	mov	r4,_main_retry_131073_287
      00657B 15 77            [12]16180 	dec	_main_retry_131073_287
      00657D EC               [12]16181 	mov	a,r4
      00657E 70 03            [24]16182 	jnz	02507$
      006580 02 66 10         [24]16183 	ljmp	00273$
      006583                      16184 02507$:
                                  16185 ;	src\main.c:399: LCD_guilenh(0xc0);
      006583 75 82 C0         [24]16186 	mov	dpl,#0xc0
      006586 C0 07            [24]16187 	push	ar7
      006588 C0 06            [24]16188 	push	ar6
      00658A 12 05 71         [24]16189 	lcall	_LCD_guilenh
                                  16190 ;	src\main.c:400: LCD_guidulieu(retry/10+'0');
      00658D AB 77            [24]16191 	mov	r3,_main_retry_131073_287
      00658F 7C 00            [12]16192 	mov	r4,#0x00
      006591 75 1B 0A         [24]16193 	mov	__divsint_PARM_2,#0x0a
                                  16194 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      006594 8C 1C            [24]16195 	mov	(__divsint_PARM_2 + 1),r4
      006596 8B 82            [24]16196 	mov	dpl,r3
      006598 8C 83            [24]16197 	mov	dph,r4
      00659A C0 04            [24]16198 	push	ar4
      00659C C0 03            [24]16199 	push	ar3
      00659E 12 84 9D         [24]16200 	lcall	__divsint
      0065A1 AA 82            [24]16201 	mov	r2,dpl
      0065A3 74 30            [12]16202 	mov	a,#0x30
      0065A5 2A               [12]16203 	add	a,r2
      0065A6 F5 82            [12]16204 	mov	dpl,a
      0065A8 12 05 13         [24]16205 	lcall	_LCD_guidulieu
      0065AB D0 03            [24]16206 	pop	ar3
      0065AD D0 04            [24]16207 	pop	ar4
                                  16208 ;	src\main.c:401: LCD_guidulieu(retry%10+'0');
      0065AF 75 1B 0A         [24]16209 	mov	__modsint_PARM_2,#0x0a
      0065B2 75 1C 00         [24]16210 	mov	(__modsint_PARM_2 + 1),#0x00
      0065B5 8B 82            [24]16211 	mov	dpl,r3
      0065B7 8C 83            [24]16212 	mov	dph,r4
      0065B9 12 84 67         [24]16213 	lcall	__modsint
      0065BC AC 82            [24]16214 	mov	r4,dpl
      0065BE 74 30            [12]16215 	mov	a,#0x30
      0065C0 2C               [12]16216 	add	a,r4
      0065C1 F5 82            [12]16217 	mov	dpl,a
      0065C3 12 05 13         [24]16218 	lcall	_LCD_guidulieu
      0065C6 D0 06            [24]16219 	pop	ar6
      0065C8 D0 07            [24]16220 	pop	ar7
                                  16221 ;	src\main.c:402: motor2 = 1;
                                  16222 ;	assignBit
      0065CA D2 A5            [12]16223 	setb	_P25
                                  16224 ;	src\main.c:403: delay_ms(may_dc?1000:250);
      0065CC 30 34 06         [24]16225 	jnb	_may_dc,00729$
      0065CF 7C E8            [12]16226 	mov	r4,#0xe8
      0065D1 7D 03            [12]16227 	mov	r5,#0x03
      0065D3 80 04            [24]16228 	sjmp	00730$
      0065D5                      16229 00729$:
      0065D5 7C FA            [12]16230 	mov	r4,#0xfa
      0065D7 7D 00            [12]16231 	mov	r5,#0x00
      0065D9                      16232 00730$:
      0065D9 8C 82            [24]16233 	mov	dpl,r4
      0065DB 8D 83            [24]16234 	mov	dph,r5
      0065DD C0 07            [24]16235 	push	ar7
      0065DF C0 06            [24]16236 	push	ar6
      0065E1 12 04 BB         [24]16237 	lcall	_delay_ms
      0065E4 D0 06            [24]16238 	pop	ar6
      0065E6 D0 07            [24]16239 	pop	ar7
                                  16240 ;	src\main.c:404: motor2 = 0;
                                  16241 ;	assignBit
      0065E8 C2 A5            [12]16242 	clr	_P25
                                  16243 ;	src\main.c:405: if(!cam_che2){
      0065EA 20 B7 86         [24]16244 	jb	_P37,00269$
                                  16245 ;	src\main.c:406: motor4 = 1;
                                  16246 ;	assignBit
      0065ED D2 A4            [12]16247 	setb	_P24
                                  16248 ;	src\main.c:407: delay_ms(may_dc?1000:250);
      0065EF 30 34 06         [24]16249 	jnb	_may_dc,00731$
      0065F2 7C E8            [12]16250 	mov	r4,#0xe8
      0065F4 7D 03            [12]16251 	mov	r5,#0x03
      0065F6 80 04            [24]16252 	sjmp	00732$
      0065F8                      16253 00731$:
      0065F8 7C FA            [12]16254 	mov	r4,#0xfa
      0065FA 7D 00            [12]16255 	mov	r5,#0x00
      0065FC                      16256 00732$:
      0065FC 8C 82            [24]16257 	mov	dpl,r4
      0065FE 8D 83            [24]16258 	mov	dph,r5
      006600 C0 07            [24]16259 	push	ar7
      006602 C0 06            [24]16260 	push	ar6
      006604 12 04 BB         [24]16261 	lcall	_delay_ms
      006607 D0 06            [24]16262 	pop	ar6
      006609 D0 07            [24]16263 	pop	ar7
                                  16264 ;	src\main.c:408: motor4 = 0;
                                  16265 ;	assignBit
      00660B C2 A4            [12]16266 	clr	_P24
      00660D 02 65 73         [24]16267 	ljmp	00269$
      006610                      16268 00273$:
                                  16269 ;	src\main.c:412: LCD_guilenh(0x80);
      006610 75 82 80         [24]16270 	mov	dpl,#0x80
      006613 C0 07            [24]16271 	push	ar7
      006615 C0 06            [24]16272 	push	ar6
      006617 12 05 71         [24]16273 	lcall	_LCD_guilenh
                                  16274 ;	src\main.c:413: LCD_guichuoi("THIET LAP MOTOR ");
      00661A 90 90 C7         [24]16275 	mov	dptr,#___str_139
      00661D 75 F0 80         [24]16276 	mov	b,#0x80
      006620 12 05 F1         [24]16277 	lcall	_LCD_guichuoi
                                  16278 ;	src\main.c:414: motor_step_int_init();
      006623 12 0F FD         [24]16279 	lcall	_motor_step_int_init
      006626 D0 06            [24]16280 	pop	ar6
      006628 D0 07            [24]16281 	pop	ar7
                                  16282 ;	src\main.c:417: bat_phone_phu = eep_phonephu[11]&1;
      00662A 90 F0 1C         [24]16283 	mov	dptr,#(_eep_phonephu + 0x000b)
      00662D E4               [12]16284 	clr	a
      00662E 93               [24]16285 	movc	a,@a+dptr
      00662F 54 01            [12]16286 	anl	a,#0x01
                                  16287 ;	assignBit
      006631 FD               [12]16288 	mov	r5,a
      006632 24 FF            [12]16289 	add	a,#0xff
      006634 92 0A            [24]16290 	mov	_bat_phone_phu,c
                                  16291 ;	src\main.c:418: if(!nosim && gsm_thietlapsim800()){
      006636 20 30 70         [24]16292 	jb	_nosim,00282$
      006639 C0 07            [24]16293 	push	ar7
      00663B C0 06            [24]16294 	push	ar6
      00663D 12 24 E1         [24]16295 	lcall	_gsm_thietlapsim800
      006640 D0 06            [24]16296 	pop	ar6
      006642 D0 07            [24]16297 	pop	ar7
      006644 50 63            [24]16298 	jnc	00282$
                                  16299 ;	src\main.c:419: gsm_thietlapngaygiothuc();
      006646 C0 07            [24]16300 	push	ar7
      006648 C0 06            [24]16301 	push	ar6
      00664A 12 25 33         [24]16302 	lcall	_gsm_thietlapngaygiothuc
                                  16303 ;	src\main.c:420: gsm_thietlapgoidien();
      00664D 12 27 0A         [24]16304 	lcall	_gsm_thietlapgoidien
                                  16305 ;	src\main.c:422: if(gsm_thietlapnhantin()){ // thiet lap thong so nhan tin
      006650 12 27 53         [24]16306 	lcall	_gsm_thietlapnhantin
      006653 D0 06            [24]16307 	pop	ar6
      006655 D0 07            [24]16308 	pop	ar7
      006657 50 50            [24]16309 	jnc	00282$
                                  16310 ;	src\main.c:423: if(!eep_norreset)baocaosms(CHINH,"\rkhoi dong phan mem san sang");
      006659 90 F0 05         [24]16311 	mov	dptr,#_eep_norreset
      00665C E4               [12]16312 	clr	a
      00665D 93               [24]16313 	movc	a,@a+dptr
      00665E 70 15            [24]16314 	jnz	00277$
                                  16315 ;	assignBit
      006660 D2 46            [12]16316 	setb	_baocaosms_PARM_1
      006662 90 90 D8         [24]16317 	mov	dptr,#___str_140
      006665 75 F0 80         [24]16318 	mov	b,#0x80
      006668 C0 07            [24]16319 	push	ar7
      00666A C0 06            [24]16320 	push	ar6
      00666C 12 20 30         [24]16321 	lcall	_baocaosms
      00666F D0 06            [24]16322 	pop	ar6
      006671 D0 07            [24]16323 	pop	ar7
      006673 80 29            [24]16324 	sjmp	00278$
      006675                      16325 00277$:
                                  16326 ;	src\main.c:425: baocaosms(CHINH,"\rkhoi dong san sang");
                                  16327 ;	assignBit
      006675 D2 46            [12]16328 	setb	_baocaosms_PARM_1
      006677 90 90 F5         [24]16329 	mov	dptr,#___str_141
      00667A 75 F0 80         [24]16330 	mov	b,#0x80
      00667D C0 07            [24]16331 	push	ar7
      00667F C0 06            [24]16332 	push	ar6
      006681 12 20 30         [24]16333 	lcall	_baocaosms
      006684 D0 06            [24]16334 	pop	ar6
      006686 D0 07            [24]16335 	pop	ar7
                                  16336 ;	src\main.c:426: if(bat_phone_phu)baocaosms(PHU,"\rkhoi dong san sang");
      006688 30 0A 13         [24]16337 	jnb	_bat_phone_phu,00278$
                                  16338 ;	assignBit
      00668B C2 46            [12]16339 	clr	_baocaosms_PARM_1
      00668D 90 90 F5         [24]16340 	mov	dptr,#___str_141
      006690 75 F0 80         [24]16341 	mov	b,#0x80
      006693 C0 07            [24]16342 	push	ar7
      006695 C0 06            [24]16343 	push	ar6
      006697 12 20 30         [24]16344 	lcall	_baocaosms
      00669A D0 06            [24]16345 	pop	ar6
      00669C D0 07            [24]16346 	pop	ar7
      00669E                      16347 00278$:
                                  16348 ;	src\main.c:428: kiemtrasodienthoai();
      00669E C0 07            [24]16349 	push	ar7
      0066A0 C0 06            [24]16350 	push	ar6
      0066A2 12 18 59         [24]16351 	lcall	_kiemtrasodienthoai
      0066A5 D0 06            [24]16352 	pop	ar6
      0066A7 D0 07            [24]16353 	pop	ar7
      0066A9                      16354 00282$:
                                  16355 ;	src\main.c:433: hour12 = (hour>11)?hour-12:hour;
      0066A9 E5 4B            [12]16356 	mov	a,_hour
      0066AB 24 F4            [12]16357 	add	a,#0xff - 0x0b
      0066AD 50 07            [24]16358 	jnc	00733$
      0066AF E5 4B            [12]16359 	mov	a,_hour
      0066B1 24 F4            [12]16360 	add	a,#0xf4
      0066B3 FD               [12]16361 	mov	r5,a
      0066B4 80 02            [24]16362 	sjmp	00734$
      0066B6                      16363 00733$:
      0066B6 AD 4B            [24]16364 	mov	r5,_hour
      0066B8                      16365 00734$:
      0066B8 8D 4C            [24]16366 	mov	_hour12,r5
                                  16367 ;	src\main.c:434: if(!eep_norreset){
      0066BA 90 F0 05         [24]16368 	mov	dptr,#_eep_norreset
      0066BD E4               [12]16369 	clr	a
      0066BE 93               [24]16370 	movc	a,@a+dptr
      0066BF 70 1C            [24]16371 	jnz	00285$
                                  16372 ;	src\main.c:435: mode_wait = 5;
      0066C1 90 00 F6         [24]16373 	mov	dptr,#_mode_wait
      0066C4 74 05            [12]16374 	mov	a,#0x05
      0066C6 F0               [24]16375 	movx	@dptr,a
                                  16376 ;	src\main.c:436: IAP_docxoasector1();
      0066C7 C0 07            [24]16377 	push	ar7
      0066C9 C0 06            [24]16378 	push	ar6
      0066CB 12 03 34         [24]16379 	lcall	_IAP_docxoasector1
                                  16380 ;	src\main.c:437: eeprom_buf[NORRESET_EEPROM] = 0xff;
      0066CE 90 00 C2         [24]16381 	mov	dptr,#(_eeprom_buf + 0x0005)
      0066D1 74 FF            [12]16382 	mov	a,#0xff
      0066D3 F0               [24]16383 	movx	@dptr,a
                                  16384 ;	src\main.c:438: IAP_ghisector1();
      0066D4 12 03 6F         [24]16385 	lcall	_IAP_ghisector1
      0066D7 D0 06            [24]16386 	pop	ar6
      0066D9 D0 07            [24]16387 	pop	ar7
      0066DB 80 06            [24]16388 	sjmp	00286$
      0066DD                      16389 00285$:
                                  16390 ;	src\main.c:439: }else mode_wait = 60;
      0066DD 90 00 F6         [24]16391 	mov	dptr,#_mode_wait
      0066E0 74 3C            [12]16392 	mov	a,#0x3c
      0066E2 F0               [24]16393 	movx	@dptr,a
      0066E3                      16394 00286$:
                                  16395 ;	src\main.c:441: WDT_CONTR = EN_WDT | CLR_WDT | WDT_SCALE_64; // Enable watchdog, clear watchdog, pre scale = 64, watchdog idle mode = NO
      0066E3 75 C1 65         [24]16396 	mov	_WDT_CONTR,#0x65
                                  16397 ;	src\main.c:445: while(1){
      0066E6                      16398 00645$:
                                  16399 ;	src\main.c:447: if(so_motor==4 && (eep_phut4!=phut[3] || eep_gio4!=gio[3])) luu_gio_kim();
      0066E6 90 01 2F         [24]16400 	mov	dptr,#_so_motor
      0066E9 E0               [24]16401 	movx	a,@dptr
      0066EA FD               [12]16402 	mov	r5,a
      0066EB BD 04 20         [24]16403 	cjne	r5,#0x04,00301$
      0066EE 90 F2 06         [24]16404 	mov	dptr,#_eep_phut4
      0066F1 E4               [12]16405 	clr	a
      0066F2 93               [24]16406 	movc	a,@a+dptr
      0066F3 B5 54 0B         [24]16407 	cjne	a,(_phut + 0x0003),00300$
      0066F6 90 F2 07         [24]16408 	mov	dptr,#_eep_gio4
      0066F9 E4               [12]16409 	clr	a
      0066FA 93               [24]16410 	movc	a,@a+dptr
      0066FB FD               [12]16411 	mov	r5,a
      0066FC B5 50 02         [24]16412 	cjne	a,(_gio + 0x0003),02522$
      0066FF 80 0D            [24]16413 	sjmp	00301$
      006701                      16414 02522$:
      006701                      16415 00300$:
      006701 C0 07            [24]16416 	push	ar7
      006703 C0 06            [24]16417 	push	ar6
      006705 12 0F 81         [24]16418 	lcall	_luu_gio_kim
      006708 D0 06            [24]16419 	pop	ar6
      00670A D0 07            [24]16420 	pop	ar7
      00670C 80 70            [24]16421 	sjmp	00302$
      00670E                      16422 00301$:
                                  16423 ;	src\main.c:448: else if(so_motor>2 && (eep_phut3!=phut[2] || eep_gio3!=gio[2])) luu_gio_kim();
      00670E 90 01 2F         [24]16424 	mov	dptr,#_so_motor
      006711 E0               [24]16425 	movx	a,@dptr
      006712 FD               [12]16426 	mov  r5,a
      006713 24 FD            [12]16427 	add	a,#0xff - 0x02
      006715 50 20            [24]16428 	jnc	00296$
      006717 90 F2 04         [24]16429 	mov	dptr,#_eep_phut3
      00671A E4               [12]16430 	clr	a
      00671B 93               [24]16431 	movc	a,@a+dptr
      00671C B5 53 0B         [24]16432 	cjne	a,(_phut + 0x0002),00295$
      00671F 90 F2 05         [24]16433 	mov	dptr,#_eep_gio3
      006722 E4               [12]16434 	clr	a
      006723 93               [24]16435 	movc	a,@a+dptr
      006724 FD               [12]16436 	mov	r5,a
      006725 B5 4F 02         [24]16437 	cjne	a,(_gio + 0x0002),02526$
      006728 80 0D            [24]16438 	sjmp	00296$
      00672A                      16439 02526$:
      00672A                      16440 00295$:
      00672A C0 07            [24]16441 	push	ar7
      00672C C0 06            [24]16442 	push	ar6
      00672E 12 0F 81         [24]16443 	lcall	_luu_gio_kim
      006731 D0 06            [24]16444 	pop	ar6
      006733 D0 07            [24]16445 	pop	ar7
      006735 80 47            [24]16446 	sjmp	00302$
      006737                      16447 00296$:
                                  16448 ;	src\main.c:449: else if(so_motor>1 && (eep_phut2!=phut[1] || eep_gio2!=gio[1])) luu_gio_kim();
      006737 90 01 2F         [24]16449 	mov	dptr,#_so_motor
      00673A E0               [24]16450 	movx	a,@dptr
      00673B FD               [12]16451 	mov  r5,a
      00673C 24 FE            [12]16452 	add	a,#0xff - 0x01
      00673E 50 20            [24]16453 	jnc	00291$
      006740 90 F2 02         [24]16454 	mov	dptr,#_eep_phut2
      006743 E4               [12]16455 	clr	a
      006744 93               [24]16456 	movc	a,@a+dptr
      006745 B5 52 0B         [24]16457 	cjne	a,(_phut + 0x0001),00290$
      006748 90 F2 03         [24]16458 	mov	dptr,#_eep_gio2
      00674B E4               [12]16459 	clr	a
      00674C 93               [24]16460 	movc	a,@a+dptr
      00674D FD               [12]16461 	mov	r5,a
      00674E B5 4E 02         [24]16462 	cjne	a,(_gio + 0x0001),02530$
      006751 80 0D            [24]16463 	sjmp	00291$
      006753                      16464 02530$:
      006753                      16465 00290$:
      006753 C0 07            [24]16466 	push	ar7
      006755 C0 06            [24]16467 	push	ar6
      006757 12 0F 81         [24]16468 	lcall	_luu_gio_kim
      00675A D0 06            [24]16469 	pop	ar6
      00675C D0 07            [24]16470 	pop	ar7
      00675E 80 1E            [24]16471 	sjmp	00302$
      006760                      16472 00291$:
                                  16473 ;	src\main.c:450: else if(eep_phut1!=phut[0] || eep_gio1!=gio[0]) luu_gio_kim();
      006760 90 F2 00         [24]16474 	mov	dptr,#_eep_phut1
      006763 E4               [12]16475 	clr	a
      006764 93               [24]16476 	movc	a,@a+dptr
      006765 B5 51 0B         [24]16477 	cjne	a,_phut,00287$
      006768 90 F2 01         [24]16478 	mov	dptr,#_eep_gio1
      00676B E4               [12]16479 	clr	a
      00676C 93               [24]16480 	movc	a,@a+dptr
      00676D FD               [12]16481 	mov	r5,a
      00676E B5 4D 02         [24]16482 	cjne	a,_gio,02533$
      006771 80 0B            [24]16483 	sjmp	00302$
      006773                      16484 02533$:
      006773                      16485 00287$:
      006773 C0 07            [24]16486 	push	ar7
      006775 C0 06            [24]16487 	push	ar6
      006777 12 0F 81         [24]16488 	lcall	_luu_gio_kim
      00677A D0 06            [24]16489 	pop	ar6
      00677C D0 07            [24]16490 	pop	ar7
      00677E                      16491 00302$:
                                  16492 ;	src\main.c:452: if(!mode_wait || !mode) {
      00677E 90 00 F6         [24]16493 	mov	dptr,#_mode_wait
      006781 E0               [24]16494 	movx	a,@dptr
      006782 60 06            [24]16495 	jz	00309$
      006784 90 00 F4         [24]16496 	mov	dptr,#_mode
      006787 E0               [24]16497 	movx	a,@dptr
      006788 70 2B            [24]16498 	jnz	00310$
      00678A                      16499 00309$:
                                  16500 ;	src\main.c:453: mode=0;
      00678A 90 00 F4         [24]16501 	mov	dptr,#_mode
      00678D E4               [12]16502 	clr	a
      00678E F0               [24]16503 	movx	@dptr,a
                                  16504 ;	src\main.c:454: if(motor_index  == 5) motor_index  = motor_run_check();
      00678F 74 05            [12]16505 	mov	a,#0x05
      006791 B5 56 0E         [24]16506 	cjne	a,_motor_index,00306$
      006794 C0 07            [24]16507 	push	ar7
      006796 C0 06            [24]16508 	push	ar6
      006798 12 0A 8C         [24]16509 	lcall	_motor_run_check
      00679B 85 82 56         [24]16510 	mov	_motor_index,dpl
      00679E D0 06            [24]16511 	pop	ar6
      0067A0 D0 07            [24]16512 	pop	ar7
      0067A2                      16513 00306$:
                                  16514 ;	src\main.c:455: if(motor_index2 == 5) motor_index2 = motor_run_check2();
      0067A2 74 05            [12]16515 	mov	a,#0x05
      0067A4 B5 57 0E         [24]16516 	cjne	a,_motor_index2,00310$
      0067A7 C0 07            [24]16517 	push	ar7
      0067A9 C0 06            [24]16518 	push	ar6
      0067AB 12 0D 04         [24]16519 	lcall	_motor_run_check2
      0067AE 85 82 57         [24]16520 	mov	_motor_index2,dpl
      0067B1 D0 06            [24]16521 	pop	ar6
      0067B3 D0 07            [24]16522 	pop	ar7
      0067B5                      16523 00310$:
                                  16524 ;	src\main.c:458: if(phut_out){
                                  16525 ;	src\main.c:459: phut_out = 0;
                                  16526 ;	assignBit
      0067B5 10 1F 03         [24]16527 	jbc	_phut_out,02540$
      0067B8 02 69 1F         [24]16528 	ljmp	00313$
      0067BB                      16529 02540$:
                                  16530 ;	src\main.c:460: send_gsm_cmd("***stc");
      0067BB 90 91 09         [24]16531 	mov	dptr,#___str_142
      0067BE 75 F0 80         [24]16532 	mov	b,#0x80
      0067C1 C0 07            [24]16533 	push	ar7
      0067C3 C0 06            [24]16534 	push	ar6
      0067C5 12 03 CD         [24]16535 	lcall	_send_gsm_cmd
                                  16536 ;	src\main.c:461: send_gsm_byte(day/10+'0');
      0067C8 90 00 DE         [24]16537 	mov	dptr,#_day
      0067CB E0               [24]16538 	movx	a,@dptr
      0067CC FD               [12]16539 	mov	r5,a
      0067CD 7C 00            [12]16540 	mov	r4,#0x00
      0067CF 75 1B 0A         [24]16541 	mov	__divsint_PARM_2,#0x0a
                                  16542 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      0067D2 8C 1C            [24]16543 	mov	(__divsint_PARM_2 + 1),r4
      0067D4 8D 82            [24]16544 	mov	dpl,r5
      0067D6 8C 83            [24]16545 	mov	dph,r4
      0067D8 12 84 9D         [24]16546 	lcall	__divsint
      0067DB AC 82            [24]16547 	mov	r4,dpl
      0067DD 74 30            [12]16548 	mov	a,#0x30
      0067DF 2C               [12]16549 	add	a,r4
      0067E0 F5 82            [12]16550 	mov	dpl,a
      0067E2 12 03 B8         [24]16551 	lcall	_send_gsm_byte
                                  16552 ;	src\main.c:462: send_gsm_byte(day%10+'0');
      0067E5 90 00 DE         [24]16553 	mov	dptr,#_day
      0067E8 E0               [24]16554 	movx	a,@dptr
      0067E9 FD               [12]16555 	mov	r5,a
      0067EA 7C 00            [12]16556 	mov	r4,#0x00
      0067EC 75 1B 0A         [24]16557 	mov	__modsint_PARM_2,#0x0a
                                  16558 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0067EF 8C 1C            [24]16559 	mov	(__modsint_PARM_2 + 1),r4
      0067F1 8D 82            [24]16560 	mov	dpl,r5
      0067F3 8C 83            [24]16561 	mov	dph,r4
      0067F5 12 84 67         [24]16562 	lcall	__modsint
      0067F8 AC 82            [24]16563 	mov	r4,dpl
      0067FA 74 30            [12]16564 	mov	a,#0x30
      0067FC 2C               [12]16565 	add	a,r4
      0067FD F5 82            [12]16566 	mov	dpl,a
      0067FF 12 03 B8         [24]16567 	lcall	_send_gsm_byte
                                  16568 ;	src\main.c:463: send_gsm_byte(month/10+'0');
      006802 90 00 DF         [24]16569 	mov	dptr,#_month
      006805 E0               [24]16570 	movx	a,@dptr
      006806 FD               [12]16571 	mov	r5,a
      006807 7C 00            [12]16572 	mov	r4,#0x00
      006809 75 1B 0A         [24]16573 	mov	__divsint_PARM_2,#0x0a
                                  16574 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      00680C 8C 1C            [24]16575 	mov	(__divsint_PARM_2 + 1),r4
      00680E 8D 82            [24]16576 	mov	dpl,r5
      006810 8C 83            [24]16577 	mov	dph,r4
      006812 12 84 9D         [24]16578 	lcall	__divsint
      006815 AC 82            [24]16579 	mov	r4,dpl
      006817 74 30            [12]16580 	mov	a,#0x30
      006819 2C               [12]16581 	add	a,r4
      00681A F5 82            [12]16582 	mov	dpl,a
      00681C 12 03 B8         [24]16583 	lcall	_send_gsm_byte
                                  16584 ;	src\main.c:464: send_gsm_byte(month%10+'0');
      00681F 90 00 DF         [24]16585 	mov	dptr,#_month
      006822 E0               [24]16586 	movx	a,@dptr
      006823 FD               [12]16587 	mov	r5,a
      006824 7C 00            [12]16588 	mov	r4,#0x00
      006826 75 1B 0A         [24]16589 	mov	__modsint_PARM_2,#0x0a
                                  16590 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      006829 8C 1C            [24]16591 	mov	(__modsint_PARM_2 + 1),r4
      00682B 8D 82            [24]16592 	mov	dpl,r5
      00682D 8C 83            [24]16593 	mov	dph,r4
      00682F 12 84 67         [24]16594 	lcall	__modsint
      006832 AC 82            [24]16595 	mov	r4,dpl
      006834 74 30            [12]16596 	mov	a,#0x30
      006836 2C               [12]16597 	add	a,r4
      006837 F5 82            [12]16598 	mov	dpl,a
      006839 12 03 B8         [24]16599 	lcall	_send_gsm_byte
                                  16600 ;	src\main.c:465: send_gsm_byte(year/10+'0');
      00683C 90 00 E0         [24]16601 	mov	dptr,#_year
      00683F E0               [24]16602 	movx	a,@dptr
      006840 FD               [12]16603 	mov	r5,a
      006841 7C 00            [12]16604 	mov	r4,#0x00
      006843 75 1B 0A         [24]16605 	mov	__divsint_PARM_2,#0x0a
                                  16606 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      006846 8C 1C            [24]16607 	mov	(__divsint_PARM_2 + 1),r4
      006848 8D 82            [24]16608 	mov	dpl,r5
      00684A 8C 83            [24]16609 	mov	dph,r4
      00684C 12 84 9D         [24]16610 	lcall	__divsint
      00684F AC 82            [24]16611 	mov	r4,dpl
      006851 74 30            [12]16612 	mov	a,#0x30
      006853 2C               [12]16613 	add	a,r4
      006854 F5 82            [12]16614 	mov	dpl,a
      006856 12 03 B8         [24]16615 	lcall	_send_gsm_byte
                                  16616 ;	src\main.c:466: send_gsm_byte(year%10+'0');
      006859 90 00 E0         [24]16617 	mov	dptr,#_year
      00685C E0               [24]16618 	movx	a,@dptr
      00685D FD               [12]16619 	mov	r5,a
      00685E 7C 00            [12]16620 	mov	r4,#0x00
      006860 75 1B 0A         [24]16621 	mov	__modsint_PARM_2,#0x0a
                                  16622 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      006863 8C 1C            [24]16623 	mov	(__modsint_PARM_2 + 1),r4
      006865 8D 82            [24]16624 	mov	dpl,r5
      006867 8C 83            [24]16625 	mov	dph,r4
      006869 12 84 67         [24]16626 	lcall	__modsint
      00686C AC 82            [24]16627 	mov	r4,dpl
      00686E 74 30            [12]16628 	mov	a,#0x30
      006870 2C               [12]16629 	add	a,r4
      006871 F5 82            [12]16630 	mov	dpl,a
      006873 12 03 B8         [24]16631 	lcall	_send_gsm_byte
                                  16632 ;	src\main.c:467: send_gsm_byte(hour/10+'0');
      006876 AC 4B            [24]16633 	mov	r4,_hour
      006878 7D 00            [12]16634 	mov	r5,#0x00
      00687A 75 1B 0A         [24]16635 	mov	__divsint_PARM_2,#0x0a
                                  16636 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      00687D 8D 1C            [24]16637 	mov	(__divsint_PARM_2 + 1),r5
      00687F 8C 82            [24]16638 	mov	dpl,r4
      006881 8D 83            [24]16639 	mov	dph,r5
      006883 12 84 9D         [24]16640 	lcall	__divsint
      006886 AC 82            [24]16641 	mov	r4,dpl
      006888 74 30            [12]16642 	mov	a,#0x30
      00688A 2C               [12]16643 	add	a,r4
      00688B F5 82            [12]16644 	mov	dpl,a
      00688D 12 03 B8         [24]16645 	lcall	_send_gsm_byte
                                  16646 ;	src\main.c:468: send_gsm_byte(hour%10+'0');
      006890 AC 4B            [24]16647 	mov	r4,_hour
      006892 7D 00            [12]16648 	mov	r5,#0x00
      006894 75 1B 0A         [24]16649 	mov	__modsint_PARM_2,#0x0a
                                  16650 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      006897 8D 1C            [24]16651 	mov	(__modsint_PARM_2 + 1),r5
      006899 8C 82            [24]16652 	mov	dpl,r4
      00689B 8D 83            [24]16653 	mov	dph,r5
      00689D 12 84 67         [24]16654 	lcall	__modsint
      0068A0 AC 82            [24]16655 	mov	r4,dpl
      0068A2 74 30            [12]16656 	mov	a,#0x30
      0068A4 2C               [12]16657 	add	a,r4
      0068A5 F5 82            [12]16658 	mov	dpl,a
      0068A7 12 03 B8         [24]16659 	lcall	_send_gsm_byte
                                  16660 ;	src\main.c:469: send_gsm_byte(minute/10+'0');
      0068AA AC 4A            [24]16661 	mov	r4,_minute
      0068AC 7D 00            [12]16662 	mov	r5,#0x00
      0068AE 75 1B 0A         [24]16663 	mov	__divsint_PARM_2,#0x0a
                                  16664 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      0068B1 8D 1C            [24]16665 	mov	(__divsint_PARM_2 + 1),r5
      0068B3 8C 82            [24]16666 	mov	dpl,r4
      0068B5 8D 83            [24]16667 	mov	dph,r5
      0068B7 12 84 9D         [24]16668 	lcall	__divsint
      0068BA AC 82            [24]16669 	mov	r4,dpl
      0068BC 74 30            [12]16670 	mov	a,#0x30
      0068BE 2C               [12]16671 	add	a,r4
      0068BF F5 82            [12]16672 	mov	dpl,a
      0068C1 12 03 B8         [24]16673 	lcall	_send_gsm_byte
                                  16674 ;	src\main.c:470: send_gsm_byte(minute%10+'0');
      0068C4 AC 4A            [24]16675 	mov	r4,_minute
      0068C6 7D 00            [12]16676 	mov	r5,#0x00
      0068C8 75 1B 0A         [24]16677 	mov	__modsint_PARM_2,#0x0a
                                  16678 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0068CB 8D 1C            [24]16679 	mov	(__modsint_PARM_2 + 1),r5
      0068CD 8C 82            [24]16680 	mov	dpl,r4
      0068CF 8D 83            [24]16681 	mov	dph,r5
      0068D1 12 84 67         [24]16682 	lcall	__modsint
      0068D4 AC 82            [24]16683 	mov	r4,dpl
      0068D6 74 30            [12]16684 	mov	a,#0x30
      0068D8 2C               [12]16685 	add	a,r4
      0068D9 F5 82            [12]16686 	mov	dpl,a
      0068DB 12 03 B8         [24]16687 	lcall	_send_gsm_byte
                                  16688 ;	src\main.c:471: send_gsm_byte(second/10+'0');
      0068DE AC 49            [24]16689 	mov	r4,_second
      0068E0 7D 00            [12]16690 	mov	r5,#0x00
      0068E2 75 1B 0A         [24]16691 	mov	__divsint_PARM_2,#0x0a
                                  16692 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      0068E5 8D 1C            [24]16693 	mov	(__divsint_PARM_2 + 1),r5
      0068E7 8C 82            [24]16694 	mov	dpl,r4
      0068E9 8D 83            [24]16695 	mov	dph,r5
      0068EB 12 84 9D         [24]16696 	lcall	__divsint
      0068EE AC 82            [24]16697 	mov	r4,dpl
      0068F0 74 30            [12]16698 	mov	a,#0x30
      0068F2 2C               [12]16699 	add	a,r4
      0068F3 F5 82            [12]16700 	mov	dpl,a
      0068F5 12 03 B8         [24]16701 	lcall	_send_gsm_byte
                                  16702 ;	src\main.c:472: send_gsm_byte(second%10+'0');
      0068F8 AC 49            [24]16703 	mov	r4,_second
      0068FA 7D 00            [12]16704 	mov	r5,#0x00
      0068FC 75 1B 0A         [24]16705 	mov	__modsint_PARM_2,#0x0a
                                  16706 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0068FF 8D 1C            [24]16707 	mov	(__modsint_PARM_2 + 1),r5
      006901 8C 82            [24]16708 	mov	dpl,r4
      006903 8D 83            [24]16709 	mov	dph,r5
      006905 12 84 67         [24]16710 	lcall	__modsint
      006908 AC 82            [24]16711 	mov	r4,dpl
      00690A 74 30            [12]16712 	mov	a,#0x30
      00690C 2C               [12]16713 	add	a,r4
      00690D F5 82            [12]16714 	mov	dpl,a
      00690F 12 03 B8         [24]16715 	lcall	_send_gsm_byte
                                  16716 ;	src\main.c:473: send_gsm_cmd("###\r\n");
      006912 90 91 10         [24]16717 	mov	dptr,#___str_143
      006915 75 F0 80         [24]16718 	mov	b,#0x80
      006918 12 03 CD         [24]16719 	lcall	_send_gsm_cmd
      00691B D0 06            [24]16720 	pop	ar6
      00691D D0 07            [24]16721 	pop	ar7
      00691F                      16722 00313$:
                                  16723 ;	src\main.c:475: if(!bao_cao_dien_ap_thap && dien_ap_thap){
      00691F 20 3E 2E         [24]16724 	jb	_bao_cao_dien_ap_thap,00317$
      006922 30 02 2B         [24]16725 	jnb	_dien_ap_thap,00317$
                                  16726 ;	src\main.c:476: baocaosms(CHINH,"\rdien ap thap");
                                  16727 ;	assignBit
      006925 D2 46            [12]16728 	setb	_baocaosms_PARM_1
      006927 90 91 16         [24]16729 	mov	dptr,#___str_144
      00692A 75 F0 80         [24]16730 	mov	b,#0x80
      00692D C0 07            [24]16731 	push	ar7
      00692F C0 06            [24]16732 	push	ar6
      006931 12 20 30         [24]16733 	lcall	_baocaosms
      006934 D0 06            [24]16734 	pop	ar6
      006936 D0 07            [24]16735 	pop	ar7
                                  16736 ;	src\main.c:477: if(bat_phone_phu)baocaosms(PHU,"\rdien ap thap");
      006938 30 0A 13         [24]16737 	jnb	_bat_phone_phu,00315$
                                  16738 ;	assignBit
      00693B C2 46            [12]16739 	clr	_baocaosms_PARM_1
      00693D 90 91 16         [24]16740 	mov	dptr,#___str_144
      006940 75 F0 80         [24]16741 	mov	b,#0x80
      006943 C0 07            [24]16742 	push	ar7
      006945 C0 06            [24]16743 	push	ar6
      006947 12 20 30         [24]16744 	lcall	_baocaosms
      00694A D0 06            [24]16745 	pop	ar6
      00694C D0 07            [24]16746 	pop	ar7
      00694E                      16747 00315$:
                                  16748 ;	src\main.c:478: bao_cao_dien_ap_thap = 1;
                                  16749 ;	assignBit
      00694E D2 3E            [12]16750 	setb	_bao_cao_dien_ap_thap
      006950                      16751 00317$:
                                  16752 ;	src\main.c:480: if(bao_cao_dien_ap_thap && !dien_ap_thap){
      006950 30 3E 2E         [24]16753 	jnb	_bao_cao_dien_ap_thap,00322$
      006953 20 02 2B         [24]16754 	jb	_dien_ap_thap,00322$
                                  16755 ;	src\main.c:481: baocaosms(CHINH,"\rdien ap khoi phuc");
                                  16756 ;	assignBit
      006956 D2 46            [12]16757 	setb	_baocaosms_PARM_1
      006958 90 91 24         [24]16758 	mov	dptr,#___str_145
      00695B 75 F0 80         [24]16759 	mov	b,#0x80
      00695E C0 07            [24]16760 	push	ar7
      006960 C0 06            [24]16761 	push	ar6
      006962 12 20 30         [24]16762 	lcall	_baocaosms
      006965 D0 06            [24]16763 	pop	ar6
      006967 D0 07            [24]16764 	pop	ar7
                                  16765 ;	src\main.c:482: if(bat_phone_phu)baocaosms(PHU,"\rdien ap khoi phuc");
      006969 30 0A 13         [24]16766 	jnb	_bat_phone_phu,00320$
                                  16767 ;	assignBit
      00696C C2 46            [12]16768 	clr	_baocaosms_PARM_1
      00696E 90 91 24         [24]16769 	mov	dptr,#___str_145
      006971 75 F0 80         [24]16770 	mov	b,#0x80
      006974 C0 07            [24]16771 	push	ar7
      006976 C0 06            [24]16772 	push	ar6
      006978 12 20 30         [24]16773 	lcall	_baocaosms
      00697B D0 06            [24]16774 	pop	ar6
      00697D D0 07            [24]16775 	pop	ar7
      00697F                      16776 00320$:
                                  16777 ;	src\main.c:483: bao_cao_dien_ap_thap = 0;
                                  16778 ;	assignBit
      00697F C2 3E            [12]16779 	clr	_bao_cao_dien_ap_thap
      006981                      16780 00322$:
                                  16781 ;	src\main.c:485: if(!xung_giay_check && !mat_xung_giay){
      006981 90 00 E7         [24]16782 	mov	dptr,#_xung_giay_check
      006984 E0               [24]16783 	movx	a,@dptr
      006985 70 18            [24]16784 	jnz	00325$
      006987 20 38 15         [24]16785 	jb	_mat_xung_giay,00325$
                                  16786 ;	src\main.c:486: mat_xung_giay = 1;
                                  16787 ;	assignBit
      00698A D2 38            [12]16788 	setb	_mat_xung_giay
                                  16789 ;	src\main.c:487: baocaosms(CHINH,"\rmat xung giay");
                                  16790 ;	assignBit
      00698C D2 46            [12]16791 	setb	_baocaosms_PARM_1
      00698E 90 91 37         [24]16792 	mov	dptr,#___str_146
      006991 75 F0 80         [24]16793 	mov	b,#0x80
      006994 C0 07            [24]16794 	push	ar7
      006996 C0 06            [24]16795 	push	ar6
      006998 12 20 30         [24]16796 	lcall	_baocaosms
      00699B D0 06            [24]16797 	pop	ar6
      00699D D0 07            [24]16798 	pop	ar7
      00699F                      16799 00325$:
                                  16800 ;	src\main.c:490: if(!thoi_gian_doi_doc_cam[0] && !loi_cam_motor1){
      00699F 90 00 E8         [24]16801 	mov	dptr,#_thoi_gian_doi_doc_cam
      0069A2 E0               [24]16802 	movx	a,@dptr
      0069A3 70 2E            [24]16803 	jnz	00330$
      0069A5 20 39 2B         [24]16804 	jb	_loi_cam_motor1,00330$
                                  16805 ;	src\main.c:491: loi_cam_motor1 = 1;
                                  16806 ;	assignBit
      0069A8 D2 39            [12]16807 	setb	_loi_cam_motor1
                                  16808 ;	src\main.c:492: baocaosms(CHINH,"\rloi doc cam 1");
                                  16809 ;	assignBit
      0069AA D2 46            [12]16810 	setb	_baocaosms_PARM_1
      0069AC 90 91 46         [24]16811 	mov	dptr,#___str_147
      0069AF 75 F0 80         [24]16812 	mov	b,#0x80
      0069B2 C0 07            [24]16813 	push	ar7
      0069B4 C0 06            [24]16814 	push	ar6
      0069B6 12 20 30         [24]16815 	lcall	_baocaosms
      0069B9 D0 06            [24]16816 	pop	ar6
      0069BB D0 07            [24]16817 	pop	ar7
                                  16818 ;	src\main.c:493: if(bat_phone_phu)baocaosms(PHU,"\rloi doc cam 1");
      0069BD 30 0A 13         [24]16819 	jnb	_bat_phone_phu,00330$
                                  16820 ;	assignBit
      0069C0 C2 46            [12]16821 	clr	_baocaosms_PARM_1
      0069C2 90 91 46         [24]16822 	mov	dptr,#___str_147
      0069C5 75 F0 80         [24]16823 	mov	b,#0x80
      0069C8 C0 07            [24]16824 	push	ar7
      0069CA C0 06            [24]16825 	push	ar6
      0069CC 12 20 30         [24]16826 	lcall	_baocaosms
      0069CF D0 06            [24]16827 	pop	ar6
      0069D1 D0 07            [24]16828 	pop	ar7
      0069D3                      16829 00330$:
                                  16830 ;	src\main.c:495: if(so_motor>1 && !thoi_gian_doi_doc_cam[1] && !loi_cam_motor2){
      0069D3 90 01 2F         [24]16831 	mov	dptr,#_so_motor
      0069D6 E0               [24]16832 	movx	a,@dptr
      0069D7 FD               [12]16833 	mov  r5,a
      0069D8 24 FE            [12]16834 	add	a,#0xff - 0x01
      0069DA 50 34            [24]16835 	jnc	00335$
      0069DC 90 00 E9         [24]16836 	mov	dptr,#(_thoi_gian_doi_doc_cam + 0x0001)
      0069DF E0               [24]16837 	movx	a,@dptr
      0069E0 70 2E            [24]16838 	jnz	00335$
      0069E2 20 3A 2B         [24]16839 	jb	_loi_cam_motor2,00335$
                                  16840 ;	src\main.c:496: loi_cam_motor2 = 1;
                                  16841 ;	assignBit
      0069E5 D2 3A            [12]16842 	setb	_loi_cam_motor2
                                  16843 ;	src\main.c:497: baocaosms(CHINH,"\rloi doc cam 2");
                                  16844 ;	assignBit
      0069E7 D2 46            [12]16845 	setb	_baocaosms_PARM_1
      0069E9 90 91 55         [24]16846 	mov	dptr,#___str_148
      0069EC 75 F0 80         [24]16847 	mov	b,#0x80
      0069EF C0 07            [24]16848 	push	ar7
      0069F1 C0 06            [24]16849 	push	ar6
      0069F3 12 20 30         [24]16850 	lcall	_baocaosms
      0069F6 D0 06            [24]16851 	pop	ar6
      0069F8 D0 07            [24]16852 	pop	ar7
                                  16853 ;	src\main.c:498: if(bat_phone_phu)baocaosms(PHU,"\rloi doc cam 2");
      0069FA 30 0A 13         [24]16854 	jnb	_bat_phone_phu,00335$
                                  16855 ;	assignBit
      0069FD C2 46            [12]16856 	clr	_baocaosms_PARM_1
      0069FF 90 91 55         [24]16857 	mov	dptr,#___str_148
      006A02 75 F0 80         [24]16858 	mov	b,#0x80
      006A05 C0 07            [24]16859 	push	ar7
      006A07 C0 06            [24]16860 	push	ar6
      006A09 12 20 30         [24]16861 	lcall	_baocaosms
      006A0C D0 06            [24]16862 	pop	ar6
      006A0E D0 07            [24]16863 	pop	ar7
      006A10                      16864 00335$:
                                  16865 ;	src\main.c:500: if(so_motor>2 && !thoi_gian_doi_doc_cam[2] && !loi_cam_motor3){
      006A10 90 01 2F         [24]16866 	mov	dptr,#_so_motor
      006A13 E0               [24]16867 	movx	a,@dptr
      006A14 FD               [12]16868 	mov  r5,a
      006A15 24 FD            [12]16869 	add	a,#0xff - 0x02
      006A17 50 34            [24]16870 	jnc	00341$
      006A19 90 00 EA         [24]16871 	mov	dptr,#(_thoi_gian_doi_doc_cam + 0x0002)
      006A1C E0               [24]16872 	movx	a,@dptr
      006A1D 70 2E            [24]16873 	jnz	00341$
      006A1F 20 3B 2B         [24]16874 	jb	_loi_cam_motor3,00341$
                                  16875 ;	src\main.c:501: loi_cam_motor3 = 1;
                                  16876 ;	assignBit
      006A22 D2 3B            [12]16877 	setb	_loi_cam_motor3
                                  16878 ;	src\main.c:502: baocaosms(CHINH,"\rloi doc cam 3");
                                  16879 ;	assignBit
      006A24 D2 46            [12]16880 	setb	_baocaosms_PARM_1
      006A26 90 91 64         [24]16881 	mov	dptr,#___str_149
      006A29 75 F0 80         [24]16882 	mov	b,#0x80
      006A2C C0 07            [24]16883 	push	ar7
      006A2E C0 06            [24]16884 	push	ar6
      006A30 12 20 30         [24]16885 	lcall	_baocaosms
      006A33 D0 06            [24]16886 	pop	ar6
      006A35 D0 07            [24]16887 	pop	ar7
                                  16888 ;	src\main.c:503: if(bat_phone_phu)baocaosms(PHU,"\rloi doc cam 3");
      006A37 30 0A 13         [24]16889 	jnb	_bat_phone_phu,00341$
                                  16890 ;	assignBit
      006A3A C2 46            [12]16891 	clr	_baocaosms_PARM_1
      006A3C 90 91 64         [24]16892 	mov	dptr,#___str_149
      006A3F 75 F0 80         [24]16893 	mov	b,#0x80
      006A42 C0 07            [24]16894 	push	ar7
      006A44 C0 06            [24]16895 	push	ar6
      006A46 12 20 30         [24]16896 	lcall	_baocaosms
      006A49 D0 06            [24]16897 	pop	ar6
      006A4B D0 07            [24]16898 	pop	ar7
      006A4D                      16899 00341$:
                                  16900 ;	src\main.c:505: if(so_motor==4 && !thoi_gian_doi_doc_cam[3] && !loi_cam_motor4){
      006A4D 90 01 2F         [24]16901 	mov	dptr,#_so_motor
      006A50 E0               [24]16902 	movx	a,@dptr
      006A51 FD               [12]16903 	mov	r5,a
      006A52 BD 04 34         [24]16904 	cjne	r5,#0x04,00347$
      006A55 90 00 EB         [24]16905 	mov	dptr,#(_thoi_gian_doi_doc_cam + 0x0003)
      006A58 E0               [24]16906 	movx	a,@dptr
      006A59 70 2E            [24]16907 	jnz	00347$
      006A5B 20 3C 2B         [24]16908 	jb	_loi_cam_motor4,00347$
                                  16909 ;	src\main.c:506: loi_cam_motor4 = 1;
                                  16910 ;	assignBit
      006A5E D2 3C            [12]16911 	setb	_loi_cam_motor4
                                  16912 ;	src\main.c:507: baocaosms(CHINH,"\rloi doc cam 4");
                                  16913 ;	assignBit
      006A60 D2 46            [12]16914 	setb	_baocaosms_PARM_1
      006A62 90 91 73         [24]16915 	mov	dptr,#___str_150
      006A65 75 F0 80         [24]16916 	mov	b,#0x80
      006A68 C0 07            [24]16917 	push	ar7
      006A6A C0 06            [24]16918 	push	ar6
      006A6C 12 20 30         [24]16919 	lcall	_baocaosms
      006A6F D0 06            [24]16920 	pop	ar6
      006A71 D0 07            [24]16921 	pop	ar7
                                  16922 ;	src\main.c:508: if(bat_phone_phu)baocaosms(PHU,"\rloi doc cam 4");
      006A73 30 0A 13         [24]16923 	jnb	_bat_phone_phu,00347$
                                  16924 ;	assignBit
      006A76 C2 46            [12]16925 	clr	_baocaosms_PARM_1
      006A78 90 91 73         [24]16926 	mov	dptr,#___str_150
      006A7B 75 F0 80         [24]16927 	mov	b,#0x80
      006A7E C0 07            [24]16928 	push	ar7
      006A80 C0 06            [24]16929 	push	ar6
      006A82 12 20 30         [24]16930 	lcall	_baocaosms
      006A85 D0 06            [24]16931 	pop	ar6
      006A87 D0 07            [24]16932 	pop	ar7
      006A89                      16933 00347$:
                                  16934 ;	src\main.c:510: if(giay_out){
      006A89 20 1E 03         [24]16935 	jb	_giay_out,02565$
      006A8C 02 6B 5A         [24]16936 	ljmp	00374$
      006A8F                      16937 02565$:
                                  16938 ;	src\main.c:511: if(!gsm_pw){
      006A8F 20 A0 16         [24]16939 	jb	_P20,00353$
                                  16940 ;	src\main.c:512: if(!--gsm_delay_reset){
      006A92 90 00 B8         [24]16941 	mov	dptr,#_gsm_delay_reset
      006A95 E0               [24]16942 	movx	a,@dptr
      006A96 14               [12]16943 	dec	a
      006A97 F0               [24]16944 	movx	@dptr,a
      006A98 E0               [24]16945 	movx	a,@dptr
      006A99 70 0D            [24]16946 	jnz	00353$
                                  16947 ;	src\main.c:513: ADC_CONTR = 0x83;
      006A9B 75 BC 83         [24]16948 	mov	_ADC_CONTR,#0x83
                                  16949 ;	src\main.c:514: gsm_pw = 1;
                                  16950 ;	assignBit
      006A9E D2 A0            [12]16951 	setb	_P20
                                  16952 ;	src\main.c:515: gsm_delay_reset = 30;
      006AA0 90 00 B8         [24]16953 	mov	dptr,#_gsm_delay_reset
      006AA3 74 1E            [12]16954 	mov	a,#0x1e
      006AA5 F0               [24]16955 	movx	@dptr,a
                                  16956 ;	src\main.c:516: gsm_reset=1;
                                  16957 ;	assignBit
      006AA6 D2 05            [12]16958 	setb	_gsm_reset
      006AA8                      16959 00353$:
                                  16960 ;	src\main.c:519: if(delay_ve_kim && !canhkim && !--delay_ve_kim){
      006AA8 90 00 E3         [24]16961 	mov	dptr,#_delay_ve_kim
      006AAB E0               [24]16962 	movx	a,@dptr
      006AAC FD               [12]16963 	mov	r5,a
      006AAD E0               [24]16964 	movx	a,@dptr
      006AAE 60 2D            [24]16965 	jz	00355$
      006AB0 90 00 E1         [24]16966 	mov	dptr,#_canhkim
      006AB3 E0               [24]16967 	movx	a,@dptr
      006AB4 70 27            [24]16968 	jnz	00355$
      006AB6 ED               [12]16969 	mov	a,r5
      006AB7 14               [12]16970 	dec	a
      006AB8 90 00 E3         [24]16971 	mov	dptr,#_delay_ve_kim
      006ABB F0               [24]16972 	movx	@dptr,a
      006ABC E0               [24]16973 	movx	a,@dptr
      006ABD 70 1E            [24]16974 	jnz	00355$
                                  16975 ;	src\main.c:520: canhkim = 5;
      006ABF 90 00 E1         [24]16976 	mov	dptr,#_canhkim
      006AC2 74 05            [12]16977 	mov	a,#0x05
      006AC4 F0               [24]16978 	movx	@dptr,a
                                  16979 ;	src\main.c:521: delay_ve_kim = 5;
      006AC5 90 00 E3         [24]16980 	mov	dptr,#_delay_ve_kim
      006AC8 F0               [24]16981 	movx	@dptr,a
                                  16982 ;	src\main.c:522: motor_index  = motor_run_check();
      006AC9 C0 07            [24]16983 	push	ar7
      006ACB C0 06            [24]16984 	push	ar6
      006ACD 12 0A 8C         [24]16985 	lcall	_motor_run_check
      006AD0 85 82 56         [24]16986 	mov	_motor_index,dpl
                                  16987 ;	src\main.c:523: motor_index2 = motor_run_check2();
      006AD3 12 0D 04         [24]16988 	lcall	_motor_run_check2
      006AD6 85 82 57         [24]16989 	mov	_motor_index2,dpl
      006AD9 D0 06            [24]16990 	pop	ar6
      006ADB D0 07            [24]16991 	pop	ar7
      006ADD                      16992 00355$:
                                  16993 ;	src\main.c:526: if(motor_index!=5 && thoi_gian_doi_doc_cam[motor_index] && !--thoi_gian_doi_doc_cam[motor_index]){ cam_vao = cam_vao_han = 0;motor_index = 5;}
      006ADD 74 05            [12]16994 	mov	a,#0x05
      006ADF B5 56 02         [24]16995 	cjne	a,_motor_index,02571$
      006AE2 80 22            [24]16996 	sjmp	00359$
      006AE4                      16997 02571$:
      006AE4 E5 56            [12]16998 	mov	a,_motor_index
      006AE6 24 E8            [12]16999 	add	a,#_thoi_gian_doi_doc_cam
      006AE8 FC               [12]17000 	mov	r4,a
      006AE9 E4               [12]17001 	clr	a
      006AEA 34 00            [12]17002 	addc	a,#(_thoi_gian_doi_doc_cam >> 8)
      006AEC FD               [12]17003 	mov	r5,a
      006AED 8C 82            [24]17004 	mov	dpl,r4
      006AEF 8D 83            [24]17005 	mov	dph,r5
      006AF1 E0               [24]17006 	movx	a,@dptr
      006AF2 FB               [12]17007 	mov	r3,a
      006AF3 60 11            [24]17008 	jz	00359$
      006AF5 1B               [12]17009 	dec	r3
      006AF6 8C 82            [24]17010 	mov	dpl,r4
      006AF8 8D 83            [24]17011 	mov	dph,r5
      006AFA EB               [12]17012 	mov	a,r3
      006AFB F0               [24]17013 	movx	@dptr,a
      006AFC EB               [12]17014 	mov	a,r3
      006AFD 70 07            [24]17015 	jnz	00359$
                                  17016 ;	assignBit
      006AFF C2 19            [12]17017 	clr	_cam_vao_han
                                  17018 ;	assignBit
      006B01 C2 17            [12]17019 	clr	_cam_vao
      006B03 75 56 05         [24]17020 	mov	_motor_index,#0x05
      006B06                      17021 00359$:
                                  17022 ;	src\main.c:527: if((motor_index2!=5)  && thoi_gian_doi_doc_cam[motor_index2] && !--thoi_gian_doi_doc_cam[motor_index2]){ cam_vao2 = cam_vao_han2 = 0;motor_index2 = 5;}
      006B06 74 05            [12]17023 	mov	a,#0x05
      006B08 B5 57 02         [24]17024 	cjne	a,_motor_index2,02574$
      006B0B 80 22            [24]17025 	sjmp	00363$
      006B0D                      17026 02574$:
      006B0D E5 57            [12]17027 	mov	a,_motor_index2
      006B0F 24 E8            [12]17028 	add	a,#_thoi_gian_doi_doc_cam
      006B11 FC               [12]17029 	mov	r4,a
      006B12 E4               [12]17030 	clr	a
      006B13 34 00            [12]17031 	addc	a,#(_thoi_gian_doi_doc_cam >> 8)
      006B15 FD               [12]17032 	mov	r5,a
      006B16 8C 82            [24]17033 	mov	dpl,r4
      006B18 8D 83            [24]17034 	mov	dph,r5
      006B1A E0               [24]17035 	movx	a,@dptr
      006B1B FB               [12]17036 	mov	r3,a
      006B1C 60 11            [24]17037 	jz	00363$
      006B1E 1B               [12]17038 	dec	r3
      006B1F 8C 82            [24]17039 	mov	dpl,r4
      006B21 8D 83            [24]17040 	mov	dph,r5
      006B23 EB               [12]17041 	mov	a,r3
      006B24 F0               [24]17042 	movx	@dptr,a
      006B25 EB               [12]17043 	mov	a,r3
      006B26 70 07            [24]17044 	jnz	00363$
                                  17045 ;	assignBit
      006B28 C2 1A            [12]17046 	clr	_cam_vao_han2
                                  17047 ;	assignBit
      006B2A C2 18            [12]17048 	clr	_cam_vao2
      006B2C 75 57 05         [24]17049 	mov	_motor_index2,#0x05
      006B2F                      17050 00363$:
                                  17051 ;	src\main.c:529: if(mode_wait && (!(eep_mp3%4) || !mp3_playing)) mode_wait--;
      006B2F 90 00 F6         [24]17052 	mov	dptr,#_mode_wait
      006B32 E0               [24]17053 	movx	a,@dptr
      006B33 60 12            [24]17054 	jz	00367$
      006B35 90 F0 10         [24]17055 	mov	dptr,#_eep_mp3
      006B38 E4               [12]17056 	clr	a
      006B39 93               [24]17057 	movc	a,@a+dptr
      006B3A 54 03            [12]17058 	anl	a,#0x03
      006B3C 60 03            [24]17059 	jz	00366$
      006B3E 20 92 06         [24]17060 	jb	_P12,00367$
      006B41                      17061 00366$:
      006B41 90 00 F6         [24]17062 	mov	dptr,#_mode_wait
      006B44 E0               [24]17063 	movx	a,@dptr
      006B45 14               [12]17064 	dec	a
      006B46 F0               [24]17065 	movx	@dptr,a
      006B47                      17066 00367$:
                                  17067 ;	src\main.c:531: if(phim_mode_doi && phim_mode_giu){
      006B47 90 00 F1         [24]17068 	mov	dptr,#_phim_mode_doi
      006B4A E0               [24]17069 	movx	a,@dptr
      006B4B FD               [12]17070 	mov	r5,a
      006B4C E0               [24]17071 	movx	a,@dptr
      006B4D 60 09            [24]17072 	jz	00371$
      006B4F 30 24 06         [24]17073 	jnb	_phim_mode_giu,00371$
                                  17074 ;	src\main.c:532: phim_mode_doi--;
      006B52 ED               [12]17075 	mov	a,r5
      006B53 14               [12]17076 	dec	a
      006B54 90 00 F1         [24]17077 	mov	dptr,#_phim_mode_doi
      006B57 F0               [24]17078 	movx	@dptr,a
      006B58                      17079 00371$:
                                  17080 ;	src\main.c:534: giay_out=0;
                                  17081 ;	assignBit
      006B58 C2 1E            [12]17082 	clr	_giay_out
      006B5A                      17083 00374$:
                                  17084 ;	src\main.c:537: kiem_tra_den();
      006B5A C0 07            [24]17085 	push	ar7
      006B5C C0 06            [24]17086 	push	ar6
      006B5E 12 08 A4         [24]17087 	lcall	_kiem_tra_den
      006B61 D0 06            [24]17088 	pop	ar6
      006B63 D0 07            [24]17089 	pop	ar7
                                  17090 ;	src\main.c:539: if(!mode && (eep_mp3%4)==2) kiem_tra_nhac();
      006B65 90 00 F4         [24]17091 	mov	dptr,#_mode
      006B68 E0               [24]17092 	movx	a,@dptr
      006B69 70 1B            [24]17093 	jnz	00376$
      006B6B 90 F0 10         [24]17094 	mov	dptr,#_eep_mp3
      006B6E E4               [12]17095 	clr	a
      006B6F 93               [24]17096 	movc	a,@a+dptr
      006B70 54 03            [12]17097 	anl	a,#0x03
      006B72 FC               [12]17098 	mov	r4,a
      006B73 7D 00            [12]17099 	mov	r5,#0x00
      006B75 BC 02 0E         [24]17100 	cjne	r4,#0x02,00376$
      006B78 BD 00 0B         [24]17101 	cjne	r5,#0x00,00376$
      006B7B C0 07            [24]17102 	push	ar7
      006B7D C0 06            [24]17103 	push	ar6
      006B7F 12 09 EB         [24]17104 	lcall	_kiem_tra_nhac
      006B82 D0 06            [24]17105 	pop	ar6
      006B84 D0 07            [24]17106 	pop	ar7
      006B86                      17107 00376$:
                                  17108 ;	src\main.c:542: if(((eep_ngayreset && !ngay_reset_con_lai && eep_gioreset==hour && minute>5) || so_lan_goi_dien > 1)  && motor_index==5 && motor_index2==5 && (!(eep_mp3%4) || !mp3_playing)){
      006B86 90 F0 03         [24]17109 	mov	dptr,#_eep_ngayreset
      006B89 E4               [12]17110 	clr	a
      006B8A 93               [24]17111 	movc	a,@a+dptr
      006B8B 60 15            [24]17112 	jz	00387$
      006B8D 90 00 E6         [24]17113 	mov	dptr,#_ngay_reset_con_lai
      006B90 E0               [24]17114 	movx	a,@dptr
      006B91 70 0F            [24]17115 	jnz	00387$
      006B93 90 F0 04         [24]17116 	mov	dptr,#_eep_gioreset
      006B96 E4               [12]17117 	clr	a
      006B97 93               [24]17118 	movc	a,@a+dptr
      006B98 FD               [12]17119 	mov	r5,a
      006B99 B5 4B 06         [24]17120 	cjne	a,_hour,00387$
      006B9C E5 4A            [12]17121 	mov	a,_minute
      006B9E 24 FA            [12]17122 	add	a,#0xff - 0x05
      006BA0 40 09            [24]17123 	jc	00388$
      006BA2                      17124 00387$:
      006BA2 90 00 B9         [24]17125 	mov	dptr,#_so_lan_goi_dien
      006BA5 E0               [24]17126 	movx	a,@dptr
      006BA6 FD               [12]17127 	mov  r5,a
      006BA7 24 FE            [12]17128 	add	a,#0xff - 0x01
      006BA9 50 74            [24]17129 	jnc	00383$
      006BAB                      17130 00388$:
      006BAB 74 05            [12]17131 	mov	a,#0x05
      006BAD B5 56 6F         [24]17132 	cjne	a,_motor_index,00383$
      006BB0 74 05            [12]17133 	mov	a,#0x05
      006BB2 B5 57 6A         [24]17134 	cjne	a,_motor_index2,00383$
      006BB5 90 F0 10         [24]17135 	mov	dptr,#_eep_mp3
      006BB8 E4               [12]17136 	clr	a
      006BB9 93               [24]17137 	movc	a,@a+dptr
      006BBA 54 03            [12]17138 	anl	a,#0x03
      006BBC 60 03            [24]17139 	jz	00382$
      006BBE 20 92 5E         [24]17140 	jb	_P12,00383$
      006BC1                      17141 00382$:
                                  17142 ;	src\main.c:543: if(max_second<60)rtc_settime(eep_gioreset,6,0);
      006BC1 90 01 30         [24]17143 	mov	dptr,#_max_second
      006BC4 E0               [24]17144 	movx	a,@dptr
      006BC5 FD               [12]17145 	mov	r5,a
      006BC6 BD 3C 00         [24]17146 	cjne	r5,#0x3c,02597$
      006BC9                      17147 02597$:
      006BC9 50 19            [24]17148 	jnc	00379$
      006BCB 90 F0 04         [24]17149 	mov	dptr,#_eep_gioreset
      006BCE E4               [12]17150 	clr	a
      006BCF 93               [24]17151 	movc	a,@a+dptr
      006BD0 FD               [12]17152 	mov	r5,a
      006BD1 75 3A 06         [24]17153 	mov	_rtc_settime_PARM_2,#0x06
      006BD4 75 3B 00         [24]17154 	mov	_rtc_settime_PARM_3,#0x00
      006BD7 8D 82            [24]17155 	mov	dpl,r5
      006BD9 C0 07            [24]17156 	push	ar7
      006BDB C0 06            [24]17157 	push	ar6
      006BDD 12 02 63         [24]17158 	lcall	_rtc_settime
      006BE0 D0 06            [24]17159 	pop	ar6
      006BE2 D0 07            [24]17160 	pop	ar7
      006BE4                      17161 00379$:
                                  17162 ;	src\main.c:544: if(so_lan_goi_dien>1) baocaosms(CHINH,"\rChuan bi reset phan mem tu cuoc goi");	
      006BE4 90 00 B9         [24]17163 	mov	dptr,#_so_lan_goi_dien
      006BE7 E0               [24]17164 	movx	a,@dptr
      006BE8 24 FE            [12]17165 	add	a,#0xff - 0x01
      006BEA 50 13            [24]17166 	jnc	00381$
                                  17167 ;	assignBit
      006BEC D2 46            [12]17168 	setb	_baocaosms_PARM_1
      006BEE 90 91 82         [24]17169 	mov	dptr,#___str_151
      006BF1 75 F0 80         [24]17170 	mov	b,#0x80
      006BF4 C0 07            [24]17171 	push	ar7
      006BF6 C0 06            [24]17172 	push	ar6
      006BF8 12 20 30         [24]17173 	lcall	_baocaosms
      006BFB D0 06            [24]17174 	pop	ar6
      006BFD D0 07            [24]17175 	pop	ar7
      006BFF                      17176 00381$:
                                  17177 ;	src\main.c:545: EA=0;
                                  17178 ;	assignBit
      006BFF C2 AF            [12]17179 	clr	_EA
                                  17180 ;	src\main.c:546: gsm_pw = 0;
                                  17181 ;	assignBit
      006C01 C2 A0            [12]17182 	clr	_P20
                                  17183 ;	src\main.c:547: IAP_ghibyte(NORRESET_EEPROM,0);
      006C03 75 18 00         [24]17184 	mov	_IAP_ghibyte_PARM_2,#0x00
      006C06 90 00 05         [24]17185 	mov	dptr,#0x0005
      006C09 C0 07            [24]17186 	push	ar7
      006C0B C0 06            [24]17187 	push	ar6
      006C0D 12 03 01         [24]17188 	lcall	_IAP_ghibyte
                                  17189 ;	src\main.c:548: RingRelay = 1;
                                  17190 ;	assignBit
      006C10 D2 A3            [12]17191 	setb	_P23
                                  17192 ;	src\main.c:549: delay_ms(4000);
      006C12 90 0F A0         [24]17193 	mov	dptr,#0x0fa0
      006C15 12 04 BB         [24]17194 	lcall	_delay_ms
      006C18 D0 06            [24]17195 	pop	ar6
      006C1A D0 07            [24]17196 	pop	ar7
                                  17197 ;	src\main.c:550: IAP_CONTR = 0x60;
      006C1C 75 C7 60         [24]17198 	mov	_IAP_CONTR,#0x60
      006C1F                      17199 00383$:
                                  17200 ;	src\main.c:554: if(!da_gui_bao_cao && minute<5 ) {
      006C1F 30 03 03         [24]17201 	jnb	_da_gui_bao_cao,02600$
      006C22 02 6C B9         [24]17202 	ljmp	00399$
      006C25                      17203 02600$:
      006C25 74 FB            [12]17204 	mov	a,#0x100 - 0x05
      006C27 25 4A            [12]17205 	add	a,_minute
      006C29 50 03            [24]17206 	jnc	02601$
      006C2B 02 6C B9         [24]17207 	ljmp	00399$
      006C2E                      17208 02601$:
                                  17209 ;	src\main.c:555: if(!GPS_time && eep_gpson) {
      006C2E 20 1D 25         [24]17210 	jb	_GPS_time,00393$
      006C31 90 F0 02         [24]17211 	mov	dptr,#_eep_gpson
      006C34 E4               [12]17212 	clr	a
      006C35 93               [24]17213 	movc	a,@a+dptr
      006C36 60 1E            [24]17214 	jz	00393$
                                  17215 ;	src\main.c:557: gsm_thietlapngaygiothuc();
      006C38 C0 07            [24]17216 	push	ar7
      006C3A C0 06            [24]17217 	push	ar6
      006C3C 12 25 33         [24]17218 	lcall	_gsm_thietlapngaygiothuc
      006C3F D0 06            [24]17219 	pop	ar6
      006C41 D0 07            [24]17220 	pop	ar7
                                  17221 ;	src\main.c:558: hour12 = (hour>11)?hour-12:hour;
      006C43 E5 4B            [12]17222 	mov	a,_hour
      006C45 24 F4            [12]17223 	add	a,#0xff - 0x0b
      006C47 50 07            [24]17224 	jnc	00735$
      006C49 E5 4B            [12]17225 	mov	a,_hour
      006C4B 24 F4            [12]17226 	add	a,#0xf4
      006C4D FD               [12]17227 	mov	r5,a
      006C4E 80 02            [24]17228 	sjmp	00736$
      006C50                      17229 00735$:
      006C50 AD 4B            [24]17230 	mov	r5,_hour
      006C52                      17231 00736$:
      006C52 8D 4C            [24]17232 	mov	_hour12,r5
      006C54 80 47            [24]17233 	sjmp	00394$
      006C56                      17234 00393$:
                                  17235 ;	src\main.c:560: rtc_gettime(&hour,&minute,&second);
      006C56 75 34 4A         [24]17236 	mov	_rtc_gettime_PARM_2,#_minute
      006C59 75 35 00         [24]17237 	mov	(_rtc_gettime_PARM_2 + 1),#0x00
      006C5C 75 36 40         [24]17238 	mov	(_rtc_gettime_PARM_2 + 2),#0x40
      006C5F 75 37 49         [24]17239 	mov	_rtc_gettime_PARM_3,#_second
      006C62 75 38 00         [24]17240 	mov	(_rtc_gettime_PARM_3 + 1),#0x00
      006C65 75 39 40         [24]17241 	mov	(_rtc_gettime_PARM_3 + 2),#0x40
      006C68 90 00 4B         [24]17242 	mov	dptr,#_hour
      006C6B 75 F0 40         [24]17243 	mov	b,#0x40
      006C6E C0 07            [24]17244 	push	ar7
      006C70 C0 06            [24]17245 	push	ar6
      006C72 12 01 D3         [24]17246 	lcall	_rtc_gettime
                                  17247 ;	src\main.c:561: rtc_getdate(&date,&day,&month,&year);
      006C75 75 2B DE         [24]17248 	mov	_rtc_getdate_PARM_2,#_day
      006C78 75 2C 00         [24]17249 	mov	(_rtc_getdate_PARM_2 + 1),#(_day >> 8)
      006C7B 75 2D 00         [24]17250 	mov	(_rtc_getdate_PARM_2 + 2),#0x00
      006C7E 75 2E DF         [24]17251 	mov	_rtc_getdate_PARM_3,#_month
      006C81 75 2F 00         [24]17252 	mov	(_rtc_getdate_PARM_3 + 1),#(_month >> 8)
      006C84 75 30 00         [24]17253 	mov	(_rtc_getdate_PARM_3 + 2),#0x00
      006C87 75 31 E0         [24]17254 	mov	_rtc_getdate_PARM_4,#_year
      006C8A 75 32 00         [24]17255 	mov	(_rtc_getdate_PARM_4 + 1),#(_year >> 8)
      006C8D 75 33 00         [24]17256 	mov	(_rtc_getdate_PARM_4 + 2),#0x00
      006C90 90 00 DD         [24]17257 	mov	dptr,#_date
      006C93 75 F0 00         [24]17258 	mov	b,#0x00
      006C96 12 01 20         [24]17259 	lcall	_rtc_getdate
      006C99 D0 06            [24]17260 	pop	ar6
      006C9B D0 07            [24]17261 	pop	ar7
      006C9D                      17262 00394$:
                                  17263 ;	src\main.c:564: if(eep_baocao) {
      006C9D 90 F0 01         [24]17264 	mov	dptr,#_eep_baocao
      006CA0 E4               [12]17265 	clr	a
      006CA1 93               [24]17266 	movc	a,@a+dptr
      006CA2 60 13            [24]17267 	jz	00397$
                                  17268 ;	src\main.c:565: baocaosms(CHINH,"\rbao cao dau gio");
                                  17269 ;	assignBit
      006CA4 D2 46            [12]17270 	setb	_baocaosms_PARM_1
      006CA6 90 91 A7         [24]17271 	mov	dptr,#___str_152
      006CA9 75 F0 80         [24]17272 	mov	b,#0x80
      006CAC C0 07            [24]17273 	push	ar7
      006CAE C0 06            [24]17274 	push	ar6
      006CB0 12 20 30         [24]17275 	lcall	_baocaosms
      006CB3 D0 06            [24]17276 	pop	ar6
      006CB5 D0 07            [24]17277 	pop	ar7
      006CB7                      17278 00397$:
                                  17279 ;	src\main.c:567: da_gui_bao_cao = 1;
                                  17280 ;	assignBit
      006CB7 D2 03            [12]17281 	setb	_da_gui_bao_cao
      006CB9                      17282 00399$:
                                  17283 ;	src\main.c:569: if(co_tin_nhan_moi){
                                  17284 ;	src\main.c:570: co_tin_nhan_moi = 0;
                                  17285 ;	assignBit
      006CB9 10 0C 02         [24]17286 	jbc	_co_tin_nhan_moi,02606$
      006CBC 80 29            [24]17287 	sjmp	00402$
      006CBE                      17288 02606$:
                                  17289 ;	src\main.c:571: gsm_sendandcheck("AT\r", 15, 1,"CO TIN NHAN MOI ");
      006CBE 75 5B B8         [24]17290 	mov	_gsm_sendandcheck_PARM_4,#___str_153
      006CC1 75 5C 91         [24]17291 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_153 >> 8)
      006CC4 75 5D 80         [24]17292 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      006CC7 75 59 0F         [24]17293 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      006CCA 75 5A 01         [24]17294 	mov	_gsm_sendandcheck_PARM_3,#0x01
      006CCD 90 89 D6         [24]17295 	mov	dptr,#___str_38
      006CD0 75 F0 80         [24]17296 	mov	b,#0x80
      006CD3 C0 07            [24]17297 	push	ar7
      006CD5 C0 06            [24]17298 	push	ar6
      006CD7 12 15 AA         [24]17299 	lcall	_gsm_sendandcheck
                                  17300 ;	src\main.c:572: send_gsm_cmd("AT+CMGL=\"ALL\"\r");
      006CDA 90 91 C9         [24]17301 	mov	dptr,#___str_154
      006CDD 75 F0 80         [24]17302 	mov	b,#0x80
      006CE0 12 03 CD         [24]17303 	lcall	_send_gsm_cmd
      006CE3 D0 06            [24]17304 	pop	ar6
      006CE5 D0 07            [24]17305 	pop	ar7
      006CE7                      17306 00402$:
                                  17307 ;	src\main.c:574: if(goi_dien_thoai){
                                  17308 ;	src\main.c:575: goi_dien_thoai = 0;
                                  17309 ;	assignBit
      006CE7 10 07 02         [24]17310 	jbc	_goi_dien_thoai,02607$
      006CEA 80 11            [24]17311 	sjmp	00404$
      006CEC                      17312 02607$:
                                  17313 ;	src\main.c:576: gsm_quay_so(phone_chinh);
      006CEC 90 00 01         [24]17314 	mov	dptr,#_phone_chinh
      006CEF 75 F0 00         [24]17315 	mov	b,#0x00
      006CF2 C0 07            [24]17316 	push	ar7
      006CF4 C0 06            [24]17317 	push	ar6
      006CF6 12 17 88         [24]17318 	lcall	_gsm_quay_so
      006CF9 D0 06            [24]17319 	pop	ar6
      006CFB D0 07            [24]17320 	pop	ar7
      006CFD                      17321 00404$:
                                  17322 ;	src\main.c:579: switch(mode){
      006CFD 90 00 F4         [24]17323 	mov	dptr,#_mode
      006D00 E0               [24]17324 	movx	a,@dptr
      006D01 FD               [12]17325 	mov  r5,a
      006D02 24 F8            [12]17326 	add	a,#0xff - 0x07
      006D04 50 03            [24]17327 	jnc	02608$
      006D06 02 82 1A         [24]17328 	ljmp	00642$
      006D09                      17329 02608$:
      006D09 ED               [12]17330 	mov	a,r5
      006D0A 24 0A            [12]17331 	add	a,#(02609$-3-.)
      006D0C 83               [24]17332 	movc	a,@a+pc
      006D0D F5 82            [12]17333 	mov	dpl,a
      006D0F ED               [12]17334 	mov	a,r5
      006D10 24 0C            [12]17335 	add	a,#(02610$-3-.)
      006D12 83               [24]17336 	movc	a,@a+pc
      006D13 F5 83            [12]17337 	mov	dph,a
      006D15 E4               [12]17338 	clr	a
      006D16 73               [24]17339 	jmp	@a+dptr
      006D17                      17340 02609$:
      006D17 27                   17341 	.db	00405$
      006D18 93                   17342 	.db	00466$
      006D19 22                   17343 	.db	00519$
      006D1A 86                   17344 	.db	00631$
      006D1B 2C                   17345 	.db	00555$
      006D1C 08                   17346 	.db	00639$
      006D1D 08                   17347 	.db	00639$
      006D1E D7                   17348 	.db	00431$
      006D1F                      17349 02610$:
      006D1F 6D                   17350 	.db	00405$>>8
      006D20 74                   17351 	.db	00466$>>8
      006D21 79                   17352 	.db	00519$>>8
      006D22 81                   17353 	.db	00631$>>8
      006D23 7B                   17354 	.db	00555$>>8
      006D24 82                   17355 	.db	00639$>>8
      006D25 82                   17356 	.db	00639$>>8
      006D26 6F                   17357 	.db	00431$>>8
                                  17358 ;	src\main.c:580: case 0:
      006D27                      17359 00405$:
                                  17360 ;	src\main.c:581: if(gsm_reset){
      006D27 30 05 41         [24]17361 	jnb	_gsm_reset,00409$
                                  17362 ;	src\main.c:582: ADC_CONTR = 0x8b;
      006D2A 75 BC 8B         [24]17363 	mov	_ADC_CONTR,#0x8b
                                  17364 ;	src\main.c:583: gsm_reset = 0;
                                  17365 ;	assignBit
      006D2D C2 05            [12]17366 	clr	_gsm_reset
                                  17367 ;	src\main.c:584: gsm_serial_cmd = NORMAL;
      006D2F 90 00 FE         [24]17368 	mov	dptr,#_gsm_serial_cmd
      006D32 E4               [12]17369 	clr	a
      006D33 F0               [24]17370 	movx	@dptr,a
                                  17371 ;	src\main.c:586: gsm_thietlapngaygiothuc();
      006D34 C0 07            [24]17372 	push	ar7
      006D36 C0 06            [24]17373 	push	ar6
      006D38 12 25 33         [24]17374 	lcall	_gsm_thietlapngaygiothuc
                                  17375 ;	src\main.c:587: hour12=hour%12;
      006D3B AB 4B            [24]17376 	mov	r3,_hour
      006D3D 7C 00            [12]17377 	mov	r4,#0x00
      006D3F 75 1B 0C         [24]17378 	mov	__modsint_PARM_2,#0x0c
                                  17379 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      006D42 8C 1C            [24]17380 	mov	(__modsint_PARM_2 + 1),r4
      006D44 8B 82            [24]17381 	mov	dpl,r3
      006D46 8C 83            [24]17382 	mov	dph,r4
      006D48 12 84 67         [24]17383 	lcall	__modsint
      006D4B AB 82            [24]17384 	mov	r3,dpl
      006D4D 8B 4C            [24]17385 	mov	_hour12,r3
                                  17386 ;	src\main.c:588: if(gsm_thietlapnhantin()){
      006D4F 12 27 53         [24]17387 	lcall	_gsm_thietlapnhantin
      006D52 D0 06            [24]17388 	pop	ar6
      006D54 D0 07            [24]17389 	pop	ar7
      006D56 50 13            [24]17390 	jnc	00409$
                                  17391 ;	src\main.c:589: baocaosms(CHINH,"\rgsm reset thanh cong");
                                  17392 ;	assignBit
      006D58 D2 46            [12]17393 	setb	_baocaosms_PARM_1
      006D5A 90 91 D8         [24]17394 	mov	dptr,#___str_155
      006D5D 75 F0 80         [24]17395 	mov	b,#0x80
      006D60 C0 07            [24]17396 	push	ar7
      006D62 C0 06            [24]17397 	push	ar6
      006D64 12 20 30         [24]17398 	lcall	_baocaosms
      006D67 D0 06            [24]17399 	pop	ar6
      006D69 D0 07            [24]17400 	pop	ar7
      006D6B                      17401 00409$:
                                  17402 ;	src\main.c:592: if(sms_dang_xu_ly){
      006D6B 30 0E 28         [24]17403 	jnb	_sms_dang_xu_ly,00418$
                                  17404 ;	src\main.c:594: xu_ly_tin_nhan();
      006D6E C0 07            [24]17405 	push	ar7
      006D70 C0 06            [24]17406 	push	ar6
      006D72 12 43 3E         [24]17407 	lcall	_xu_ly_tin_nhan
                                  17408 ;	src\main.c:595: gsm_sendandcheck("AT+CMGDA=\"DEL ALL\"\r", 15, 1,"  SENDING CMGDA  ");
      006D75 75 5B B5         [24]17409 	mov	_gsm_sendandcheck_PARM_4,#___str_71
      006D78 75 5C 8B         [24]17410 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_71 >> 8)
      006D7B 75 5D 80         [24]17411 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      006D7E 75 59 0F         [24]17412 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      006D81 75 5A 01         [24]17413 	mov	_gsm_sendandcheck_PARM_3,#0x01
      006D84 90 8B 7F         [24]17414 	mov	dptr,#___str_68
      006D87 75 F0 80         [24]17415 	mov	b,#0x80
      006D8A 12 15 AA         [24]17416 	lcall	_gsm_sendandcheck
      006D8D D0 06            [24]17417 	pop	ar6
      006D8F D0 07            [24]17418 	pop	ar7
                                  17419 ;	src\main.c:596: sms_dang_xu_ly = 0;
                                  17420 ;	assignBit
      006D91 C2 0E            [12]17421 	clr	_sms_dang_xu_ly
      006D93 02 6F 3D         [24]17422 	ljmp	00419$
      006D96                      17423 00418$:
                                  17424 ;	src\main.c:599: switch(so_motor){
      006D96 90 01 2F         [24]17425 	mov	dptr,#_so_motor
      006D99 E0               [24]17426 	movx	a,@dptr
      006D9A FC               [12]17427 	mov	r4,a
      006D9B BC 01 02         [24]17428 	cjne	r4,#0x01,02614$
      006D9E 80 14            [24]17429 	sjmp	00410$
      006DA0                      17430 02614$:
      006DA0 BC 02 02         [24]17431 	cjne	r4,#0x02,02615$
      006DA3 80 44            [24]17432 	sjmp	00411$
      006DA5                      17433 02615$:
      006DA5 BC 03 03         [24]17434 	cjne	r4,#0x03,02616$
      006DA8 02 6E 93         [24]17435 	ljmp	00413$
      006DAB                      17436 02616$:
      006DAB BC 04 03         [24]17437 	cjne	r4,#0x04,02617$
      006DAE 02 6E 35         [24]17438 	ljmp	00412$
      006DB1                      17439 02617$:
      006DB1 02 6E EF         [24]17440 	ljmp	00414$
                                  17441 ;	src\main.c:600: case 1: LCD_guigio(0x80,may_dc? "  MDC  " : "  MST  ",gio[0],phut[0],date,flip_pulse);break;
      006DB4                      17442 00410$:
      006DB4 30 34 06         [24]17443 	jnb	_may_dc,00737$
      006DB7 7B EE            [12]17444 	mov	r3,#___str_156
      006DB9 7C 91            [12]17445 	mov	r4,#(___str_156 >> 8)
      006DBB 80 04            [24]17446 	sjmp	00738$
      006DBD                      17447 00737$:
      006DBD 7B F6            [12]17448 	mov	r3,#___str_157
      006DBF 7C 91            [12]17449 	mov	r4,#(___str_157 >> 8)
      006DC1                      17450 00738$:
      006DC1 8B 43            [24]17451 	mov	_LCD_guigio_PARM_2,r3
      006DC3 8C 44            [24]17452 	mov	(_LCD_guigio_PARM_2 + 1),r4
      006DC5 75 45 80         [24]17453 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      006DC8 85 4D 46         [24]17454 	mov	_LCD_guigio_PARM_3,_gio
      006DCB 85 51 47         [24]17455 	mov	_LCD_guigio_PARM_4,_phut
      006DCE 90 00 DD         [24]17456 	mov	dptr,#_date
      006DD1 E0               [24]17457 	movx	a,@dptr
      006DD2 F5 48            [12]17458 	mov	_LCD_guigio_PARM_5,a
                                  17459 ;	assignBit
      006DD4 A2 20            [12]17460 	mov	c,_flip_pulse
      006DD6 92 01            [24]17461 	mov	_LCD_guigio_PARM_6,c
      006DD8 75 82 80         [24]17462 	mov	dpl,#0x80
      006DDB C0 07            [24]17463 	push	ar7
      006DDD C0 06            [24]17464 	push	ar6
      006DDF 12 06 DC         [24]17465 	lcall	_LCD_guigio
      006DE2 D0 06            [24]17466 	pop	ar6
      006DE4 D0 07            [24]17467 	pop	ar7
      006DE6 02 6E EF         [24]17468 	ljmp	00414$
                                  17469 ;	src\main.c:601: case 2: LCD_guigio(0x80,"  ",gio[0],phut[0],253,flip_pulse);LCD_guigio(0x87,"  ",gio[1],phut[1],253,flip_pulse);LCD_guichuoi("  ");break;
      006DE9                      17470 00411$:
      006DE9 75 43 FE         [24]17471 	mov	_LCD_guigio_PARM_2,#___str_158
      006DEC 75 44 91         [24]17472 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_158 >> 8)
      006DEF 75 45 80         [24]17473 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      006DF2 85 4D 46         [24]17474 	mov	_LCD_guigio_PARM_3,_gio
      006DF5 85 51 47         [24]17475 	mov	_LCD_guigio_PARM_4,_phut
      006DF8 75 48 FD         [24]17476 	mov	_LCD_guigio_PARM_5,#0xfd
                                  17477 ;	assignBit
      006DFB A2 20            [12]17478 	mov	c,_flip_pulse
      006DFD 92 01            [24]17479 	mov	_LCD_guigio_PARM_6,c
      006DFF 75 82 80         [24]17480 	mov	dpl,#0x80
      006E02 C0 07            [24]17481 	push	ar7
      006E04 C0 06            [24]17482 	push	ar6
      006E06 12 06 DC         [24]17483 	lcall	_LCD_guigio
      006E09 75 43 FE         [24]17484 	mov	_LCD_guigio_PARM_2,#___str_158
      006E0C 75 44 91         [24]17485 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_158 >> 8)
      006E0F 75 45 80         [24]17486 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      006E12 85 4E 46         [24]17487 	mov	_LCD_guigio_PARM_3,(_gio + 0x0001)
      006E15 85 52 47         [24]17488 	mov	_LCD_guigio_PARM_4,(_phut + 0x0001)
      006E18 75 48 FD         [24]17489 	mov	_LCD_guigio_PARM_5,#0xfd
                                  17490 ;	assignBit
      006E1B A2 20            [12]17491 	mov	c,_flip_pulse
      006E1D 92 01            [24]17492 	mov	_LCD_guigio_PARM_6,c
      006E1F 75 82 87         [24]17493 	mov	dpl,#0x87
      006E22 12 06 DC         [24]17494 	lcall	_LCD_guigio
      006E25 90 91 FE         [24]17495 	mov	dptr,#___str_158
      006E28 75 F0 80         [24]17496 	mov	b,#0x80
      006E2B 12 05 F1         [24]17497 	lcall	_LCD_guichuoi
      006E2E D0 06            [24]17498 	pop	ar6
      006E30 D0 07            [24]17499 	pop	ar7
      006E32 02 6E EF         [24]17500 	ljmp	00414$
                                  17501 ;	src\main.c:602: case 4:	LCD_guigio(0xc5,GPS_time?" G ":(eep_gpson?" D ":" A "),hour,minute,second,flip_pulse); 
      006E35                      17502 00412$:
      006E35 30 1D 06         [24]17503 	jnb	_GPS_time,00739$
      006E38 7B 01            [12]17504 	mov	r3,#___str_159
      006E3A 7C 92            [12]17505 	mov	r4,#(___str_159 >> 8)
      006E3C 80 19            [24]17506 	sjmp	00740$
      006E3E                      17507 00739$:
      006E3E 90 F0 02         [24]17508 	mov	dptr,#_eep_gpson
      006E41 E4               [12]17509 	clr	a
      006E42 93               [24]17510 	movc	a,@a+dptr
      006E43 60 08            [24]17511 	jz	00741$
      006E45 75 78 05         [24]17512 	mov	_main_sloc0_1_0,#___str_160
      006E48 75 79 92         [24]17513 	mov	(_main_sloc0_1_0 + 1),#(___str_160 >> 8)
      006E4B 80 06            [24]17514 	sjmp	00742$
      006E4D                      17515 00741$:
      006E4D 75 78 09         [24]17516 	mov	_main_sloc0_1_0,#___str_161
      006E50 75 79 92         [24]17517 	mov	(_main_sloc0_1_0 + 1),#(___str_161 >> 8)
      006E53                      17518 00742$:
      006E53 AB 78            [24]17519 	mov	r3,_main_sloc0_1_0
      006E55 AC 79            [24]17520 	mov	r4,(_main_sloc0_1_0 + 1)
      006E57                      17521 00740$:
      006E57 8B 43            [24]17522 	mov	_LCD_guigio_PARM_2,r3
      006E59 8C 44            [24]17523 	mov	(_LCD_guigio_PARM_2 + 1),r4
      006E5B 75 45 80         [24]17524 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      006E5E 85 4B 46         [24]17525 	mov	_LCD_guigio_PARM_3,_hour
      006E61 85 4A 47         [24]17526 	mov	_LCD_guigio_PARM_4,_minute
      006E64 85 49 48         [24]17527 	mov	_LCD_guigio_PARM_5,_second
                                  17528 ;	assignBit
      006E67 A2 20            [12]17529 	mov	c,_flip_pulse
      006E69 92 01            [24]17530 	mov	_LCD_guigio_PARM_6,c
      006E6B 75 82 C5         [24]17531 	mov	dpl,#0xc5
      006E6E C0 07            [24]17532 	push	ar7
      006E70 C0 06            [24]17533 	push	ar6
      006E72 12 06 DC         [24]17534 	lcall	_LCD_guigio
                                  17535 ;	src\main.c:603: LCD_guigio(0xc0," ",gio[3],phut[3],251,0);
      006E75 75 43 0D         [24]17536 	mov	_LCD_guigio_PARM_2,#___str_162
      006E78 75 44 92         [24]17537 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_162 >> 8)
      006E7B 75 45 80         [24]17538 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      006E7E 85 50 46         [24]17539 	mov	_LCD_guigio_PARM_3,(_gio + 0x0003)
      006E81 85 54 47         [24]17540 	mov	_LCD_guigio_PARM_4,(_phut + 0x0003)
      006E84 75 48 FB         [24]17541 	mov	_LCD_guigio_PARM_5,#0xfb
                                  17542 ;	assignBit
      006E87 C2 01            [12]17543 	clr	_LCD_guigio_PARM_6
      006E89 75 82 C0         [24]17544 	mov	dpl,#0xc0
      006E8C 12 06 DC         [24]17545 	lcall	_LCD_guigio
      006E8F D0 06            [24]17546 	pop	ar6
      006E91 D0 07            [24]17547 	pop	ar7
                                  17548 ;	src\main.c:604: case 3: LCD_guigio(0x80," ",gio[0],phut[0],251,0);LCD_guigio(0x85," ",gio[1],phut[1],251,0);
      006E93                      17549 00413$:
      006E93 75 43 0D         [24]17550 	mov	_LCD_guigio_PARM_2,#___str_162
      006E96 75 44 92         [24]17551 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_162 >> 8)
      006E99 75 45 80         [24]17552 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      006E9C 85 4D 46         [24]17553 	mov	_LCD_guigio_PARM_3,_gio
      006E9F 85 51 47         [24]17554 	mov	_LCD_guigio_PARM_4,_phut
      006EA2 75 48 FB         [24]17555 	mov	_LCD_guigio_PARM_5,#0xfb
                                  17556 ;	assignBit
      006EA5 C2 01            [12]17557 	clr	_LCD_guigio_PARM_6
      006EA7 75 82 80         [24]17558 	mov	dpl,#0x80
      006EAA C0 07            [24]17559 	push	ar7
      006EAC C0 06            [24]17560 	push	ar6
      006EAE 12 06 DC         [24]17561 	lcall	_LCD_guigio
      006EB1 75 43 0D         [24]17562 	mov	_LCD_guigio_PARM_2,#___str_162
      006EB4 75 44 92         [24]17563 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_162 >> 8)
      006EB7 75 45 80         [24]17564 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      006EBA 85 4E 46         [24]17565 	mov	_LCD_guigio_PARM_3,(_gio + 0x0001)
      006EBD 85 52 47         [24]17566 	mov	_LCD_guigio_PARM_4,(_phut + 0x0001)
      006EC0 75 48 FB         [24]17567 	mov	_LCD_guigio_PARM_5,#0xfb
                                  17568 ;	assignBit
      006EC3 C2 01            [12]17569 	clr	_LCD_guigio_PARM_6
      006EC5 75 82 85         [24]17570 	mov	dpl,#0x85
      006EC8 12 06 DC         [24]17571 	lcall	_LCD_guigio
                                  17572 ;	src\main.c:605: LCD_guigio(0x8a," ",gio[2],phut[2],251,0);LCD_guidulieu(' ');
      006ECB 75 43 0D         [24]17573 	mov	_LCD_guigio_PARM_2,#___str_162
      006ECE 75 44 92         [24]17574 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_162 >> 8)
      006ED1 75 45 80         [24]17575 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      006ED4 85 4F 46         [24]17576 	mov	_LCD_guigio_PARM_3,(_gio + 0x0002)
      006ED7 85 53 47         [24]17577 	mov	_LCD_guigio_PARM_4,(_phut + 0x0002)
      006EDA 75 48 FB         [24]17578 	mov	_LCD_guigio_PARM_5,#0xfb
                                  17579 ;	assignBit
      006EDD C2 01            [12]17580 	clr	_LCD_guigio_PARM_6
      006EDF 75 82 8A         [24]17581 	mov	dpl,#0x8a
      006EE2 12 06 DC         [24]17582 	lcall	_LCD_guigio
      006EE5 75 82 20         [24]17583 	mov	dpl,#0x20
      006EE8 12 05 13         [24]17584 	lcall	_LCD_guidulieu
      006EEB D0 06            [24]17585 	pop	ar6
      006EED D0 07            [24]17586 	pop	ar7
                                  17587 ;	src\main.c:606: }
      006EEF                      17588 00414$:
                                  17589 ;	src\main.c:607: if(so_motor!=4){
      006EEF 90 01 2F         [24]17590 	mov	dptr,#_so_motor
      006EF2 E0               [24]17591 	movx	a,@dptr
      006EF3 FC               [12]17592 	mov	r4,a
      006EF4 BC 04 02         [24]17593 	cjne	r4,#0x04,02621$
      006EF7 80 44            [24]17594 	sjmp	00419$
      006EF9                      17595 02621$:
                                  17596 ;	src\main.c:608: LCD_guigio(0xc0,GPS_time?"  GPS  ":(eep_gpson?"   DS  ":" ASIA  "),hour,minute,second,flip_pulse);
      006EF9 30 1D 06         [24]17597 	jnb	_GPS_time,00743$
      006EFC 7B A6            [12]17598 	mov	r3,#___str_0
      006EFE 7C 88            [12]17599 	mov	r4,#(___str_0 >> 8)
      006F00 80 19            [24]17600 	sjmp	00744$
      006F02                      17601 00743$:
      006F02 90 F0 02         [24]17602 	mov	dptr,#_eep_gpson
      006F05 E4               [12]17603 	clr	a
      006F06 93               [24]17604 	movc	a,@a+dptr
      006F07 60 08            [24]17605 	jz	00745$
      006F09 75 78 B6         [24]17606 	mov	_main_sloc0_1_0,#___str_2
      006F0C 75 79 88         [24]17607 	mov	(_main_sloc0_1_0 + 1),#(___str_2 >> 8)
      006F0F 80 06            [24]17608 	sjmp	00746$
      006F11                      17609 00745$:
      006F11 75 78 AE         [24]17610 	mov	_main_sloc0_1_0,#___str_1
      006F14 75 79 88         [24]17611 	mov	(_main_sloc0_1_0 + 1),#(___str_1 >> 8)
      006F17                      17612 00746$:
      006F17 AB 78            [24]17613 	mov	r3,_main_sloc0_1_0
      006F19 AC 79            [24]17614 	mov	r4,(_main_sloc0_1_0 + 1)
      006F1B                      17615 00744$:
      006F1B 8B 43            [24]17616 	mov	_LCD_guigio_PARM_2,r3
      006F1D 8C 44            [24]17617 	mov	(_LCD_guigio_PARM_2 + 1),r4
      006F1F 75 45 80         [24]17618 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      006F22 85 4B 46         [24]17619 	mov	_LCD_guigio_PARM_3,_hour
      006F25 85 4A 47         [24]17620 	mov	_LCD_guigio_PARM_4,_minute
      006F28 85 49 48         [24]17621 	mov	_LCD_guigio_PARM_5,_second
                                  17622 ;	assignBit
      006F2B A2 20            [12]17623 	mov	c,_flip_pulse
      006F2D 92 01            [24]17624 	mov	_LCD_guigio_PARM_6,c
      006F2F 75 82 C0         [24]17625 	mov	dpl,#0xc0
      006F32 C0 07            [24]17626 	push	ar7
      006F34 C0 06            [24]17627 	push	ar6
      006F36 12 06 DC         [24]17628 	lcall	_LCD_guigio
      006F39 D0 06            [24]17629 	pop	ar6
      006F3B D0 07            [24]17630 	pop	ar7
      006F3D                      17631 00419$:
                                  17632 ;	src\main.c:611: if(!phim_mode_doi && !cam_vao){
      006F3D 90 00 F1         [24]17633 	mov	dptr,#_phim_mode_doi
      006F40 E0               [24]17634 	movx	a,@dptr
      006F41 60 03            [24]17635 	jz	02624$
      006F43 02 82 23         [24]17636 	ljmp	00643$
      006F46                      17637 02624$:
      006F46 30 17 03         [24]17638 	jnb	_cam_vao,02625$
      006F49 02 82 23         [24]17639 	ljmp	00643$
      006F4C                      17640 02625$:
                                  17641 ;	src\main.c:612: phim_mode_nhan=0;
                                  17642 ;	assignBit
      006F4C C2 22            [12]17643 	clr	_phim_mode_nhan
                                  17644 ;	src\main.c:613: mode_wait = TIME_MODE_WAIT;
      006F4E 90 00 F6         [24]17645 	mov	dptr,#_mode_wait
      006F51 74 3C            [12]17646 	mov	a,#0x3c
      006F53 F0               [24]17647 	movx	@dptr,a
                                  17648 ;	src\main.c:614: delay_ve_kim = canhkim = may_canh_kim = 0;
      006F54 90 00 E2         [24]17649 	mov	dptr,#_may_canh_kim
      006F57 E4               [12]17650 	clr	a
      006F58 F0               [24]17651 	movx	@dptr,a
      006F59 90 00 E1         [24]17652 	mov	dptr,#_canhkim
      006F5C F0               [24]17653 	movx	@dptr,a
      006F5D 90 00 E3         [24]17654 	mov	dptr,#_delay_ve_kim
      006F60 F0               [24]17655 	movx	@dptr,a
                                  17656 ;	src\main.c:615: mode = SELECT;
      006F61 90 00 F4         [24]17657 	mov	dptr,#_mode
      006F64 74 07            [12]17658 	mov	a,#0x07
      006F66 F0               [24]17659 	movx	@dptr,a
                                  17660 ;	src\main.c:616: sub_mode = GIOKIM;
      006F67 90 00 F5         [24]17661 	mov	dptr,#_sub_mode
      006F6A 74 01            [12]17662 	mov	a,#0x01
      006F6C F0               [24]17663 	movx	@dptr,a
                                  17664 ;	src\main.c:617: motor_index = motor_index2 = 5;
      006F6D 75 57 05         [24]17665 	mov	_motor_index2,#0x05
      006F70 75 56 05         [24]17666 	mov	_motor_index,#0x05
                                  17667 ;	src\main.c:618: if(eep_mp3%4==2 && mp3_playing) mp3_play(9,0,0);
      006F73 90 F0 10         [24]17668 	mov	dptr,#_eep_mp3
      006F76 E4               [12]17669 	clr	a
      006F77 93               [24]17670 	movc	a,@a+dptr
      006F78 54 03            [12]17671 	anl	a,#0x03
      006F7A FB               [12]17672 	mov	r3,a
      006F7B 7C 00            [12]17673 	mov	r4,#0x00
      006F7D BB 02 1A         [24]17674 	cjne	r3,#0x02,00421$
      006F80 BC 00 17         [24]17675 	cjne	r4,#0x00,00421$
      006F83 30 92 14         [24]17676 	jnb	_P12,00421$
      006F86 75 19 00         [24]17677 	mov	_mp3_play_PARM_2,#0x00
      006F89 75 1A 00         [24]17678 	mov	_mp3_play_PARM_3,#0x00
      006F8C 75 82 09         [24]17679 	mov	dpl,#0x09
      006F8F C0 07            [24]17680 	push	ar7
      006F91 C0 06            [24]17681 	push	ar6
      006F93 12 82 9E         [24]17682 	lcall	_mp3_play
      006F96 D0 06            [24]17683 	pop	ar6
      006F98 D0 07            [24]17684 	pop	ar7
      006F9A                      17685 00421$:
                                  17686 ;	src\main.c:619: AmplyRelay = 0;
                                  17687 ;	assignBit
      006F9A C2 C2            [12]17688 	clr	_P42
                                  17689 ;	src\main.c:620: mp3_status = mp3_IDLE;
      006F9C 78 7E            [12]17690 	mov	r0,#_mp3_status
      006F9E 76 00            [12]17691 	mov	@r0,#0x00
                                  17692 ;	src\main.c:621: if(phim_back_nhan) phim_back_nhan = 0;
                                  17693 ;	assignBit
      006FA0 10 26 02         [24]17694 	jbc	_phim_back_nhan,02629$
      006FA3 80 03            [24]17695 	sjmp	00426$
      006FA5                      17696 02629$:
      006FA5 02 82 23         [24]17697 	ljmp	00643$
      006FA8                      17698 00426$:
                                  17699 ;	src\main.c:623: baocaosms(CHINH,"\rchinh gio bang tay");
                                  17700 ;	assignBit
      006FA8 D2 46            [12]17701 	setb	_baocaosms_PARM_1
      006FAA 90 92 0F         [24]17702 	mov	dptr,#___str_163
      006FAD 75 F0 80         [24]17703 	mov	b,#0x80
      006FB0 C0 07            [24]17704 	push	ar7
      006FB2 C0 06            [24]17705 	push	ar6
      006FB4 12 20 30         [24]17706 	lcall	_baocaosms
      006FB7 D0 06            [24]17707 	pop	ar6
      006FB9 D0 07            [24]17708 	pop	ar7
                                  17709 ;	src\main.c:624: if(bat_phone_phu)baocaosms(PHU,"\r*chinh gio bang tay*");
      006FBB 20 0A 03         [24]17710 	jb	_bat_phone_phu,02630$
      006FBE 02 82 23         [24]17711 	ljmp	00643$
      006FC1                      17712 02630$:
                                  17713 ;	assignBit
      006FC1 C2 46            [12]17714 	clr	_baocaosms_PARM_1
      006FC3 90 92 23         [24]17715 	mov	dptr,#___str_164
      006FC6 75 F0 80         [24]17716 	mov	b,#0x80
      006FC9 C0 07            [24]17717 	push	ar7
      006FCB C0 06            [24]17718 	push	ar6
      006FCD 12 20 30         [24]17719 	lcall	_baocaosms
      006FD0 D0 06            [24]17720 	pop	ar6
      006FD2 D0 07            [24]17721 	pop	ar7
                                  17722 ;	src\main.c:627: break;
      006FD4 02 82 23         [24]17723 	ljmp	00643$
                                  17724 ;	src\main.c:629: case SELECT:
      006FD7                      17725 00431$:
                                  17726 ;	src\main.c:630: if(phim_mode_nhan){
                                  17727 ;	src\main.c:631: phim_mode_nhan = 0;
                                  17728 ;	assignBit
      006FD7 10 22 02         [24]17729 	jbc	_phim_mode_nhan,02631$
      006FDA 80 31            [24]17730 	sjmp	00438$
      006FDC                      17731 02631$:
                                  17732 ;	src\main.c:632: mode_wait = TIME_MODE_WAIT;
      006FDC 90 00 F6         [24]17733 	mov	dptr,#_mode_wait
      006FDF 74 3C            [12]17734 	mov	a,#0x3c
      006FE1 F0               [24]17735 	movx	@dptr,a
                                  17736 ;	src\main.c:633: if(++sub_mode==MP3TEST && !(eep_mp3%4)) sub_mode++;
      006FE2 90 00 F5         [24]17737 	mov	dptr,#_sub_mode
      006FE5 E0               [24]17738 	movx	a,@dptr
      006FE6 24 01            [12]17739 	add	a,#0x01
      006FE8 F0               [24]17740 	movx	@dptr,a
      006FE9 E0               [24]17741 	movx	a,@dptr
      006FEA FC               [12]17742 	mov	r4,a
      006FEB BC 04 0F         [24]17743 	cjne	r4,#0x04,00433$
      006FEE 90 F0 10         [24]17744 	mov	dptr,#_eep_mp3
      006FF1 E4               [12]17745 	clr	a
      006FF2 93               [24]17746 	movc	a,@a+dptr
      006FF3 54 03            [12]17747 	anl	a,#0x03
      006FF5 70 06            [24]17748 	jnz	00433$
      006FF7 90 00 F5         [24]17749 	mov	dptr,#_sub_mode
      006FFA EC               [12]17750 	mov	a,r4
      006FFB 04               [12]17751 	inc	a
      006FFC F0               [24]17752 	movx	@dptr,a
      006FFD                      17753 00433$:
                                  17754 ;	src\main.c:634: if(sub_mode>MAX_MODE)sub_mode = 0;
      006FFD 90 00 F5         [24]17755 	mov	dptr,#_sub_mode
      007000 E0               [24]17756 	movx	a,@dptr
      007001 FC               [12]17757 	mov  r4,a
      007002 24 F9            [12]17758 	add	a,#0xff - 0x06
      007004 50 05            [24]17759 	jnc	00436$
      007006 90 00 F5         [24]17760 	mov	dptr,#_sub_mode
      007009 E4               [12]17761 	clr	a
      00700A F0               [24]17762 	movx	@dptr,a
      00700B                      17763 00436$:
                                  17764 ;	src\main.c:635: chop=0;
                                  17765 ;	assignBit
      00700B C2 2D            [12]17766 	clr	_chop
      00700D                      17767 00438$:
                                  17768 ;	src\main.c:637: if(phim_cong_nhan){
                                  17769 ;	src\main.c:638: phim_cong_nhan = 0;
                                  17770 ;	assignBit
      00700D 10 2A 02         [24]17771 	jbc	_phim_cong_nhan,02637$
      007010 80 0D            [24]17772 	sjmp	00440$
      007012                      17773 02637$:
                                  17774 ;	src\main.c:639: mode_wait = TIME_MODE_WAIT;
      007012 90 00 F6         [24]17775 	mov	dptr,#_mode_wait
      007015 74 3C            [12]17776 	mov	a,#0x3c
      007017 F0               [24]17777 	movx	@dptr,a
                                  17778 ;	src\main.c:640: sub_mode = 0;
      007018 90 00 F5         [24]17779 	mov	dptr,#_sub_mode
      00701B E4               [12]17780 	clr	a
      00701C F0               [24]17781 	movx	@dptr,a
                                  17782 ;	src\main.c:641: chop=0;
                                  17783 ;	assignBit
      00701D C2 2D            [12]17784 	clr	_chop
      00701F                      17785 00440$:
                                  17786 ;	src\main.c:643: if(phim_back_nhan){
                                  17787 ;	src\main.c:644: phim_back_nhan = 0;
                                  17788 ;	assignBit
      00701F 10 26 03         [24]17789 	jbc	_phim_back_nhan,02638$
      007022 02 74 2C         [24]17790 	ljmp	00465$
      007025                      17791 02638$:
                                  17792 ;	src\main.c:645: mode_wait = TIME_MODE_WAIT;
      007025 90 00 F6         [24]17793 	mov	dptr,#_mode_wait
      007028 74 3C            [12]17794 	mov	a,#0x3c
      00702A F0               [24]17795 	movx	@dptr,a
                                  17796 ;	src\main.c:646: mode = sub_mode;
      00702B 90 00 F5         [24]17797 	mov	dptr,#_sub_mode
      00702E E0               [24]17798 	movx	a,@dptr
      00702F 90 00 F4         [24]17799 	mov	dptr,#_mode
      007032 F0               [24]17800 	movx	@dptr,a
                                  17801 ;	src\main.c:647: sub_mode = 0;
      007033 90 00 F5         [24]17802 	mov	dptr,#_sub_mode
      007036 E4               [12]17803 	clr	a
      007037 F0               [24]17804 	movx	@dptr,a
                                  17805 ;	src\main.c:648: motor_index  = motor_run_check();
      007038 C0 07            [24]17806 	push	ar7
      00703A C0 06            [24]17807 	push	ar6
      00703C 12 0A 8C         [24]17808 	lcall	_motor_run_check
      00703F 85 82 56         [24]17809 	mov	_motor_index,dpl
                                  17810 ;	src\main.c:649: motor_index2 = motor_run_check2();
      007042 12 0D 04         [24]17811 	lcall	_motor_run_check2
      007045 85 82 57         [24]17812 	mov	_motor_index2,dpl
      007048 D0 06            [24]17813 	pop	ar6
      00704A D0 07            [24]17814 	pop	ar7
                                  17815 ;	src\main.c:650: if(mode){
      00704C 90 00 F4         [24]17816 	mov	dptr,#_mode
      00704F E0               [24]17817 	movx	a,@dptr
      007050 70 03            [24]17818 	jnz	02639$
      007052 02 82 23         [24]17819 	ljmp	00643$
      007055                      17820 02639$:
                                  17821 ;	src\main.c:651: LCD_guilenh(0x80);
      007055 75 82 80         [24]17822 	mov	dpl,#0x80
      007058 C0 07            [24]17823 	push	ar7
      00705A C0 06            [24]17824 	push	ar6
      00705C 12 05 71         [24]17825 	lcall	_LCD_guilenh
                                  17826 ;	src\main.c:652: LCD_guichuoi(mode_select[mode]);
      00705F 90 00 F4         [24]17827 	mov	dptr,#_mode
      007062 E0               [24]17828 	movx	a,@dptr
      007063 75 F0 11         [24]17829 	mov	b,#0x11
      007066 A4               [48]17830 	mul	ab
      007067 24 08            [12]17831 	add	a,#_mode_select
      007069 FB               [12]17832 	mov	r3,a
      00706A 74 85            [12]17833 	mov	a,#(_mode_select >> 8)
      00706C 35 F0            [12]17834 	addc	a,b
      00706E FC               [12]17835 	mov	r4,a
      00706F 7A 80            [12]17836 	mov	r2,#0x80
      007071 8B 82            [24]17837 	mov	dpl,r3
      007073 8C 83            [24]17838 	mov	dph,r4
      007075 8A F0            [24]17839 	mov	b,r2
      007077 12 05 F1         [24]17840 	lcall	_LCD_guichuoi
      00707A D0 06            [24]17841 	pop	ar6
      00707C D0 07            [24]17842 	pop	ar7
                                  17843 ;	src\main.c:653: switch(mode){
      00707E 90 00 F4         [24]17844 	mov	dptr,#_mode
      007081 E0               [24]17845 	movx	a,@dptr
      007082 FC               [12]17846 	mov  r4,a
      007083 24 F9            [12]17847 	add	a,#0xff - 0x06
      007085 50 03            [24]17848 	jnc	02640$
      007087 02 82 23         [24]17849 	ljmp	00643$
      00708A                      17850 02640$:
      00708A EC               [12]17851 	mov	a,r4
      00708B 2C               [12]17852 	add	a,r4
      00708C 2C               [12]17853 	add	a,r4
      00708D 90 70 91         [24]17854 	mov	dptr,#02641$
      007090 73               [24]17855 	jmp	@a+dptr
      007091                      17856 02641$:
      007091 02 82 23         [24]17857 	ljmp	00643$
      007094 02 70 A6         [24]17858 	ljmp	00441$
      007097 02 71 C3         [24]17859 	ljmp	00450$
      00709A 02 72 04         [24]17860 	ljmp	00451$
      00709D 02 72 21         [24]17861 	ljmp	00452$
      0070A0 02 72 A7         [24]17862 	ljmp	00453$
      0070A3 02 73 4F         [24]17863 	ljmp	00460$
                                  17864 ;	src\main.c:654: case GIOKIM : if(so_motor==1)LCD_guigio(0xc0,may_dc? "  MDC  " : "  MST  ",gio[0],phut[0],0,1);
      0070A6                      17865 00441$:
      0070A6 90 01 2F         [24]17866 	mov	dptr,#_so_motor
      0070A9 E0               [24]17867 	movx	a,@dptr
      0070AA FC               [12]17868 	mov	r4,a
      0070AB BC 01 2F         [24]17869 	cjne	r4,#0x01,00443$
      0070AE 30 34 06         [24]17870 	jnb	_may_dc,00747$
      0070B1 7A EE            [12]17871 	mov	r2,#___str_156
      0070B3 7B 91            [12]17872 	mov	r3,#(___str_156 >> 8)
      0070B5 80 04            [24]17873 	sjmp	00748$
      0070B7                      17874 00747$:
      0070B7 7A F6            [12]17875 	mov	r2,#___str_157
      0070B9 7B 91            [12]17876 	mov	r3,#(___str_157 >> 8)
      0070BB                      17877 00748$:
      0070BB 8A 43            [24]17878 	mov	_LCD_guigio_PARM_2,r2
      0070BD 8B 44            [24]17879 	mov	(_LCD_guigio_PARM_2 + 1),r3
      0070BF 75 45 80         [24]17880 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      0070C2 85 4D 46         [24]17881 	mov	_LCD_guigio_PARM_3,_gio
      0070C5 85 51 47         [24]17882 	mov	_LCD_guigio_PARM_4,_phut
      0070C8 75 48 00         [24]17883 	mov	_LCD_guigio_PARM_5,#0x00
                                  17884 ;	assignBit
      0070CB D2 01            [12]17885 	setb	_LCD_guigio_PARM_6
      0070CD 75 82 C0         [24]17886 	mov	dpl,#0xc0
      0070D0 C0 07            [24]17887 	push	ar7
      0070D2 C0 06            [24]17888 	push	ar6
      0070D4 12 06 DC         [24]17889 	lcall	_LCD_guigio
      0070D7 D0 06            [24]17890 	pop	ar6
      0070D9 D0 07            [24]17891 	pop	ar7
      0070DB 80 6E            [24]17892 	sjmp	00444$
      0070DD                      17893 00443$:
                                  17894 ;	src\main.c:655: else {LCD_guigio((so_motor<3)?0xc0:0x80,"  ",gio[0],phut[0],253,1);LCD_guigio((so_motor<3)?0xc7:0x87,"  ",gio[1],phut[1],253,1);LCD_guichuoi("  "); }
      0070DD BC 03 00         [24]17895 	cjne	r4,#0x03,02645$
      0070E0                      17896 02645$:
      0070E0 50 06            [24]17897 	jnc	00749$
      0070E2 7B C0            [12]17898 	mov	r3,#0xc0
      0070E4 7C 00            [12]17899 	mov	r4,#0x00
      0070E6 80 04            [24]17900 	sjmp	00750$
      0070E8                      17901 00749$:
      0070E8 7B 80            [12]17902 	mov	r3,#0x80
      0070EA 7C 00            [12]17903 	mov	r4,#0x00
      0070EC                      17904 00750$:
      0070EC 8B 82            [24]17905 	mov	dpl,r3
      0070EE 75 43 FE         [24]17906 	mov	_LCD_guigio_PARM_2,#___str_158
      0070F1 75 44 91         [24]17907 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_158 >> 8)
      0070F4 75 45 80         [24]17908 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      0070F7 85 4D 46         [24]17909 	mov	_LCD_guigio_PARM_3,_gio
      0070FA 85 51 47         [24]17910 	mov	_LCD_guigio_PARM_4,_phut
      0070FD 75 48 FD         [24]17911 	mov	_LCD_guigio_PARM_5,#0xfd
                                  17912 ;	assignBit
      007100 D2 01            [12]17913 	setb	_LCD_guigio_PARM_6
      007102 C0 07            [24]17914 	push	ar7
      007104 C0 06            [24]17915 	push	ar6
      007106 12 06 DC         [24]17916 	lcall	_LCD_guigio
      007109 D0 06            [24]17917 	pop	ar6
      00710B D0 07            [24]17918 	pop	ar7
      00710D 90 01 2F         [24]17919 	mov	dptr,#_so_motor
      007110 E0               [24]17920 	movx	a,@dptr
      007111 FC               [12]17921 	mov	r4,a
      007112 BC 03 00         [24]17922 	cjne	r4,#0x03,02647$
      007115                      17923 02647$:
      007115 50 06            [24]17924 	jnc	00751$
      007117 7B C7            [12]17925 	mov	r3,#0xc7
      007119 7C 00            [12]17926 	mov	r4,#0x00
      00711B 80 04            [24]17927 	sjmp	00752$
      00711D                      17928 00751$:
      00711D 7B 87            [12]17929 	mov	r3,#0x87
      00711F 7C 00            [12]17930 	mov	r4,#0x00
      007121                      17931 00752$:
      007121 8B 82            [24]17932 	mov	dpl,r3
      007123 75 43 FE         [24]17933 	mov	_LCD_guigio_PARM_2,#___str_158
      007126 75 44 91         [24]17934 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_158 >> 8)
      007129 75 45 80         [24]17935 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      00712C 85 4E 46         [24]17936 	mov	_LCD_guigio_PARM_3,(_gio + 0x0001)
      00712F 85 52 47         [24]17937 	mov	_LCD_guigio_PARM_4,(_phut + 0x0001)
      007132 75 48 FD         [24]17938 	mov	_LCD_guigio_PARM_5,#0xfd
                                  17939 ;	assignBit
      007135 D2 01            [12]17940 	setb	_LCD_guigio_PARM_6
      007137 C0 07            [24]17941 	push	ar7
      007139 C0 06            [24]17942 	push	ar6
      00713B 12 06 DC         [24]17943 	lcall	_LCD_guigio
      00713E 90 91 FE         [24]17944 	mov	dptr,#___str_158
      007141 75 F0 80         [24]17945 	mov	b,#0x80
      007144 12 05 F1         [24]17946 	lcall	_LCD_guichuoi
      007147 D0 06            [24]17947 	pop	ar6
      007149 D0 07            [24]17948 	pop	ar7
      00714B                      17949 00444$:
                                  17950 ;	src\main.c:656: if(so_motor>2){
      00714B 90 01 2F         [24]17951 	mov	dptr,#_so_motor
      00714E E0               [24]17952 	movx	a,@dptr
      00714F FC               [12]17953 	mov  r4,a
      007150 24 FD            [12]17954 	add	a,#0xff - 0x02
      007152 40 03            [24]17955 	jc	02649$
      007154 02 82 23         [24]17956 	ljmp	00643$
      007157                      17957 02649$:
                                  17958 ;	src\main.c:657: LCD_guigio(0xc0,"  ",gio[2],phut[2],253,1);
      007157 75 43 FE         [24]17959 	mov	_LCD_guigio_PARM_2,#___str_158
      00715A 75 44 91         [24]17960 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_158 >> 8)
      00715D 75 45 80         [24]17961 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      007160 85 4F 46         [24]17962 	mov	_LCD_guigio_PARM_3,(_gio + 0x0002)
      007163 85 53 47         [24]17963 	mov	_LCD_guigio_PARM_4,(_phut + 0x0002)
      007166 75 48 FD         [24]17964 	mov	_LCD_guigio_PARM_5,#0xfd
                                  17965 ;	assignBit
      007169 D2 01            [12]17966 	setb	_LCD_guigio_PARM_6
      00716B 75 82 C0         [24]17967 	mov	dpl,#0xc0
      00716E C0 07            [24]17968 	push	ar7
      007170 C0 06            [24]17969 	push	ar6
      007172 12 06 DC         [24]17970 	lcall	_LCD_guigio
      007175 D0 06            [24]17971 	pop	ar6
      007177 D0 07            [24]17972 	pop	ar7
                                  17973 ;	src\main.c:658: if(so_motor==4){LCD_guigio(0xc7,"  ",gio[3],phut[3],253,1);LCD_guichuoi("  ");}
      007179 90 01 2F         [24]17974 	mov	dptr,#_so_motor
      00717C E0               [24]17975 	movx	a,@dptr
      00717D FC               [12]17976 	mov	r4,a
      00717E BC 04 2E         [24]17977 	cjne	r4,#0x04,00446$
      007181 75 43 FE         [24]17978 	mov	_LCD_guigio_PARM_2,#___str_158
      007184 75 44 91         [24]17979 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_158 >> 8)
      007187 75 45 80         [24]17980 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      00718A 85 50 46         [24]17981 	mov	_LCD_guigio_PARM_3,(_gio + 0x0003)
      00718D 85 54 47         [24]17982 	mov	_LCD_guigio_PARM_4,(_phut + 0x0003)
      007190 75 48 FD         [24]17983 	mov	_LCD_guigio_PARM_5,#0xfd
                                  17984 ;	assignBit
      007193 D2 01            [12]17985 	setb	_LCD_guigio_PARM_6
      007195 75 82 C7         [24]17986 	mov	dpl,#0xc7
      007198 C0 07            [24]17987 	push	ar7
      00719A C0 06            [24]17988 	push	ar6
      00719C 12 06 DC         [24]17989 	lcall	_LCD_guigio
      00719F 90 91 FE         [24]17990 	mov	dptr,#___str_158
      0071A2 75 F0 80         [24]17991 	mov	b,#0x80
      0071A5 12 05 F1         [24]17992 	lcall	_LCD_guichuoi
      0071A8 D0 06            [24]17993 	pop	ar6
      0071AA D0 07            [24]17994 	pop	ar7
      0071AC 02 82 23         [24]17995 	ljmp	00643$
      0071AF                      17996 00446$:
                                  17997 ;	src\main.c:659: else LCD_guichuoi("         ");   
      0071AF 90 92 39         [24]17998 	mov	dptr,#___str_165
      0071B2 75 F0 80         [24]17999 	mov	b,#0x80
      0071B5 C0 07            [24]18000 	push	ar7
      0071B7 C0 06            [24]18001 	push	ar6
      0071B9 12 05 F1         [24]18002 	lcall	_LCD_guichuoi
      0071BC D0 06            [24]18003 	pop	ar6
      0071BE D0 07            [24]18004 	pop	ar7
                                  18005 ;	src\main.c:661: break;
      0071C0 02 82 23         [24]18006 	ljmp	00643$
                                  18007 ;	src\main.c:662: case GIOTHUC: LCD_guigio(0xc0,GPS_time?"  GPS  ":(eep_gpson?"   DS  ":" ASIA  "),hour,minute,second,1); 
      0071C3                      18008 00450$:
      0071C3 30 1D 06         [24]18009 	jnb	_GPS_time,00753$
      0071C6 7B A6            [12]18010 	mov	r3,#___str_0
      0071C8 7C 88            [12]18011 	mov	r4,#(___str_0 >> 8)
      0071CA 80 19            [24]18012 	sjmp	00754$
      0071CC                      18013 00753$:
      0071CC 90 F0 02         [24]18014 	mov	dptr,#_eep_gpson
      0071CF E4               [12]18015 	clr	a
      0071D0 93               [24]18016 	movc	a,@a+dptr
      0071D1 60 08            [24]18017 	jz	00755$
      0071D3 75 78 B6         [24]18018 	mov	_main_sloc0_1_0,#___str_2
      0071D6 75 79 88         [24]18019 	mov	(_main_sloc0_1_0 + 1),#(___str_2 >> 8)
      0071D9 80 06            [24]18020 	sjmp	00756$
      0071DB                      18021 00755$:
      0071DB 75 78 AE         [24]18022 	mov	_main_sloc0_1_0,#___str_1
      0071DE 75 79 88         [24]18023 	mov	(_main_sloc0_1_0 + 1),#(___str_1 >> 8)
      0071E1                      18024 00756$:
      0071E1 AB 78            [24]18025 	mov	r3,_main_sloc0_1_0
      0071E3 AC 79            [24]18026 	mov	r4,(_main_sloc0_1_0 + 1)
      0071E5                      18027 00754$:
      0071E5 8B 43            [24]18028 	mov	_LCD_guigio_PARM_2,r3
      0071E7 8C 44            [24]18029 	mov	(_LCD_guigio_PARM_2 + 1),r4
      0071E9 75 45 80         [24]18030 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      0071EC 85 4B 46         [24]18031 	mov	_LCD_guigio_PARM_3,_hour
      0071EF 85 4A 47         [24]18032 	mov	_LCD_guigio_PARM_4,_minute
      0071F2 85 49 48         [24]18033 	mov	_LCD_guigio_PARM_5,_second
                                  18034 ;	assignBit
      0071F5 D2 01            [12]18035 	setb	_LCD_guigio_PARM_6
      0071F7 75 82 C0         [24]18036 	mov	dpl,#0xc0
      0071FA 12 06 DC         [24]18037 	lcall	_LCD_guigio
                                  18038 ;	src\main.c:663: giotemp=hour;phuttemp=minute;break;
      0071FD AF 4B            [24]18039 	mov	r7,_hour
      0071FF AE 4A            [24]18040 	mov	r6,_minute
      007201 02 82 23         [24]18041 	ljmp	00643$
                                  18042 ;	src\main.c:664: case CANHKIM: LCD_guichuoi("\300MAY 1          ");LCD_blinkXY(DUOI,4);break;
      007204                      18043 00451$:
      007204 90 92 43         [24]18044 	mov	dptr,#___str_166
      007207 75 F0 80         [24]18045 	mov	b,#0x80
      00720A C0 07            [24]18046 	push	ar7
      00720C C0 06            [24]18047 	push	ar6
      00720E 12 05 F1         [24]18048 	lcall	_LCD_guichuoi
      007211 75 3F 04         [24]18049 	mov	_LCD_blinkXY_PARM_2,#0x04
      007214 75 82 C0         [24]18050 	mov	dpl,#0xc0
      007217 12 04 E8         [24]18051 	lcall	_LCD_blinkXY
      00721A D0 06            [24]18052 	pop	ar6
      00721C D0 07            [24]18053 	pop	ar7
      00721E 02 82 23         [24]18054 	ljmp	00643$
                                  18055 ;	src\main.c:665: case MP3TEST: LCD_guigio(0xc0,"000 ",0,0,251,1);LCD_guigio(0xc8," ",day,month,100+year,1);giotemp=phuttemp=song_name=0;
      007221                      18056 00452$:
      007221 75 43 54         [24]18057 	mov	_LCD_guigio_PARM_2,#___str_167
      007224 75 44 92         [24]18058 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_167 >> 8)
      007227 75 45 80         [24]18059 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      00722A 75 46 00         [24]18060 	mov	_LCD_guigio_PARM_3,#0x00
      00722D 75 47 00         [24]18061 	mov	_LCD_guigio_PARM_4,#0x00
      007230 75 48 FB         [24]18062 	mov	_LCD_guigio_PARM_5,#0xfb
                                  18063 ;	assignBit
      007233 D2 01            [12]18064 	setb	_LCD_guigio_PARM_6
      007235 75 82 C0         [24]18065 	mov	dpl,#0xc0
      007238 12 06 DC         [24]18066 	lcall	_LCD_guigio
      00723B 75 43 0D         [24]18067 	mov	_LCD_guigio_PARM_2,#___str_162
      00723E 75 44 92         [24]18068 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_162 >> 8)
      007241 75 45 80         [24]18069 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      007244 90 00 DE         [24]18070 	mov	dptr,#_day
      007247 E0               [24]18071 	movx	a,@dptr
      007248 F5 46            [12]18072 	mov	_LCD_guigio_PARM_3,a
      00724A 90 00 DF         [24]18073 	mov	dptr,#_month
      00724D E0               [24]18074 	movx	a,@dptr
      00724E F5 47            [12]18075 	mov	_LCD_guigio_PARM_4,a
      007250 90 00 E0         [24]18076 	mov	dptr,#_year
      007253 E0               [24]18077 	movx	a,@dptr
      007254 24 64            [12]18078 	add	a,#0x64
      007256 F5 48            [12]18079 	mov	_LCD_guigio_PARM_5,a
                                  18080 ;	assignBit
      007258 D2 01            [12]18081 	setb	_LCD_guigio_PARM_6
      00725A 75 82 C8         [24]18082 	mov	dpl,#0xc8
      00725D 12 06 DC         [24]18083 	lcall	_LCD_guigio
      007260 90 00 F7         [24]18084 	mov	dptr,#_song_name
      007263 E4               [12]18085 	clr	a
      007264 F0               [24]18086 	movx	@dptr,a
      007265 A3               [24]18087 	inc	dptr
      007266 F0               [24]18088 	movx	@dptr,a
      007267 7E 00            [12]18089 	mov	r6,#0x00
      007269 7F 00            [12]18090 	mov	r7,#0x00
                                  18091 ;	src\main.c:666: thutemp = date;ngaytemp = day;thangtemp = month; namtemp = year;
      00726B 90 00 DD         [24]18092 	mov	dptr,#_date
      00726E E0               [24]18093 	movx	a,@dptr
      00726F 90 01 38         [24]18094 	mov	dptr,#_main_thutemp_65536_253
      007272 F0               [24]18095 	movx	@dptr,a
      007273 90 00 DE         [24]18096 	mov	dptr,#_day
      007276 E0               [24]18097 	movx	a,@dptr
      007277 90 01 35         [24]18098 	mov	dptr,#_main_ngaytemp_65536_253
      00727A F0               [24]18099 	movx	@dptr,a
      00727B 90 00 DF         [24]18100 	mov	dptr,#_month
      00727E E0               [24]18101 	movx	a,@dptr
      00727F 90 01 36         [24]18102 	mov	dptr,#_main_thangtemp_65536_253
      007282 F0               [24]18103 	movx	@dptr,a
      007283 90 00 E0         [24]18104 	mov	dptr,#_year
      007286 E0               [24]18105 	movx	a,@dptr
      007287 90 01 37         [24]18106 	mov	dptr,#_main_namtemp_65536_253
      00728A F0               [24]18107 	movx	@dptr,a
                                  18108 ;	src\main.c:667: LCD_guilenh(0xcf);
      00728B 75 82 CF         [24]18109 	mov	dpl,#0xcf
      00728E C0 07            [24]18110 	push	ar7
      007290 C0 06            [24]18111 	push	ar6
      007292 12 05 71         [24]18112 	lcall	_LCD_guilenh
                                  18113 ;	src\main.c:668: LCD_guidulieu(thutemp+'0');
      007295 90 01 38         [24]18114 	mov	dptr,#_main_thutemp_65536_253
      007298 E0               [24]18115 	movx	a,@dptr
      007299 24 30            [12]18116 	add	a,#0x30
      00729B F5 82            [12]18117 	mov	dpl,a
      00729D 12 05 13         [24]18118 	lcall	_LCD_guidulieu
      0072A0 D0 06            [24]18119 	pop	ar6
      0072A2 D0 07            [24]18120 	pop	ar7
                                  18121 ;	src\main.c:669: break;
      0072A4 02 82 23         [24]18122 	ljmp	00643$
                                  18123 ;	src\main.c:670: case DIENTHOAI: if(nosim) LCD_guichuoi("\300  KHONG CO SIM  ");
      0072A7                      18124 00453$:
      0072A7 30 30 14         [24]18125 	jnb	_nosim,00458$
      0072AA 90 92 59         [24]18126 	mov	dptr,#___str_168
      0072AD 75 F0 80         [24]18127 	mov	b,#0x80
      0072B0 C0 07            [24]18128 	push	ar7
      0072B2 C0 06            [24]18129 	push	ar6
      0072B4 12 05 F1         [24]18130 	lcall	_LCD_guichuoi
      0072B7 D0 06            [24]18131 	pop	ar6
      0072B9 D0 07            [24]18132 	pop	ar7
      0072BB 02 82 23         [24]18133 	ljmp	00643$
      0072BE                      18134 00458$:
                                  18135 ;	src\main.c:671: else if(!gsm_pw) LCD_guichuoi("\300  GSM TAT NGUON ");
      0072BE 20 A0 14         [24]18136 	jb	_P20,00455$
      0072C1 90 92 6B         [24]18137 	mov	dptr,#___str_169
      0072C4 75 F0 80         [24]18138 	mov	b,#0x80
      0072C7 C0 07            [24]18139 	push	ar7
      0072C9 C0 06            [24]18140 	push	ar6
      0072CB 12 05 F1         [24]18141 	lcall	_LCD_guichuoi
      0072CE D0 06            [24]18142 	pop	ar6
      0072D0 D0 07            [24]18143 	pop	ar7
      0072D2 02 82 23         [24]18144 	ljmp	00643$
      0072D5                      18145 00455$:
                                  18146 ;	src\main.c:673: kiemtratinhieu();kiemtrataikhoan();
      0072D5 C0 07            [24]18147 	push	ar7
      0072D7 C0 06            [24]18148 	push	ar6
      0072D9 12 18 DA         [24]18149 	lcall	_kiemtratinhieu
      0072DC 12 18 28         [24]18150 	lcall	_kiemtrataikhoan
                                  18151 ;	src\main.c:674: LCD_xoa(DUOI);LCD_guilenh(0xc0);LCD_guichuoi(lenh_sms);
      0072DF 75 82 C0         [24]18152 	mov	dpl,#0xc0
      0072E2 12 05 D2         [24]18153 	lcall	_LCD_xoa
      0072E5 75 82 C0         [24]18154 	mov	dpl,#0xc0
      0072E8 12 05 71         [24]18155 	lcall	_LCD_guilenh
      0072EB 90 00 17         [24]18156 	mov	dptr,#_lenh_sms
      0072EE 75 F0 00         [24]18157 	mov	b,#0x00
      0072F1 12 05 F1         [24]18158 	lcall	_LCD_guichuoi
                                  18159 ;	src\main.c:675: LCD_guilenh(0x80);phone[10]=0;LCD_guichuoi(phone);
      0072F4 75 82 80         [24]18160 	mov	dpl,#0x80
      0072F7 12 05 71         [24]18161 	lcall	_LCD_guilenh
      0072FA 90 00 16         [24]18162 	mov	dptr,#(_phone + 0x000a)
      0072FD E4               [12]18163 	clr	a
      0072FE F0               [24]18164 	movx	@dptr,a
      0072FF 90 00 0C         [24]18165 	mov	dptr,#_phone
      007302 75 F0 00         [24]18166 	mov	b,#0x00
      007305 12 05 F1         [24]18167 	lcall	_LCD_guichuoi
                                  18168 ;	src\main.c:676: LCD_guilenh(0x8e);LCD_guidulieu(signal/10+'0');LCD_guidulieu(signal%10+'0');
      007308 75 82 8E         [24]18169 	mov	dpl,#0x8e
      00730B 12 05 71         [24]18170 	lcall	_LCD_guilenh
      00730E 90 00 FA         [24]18171 	mov	dptr,#_signal
      007311 E0               [24]18172 	movx	a,@dptr
      007312 FC               [12]18173 	mov	r4,a
      007313 7B 00            [12]18174 	mov	r3,#0x00
      007315 75 1B 0A         [24]18175 	mov	__divsint_PARM_2,#0x0a
                                  18176 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      007318 8B 1C            [24]18177 	mov	(__divsint_PARM_2 + 1),r3
      00731A 8C 82            [24]18178 	mov	dpl,r4
      00731C 8B 83            [24]18179 	mov	dph,r3
      00731E 12 84 9D         [24]18180 	lcall	__divsint
      007321 AB 82            [24]18181 	mov	r3,dpl
      007323 74 30            [12]18182 	mov	a,#0x30
      007325 2B               [12]18183 	add	a,r3
      007326 F5 82            [12]18184 	mov	dpl,a
      007328 12 05 13         [24]18185 	lcall	_LCD_guidulieu
      00732B 90 00 FA         [24]18186 	mov	dptr,#_signal
      00732E E0               [24]18187 	movx	a,@dptr
      00732F FC               [12]18188 	mov	r4,a
      007330 7B 00            [12]18189 	mov	r3,#0x00
      007332 75 1B 0A         [24]18190 	mov	__modsint_PARM_2,#0x0a
                                  18191 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      007335 8B 1C            [24]18192 	mov	(__modsint_PARM_2 + 1),r3
      007337 8C 82            [24]18193 	mov	dpl,r4
      007339 8B 83            [24]18194 	mov	dph,r3
      00733B 12 84 67         [24]18195 	lcall	__modsint
      00733E AB 82            [24]18196 	mov	r3,dpl
      007340 74 30            [12]18197 	mov	a,#0x30
      007342 2B               [12]18198 	add	a,r3
      007343 F5 82            [12]18199 	mov	dpl,a
      007345 12 05 13         [24]18200 	lcall	_LCD_guidulieu
      007348 D0 06            [24]18201 	pop	ar6
      00734A D0 07            [24]18202 	pop	ar7
                                  18203 ;	src\main.c:678: break;
      00734C 02 82 23         [24]18204 	ljmp	00643$
                                  18205 ;	src\main.c:679: case DATE:  LCD_guichuoi("\300  ");LCD_guidulieu(day/10+'0');LCD_guidulieu(day%10+'0');
      00734F                      18206 00460$:
      00734F 90 92 7D         [24]18207 	mov	dptr,#___str_170
      007352 75 F0 80         [24]18208 	mov	b,#0x80
      007355 C0 07            [24]18209 	push	ar7
      007357 C0 06            [24]18210 	push	ar6
      007359 12 05 F1         [24]18211 	lcall	_LCD_guichuoi
      00735C 90 00 DE         [24]18212 	mov	dptr,#_day
      00735F E0               [24]18213 	movx	a,@dptr
      007360 FC               [12]18214 	mov	r4,a
      007361 7B 00            [12]18215 	mov	r3,#0x00
      007363 75 1B 0A         [24]18216 	mov	__divsint_PARM_2,#0x0a
                                  18217 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      007366 8B 1C            [24]18218 	mov	(__divsint_PARM_2 + 1),r3
      007368 8C 82            [24]18219 	mov	dpl,r4
      00736A 8B 83            [24]18220 	mov	dph,r3
      00736C 12 84 9D         [24]18221 	lcall	__divsint
      00736F AB 82            [24]18222 	mov	r3,dpl
      007371 74 30            [12]18223 	mov	a,#0x30
      007373 2B               [12]18224 	add	a,r3
      007374 F5 82            [12]18225 	mov	dpl,a
      007376 12 05 13         [24]18226 	lcall	_LCD_guidulieu
      007379 90 00 DE         [24]18227 	mov	dptr,#_day
      00737C E0               [24]18228 	movx	a,@dptr
      00737D FC               [12]18229 	mov	r4,a
      00737E 7B 00            [12]18230 	mov	r3,#0x00
      007380 75 1B 0A         [24]18231 	mov	__modsint_PARM_2,#0x0a
                                  18232 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      007383 8B 1C            [24]18233 	mov	(__modsint_PARM_2 + 1),r3
      007385 8C 82            [24]18234 	mov	dpl,r4
      007387 8B 83            [24]18235 	mov	dph,r3
      007389 12 84 67         [24]18236 	lcall	__modsint
      00738C AB 82            [24]18237 	mov	r3,dpl
      00738E 74 30            [12]18238 	mov	a,#0x30
      007390 2B               [12]18239 	add	a,r3
      007391 F5 82            [12]18240 	mov	dpl,a
      007393 12 05 13         [24]18241 	lcall	_LCD_guidulieu
                                  18242 ;	src\main.c:680: LCD_guichuoi(" - ");LCD_guidulieu(month/10+'0');LCD_guidulieu(month%10+'0');
      007396 90 92 81         [24]18243 	mov	dptr,#___str_171
      007399 75 F0 80         [24]18244 	mov	b,#0x80
      00739C 12 05 F1         [24]18245 	lcall	_LCD_guichuoi
      00739F 90 00 DF         [24]18246 	mov	dptr,#_month
      0073A2 E0               [24]18247 	movx	a,@dptr
      0073A3 FC               [12]18248 	mov	r4,a
      0073A4 7B 00            [12]18249 	mov	r3,#0x00
      0073A6 75 1B 0A         [24]18250 	mov	__divsint_PARM_2,#0x0a
                                  18251 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      0073A9 8B 1C            [24]18252 	mov	(__divsint_PARM_2 + 1),r3
      0073AB 8C 82            [24]18253 	mov	dpl,r4
      0073AD 8B 83            [24]18254 	mov	dph,r3
      0073AF 12 84 9D         [24]18255 	lcall	__divsint
      0073B2 AB 82            [24]18256 	mov	r3,dpl
      0073B4 74 30            [12]18257 	mov	a,#0x30
      0073B6 2B               [12]18258 	add	a,r3
      0073B7 F5 82            [12]18259 	mov	dpl,a
      0073B9 12 05 13         [24]18260 	lcall	_LCD_guidulieu
      0073BC 90 00 DF         [24]18261 	mov	dptr,#_month
      0073BF E0               [24]18262 	movx	a,@dptr
      0073C0 FC               [12]18263 	mov	r4,a
      0073C1 7B 00            [12]18264 	mov	r3,#0x00
      0073C3 75 1B 0A         [24]18265 	mov	__modsint_PARM_2,#0x0a
                                  18266 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0073C6 8B 1C            [24]18267 	mov	(__modsint_PARM_2 + 1),r3
      0073C8 8C 82            [24]18268 	mov	dpl,r4
      0073CA 8B 83            [24]18269 	mov	dph,r3
      0073CC 12 84 67         [24]18270 	lcall	__modsint
      0073CF AB 82            [24]18271 	mov	r3,dpl
      0073D1 74 30            [12]18272 	mov	a,#0x30
      0073D3 2B               [12]18273 	add	a,r3
      0073D4 F5 82            [12]18274 	mov	dpl,a
      0073D6 12 05 13         [24]18275 	lcall	_LCD_guidulieu
                                  18276 ;	src\main.c:681: LCD_guichuoi(" - ");LCD_guidulieu(year/10+'0');LCD_guidulieu(year%10+'0');LCD_guichuoi("  ");
      0073D9 90 92 81         [24]18277 	mov	dptr,#___str_171
      0073DC 75 F0 80         [24]18278 	mov	b,#0x80
      0073DF 12 05 F1         [24]18279 	lcall	_LCD_guichuoi
      0073E2 90 00 E0         [24]18280 	mov	dptr,#_year
      0073E5 E0               [24]18281 	movx	a,@dptr
      0073E6 FC               [12]18282 	mov	r4,a
      0073E7 7B 00            [12]18283 	mov	r3,#0x00
      0073E9 75 1B 0A         [24]18284 	mov	__divsint_PARM_2,#0x0a
                                  18285 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      0073EC 8B 1C            [24]18286 	mov	(__divsint_PARM_2 + 1),r3
      0073EE 8C 82            [24]18287 	mov	dpl,r4
      0073F0 8B 83            [24]18288 	mov	dph,r3
      0073F2 12 84 9D         [24]18289 	lcall	__divsint
      0073F5 AB 82            [24]18290 	mov	r3,dpl
      0073F7 74 30            [12]18291 	mov	a,#0x30
      0073F9 2B               [12]18292 	add	a,r3
      0073FA F5 82            [12]18293 	mov	dpl,a
      0073FC 12 05 13         [24]18294 	lcall	_LCD_guidulieu
      0073FF 90 00 E0         [24]18295 	mov	dptr,#_year
      007402 E0               [24]18296 	movx	a,@dptr
      007403 FC               [12]18297 	mov	r4,a
      007404 7B 00            [12]18298 	mov	r3,#0x00
      007406 75 1B 0A         [24]18299 	mov	__modsint_PARM_2,#0x0a
                                  18300 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      007409 8B 1C            [24]18301 	mov	(__modsint_PARM_2 + 1),r3
      00740B 8C 82            [24]18302 	mov	dpl,r4
      00740D 8B 83            [24]18303 	mov	dph,r3
      00740F 12 84 67         [24]18304 	lcall	__modsint
      007412 AB 82            [24]18305 	mov	r3,dpl
      007414 74 30            [12]18306 	mov	a,#0x30
      007416 2B               [12]18307 	add	a,r3
      007417 F5 82            [12]18308 	mov	dpl,a
      007419 12 05 13         [24]18309 	lcall	_LCD_guidulieu
      00741C 90 91 FE         [24]18310 	mov	dptr,#___str_158
      00741F 75 F0 80         [24]18311 	mov	b,#0x80
      007422 12 05 F1         [24]18312 	lcall	_LCD_guichuoi
      007425 D0 06            [24]18313 	pop	ar6
      007427 D0 07            [24]18314 	pop	ar7
                                  18315 ;	src\main.c:685: break;
      007429 02 82 23         [24]18316 	ljmp	00643$
      00742C                      18317 00465$:
                                  18318 ;	src\main.c:688: LCD_guigio(0xc0,GPS_time?"  GPS  ":(eep_gpson?"   DS  ":" ASIA  "),hour,minute,mode_wait,flip_pulse);
      00742C 30 1D 06         [24]18319 	jnb	_GPS_time,00757$
      00742F 7B A6            [12]18320 	mov	r3,#___str_0
      007431 7C 88            [12]18321 	mov	r4,#(___str_0 >> 8)
      007433 80 19            [24]18322 	sjmp	00758$
      007435                      18323 00757$:
      007435 90 F0 02         [24]18324 	mov	dptr,#_eep_gpson
      007438 E4               [12]18325 	clr	a
      007439 93               [24]18326 	movc	a,@a+dptr
      00743A 60 08            [24]18327 	jz	00759$
      00743C 75 78 B6         [24]18328 	mov	_main_sloc0_1_0,#___str_2
      00743F 75 79 88         [24]18329 	mov	(_main_sloc0_1_0 + 1),#(___str_2 >> 8)
      007442 80 06            [24]18330 	sjmp	00760$
      007444                      18331 00759$:
      007444 75 78 AE         [24]18332 	mov	_main_sloc0_1_0,#___str_1
      007447 75 79 88         [24]18333 	mov	(_main_sloc0_1_0 + 1),#(___str_1 >> 8)
      00744A                      18334 00760$:
      00744A AB 78            [24]18335 	mov	r3,_main_sloc0_1_0
      00744C AC 79            [24]18336 	mov	r4,(_main_sloc0_1_0 + 1)
      00744E                      18337 00758$:
      00744E 8B 43            [24]18338 	mov	_LCD_guigio_PARM_2,r3
      007450 8C 44            [24]18339 	mov	(_LCD_guigio_PARM_2 + 1),r4
      007452 75 45 80         [24]18340 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      007455 90 00 F6         [24]18341 	mov	dptr,#_mode_wait
      007458 E0               [24]18342 	movx	a,@dptr
      007459 F5 48            [12]18343 	mov	_LCD_guigio_PARM_5,a
      00745B 85 4B 46         [24]18344 	mov	_LCD_guigio_PARM_3,_hour
      00745E 85 4A 47         [24]18345 	mov	_LCD_guigio_PARM_4,_minute
                                  18346 ;	assignBit
      007461 A2 20            [12]18347 	mov	c,_flip_pulse
      007463 92 01            [24]18348 	mov	_LCD_guigio_PARM_6,c
      007465 75 82 C0         [24]18349 	mov	dpl,#0xc0
      007468 C0 07            [24]18350 	push	ar7
      00746A C0 06            [24]18351 	push	ar6
      00746C 12 06 DC         [24]18352 	lcall	_LCD_guigio
                                  18353 ;	src\main.c:689: LCD_chop(TREN,mode_select[sub_mode]);		
      00746F 90 00 F5         [24]18354 	mov	dptr,#_sub_mode
      007472 E0               [24]18355 	movx	a,@dptr
      007473 75 F0 11         [24]18356 	mov	b,#0x11
      007476 A4               [48]18357 	mul	ab
      007477 24 08            [12]18358 	add	a,#_mode_select
      007479 FB               [12]18359 	mov	r3,a
      00747A 74 85            [12]18360 	mov	a,#(_mode_select >> 8)
      00747C 35 F0            [12]18361 	addc	a,b
      00747E FC               [12]18362 	mov	r4,a
      00747F 8B 40            [24]18363 	mov	_LCD_chop_PARM_2,r3
      007481 8C 41            [24]18364 	mov	(_LCD_chop_PARM_2 + 1),r4
      007483 75 42 80         [24]18365 	mov	(_LCD_chop_PARM_2 + 2),#0x80
      007486 75 82 80         [24]18366 	mov	dpl,#0x80
      007489 12 04 F8         [24]18367 	lcall	_LCD_chop
      00748C D0 06            [24]18368 	pop	ar6
      00748E D0 07            [24]18369 	pop	ar7
                                  18370 ;	src\main.c:690: break;
      007490 02 82 23         [24]18371 	ljmp	00643$
                                  18372 ;	src\main.c:691: case GIOKIM:
      007493                      18373 00466$:
                                  18374 ;	src\main.c:692: LCD_blinkXY((sub_mode<8 && so_motor>2)?TREN:DUOI,so_motor==1?(7+sub_mode+sub_mode/2):(2+sub_mode%8+sub_mode%8/2+sub_mode%8/4));
      007493 90 00 F5         [24]18375 	mov	dptr,#_sub_mode
      007496 E0               [24]18376 	movx	a,@dptr
      007497 FC               [12]18377 	mov	r4,a
      007498 BC 08 00         [24]18378 	cjne	r4,#0x08,02658$
      00749B                      18379 02658$:
      00749B 50 0F            [24]18380 	jnc	00761$
      00749D 90 01 2F         [24]18381 	mov	dptr,#_so_motor
      0074A0 E0               [24]18382 	movx	a,@dptr
      0074A1 FC               [12]18383 	mov  r4,a
      0074A2 24 FD            [12]18384 	add	a,#0xff - 0x02
      0074A4 50 06            [24]18385 	jnc	00761$
      0074A6 7B 80            [12]18386 	mov	r3,#0x80
      0074A8 7C 00            [12]18387 	mov	r4,#0x00
      0074AA 80 04            [24]18388 	sjmp	00762$
      0074AC                      18389 00761$:
      0074AC 7B C0            [12]18390 	mov	r3,#0xc0
      0074AE 7C 00            [12]18391 	mov	r4,#0x00
      0074B0                      18392 00762$:
      0074B0 90 01 2F         [24]18393 	mov	dptr,#_so_motor
      0074B3 E0               [24]18394 	movx	a,@dptr
      0074B4 FC               [12]18395 	mov	r4,a
      0074B5 BC 01 32         [24]18396 	cjne	r4,#0x01,00766$
      0074B8 C0 03            [24]18397 	push	ar3
      0074BA 90 00 F5         [24]18398 	mov	dptr,#_sub_mode
      0074BD E0               [24]18399 	movx	a,@dptr
      0074BE FC               [12]18400 	mov	r4,a
      0074BF 24 07            [12]18401 	add	a,#0x07
      0074C1 FA               [12]18402 	mov	r2,a
      0074C2 8C 03            [24]18403 	mov	ar3,r4
      0074C4 7C 00            [12]18404 	mov	r4,#0x00
      0074C6 75 1B 02         [24]18405 	mov	__divsint_PARM_2,#0x02
                                  18406 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      0074C9 8C 1C            [24]18407 	mov	(__divsint_PARM_2 + 1),r4
      0074CB 8B 82            [24]18408 	mov	dpl,r3
      0074CD 8C 83            [24]18409 	mov	dph,r4
      0074CF C0 07            [24]18410 	push	ar7
      0074D1 C0 06            [24]18411 	push	ar6
      0074D3 C0 02            [24]18412 	push	ar2
      0074D5 12 84 9D         [24]18413 	lcall	__divsint
      0074D8 AB 82            [24]18414 	mov	r3,dpl
      0074DA AC 83            [24]18415 	mov	r4,dph
      0074DC D0 02            [24]18416 	pop	ar2
      0074DE D0 06            [24]18417 	pop	ar6
      0074E0 D0 07            [24]18418 	pop	ar7
      0074E2 EB               [12]18419 	mov	a,r3
      0074E3 2A               [12]18420 	add	a,r2
      0074E4 F5 7A            [12]18421 	mov	_main_sloc1_1_0,a
      0074E6 D0 03            [24]18422 	pop	ar3
      0074E8 80 4D            [24]18423 	sjmp	00767$
      0074EA                      18424 00766$:
      0074EA C0 03            [24]18425 	push	ar3
      0074EC 90 00 F5         [24]18426 	mov	dptr,#_sub_mode
      0074EF E0               [24]18427 	movx	a,@dptr
      0074F0 54 07            [12]18428 	anl	a,#0x07
      0074F2 F5 7B            [12]18429 	mov	_main_sloc2_1_0,a
      0074F4 75 7C 00         [24]18430 	mov	(_main_sloc2_1_0 + 1),#0x00
      0074F7 AB 7B            [24]18431 	mov	r3,_main_sloc2_1_0
      0074F9 74 02            [12]18432 	mov	a,#0x02
      0074FB 2B               [12]18433 	add	a,r3
      0074FC F5 78            [12]18434 	mov	_main_sloc0_1_0,a
      0074FE 75 1B 02         [24]18435 	mov	__divsint_PARM_2,#0x02
      007501 75 1C 00         [24]18436 	mov	(__divsint_PARM_2 + 1),#0x00
      007504 85 7B 82         [24]18437 	mov	dpl,_main_sloc2_1_0
      007507 85 7C 83         [24]18438 	mov	dph,(_main_sloc2_1_0 + 1)
      00750A C0 07            [24]18439 	push	ar7
      00750C C0 06            [24]18440 	push	ar6
      00750E 12 84 9D         [24]18441 	lcall	__divsint
      007511 E5 82            [12]18442 	mov	a,dpl
      007513 25 78            [12]18443 	add	a,_main_sloc0_1_0
      007515 FB               [12]18444 	mov	r3,a
      007516 75 1B 04         [24]18445 	mov	__divsint_PARM_2,#0x04
      007519 75 1C 00         [24]18446 	mov	(__divsint_PARM_2 + 1),#0x00
      00751C 85 7B 82         [24]18447 	mov	dpl,_main_sloc2_1_0
      00751F 85 7C 83         [24]18448 	mov	dph,(_main_sloc2_1_0 + 1)
      007522 C0 03            [24]18449 	push	ar3
      007524 12 84 9D         [24]18450 	lcall	__divsint
      007527 AA 82            [24]18451 	mov	r2,dpl
      007529 AC 83            [24]18452 	mov	r4,dph
      00752B D0 03            [24]18453 	pop	ar3
      00752D D0 06            [24]18454 	pop	ar6
      00752F D0 07            [24]18455 	pop	ar7
      007531 EA               [12]18456 	mov	a,r2
      007532 2B               [12]18457 	add	a,r3
      007533 F5 7A            [12]18458 	mov	_main_sloc1_1_0,a
                                  18459 ;	src\main.c:973: WATCHDOG;
      007535 D0 03            [24]18460 	pop	ar3
                                  18461 ;	src\main.c:692: LCD_blinkXY((sub_mode<8 && so_motor>2)?TREN:DUOI,so_motor==1?(7+sub_mode+sub_mode/2):(2+sub_mode%8+sub_mode%8/2+sub_mode%8/4));
      007537                      18462 00767$:
      007537 85 7A 3F         [24]18463 	mov	_LCD_blinkXY_PARM_2,_main_sloc1_1_0
      00753A 8B 82            [24]18464 	mov	dpl,r3
      00753C C0 07            [24]18465 	push	ar7
      00753E C0 06            [24]18466 	push	ar6
      007540 12 04 E8         [24]18467 	lcall	_LCD_blinkXY
      007543 D0 06            [24]18468 	pop	ar6
      007545 D0 07            [24]18469 	pop	ar7
                                  18470 ;	src\main.c:693: if(!phim_mode_doi){
      007547 90 00 F1         [24]18471 	mov	dptr,#_phim_mode_doi
      00754A E0               [24]18472 	movx	a,@dptr
      00754B 70 6C            [24]18473 	jnz	00468$
                                  18474 ;	src\main.c:694: LCD_noblink();
      00754D C0 07            [24]18475 	push	ar7
      00754F C0 06            [24]18476 	push	ar6
      007551 12 05 CC         [24]18477 	lcall	_LCD_noblink
                                  18478 ;	src\main.c:695: sub_mode = mode;
      007554 90 00 F4         [24]18479 	mov	dptr,#_mode
      007557 E0               [24]18480 	movx	a,@dptr
      007558 90 00 F5         [24]18481 	mov	dptr,#_sub_mode
      00755B F0               [24]18482 	movx	@dptr,a
                                  18483 ;	src\main.c:696: mode = SELECT;
      00755C 90 00 F4         [24]18484 	mov	dptr,#_mode
      00755F 74 07            [12]18485 	mov	a,#0x07
      007561 F0               [24]18486 	movx	@dptr,a
                                  18487 ;	src\main.c:697: gio[0] = gio[0]%12;
      007562 AB 4D            [24]18488 	mov	r3,_gio
      007564 7C 00            [12]18489 	mov	r4,#0x00
      007566 75 1B 0C         [24]18490 	mov	__modsint_PARM_2,#0x0c
                                  18491 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      007569 8C 1C            [24]18492 	mov	(__modsint_PARM_2 + 1),r4
      00756B 8B 82            [24]18493 	mov	dpl,r3
      00756D 8C 83            [24]18494 	mov	dph,r4
      00756F 12 84 67         [24]18495 	lcall	__modsint
      007572 AB 82            [24]18496 	mov	r3,dpl
      007574 8B 4D            [24]18497 	mov	_gio,r3
                                  18498 ;	src\main.c:698: gio[1] = gio[1]%12;
      007576 AB 4E            [24]18499 	mov	r3,(_gio + 0x0001)
      007578 7C 00            [12]18500 	mov	r4,#0x00
      00757A 75 1B 0C         [24]18501 	mov	__modsint_PARM_2,#0x0c
                                  18502 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      00757D 8C 1C            [24]18503 	mov	(__modsint_PARM_2 + 1),r4
      00757F 8B 82            [24]18504 	mov	dpl,r3
      007581 8C 83            [24]18505 	mov	dph,r4
      007583 12 84 67         [24]18506 	lcall	__modsint
      007586 AB 82            [24]18507 	mov	r3,dpl
      007588 8B 4E            [24]18508 	mov	(_gio + 0x0001),r3
                                  18509 ;	src\main.c:699: gio[2] = gio[2]%12;
      00758A AB 4F            [24]18510 	mov	r3,(_gio + 0x0002)
      00758C 7C 00            [12]18511 	mov	r4,#0x00
      00758E 75 1B 0C         [24]18512 	mov	__modsint_PARM_2,#0x0c
                                  18513 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      007591 8C 1C            [24]18514 	mov	(__modsint_PARM_2 + 1),r4
      007593 8B 82            [24]18515 	mov	dpl,r3
      007595 8C 83            [24]18516 	mov	dph,r4
      007597 12 84 67         [24]18517 	lcall	__modsint
      00759A AB 82            [24]18518 	mov	r3,dpl
      00759C 8B 4F            [24]18519 	mov	(_gio + 0x0002),r3
                                  18520 ;	src\main.c:700: gio[3] = gio[3]%12;
      00759E AB 50            [24]18521 	mov	r3,(_gio + 0x0003)
      0075A0 7C 00            [12]18522 	mov	r4,#0x00
      0075A2 75 1B 0C         [24]18523 	mov	__modsint_PARM_2,#0x0c
                                  18524 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0075A5 8C 1C            [24]18525 	mov	(__modsint_PARM_2 + 1),r4
      0075A7 8B 82            [24]18526 	mov	dpl,r3
      0075A9 8C 83            [24]18527 	mov	dph,r4
      0075AB 12 84 67         [24]18528 	lcall	__modsint
      0075AE AB 82            [24]18529 	mov	r3,dpl
      0075B0 8B 50            [24]18530 	mov	(_gio + 0x0003),r3
                                  18531 ;	src\main.c:701: luu_gio_kim();	
      0075B2 12 0F 81         [24]18532 	lcall	_luu_gio_kim
      0075B5 D0 06            [24]18533 	pop	ar6
      0075B7 D0 07            [24]18534 	pop	ar7
      0075B9                      18535 00468$:
                                  18536 ;	src\main.c:703: if(phim_cong_nhan){
                                  18537 ;	src\main.c:704: phim_cong_nhan = 0;
                                  18538 ;	assignBit
      0075B9 10 2A 03         [24]18539 	jbc	_phim_cong_nhan,02664$
      0075BC 02 78 41         [24]18540 	ljmp	00509$
      0075BF                      18541 02664$:
                                  18542 ;	src\main.c:705: mode_wait = TIME_MODE_WAIT;
      0075BF 90 00 F6         [24]18543 	mov	dptr,#_mode_wait
      0075C2 74 3C            [12]18544 	mov	a,#0x3c
      0075C4 F0               [24]18545 	movx	@dptr,a
                                  18546 ;	src\main.c:706: switch(sub_mode){
      0075C5 90 00 F5         [24]18547 	mov	dptr,#_sub_mode
      0075C8 E0               [24]18548 	movx	a,@dptr
      0075C9 FC               [12]18549 	mov  r4,a
      0075CA 24 F0            [12]18550 	add	a,#0xff - 0x0f
      0075CC 50 03            [24]18551 	jnc	02665$
      0075CE 02 77 29         [24]18552 	ljmp	00499$
      0075D1                      18553 02665$:
      0075D1 EC               [12]18554 	mov	a,r4
      0075D2 24 0A            [12]18555 	add	a,#(02666$-3-.)
      0075D4 83               [24]18556 	movc	a,@a+pc
      0075D5 F5 82            [12]18557 	mov	dpl,a
      0075D7 EC               [12]18558 	mov	a,r4
      0075D8 24 14            [12]18559 	add	a,#(02667$-3-.)
      0075DA 83               [24]18560 	movc	a,@a+pc
      0075DB F5 83            [12]18561 	mov	dph,a
      0075DD E4               [12]18562 	clr	a
      0075DE 73               [24]18563 	jmp	@a+dptr
      0075DF                      18564 02666$:
      0075DF FF                   18565 	.db	00472$
      0075E0 4D                   18566 	.db	00479$
      0075E1 B7                   18567 	.db	00489$
      0075E2 E9                   18568 	.db	00496$
      0075E3 FF                   18569 	.db	00472$
      0075E4 4D                   18570 	.db	00479$
      0075E5 B7                   18571 	.db	00489$
      0075E6 E9                   18572 	.db	00496$
      0075E7 FF                   18573 	.db	00472$
      0075E8 4D                   18574 	.db	00479$
      0075E9 B7                   18575 	.db	00489$
      0075EA E9                   18576 	.db	00496$
      0075EB FF                   18577 	.db	00472$
      0075EC 4D                   18578 	.db	00479$
      0075ED B7                   18579 	.db	00489$
      0075EE E9                   18580 	.db	00496$
      0075EF                      18581 02667$:
      0075EF 75                   18582 	.db	00472$>>8
      0075F0 76                   18583 	.db	00479$>>8
      0075F1 76                   18584 	.db	00489$>>8
      0075F2 76                   18585 	.db	00496$>>8
      0075F3 75                   18586 	.db	00472$>>8
      0075F4 76                   18587 	.db	00479$>>8
      0075F5 76                   18588 	.db	00489$>>8
      0075F6 76                   18589 	.db	00496$>>8
      0075F7 75                   18590 	.db	00472$>>8
      0075F8 76                   18591 	.db	00479$>>8
      0075F9 76                   18592 	.db	00489$>>8
      0075FA 76                   18593 	.db	00496$>>8
      0075FB 75                   18594 	.db	00472$>>8
      0075FC 76                   18595 	.db	00479$>>8
      0075FD 76                   18596 	.db	00489$>>8
      0075FE 76                   18597 	.db	00496$>>8
                                  18598 ;	src\main.c:708: case GIO3CHUC : case GIO4CHUC  :
      0075FF                      18599 00472$:
                                  18600 ;	src\main.c:709: if(gio[sub_mode/4]>13)gio[sub_mode/4]%=10;
      0075FF 8C 02            [24]18601 	mov	ar2,r4
      007601 7B 00            [12]18602 	mov	r3,#0x00
      007603 75 1B 04         [24]18603 	mov	__divsint_PARM_2,#0x04
                                  18604 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      007606 8B 1C            [24]18605 	mov	(__divsint_PARM_2 + 1),r3
      007608 8A 82            [24]18606 	mov	dpl,r2
      00760A 8B 83            [24]18607 	mov	dph,r3
      00760C C0 07            [24]18608 	push	ar7
      00760E C0 06            [24]18609 	push	ar6
      007610 12 84 9D         [24]18610 	lcall	__divsint
      007613 AA 82            [24]18611 	mov	r2,dpl
      007615 D0 06            [24]18612 	pop	ar6
      007617 D0 07            [24]18613 	pop	ar7
      007619 EA               [12]18614 	mov	a,r2
      00761A 24 4D            [12]18615 	add	a,#_gio
      00761C F9               [12]18616 	mov	r1,a
      00761D E7               [12]18617 	mov	a,@r1
      00761E FB               [12]18618 	mov	r3,a
      00761F 24 F2            [12]18619 	add	a,#0xff - 0x0d
      007621 50 23            [24]18620 	jnc	00474$
      007623 C0 06            [24]18621 	push	ar6
      007625 8B 02            [24]18622 	mov	ar2,r3
      007627 7E 00            [12]18623 	mov	r6,#0x00
      007629 75 1B 0A         [24]18624 	mov	__modsint_PARM_2,#0x0a
                                  18625 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      00762C 8E 1C            [24]18626 	mov	(__modsint_PARM_2 + 1),r6
      00762E 8A 82            [24]18627 	mov	dpl,r2
      007630 8E 83            [24]18628 	mov	dph,r6
      007632 C0 07            [24]18629 	push	ar7
      007634 C0 01            [24]18630 	push	ar1
      007636 12 84 67         [24]18631 	lcall	__modsint
      007639 AA 82            [24]18632 	mov	r2,dpl
      00763B D0 01            [24]18633 	pop	ar1
      00763D D0 07            [24]18634 	pop	ar7
      00763F A7 02            [24]18635 	mov	@r1,ar2
      007641 D0 06            [24]18636 	pop	ar6
      007643 02 77 29         [24]18637 	ljmp	00499$
      007646                      18638 00474$:
                                  18639 ;	src\main.c:710: else gio[sub_mode/4] +=10;
      007646 74 0A            [12]18640 	mov	a,#0x0a
      007648 2B               [12]18641 	add	a,r3
      007649 F7               [12]18642 	mov	@r1,a
                                  18643 ;	src\main.c:711: break;
      00764A 02 77 29         [24]18644 	ljmp	00499$
                                  18645 ;	src\main.c:713: case GIO3DVI  : case GIO4DVI   :
      00764D                      18646 00479$:
                                  18647 ;	src\main.c:714: if(gio[sub_mode/4]>22) gio[sub_mode/4] = 20;
      00764D 8C 02            [24]18648 	mov	ar2,r4
      00764F 7B 00            [12]18649 	mov	r3,#0x00
      007651 75 1B 04         [24]18650 	mov	__divsint_PARM_2,#0x04
                                  18651 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      007654 8B 1C            [24]18652 	mov	(__divsint_PARM_2 + 1),r3
      007656 8A 82            [24]18653 	mov	dpl,r2
      007658 8B 83            [24]18654 	mov	dph,r3
      00765A C0 07            [24]18655 	push	ar7
      00765C C0 06            [24]18656 	push	ar6
      00765E 12 84 9D         [24]18657 	lcall	__divsint
      007661 AA 82            [24]18658 	mov	r2,dpl
      007663 AB 83            [24]18659 	mov	r3,dph
      007665 D0 06            [24]18660 	pop	ar6
      007667 D0 07            [24]18661 	pop	ar7
      007669 EA               [12]18662 	mov	a,r2
      00766A 24 4D            [12]18663 	add	a,#_gio
      00766C F9               [12]18664 	mov	r1,a
      00766D E7               [12]18665 	mov	a,@r1
      00766E F5 7B            [12]18666 	mov	_main_sloc2_1_0,a
      007670 24 E9            [12]18667 	add	a,#0xff - 0x16
      007672 50 05            [24]18668 	jnc	00484$
      007674 77 14            [12]18669 	mov	@r1,#0x14
      007676 02 77 29         [24]18670 	ljmp	00499$
      007679                      18671 00484$:
                                  18672 ;	src\main.c:715: else if(gio[sub_mode/4]%10==9) gio[sub_mode/4]-=9;
      007679 C0 01            [24]18673 	push	ar1
      00767B AA 7B            [24]18674 	mov	r2,_main_sloc2_1_0
      00767D 7B 00            [12]18675 	mov	r3,#0x00
      00767F 75 1B 0A         [24]18676 	mov	__modsint_PARM_2,#0x0a
                                  18677 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      007682 8B 1C            [24]18678 	mov	(__modsint_PARM_2 + 1),r3
      007684 8A 82            [24]18679 	mov	dpl,r2
      007686 8B 83            [24]18680 	mov	dph,r3
      007688 C0 07            [24]18681 	push	ar7
      00768A C0 06            [24]18682 	push	ar6
      00768C C0 01            [24]18683 	push	ar1
      00768E 12 84 67         [24]18684 	lcall	__modsint
      007691 AA 82            [24]18685 	mov	r2,dpl
      007693 AB 83            [24]18686 	mov	r3,dph
      007695 D0 01            [24]18687 	pop	ar1
      007697 D0 06            [24]18688 	pop	ar6
      007699 D0 07            [24]18689 	pop	ar7
      00769B BA 09 05         [24]18690 	cjne	r2,#0x09,02670$
      00769E BB 00 02         [24]18691 	cjne	r3,#0x00,02670$
      0076A1 80 04            [24]18692 	sjmp	02671$
      0076A3                      18693 02670$:
      0076A3 D0 01            [24]18694 	pop	ar1
      0076A5 80 0A            [24]18695 	sjmp	00481$
      0076A7                      18696 02671$:
      0076A7 D0 01            [24]18697 	pop	ar1
      0076A9 E5 7B            [12]18698 	mov	a,_main_sloc2_1_0
      0076AB FB               [12]18699 	mov	r3,a
      0076AC 24 F7            [12]18700 	add	a,#0xf7
      0076AE F7               [12]18701 	mov	@r1,a
      0076AF 80 78            [24]18702 	sjmp	00499$
      0076B1                      18703 00481$:
                                  18704 ;	src\main.c:716: else gio[sub_mode/4]++;
      0076B1 E5 7B            [12]18705 	mov	a,_main_sloc2_1_0
      0076B3 04               [12]18706 	inc	a
      0076B4 F7               [12]18707 	mov	@r1,a
                                  18708 ;	src\main.c:717: break;
                                  18709 ;	src\main.c:719: case PHUT3CHUC: case PHUT4CHUC :
      0076B5 80 72            [24]18710 	sjmp	00499$
      0076B7                      18711 00489$:
                                  18712 ;	src\main.c:720: if(phut[sub_mode/4]>49) phut[sub_mode/4]-=50;
      0076B7 8C 02            [24]18713 	mov	ar2,r4
      0076B9 7B 00            [12]18714 	mov	r3,#0x00
      0076BB 75 1B 04         [24]18715 	mov	__divsint_PARM_2,#0x04
                                  18716 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      0076BE 8B 1C            [24]18717 	mov	(__divsint_PARM_2 + 1),r3
      0076C0 8A 82            [24]18718 	mov	dpl,r2
      0076C2 8B 83            [24]18719 	mov	dph,r3
      0076C4 C0 07            [24]18720 	push	ar7
      0076C6 C0 06            [24]18721 	push	ar6
      0076C8 12 84 9D         [24]18722 	lcall	__divsint
      0076CB AA 82            [24]18723 	mov	r2,dpl
      0076CD D0 06            [24]18724 	pop	ar6
      0076CF D0 07            [24]18725 	pop	ar7
      0076D1 EA               [12]18726 	mov	a,r2
      0076D2 24 51            [12]18727 	add	a,#_phut
      0076D4 F9               [12]18728 	mov	r1,a
      0076D5 E7               [12]18729 	mov	a,@r1
      0076D6 FB               [12]18730 	mov	r3,a
      0076D7 24 CE            [12]18731 	add	a,#0xff - 0x31
      0076D9 50 08            [24]18732 	jnc	00491$
      0076DB 8B 02            [24]18733 	mov	ar2,r3
      0076DD EA               [12]18734 	mov	a,r2
      0076DE 24 CE            [12]18735 	add	a,#0xce
      0076E0 F7               [12]18736 	mov	@r1,a
      0076E1 80 46            [24]18737 	sjmp	00499$
      0076E3                      18738 00491$:
                                  18739 ;	src\main.c:721: else phut[sub_mode/4]+=10;
      0076E3 74 0A            [12]18740 	mov	a,#0x0a
      0076E5 2B               [12]18741 	add	a,r3
      0076E6 F7               [12]18742 	mov	@r1,a
                                  18743 ;	src\main.c:722: break;
                                  18744 ;	src\main.c:724: case PHUT3DVI : case PHUT4DVI  :
      0076E7 80 40            [24]18745 	sjmp	00499$
      0076E9                      18746 00496$:
                                  18747 ;	src\main.c:725: if(!(++phut[sub_mode/4]%10)) phut[sub_mode/4]-=10;
      0076E9 7B 00            [12]18748 	mov	r3,#0x00
      0076EB 75 1B 04         [24]18749 	mov	__divsint_PARM_2,#0x04
                                  18750 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      0076EE 8B 1C            [24]18751 	mov	(__divsint_PARM_2 + 1),r3
      0076F0 8C 82            [24]18752 	mov	dpl,r4
      0076F2 8B 83            [24]18753 	mov	dph,r3
      0076F4 C0 07            [24]18754 	push	ar7
      0076F6 C0 06            [24]18755 	push	ar6
      0076F8 12 84 9D         [24]18756 	lcall	__divsint
      0076FB E5 82            [12]18757 	mov	a,dpl
      0076FD 24 51            [12]18758 	add	a,#_phut
      0076FF F9               [12]18759 	mov	r1,a
      007700 87 04            [24]18760 	mov	ar4,@r1
      007702 0C               [12]18761 	inc	r4
      007703 A7 04            [24]18762 	mov	@r1,ar4
      007705 7B 00            [12]18763 	mov	r3,#0x00
      007707 75 1B 0A         [24]18764 	mov	__modsint_PARM_2,#0x0a
                                  18765 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      00770A 8B 1C            [24]18766 	mov	(__modsint_PARM_2 + 1),r3
      00770C 8C 82            [24]18767 	mov	dpl,r4
      00770E 8B 83            [24]18768 	mov	dph,r3
      007710 C0 01            [24]18769 	push	ar1
      007712 12 84 67         [24]18770 	lcall	__modsint
      007715 E5 82            [12]18771 	mov	a,dpl
      007717 85 83 F0         [24]18772 	mov	b,dph
      00771A D0 01            [24]18773 	pop	ar1
      00771C D0 06            [24]18774 	pop	ar6
      00771E D0 07            [24]18775 	pop	ar7
      007720 45 F0            [12]18776 	orl	a,b
      007722 70 05            [24]18777 	jnz	00499$
      007724 E7               [12]18778 	mov	a,@r1
      007725 FC               [12]18779 	mov	r4,a
      007726 24 F6            [12]18780 	add	a,#0xf6
      007728 F7               [12]18781 	mov	@r1,a
                                  18782 ;	src\main.c:727: }
      007729                      18783 00499$:
                                  18784 ;	src\main.c:729: if(so_motor==1)LCD_guigio(0xc0,may_dc? "  MDC  " : "  MST  ",gio[0],phut[0],0,flip_pulse);
      007729 90 01 2F         [24]18785 	mov	dptr,#_so_motor
      00772C E0               [24]18786 	movx	a,@dptr
      00772D FC               [12]18787 	mov	r4,a
      00772E BC 01 31         [24]18788 	cjne	r4,#0x01,00501$
      007731 30 34 06         [24]18789 	jnb	_may_dc,00768$
      007734 7A EE            [12]18790 	mov	r2,#___str_156
      007736 7B 91            [12]18791 	mov	r3,#(___str_156 >> 8)
      007738 80 04            [24]18792 	sjmp	00769$
      00773A                      18793 00768$:
      00773A 7A F6            [12]18794 	mov	r2,#___str_157
      00773C 7B 91            [12]18795 	mov	r3,#(___str_157 >> 8)
      00773E                      18796 00769$:
      00773E 8A 43            [24]18797 	mov	_LCD_guigio_PARM_2,r2
      007740 8B 44            [24]18798 	mov	(_LCD_guigio_PARM_2 + 1),r3
      007742 75 45 80         [24]18799 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      007745 85 4D 46         [24]18800 	mov	_LCD_guigio_PARM_3,_gio
      007748 85 51 47         [24]18801 	mov	_LCD_guigio_PARM_4,_phut
      00774B 75 48 00         [24]18802 	mov	_LCD_guigio_PARM_5,#0x00
                                  18803 ;	assignBit
      00774E A2 20            [12]18804 	mov	c,_flip_pulse
      007750 92 01            [24]18805 	mov	_LCD_guigio_PARM_6,c
      007752 75 82 C0         [24]18806 	mov	dpl,#0xc0
      007755 C0 07            [24]18807 	push	ar7
      007757 C0 06            [24]18808 	push	ar6
      007759 12 06 DC         [24]18809 	lcall	_LCD_guigio
      00775C D0 06            [24]18810 	pop	ar6
      00775E D0 07            [24]18811 	pop	ar7
      007760 80 6E            [24]18812 	sjmp	00502$
      007762                      18813 00501$:
                                  18814 ;	src\main.c:730: else {LCD_guigio((so_motor<3)?0xc0:0x80,"  ",gio[0],phut[0],253,1);LCD_guigio((so_motor<3)?0xc7:0x87,"  ",gio[1],phut[1],253,1);LCD_guichuoi("  ");}
      007762 BC 03 00         [24]18815 	cjne	r4,#0x03,02677$
      007765                      18816 02677$:
      007765 50 06            [24]18817 	jnc	00770$
      007767 7B C0            [12]18818 	mov	r3,#0xc0
      007769 7C 00            [12]18819 	mov	r4,#0x00
      00776B 80 04            [24]18820 	sjmp	00771$
      00776D                      18821 00770$:
      00776D 7B 80            [12]18822 	mov	r3,#0x80
      00776F 7C 00            [12]18823 	mov	r4,#0x00
      007771                      18824 00771$:
      007771 8B 82            [24]18825 	mov	dpl,r3
      007773 75 43 FE         [24]18826 	mov	_LCD_guigio_PARM_2,#___str_158
      007776 75 44 91         [24]18827 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_158 >> 8)
      007779 75 45 80         [24]18828 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      00777C 85 4D 46         [24]18829 	mov	_LCD_guigio_PARM_3,_gio
      00777F 85 51 47         [24]18830 	mov	_LCD_guigio_PARM_4,_phut
      007782 75 48 FD         [24]18831 	mov	_LCD_guigio_PARM_5,#0xfd
                                  18832 ;	assignBit
      007785 D2 01            [12]18833 	setb	_LCD_guigio_PARM_6
      007787 C0 07            [24]18834 	push	ar7
      007789 C0 06            [24]18835 	push	ar6
      00778B 12 06 DC         [24]18836 	lcall	_LCD_guigio
      00778E D0 06            [24]18837 	pop	ar6
      007790 D0 07            [24]18838 	pop	ar7
      007792 90 01 2F         [24]18839 	mov	dptr,#_so_motor
      007795 E0               [24]18840 	movx	a,@dptr
      007796 FC               [12]18841 	mov	r4,a
      007797 BC 03 00         [24]18842 	cjne	r4,#0x03,02679$
      00779A                      18843 02679$:
      00779A 50 06            [24]18844 	jnc	00772$
      00779C 7B C7            [12]18845 	mov	r3,#0xc7
      00779E 7C 00            [12]18846 	mov	r4,#0x00
      0077A0 80 04            [24]18847 	sjmp	00773$
      0077A2                      18848 00772$:
      0077A2 7B 87            [12]18849 	mov	r3,#0x87
      0077A4 7C 00            [12]18850 	mov	r4,#0x00
      0077A6                      18851 00773$:
      0077A6 8B 82            [24]18852 	mov	dpl,r3
      0077A8 75 43 FE         [24]18853 	mov	_LCD_guigio_PARM_2,#___str_158
      0077AB 75 44 91         [24]18854 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_158 >> 8)
      0077AE 75 45 80         [24]18855 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      0077B1 85 4E 46         [24]18856 	mov	_LCD_guigio_PARM_3,(_gio + 0x0001)
      0077B4 85 52 47         [24]18857 	mov	_LCD_guigio_PARM_4,(_phut + 0x0001)
      0077B7 75 48 FD         [24]18858 	mov	_LCD_guigio_PARM_5,#0xfd
                                  18859 ;	assignBit
      0077BA D2 01            [12]18860 	setb	_LCD_guigio_PARM_6
      0077BC C0 07            [24]18861 	push	ar7
      0077BE C0 06            [24]18862 	push	ar6
      0077C0 12 06 DC         [24]18863 	lcall	_LCD_guigio
      0077C3 90 91 FE         [24]18864 	mov	dptr,#___str_158
      0077C6 75 F0 80         [24]18865 	mov	b,#0x80
      0077C9 12 05 F1         [24]18866 	lcall	_LCD_guichuoi
      0077CC D0 06            [24]18867 	pop	ar6
      0077CE D0 07            [24]18868 	pop	ar7
      0077D0                      18869 00502$:
                                  18870 ;	src\main.c:731: if(so_motor>2){
      0077D0 90 01 2F         [24]18871 	mov	dptr,#_so_motor
      0077D3 E0               [24]18872 	movx	a,@dptr
      0077D4 FC               [12]18873 	mov  r4,a
      0077D5 24 FD            [12]18874 	add	a,#0xff - 0x02
      0077D7 50 68            [24]18875 	jnc	00509$
                                  18876 ;	src\main.c:732: LCD_guigio(0xc0,"  ",gio[2],phut[2],253,1);
      0077D9 75 43 FE         [24]18877 	mov	_LCD_guigio_PARM_2,#___str_158
      0077DC 75 44 91         [24]18878 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_158 >> 8)
      0077DF 75 45 80         [24]18879 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      0077E2 85 4F 46         [24]18880 	mov	_LCD_guigio_PARM_3,(_gio + 0x0002)
      0077E5 85 53 47         [24]18881 	mov	_LCD_guigio_PARM_4,(_phut + 0x0002)
      0077E8 75 48 FD         [24]18882 	mov	_LCD_guigio_PARM_5,#0xfd
                                  18883 ;	assignBit
      0077EB D2 01            [12]18884 	setb	_LCD_guigio_PARM_6
      0077ED 75 82 C0         [24]18885 	mov	dpl,#0xc0
      0077F0 C0 07            [24]18886 	push	ar7
      0077F2 C0 06            [24]18887 	push	ar6
      0077F4 12 06 DC         [24]18888 	lcall	_LCD_guigio
      0077F7 D0 06            [24]18889 	pop	ar6
      0077F9 D0 07            [24]18890 	pop	ar7
                                  18891 ;	src\main.c:733: if(so_motor==4){LCD_guigio(0xc7,"  ",gio[3],phut[3],253,1);LCD_guichuoi("  ");}
      0077FB 90 01 2F         [24]18892 	mov	dptr,#_so_motor
      0077FE E0               [24]18893 	movx	a,@dptr
      0077FF FC               [12]18894 	mov	r4,a
      007800 BC 04 2D         [24]18895 	cjne	r4,#0x04,00504$
      007803 75 43 FE         [24]18896 	mov	_LCD_guigio_PARM_2,#___str_158
      007806 75 44 91         [24]18897 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_158 >> 8)
      007809 75 45 80         [24]18898 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      00780C 85 50 46         [24]18899 	mov	_LCD_guigio_PARM_3,(_gio + 0x0003)
      00780F 85 54 47         [24]18900 	mov	_LCD_guigio_PARM_4,(_phut + 0x0003)
      007812 75 48 FD         [24]18901 	mov	_LCD_guigio_PARM_5,#0xfd
                                  18902 ;	assignBit
      007815 D2 01            [12]18903 	setb	_LCD_guigio_PARM_6
      007817 75 82 C7         [24]18904 	mov	dpl,#0xc7
      00781A C0 07            [24]18905 	push	ar7
      00781C C0 06            [24]18906 	push	ar6
      00781E 12 06 DC         [24]18907 	lcall	_LCD_guigio
      007821 90 91 FE         [24]18908 	mov	dptr,#___str_158
      007824 75 F0 80         [24]18909 	mov	b,#0x80
      007827 12 05 F1         [24]18910 	lcall	_LCD_guichuoi
      00782A D0 06            [24]18911 	pop	ar6
      00782C D0 07            [24]18912 	pop	ar7
      00782E 80 11            [24]18913 	sjmp	00509$
      007830                      18914 00504$:
                                  18915 ;	src\main.c:734: else LCD_guichuoi("         ");   
      007830 90 92 39         [24]18916 	mov	dptr,#___str_165
      007833 75 F0 80         [24]18917 	mov	b,#0x80
      007836 C0 07            [24]18918 	push	ar7
      007838 C0 06            [24]18919 	push	ar6
      00783A 12 05 F1         [24]18920 	lcall	_LCD_guichuoi
      00783D D0 06            [24]18921 	pop	ar6
      00783F D0 07            [24]18922 	pop	ar7
      007841                      18923 00509$:
                                  18924 ;	src\main.c:737: if(phim_back_nhan){
                                  18925 ;	src\main.c:738: phim_back_nhan = 0;
                                  18926 ;	assignBit
      007841 10 26 02         [24]18927 	jbc	_phim_back_nhan,02684$
      007844 80 24            [24]18928 	sjmp	00514$
      007846                      18929 02684$:
                                  18930 ;	src\main.c:739: mode_wait = TIME_MODE_WAIT;
      007846 90 00 F6         [24]18931 	mov	dptr,#_mode_wait
      007849 74 3C            [12]18932 	mov	a,#0x3c
      00784B F0               [24]18933 	movx	@dptr,a
                                  18934 ;	src\main.c:740: if(sub_mode)sub_mode--;
      00784C 90 00 F5         [24]18935 	mov	dptr,#_sub_mode
      00784F E0               [24]18936 	movx	a,@dptr
      007850 FC               [12]18937 	mov	r4,a
      007851 E0               [24]18938 	movx	a,@dptr
      007852 60 08            [24]18939 	jz	00511$
      007854 EC               [12]18940 	mov	a,r4
      007855 14               [12]18941 	dec	a
      007856 90 00 F5         [24]18942 	mov	dptr,#_sub_mode
      007859 F0               [24]18943 	movx	@dptr,a
      00785A 80 0E            [24]18944 	sjmp	00514$
      00785C                      18945 00511$:
                                  18946 ;	src\main.c:741: else sub_mode = 4*so_motor-1;
      00785C 90 01 2F         [24]18947 	mov	dptr,#_so_motor
      00785F E0               [24]18948 	movx	a,@dptr
      007860 25 E0            [12]18949 	add	a,acc
      007862 25 E0            [12]18950 	add	a,acc
      007864 FC               [12]18951 	mov	r4,a
      007865 14               [12]18952 	dec	a
      007866 90 00 F5         [24]18953 	mov	dptr,#_sub_mode
      007869 F0               [24]18954 	movx	@dptr,a
      00786A                      18955 00514$:
                                  18956 ;	src\main.c:744: if(phim_mode_nhan){
      00786A 20 22 03         [24]18957 	jb	_phim_mode_nhan,02686$
      00786D 02 82 23         [24]18958 	ljmp	00643$
      007870                      18959 02686$:
                                  18960 ;	src\main.c:746: phim_mode_nhan = 0;
      007870 C0 06            [24]18961 	push	ar6
                                  18962 ;	assignBit
      007872 C2 22            [12]18963 	clr	_phim_mode_nhan
                                  18964 ;	src\main.c:747: mode_wait = TIME_MODE_WAIT;
      007874 90 00 F6         [24]18965 	mov	dptr,#_mode_wait
      007877 74 3C            [12]18966 	mov	a,#0x3c
      007879 F0               [24]18967 	movx	@dptr,a
                                  18968 ;	src\main.c:748: if(++sub_mode>(4*so_motor-1)){
      00787A 90 00 F5         [24]18969 	mov	dptr,#_sub_mode
      00787D E0               [24]18970 	movx	a,@dptr
      00787E 24 01            [12]18971 	add	a,#0x01
      007880 F0               [24]18972 	movx	@dptr,a
      007881 90 01 2F         [24]18973 	mov	dptr,#_so_motor
      007884 E0               [24]18974 	movx	a,@dptr
      007885 7B 00            [12]18975 	mov	r3,#0x00
      007887 25 E0            [12]18976 	add	a,acc
      007889 FC               [12]18977 	mov	r4,a
      00788A EB               [12]18978 	mov	a,r3
      00788B 33               [12]18979 	rlc	a
      00788C FB               [12]18980 	mov	r3,a
      00788D EC               [12]18981 	mov	a,r4
      00788E 2C               [12]18982 	add	a,r4
      00788F FC               [12]18983 	mov	r4,a
      007890 EB               [12]18984 	mov	a,r3
      007891 33               [12]18985 	rlc	a
      007892 FB               [12]18986 	mov	r3,a
      007893 1C               [12]18987 	dec	r4
      007894 BC FF 01         [24]18988 	cjne	r4,#0xff,02687$
      007897 1B               [12]18989 	dec	r3
      007898                      18990 02687$:
      007898 90 00 F5         [24]18991 	mov	dptr,#_sub_mode
      00789B E0               [24]18992 	movx	a,@dptr
      00789C FA               [12]18993 	mov	r2,a
      00789D 7E 00            [12]18994 	mov	r6,#0x00
      00789F C3               [12]18995 	clr	c
      0078A0 EC               [12]18996 	mov	a,r4
      0078A1 9A               [12]18997 	subb	a,r2
      0078A2 EB               [12]18998 	mov	a,r3
      0078A3 64 80            [12]18999 	xrl	a,#0x80
      0078A5 8E F0            [24]19000 	mov	b,r6
      0078A7 63 F0 80         [24]19001 	xrl	b,#0x80
      0078AA 95 F0            [12]19002 	subb	a,b
      0078AC D0 06            [24]19003 	pop	ar6
      0078AE 40 03            [24]19004 	jc	02688$
      0078B0 02 82 23         [24]19005 	ljmp	00643$
      0078B3                      19006 02688$:
                                  19007 ;	src\main.c:749: LCD_noblink();
      0078B3 C0 07            [24]19008 	push	ar7
      0078B5 C0 06            [24]19009 	push	ar6
      0078B7 12 05 CC         [24]19010 	lcall	_LCD_noblink
                                  19011 ;	src\main.c:750: sub_mode = mode;
      0078BA 90 00 F4         [24]19012 	mov	dptr,#_mode
      0078BD E0               [24]19013 	movx	a,@dptr
      0078BE 90 00 F5         [24]19014 	mov	dptr,#_sub_mode
      0078C1 F0               [24]19015 	movx	@dptr,a
                                  19016 ;	src\main.c:751: mode = SELECT;
      0078C2 90 00 F4         [24]19017 	mov	dptr,#_mode
      0078C5 74 07            [12]19018 	mov	a,#0x07
      0078C7 F0               [24]19019 	movx	@dptr,a
                                  19020 ;	src\main.c:752: gio[0] = gio[0]%12;
      0078C8 AB 4D            [24]19021 	mov	r3,_gio
      0078CA 7C 00            [12]19022 	mov	r4,#0x00
      0078CC 75 1B 0C         [24]19023 	mov	__modsint_PARM_2,#0x0c
                                  19024 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0078CF 8C 1C            [24]19025 	mov	(__modsint_PARM_2 + 1),r4
      0078D1 8B 82            [24]19026 	mov	dpl,r3
      0078D3 8C 83            [24]19027 	mov	dph,r4
      0078D5 12 84 67         [24]19028 	lcall	__modsint
      0078D8 AB 82            [24]19029 	mov	r3,dpl
      0078DA 8B 4D            [24]19030 	mov	_gio,r3
                                  19031 ;	src\main.c:753: gio[1] = gio[1]%12;
      0078DC AB 4E            [24]19032 	mov	r3,(_gio + 0x0001)
      0078DE 7C 00            [12]19033 	mov	r4,#0x00
      0078E0 75 1B 0C         [24]19034 	mov	__modsint_PARM_2,#0x0c
                                  19035 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0078E3 8C 1C            [24]19036 	mov	(__modsint_PARM_2 + 1),r4
      0078E5 8B 82            [24]19037 	mov	dpl,r3
      0078E7 8C 83            [24]19038 	mov	dph,r4
      0078E9 12 84 67         [24]19039 	lcall	__modsint
      0078EC AB 82            [24]19040 	mov	r3,dpl
      0078EE 8B 4E            [24]19041 	mov	(_gio + 0x0001),r3
                                  19042 ;	src\main.c:754: gio[2] = gio[2]%12;
      0078F0 AB 4F            [24]19043 	mov	r3,(_gio + 0x0002)
      0078F2 7C 00            [12]19044 	mov	r4,#0x00
      0078F4 75 1B 0C         [24]19045 	mov	__modsint_PARM_2,#0x0c
                                  19046 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0078F7 8C 1C            [24]19047 	mov	(__modsint_PARM_2 + 1),r4
      0078F9 8B 82            [24]19048 	mov	dpl,r3
      0078FB 8C 83            [24]19049 	mov	dph,r4
      0078FD 12 84 67         [24]19050 	lcall	__modsint
      007900 AB 82            [24]19051 	mov	r3,dpl
      007902 8B 4F            [24]19052 	mov	(_gio + 0x0002),r3
                                  19053 ;	src\main.c:755: gio[3] = gio[3]%12;
      007904 AB 50            [24]19054 	mov	r3,(_gio + 0x0003)
      007906 7C 00            [12]19055 	mov	r4,#0x00
      007908 75 1B 0C         [24]19056 	mov	__modsint_PARM_2,#0x0c
                                  19057 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      00790B 8C 1C            [24]19058 	mov	(__modsint_PARM_2 + 1),r4
      00790D 8B 82            [24]19059 	mov	dpl,r3
      00790F 8C 83            [24]19060 	mov	dph,r4
      007911 12 84 67         [24]19061 	lcall	__modsint
      007914 AB 82            [24]19062 	mov	r3,dpl
      007916 8B 50            [24]19063 	mov	(_gio + 0x0003),r3
                                  19064 ;	src\main.c:756: luu_gio_kim();
      007918 12 0F 81         [24]19065 	lcall	_luu_gio_kim
      00791B D0 06            [24]19066 	pop	ar6
      00791D D0 07            [24]19067 	pop	ar7
                                  19068 ;	src\main.c:761: break;
      00791F 02 82 23         [24]19069 	ljmp	00643$
                                  19070 ;	src\main.c:762: case GIOTHUC:
      007922                      19071 00519$:
                                  19072 ;	src\main.c:763: LCD_blinkXY(DUOI,7+sub_mode+sub_mode/2);
      007922 90 00 F5         [24]19073 	mov	dptr,#_sub_mode
      007925 E0               [24]19074 	movx	a,@dptr
      007926 FC               [12]19075 	mov	r4,a
      007927 24 07            [12]19076 	add	a,#0x07
      007929 FB               [12]19077 	mov	r3,a
      00792A 7A 00            [12]19078 	mov	r2,#0x00
      00792C 75 1B 02         [24]19079 	mov	__divsint_PARM_2,#0x02
                                  19080 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      00792F 8A 1C            [24]19081 	mov	(__divsint_PARM_2 + 1),r2
      007931 8C 82            [24]19082 	mov	dpl,r4
      007933 8A 83            [24]19083 	mov	dph,r2
      007935 C0 07            [24]19084 	push	ar7
      007937 C0 06            [24]19085 	push	ar6
      007939 C0 03            [24]19086 	push	ar3
      00793B 12 84 9D         [24]19087 	lcall	__divsint
      00793E AA 82            [24]19088 	mov	r2,dpl
      007940 D0 03            [24]19089 	pop	ar3
      007942 EA               [12]19090 	mov	a,r2
      007943 2B               [12]19091 	add	a,r3
      007944 F5 3F            [12]19092 	mov	_LCD_blinkXY_PARM_2,a
      007946 75 82 C0         [24]19093 	mov	dpl,#0xc0
      007949 12 04 E8         [24]19094 	lcall	_LCD_blinkXY
      00794C D0 06            [24]19095 	pop	ar6
      00794E D0 07            [24]19096 	pop	ar7
                                  19097 ;	src\main.c:764: if(eep_gpson && !phim_mode_doi){
      007950 90 F0 02         [24]19098 	mov	dptr,#_eep_gpson
      007953 E4               [12]19099 	clr	a
      007954 93               [24]19100 	movc	a,@a+dptr
      007955 60 3F            [24]19101 	jz	00523$
      007957 90 00 F1         [24]19102 	mov	dptr,#_phim_mode_doi
      00795A E0               [24]19103 	movx	a,@dptr
      00795B 70 39            [24]19104 	jnz	00523$
                                  19105 ;	src\main.c:765: sub_mode = mode;
      00795D 90 00 F4         [24]19106 	mov	dptr,#_mode
      007960 E0               [24]19107 	movx	a,@dptr
      007961 90 00 F5         [24]19108 	mov	dptr,#_sub_mode
      007964 F0               [24]19109 	movx	@dptr,a
                                  19110 ;	src\main.c:766: mode = SELECT;
      007965 90 00 F4         [24]19111 	mov	dptr,#_mode
      007968 74 07            [12]19112 	mov	a,#0x07
      00796A F0               [24]19113 	movx	@dptr,a
                                  19114 ;	src\main.c:767: mp3_hour = 24;
      00796B 78 80            [12]19115 	mov	r0,#_mp3_hour
      00796D 76 18            [12]19116 	mov	@r0,#0x18
                                  19117 ;	src\main.c:768: mp3_minute = 60;
      00796F 78 81            [12]19118 	mov	r0,#_mp3_minute
      007971 76 3C            [12]19119 	mov	@r0,#0x3c
                                  19120 ;	src\main.c:769: if(eep_gpson) gsm_thietlapngaygiothuc();//gsm_laygio_gps();
      007973 90 F0 02         [24]19121 	mov	dptr,#_eep_gpson
      007976 E4               [12]19122 	clr	a
      007977 93               [24]19123 	movc	a,@a+dptr
      007978 60 0B            [24]19124 	jz	00521$
      00797A C0 07            [24]19125 	push	ar7
      00797C C0 06            [24]19126 	push	ar6
      00797E 12 25 33         [24]19127 	lcall	_gsm_thietlapngaygiothuc
      007981 D0 06            [24]19128 	pop	ar6
      007983 D0 07            [24]19129 	pop	ar7
      007985                      19130 00521$:
                                  19131 ;	src\main.c:771: hour12 = (hour>11)?hour-12:hour;
      007985 E5 4B            [12]19132 	mov	a,_hour
      007987 24 F4            [12]19133 	add	a,#0xff - 0x0b
      007989 50 07            [24]19134 	jnc	00774$
      00798B E5 4B            [12]19135 	mov	a,_hour
      00798D 24 F4            [12]19136 	add	a,#0xf4
      00798F FC               [12]19137 	mov	r4,a
      007990 80 02            [24]19138 	sjmp	00775$
      007992                      19139 00774$:
      007992 AC 4B            [24]19140 	mov	r4,_hour
      007994                      19141 00775$:
      007994 8C 4C            [24]19142 	mov	_hour12,r4
      007996                      19143 00523$:
                                  19144 ;	src\main.c:773: if(phim_cong_nhan){
                                  19145 ;	src\main.c:774: phim_cong_nhan = 0;
                                  19146 ;	assignBit
      007996 10 2A 03         [24]19147 	jbc	_phim_cong_nhan,02693$
      007999 02 7A 9B         [24]19148 	ljmp	00545$
      00799C                      19149 02693$:
                                  19150 ;	src\main.c:775: mode_wait = TIME_MODE_WAIT;
      00799C 90 00 F6         [24]19151 	mov	dptr,#_mode_wait
      00799F 74 3C            [12]19152 	mov	a,#0x3c
      0079A1 F0               [24]19153 	movx	@dptr,a
                                  19154 ;	src\main.c:776: switch(sub_mode){
      0079A2 90 00 F5         [24]19155 	mov	dptr,#_sub_mode
      0079A5 E0               [24]19156 	movx	a,@dptr
      0079A6 FC               [12]19157 	mov  r4,a
      0079A7 24 FC            [12]19158 	add	a,#0xff - 0x03
      0079A9 50 03            [24]19159 	jnc	02694$
      0079AB 02 7A 58         [24]19160 	ljmp	00543$
      0079AE                      19161 02694$:
      0079AE EC               [12]19162 	mov	a,r4
      0079AF 2C               [12]19163 	add	a,r4
                                  19164 ;	src\main.c:777: case GIOCHUC  :
      0079B0 90 79 B4         [24]19165 	mov	dptr,#02695$
      0079B3 73               [24]19166 	jmp	@a+dptr
      0079B4                      19167 02695$:
      0079B4 80 06            [24]19168 	sjmp	00525$
      0079B6 80 2D            [24]19169 	sjmp	00529$
      0079B8 80 61            [24]19170 	sjmp	00536$
      0079BA 80 74            [24]19171 	sjmp	00540$
      0079BC                      19172 00525$:
                                  19173 ;	src\main.c:778: if(giotemp>13)giotemp%=10;
      0079BC EF               [12]19174 	mov	a,r7
      0079BD 24 F2            [12]19175 	add	a,#0xff - 0x0d
      0079BF 50 1C            [24]19176 	jnc	00527$
      0079C1 8F 03            [24]19177 	mov	ar3,r7
      0079C3 7C 00            [12]19178 	mov	r4,#0x00
      0079C5 75 1B 0A         [24]19179 	mov	__modsint_PARM_2,#0x0a
                                  19180 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0079C8 8C 1C            [24]19181 	mov	(__modsint_PARM_2 + 1),r4
      0079CA 8B 82            [24]19182 	mov	dpl,r3
      0079CC 8C 83            [24]19183 	mov	dph,r4
      0079CE C0 06            [24]19184 	push	ar6
      0079D0 12 84 67         [24]19185 	lcall	__modsint
      0079D3 AB 82            [24]19186 	mov	r3,dpl
      0079D5 AC 83            [24]19187 	mov	r4,dph
      0079D7 D0 06            [24]19188 	pop	ar6
      0079D9 8B 07            [24]19189 	mov	ar7,r3
      0079DB 80 7B            [24]19190 	sjmp	00543$
      0079DD                      19191 00527$:
                                  19192 ;	src\main.c:779: else giotemp +=10;
      0079DD 8F 04            [24]19193 	mov	ar4,r7
      0079DF 74 0A            [12]19194 	mov	a,#0x0a
      0079E1 2C               [12]19195 	add	a,r4
      0079E2 FF               [12]19196 	mov	r7,a
                                  19197 ;	src\main.c:780: break;
                                  19198 ;	src\main.c:781: case GIODVI   :
      0079E3 80 73            [24]19199 	sjmp	00543$
      0079E5                      19200 00529$:
                                  19201 ;	src\main.c:782: if(giotemp>22) giotemp = 20;
      0079E5 EF               [12]19202 	mov	a,r7
      0079E6 24 E9            [12]19203 	add	a,#0xff - 0x16
      0079E8 50 04            [24]19204 	jnc	00534$
      0079EA 7F 14            [12]19205 	mov	r7,#0x14
      0079EC 80 6A            [24]19206 	sjmp	00543$
      0079EE                      19207 00534$:
                                  19208 ;	src\main.c:783: else if(giotemp%10==9) giotemp-=9;
      0079EE 8F 03            [24]19209 	mov	ar3,r7
      0079F0 7C 00            [12]19210 	mov	r4,#0x00
      0079F2 75 1B 0A         [24]19211 	mov	__modsint_PARM_2,#0x0a
                                  19212 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0079F5 8C 1C            [24]19213 	mov	(__modsint_PARM_2 + 1),r4
      0079F7 8B 82            [24]19214 	mov	dpl,r3
      0079F9 8C 83            [24]19215 	mov	dph,r4
      0079FB C0 07            [24]19216 	push	ar7
      0079FD C0 06            [24]19217 	push	ar6
      0079FF 12 84 67         [24]19218 	lcall	__modsint
      007A02 AB 82            [24]19219 	mov	r3,dpl
      007A04 AC 83            [24]19220 	mov	r4,dph
      007A06 D0 06            [24]19221 	pop	ar6
      007A08 D0 07            [24]19222 	pop	ar7
      007A0A BB 09 0B         [24]19223 	cjne	r3,#0x09,00531$
      007A0D BC 00 08         [24]19224 	cjne	r4,#0x00,00531$
      007A10 8F 04            [24]19225 	mov	ar4,r7
      007A12 EC               [12]19226 	mov	a,r4
      007A13 24 F7            [12]19227 	add	a,#0xf7
      007A15 FF               [12]19228 	mov	r7,a
      007A16 80 40            [24]19229 	sjmp	00543$
      007A18                      19230 00531$:
                                  19231 ;	src\main.c:784: else giotemp++;
      007A18 0F               [12]19232 	inc	r7
                                  19233 ;	src\main.c:785: break;
                                  19234 ;	src\main.c:786: case PHUTCHUC :
      007A19 80 3D            [24]19235 	sjmp	00543$
      007A1B                      19236 00536$:
                                  19237 ;	src\main.c:787: if(phuttemp>49) phuttemp-=50;
      007A1B EE               [12]19238 	mov	a,r6
      007A1C 24 CE            [12]19239 	add	a,#0xff - 0x31
      007A1E 50 08            [24]19240 	jnc	00538$
      007A20 8E 04            [24]19241 	mov	ar4,r6
      007A22 EC               [12]19242 	mov	a,r4
      007A23 24 CE            [12]19243 	add	a,#0xce
      007A25 FE               [12]19244 	mov	r6,a
      007A26 80 30            [24]19245 	sjmp	00543$
      007A28                      19246 00538$:
                                  19247 ;	src\main.c:788: else phuttemp+=10;
      007A28 8E 04            [24]19248 	mov	ar4,r6
      007A2A 74 0A            [12]19249 	mov	a,#0x0a
      007A2C 2C               [12]19250 	add	a,r4
      007A2D FE               [12]19251 	mov	r6,a
                                  19252 ;	src\main.c:789: break;
                                  19253 ;	src\main.c:790: case PHUTDVI  :
      007A2E 80 28            [24]19254 	sjmp	00543$
      007A30                      19255 00540$:
                                  19256 ;	src\main.c:791: if(!(++phuttemp%10)) phuttemp-=10;
      007A30 0E               [12]19257 	inc	r6
      007A31 8E 03            [24]19258 	mov	ar3,r6
      007A33 7C 00            [12]19259 	mov	r4,#0x00
      007A35 75 1B 0A         [24]19260 	mov	__modsint_PARM_2,#0x0a
                                  19261 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      007A38 8C 1C            [24]19262 	mov	(__modsint_PARM_2 + 1),r4
      007A3A 8B 82            [24]19263 	mov	dpl,r3
      007A3C 8C 83            [24]19264 	mov	dph,r4
      007A3E C0 07            [24]19265 	push	ar7
      007A40 C0 06            [24]19266 	push	ar6
      007A42 12 84 67         [24]19267 	lcall	__modsint
      007A45 E5 82            [12]19268 	mov	a,dpl
      007A47 85 83 F0         [24]19269 	mov	b,dph
      007A4A D0 06            [24]19270 	pop	ar6
      007A4C D0 07            [24]19271 	pop	ar7
      007A4E 45 F0            [12]19272 	orl	a,b
      007A50 70 06            [24]19273 	jnz	00543$
      007A52 8E 04            [24]19274 	mov	ar4,r6
      007A54 EC               [12]19275 	mov	a,r4
      007A55 24 F6            [12]19276 	add	a,#0xf6
      007A57 FE               [12]19277 	mov	r6,a
                                  19278 ;	src\main.c:793: }
      007A58                      19279 00543$:
                                  19280 ;	src\main.c:795: LCD_guigio(0xc0,GPS_time?"  GPS  ":(eep_gpson?"   DS  ":" ASIA  "),giotemp,phuttemp,mode_wait,1);
      007A58 30 1D 06         [24]19281 	jnb	_GPS_time,00776$
      007A5B 7B A6            [12]19282 	mov	r3,#___str_0
      007A5D 7C 88            [12]19283 	mov	r4,#(___str_0 >> 8)
      007A5F 80 19            [24]19284 	sjmp	00777$
      007A61                      19285 00776$:
      007A61 90 F0 02         [24]19286 	mov	dptr,#_eep_gpson
      007A64 E4               [12]19287 	clr	a
      007A65 93               [24]19288 	movc	a,@a+dptr
      007A66 60 08            [24]19289 	jz	00778$
      007A68 75 7B B6         [24]19290 	mov	_main_sloc2_1_0,#___str_2
      007A6B 75 7C 88         [24]19291 	mov	(_main_sloc2_1_0 + 1),#(___str_2 >> 8)
      007A6E 80 06            [24]19292 	sjmp	00779$
      007A70                      19293 00778$:
      007A70 75 7B AE         [24]19294 	mov	_main_sloc2_1_0,#___str_1
      007A73 75 7C 88         [24]19295 	mov	(_main_sloc2_1_0 + 1),#(___str_1 >> 8)
      007A76                      19296 00779$:
      007A76 AB 7B            [24]19297 	mov	r3,_main_sloc2_1_0
      007A78 AC 7C            [24]19298 	mov	r4,(_main_sloc2_1_0 + 1)
      007A7A                      19299 00777$:
      007A7A 8B 43            [24]19300 	mov	_LCD_guigio_PARM_2,r3
      007A7C 8C 44            [24]19301 	mov	(_LCD_guigio_PARM_2 + 1),r4
      007A7E 75 45 80         [24]19302 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      007A81 90 00 F6         [24]19303 	mov	dptr,#_mode_wait
      007A84 E0               [24]19304 	movx	a,@dptr
      007A85 F5 48            [12]19305 	mov	_LCD_guigio_PARM_5,a
      007A87 8F 46            [24]19306 	mov	_LCD_guigio_PARM_3,r7
      007A89 8E 47            [24]19307 	mov	_LCD_guigio_PARM_4,r6
                                  19308 ;	assignBit
      007A8B D2 01            [12]19309 	setb	_LCD_guigio_PARM_6
      007A8D 75 82 C0         [24]19310 	mov	dpl,#0xc0
      007A90 C0 07            [24]19311 	push	ar7
      007A92 C0 06            [24]19312 	push	ar6
      007A94 12 06 DC         [24]19313 	lcall	_LCD_guigio
      007A97 D0 06            [24]19314 	pop	ar6
      007A99 D0 07            [24]19315 	pop	ar7
      007A9B                      19316 00545$:
                                  19317 ;	src\main.c:798: if(phim_back_nhan){
                                  19318 ;	src\main.c:799: phim_back_nhan = 0;
                                  19319 ;	assignBit
      007A9B 10 26 02         [24]19320 	jbc	_phim_back_nhan,02704$
      007A9E 80 1C            [24]19321 	sjmp	00550$
      007AA0                      19322 02704$:
                                  19323 ;	src\main.c:800: mode_wait = TIME_MODE_WAIT;
      007AA0 90 00 F6         [24]19324 	mov	dptr,#_mode_wait
      007AA3 74 3C            [12]19325 	mov	a,#0x3c
      007AA5 F0               [24]19326 	movx	@dptr,a
                                  19327 ;	src\main.c:801: if(sub_mode)sub_mode--;
      007AA6 90 00 F5         [24]19328 	mov	dptr,#_sub_mode
      007AA9 E0               [24]19329 	movx	a,@dptr
      007AAA FC               [12]19330 	mov	r4,a
      007AAB E0               [24]19331 	movx	a,@dptr
      007AAC 60 08            [24]19332 	jz	00547$
      007AAE EC               [12]19333 	mov	a,r4
      007AAF 14               [12]19334 	dec	a
      007AB0 90 00 F5         [24]19335 	mov	dptr,#_sub_mode
      007AB3 F0               [24]19336 	movx	@dptr,a
      007AB4 80 06            [24]19337 	sjmp	00550$
      007AB6                      19338 00547$:
                                  19339 ;	src\main.c:802: else sub_mode = 3;
      007AB6 90 00 F5         [24]19340 	mov	dptr,#_sub_mode
      007AB9 74 03            [12]19341 	mov	a,#0x03
      007ABB F0               [24]19342 	movx	@dptr,a
      007ABC                      19343 00550$:
                                  19344 ;	src\main.c:805: if(phim_mode_nhan){
                                  19345 ;	src\main.c:806: phim_mode_nhan = 0;
                                  19346 ;	assignBit
      007ABC 10 22 03         [24]19347 	jbc	_phim_mode_nhan,02706$
      007ABF 02 82 23         [24]19348 	ljmp	00643$
      007AC2                      19349 02706$:
                                  19350 ;	src\main.c:807: mode_wait = TIME_MODE_WAIT;
      007AC2 90 00 F6         [24]19351 	mov	dptr,#_mode_wait
      007AC5 74 3C            [12]19352 	mov	a,#0x3c
      007AC7 F0               [24]19353 	movx	@dptr,a
                                  19354 ;	src\main.c:808: if(++sub_mode>3){
      007AC8 90 00 F5         [24]19355 	mov	dptr,#_sub_mode
      007ACB E0               [24]19356 	movx	a,@dptr
      007ACC 24 01            [12]19357 	add	a,#0x01
      007ACE F0               [24]19358 	movx	@dptr,a
      007ACF E0               [24]19359 	movx	a,@dptr
      007AD0 FC               [12]19360 	mov  r4,a
      007AD1 24 FC            [12]19361 	add	a,#0xff - 0x03
      007AD3 40 03            [24]19362 	jc	02707$
      007AD5 02 82 23         [24]19363 	ljmp	00643$
      007AD8                      19364 02707$:
                                  19365 ;	src\main.c:809: LCD_noblink();
      007AD8 C0 07            [24]19366 	push	ar7
      007ADA C0 06            [24]19367 	push	ar6
      007ADC 12 05 CC         [24]19368 	lcall	_LCD_noblink
      007ADF D0 06            [24]19369 	pop	ar6
      007AE1 D0 07            [24]19370 	pop	ar7
                                  19371 ;	src\main.c:810: sub_mode = mode;
      007AE3 90 00 F4         [24]19372 	mov	dptr,#_mode
      007AE6 E0               [24]19373 	movx	a,@dptr
      007AE7 90 00 F5         [24]19374 	mov	dptr,#_sub_mode
      007AEA F0               [24]19375 	movx	@dptr,a
                                  19376 ;	src\main.c:811: mode = SELECT;
      007AEB 90 00 F4         [24]19377 	mov	dptr,#_mode
      007AEE 74 07            [12]19378 	mov	a,#0x07
      007AF0 F0               [24]19379 	movx	@dptr,a
                                  19380 ;	src\main.c:812: hour = giotemp;
      007AF1 8F 4B            [24]19381 	mov	_hour,r7
                                  19382 ;	src\main.c:813: minute = phuttemp;
      007AF3 8E 4A            [24]19383 	mov	_minute,r6
                                  19384 ;	src\main.c:814: rtc_settime(hour,minute,second);
      007AF5 85 4A 3A         [24]19385 	mov	_rtc_settime_PARM_2,_minute
      007AF8 85 49 3B         [24]19386 	mov	_rtc_settime_PARM_3,_second
      007AFB 85 4B 82         [24]19387 	mov	dpl,_hour
      007AFE C0 07            [24]19388 	push	ar7
      007B00 C0 06            [24]19389 	push	ar6
      007B02 12 02 63         [24]19390 	lcall	_rtc_settime
                                  19391 ;	src\main.c:815: hour12 = hour % 12;
      007B05 AB 4B            [24]19392 	mov	r3,_hour
      007B07 7C 00            [12]19393 	mov	r4,#0x00
      007B09 75 1B 0C         [24]19394 	mov	__modsint_PARM_2,#0x0c
                                  19395 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      007B0C 8C 1C            [24]19396 	mov	(__modsint_PARM_2 + 1),r4
      007B0E 8B 82            [24]19397 	mov	dpl,r3
      007B10 8C 83            [24]19398 	mov	dph,r4
      007B12 12 84 67         [24]19399 	lcall	__modsint
      007B15 AB 82            [24]19400 	mov	r3,dpl
      007B17 AC 83            [24]19401 	mov	r4,dph
      007B19 D0 06            [24]19402 	pop	ar6
      007B1B D0 07            [24]19403 	pop	ar7
      007B1D 8B 4C            [24]19404 	mov	_hour12,r3
                                  19405 ;	src\main.c:816: GPS_time = 0;
                                  19406 ;	assignBit
      007B1F C2 1D            [12]19407 	clr	_GPS_time
                                  19408 ;	src\main.c:817: mp3_hour = 24;
      007B21 78 80            [12]19409 	mov	r0,#_mp3_hour
      007B23 76 18            [12]19410 	mov	@r0,#0x18
                                  19411 ;	src\main.c:818: mp3_minute = 60;
      007B25 78 81            [12]19412 	mov	r0,#_mp3_minute
      007B27 76 3C            [12]19413 	mov	@r0,#0x3c
                                  19414 ;	src\main.c:821: break;
      007B29 02 82 23         [24]19415 	ljmp	00643$
                                  19416 ;	src\main.c:822: case MP3TEST:
      007B2C                      19417 00555$:
                                  19418 ;	src\main.c:824: LCD_blinkXY(DUOI,sub_mode+(sub_mode>2)+(sub_mode>6));
      007B2C 90 00 F5         [24]19419 	mov	dptr,#_sub_mode
      007B2F E0               [24]19420 	movx	a,@dptr
      007B30 FC               [12]19421 	mov	r4,a
      007B31 C3               [12]19422 	clr	c
      007B32 74 02            [12]19423 	mov	a,#0x02
      007B34 9C               [12]19424 	subb	a,r4
      007B35 E4               [12]19425 	clr	a
      007B36 33               [12]19426 	rlc	a
      007B37 2C               [12]19427 	add	a,r4
      007B38 FB               [12]19428 	mov	r3,a
      007B39 C3               [12]19429 	clr	c
      007B3A 74 06            [12]19430 	mov	a,#0x06
      007B3C 9C               [12]19431 	subb	a,r4
      007B3D E4               [12]19432 	clr	a
      007B3E 33               [12]19433 	rlc	a
      007B3F 2B               [12]19434 	add	a,r3
      007B40 F5 3F            [12]19435 	mov	_LCD_blinkXY_PARM_2,a
      007B42 75 82 C0         [24]19436 	mov	dpl,#0xc0
      007B45 C0 07            [24]19437 	push	ar7
      007B47 C0 06            [24]19438 	push	ar6
      007B49 12 04 E8         [24]19439 	lcall	_LCD_blinkXY
      007B4C D0 06            [24]19440 	pop	ar6
      007B4E D0 07            [24]19441 	pop	ar7
                                  19442 ;	src\main.c:825: AmplyRelay = mp3_playing;
                                  19443 ;	assignBit
      007B50 A2 92            [12]19444 	mov	c,_P12
      007B52 92 C2            [24]19445 	mov	_P42,c
                                  19446 ;	src\main.c:826: if(!phim_mode_doi){
      007B54 90 00 F1         [24]19447 	mov	dptr,#_phim_mode_doi
      007B57 E0               [24]19448 	movx	a,@dptr
      007B58 70 27            [24]19449 	jnz	00559$
                                  19450 ;	src\main.c:827: sub_mode = mode;
      007B5A 90 00 F4         [24]19451 	mov	dptr,#_mode
      007B5D E0               [24]19452 	movx	a,@dptr
      007B5E 90 00 F5         [24]19453 	mov	dptr,#_sub_mode
      007B61 F0               [24]19454 	movx	@dptr,a
                                  19455 ;	src\main.c:828: mode = SELECT;
      007B62 90 00 F4         [24]19456 	mov	dptr,#_mode
      007B65 74 07            [12]19457 	mov	a,#0x07
      007B67 F0               [24]19458 	movx	@dptr,a
                                  19459 ;	src\main.c:829: if(mp3_playing) mp3_play(9,0,0);
      007B68 30 92 14         [24]19460 	jnb	_P12,00557$
      007B6B 75 19 00         [24]19461 	mov	_mp3_play_PARM_2,#0x00
      007B6E 75 1A 00         [24]19462 	mov	_mp3_play_PARM_3,#0x00
      007B71 75 82 09         [24]19463 	mov	dpl,#0x09
      007B74 C0 07            [24]19464 	push	ar7
      007B76 C0 06            [24]19465 	push	ar6
      007B78 12 82 9E         [24]19466 	lcall	_mp3_play
      007B7B D0 06            [24]19467 	pop	ar6
      007B7D D0 07            [24]19468 	pop	ar7
      007B7F                      19469 00557$:
                                  19470 ;	src\main.c:830: AmplyRelay = 0;
                                  19471 ;	assignBit
      007B7F C2 C2            [12]19472 	clr	_P42
      007B81                      19473 00559$:
                                  19474 ;	src\main.c:832: if(phim_cong_nhan){
                                  19475 ;	src\main.c:833: phim_cong_nhan = 0;
                                  19476 ;	assignBit
      007B81 10 2A 03         [24]19477 	jbc	_phim_cong_nhan,02710$
      007B84 02 80 41         [24]19478 	ljmp	00616$
      007B87                      19479 02710$:
                                  19480 ;	src\main.c:834: mode_wait = TIME_MODE_WAIT;
      007B87 90 00 F6         [24]19481 	mov	dptr,#_mode_wait
      007B8A 74 3C            [12]19482 	mov	a,#0x3c
      007B8C F0               [24]19483 	movx	@dptr,a
                                  19484 ;	src\main.c:835: switch(sub_mode){
      007B8D 90 00 F5         [24]19485 	mov	dptr,#_sub_mode
      007B90 E0               [24]19486 	movx	a,@dptr
      007B91 FC               [12]19487 	mov  r4,a
      007B92 24 F3            [12]19488 	add	a,#0xff - 0x0c
      007B94 50 03            [24]19489 	jnc	02711$
      007B96 02 7E C3         [24]19490 	ljmp	00614$
      007B99                      19491 02711$:
      007B99 EC               [12]19492 	mov	a,r4
      007B9A 24 0A            [12]19493 	add	a,#(02712$-3-.)
      007B9C 83               [24]19494 	movc	a,@a+pc
      007B9D F5 82            [12]19495 	mov	dpl,a
      007B9F EC               [12]19496 	mov	a,r4
      007BA0 24 11            [12]19497 	add	a,#(02713$-3-.)
      007BA2 83               [24]19498 	movc	a,@a+pc
      007BA3 F5 83            [12]19499 	mov	dph,a
      007BA5 E4               [12]19500 	clr	a
      007BA6 73               [24]19501 	jmp	@a+dptr
      007BA7                      19502 02712$:
      007BA7 C1                   19503 	.db	00560$
      007BA8 F3                   19504 	.db	00561$
      007BA9 66                   19505 	.db	00562$
      007BAA D5                   19506 	.db	00563$
      007BAB 00                   19507 	.db	00567$
      007BAC 39                   19508 	.db	00574$
      007BAD 50                   19509 	.db	00578$
      007BAE 94                   19510 	.db	00581$
      007BAF D9                   19511 	.db	00587$
      007BB0 26                   19512 	.db	00594$
      007BB1 4D                   19513 	.db	00600$
      007BB2 72                   19514 	.db	00607$
      007BB3 8F                   19515 	.db	00611$
      007BB4                      19516 02713$:
      007BB4 7B                   19517 	.db	00560$>>8
      007BB5 7B                   19518 	.db	00561$>>8
      007BB6 7C                   19519 	.db	00562$>>8
      007BB7 7C                   19520 	.db	00563$>>8
      007BB8 7D                   19521 	.db	00567$>>8
      007BB9 7D                   19522 	.db	00574$>>8
      007BBA 7D                   19523 	.db	00578$>>8
      007BBB 7D                   19524 	.db	00581$>>8
      007BBC 7D                   19525 	.db	00587$>>8
      007BBD 7E                   19526 	.db	00594$>>8
      007BBE 7E                   19527 	.db	00600$>>8
      007BBF 7E                   19528 	.db	00607$>>8
      007BC0 7E                   19529 	.db	00611$>>8
                                  19530 ;	src\main.c:836: case MP3SONGTRAM  :
      007BC1                      19531 00560$:
                                  19532 ;	src\main.c:837: song_name = (song_name+100)%1000;
      007BC1 90 00 F7         [24]19533 	mov	dptr,#_song_name
      007BC4 E0               [24]19534 	movx	a,@dptr
      007BC5 FB               [12]19535 	mov	r3,a
      007BC6 A3               [24]19536 	inc	dptr
      007BC7 E0               [24]19537 	movx	a,@dptr
      007BC8 FC               [12]19538 	mov	r4,a
      007BC9 74 64            [12]19539 	mov	a,#0x64
      007BCB 2B               [12]19540 	add	a,r3
      007BCC F5 82            [12]19541 	mov	dpl,a
      007BCE E4               [12]19542 	clr	a
      007BCF 3C               [12]19543 	addc	a,r4
      007BD0 F5 83            [12]19544 	mov	dph,a
      007BD2 75 1B E8         [24]19545 	mov	__moduint_PARM_2,#0xe8
      007BD5 75 1C 03         [24]19546 	mov	(__moduint_PARM_2 + 1),#0x03
      007BD8 C0 07            [24]19547 	push	ar7
      007BDA C0 06            [24]19548 	push	ar6
      007BDC 12 83 FE         [24]19549 	lcall	__moduint
      007BDF E5 82            [12]19550 	mov	a,dpl
      007BE1 85 83 F0         [24]19551 	mov	b,dph
      007BE4 D0 06            [24]19552 	pop	ar6
      007BE6 D0 07            [24]19553 	pop	ar7
      007BE8 90 00 F7         [24]19554 	mov	dptr,#_song_name
      007BEB F0               [24]19555 	movx	@dptr,a
      007BEC E5 F0            [12]19556 	mov	a,b
      007BEE A3               [24]19557 	inc	dptr
      007BEF F0               [24]19558 	movx	@dptr,a
                                  19559 ;	src\main.c:838: break;
      007BF0 02 7E C3         [24]19560 	ljmp	00614$
                                  19561 ;	src\main.c:839: case MP3SONGCHUC  :
      007BF3                      19562 00561$:
                                  19563 ;	src\main.c:840: song_name = (song_name/100*100) + (song_name-song_name/100*100+10)%100;
      007BF3 C0 06            [24]19564 	push	ar6
      007BF5 90 00 F7         [24]19565 	mov	dptr,#_song_name
      007BF8 E0               [24]19566 	movx	a,@dptr
      007BF9 FB               [12]19567 	mov	r3,a
      007BFA A3               [24]19568 	inc	dptr
      007BFB E0               [24]19569 	movx	a,@dptr
      007BFC FC               [12]19570 	mov	r4,a
      007BFD 75 1B 64         [24]19571 	mov	__divuint_PARM_2,#0x64
      007C00 75 1C 00         [24]19572 	mov	(__divuint_PARM_2 + 1),#0x00
      007C03 8B 82            [24]19573 	mov	dpl,r3
      007C05 8C 83            [24]19574 	mov	dph,r4
      007C07 C0 07            [24]19575 	push	ar7
      007C09 C0 06            [24]19576 	push	ar6
      007C0B C0 04            [24]19577 	push	ar4
      007C0D C0 03            [24]19578 	push	ar3
      007C0F 12 83 9D         [24]19579 	lcall	__divuint
      007C12 85 82 1B         [24]19580 	mov	__mulint_PARM_2,dpl
      007C15 85 83 1C         [24]19581 	mov	(__mulint_PARM_2 + 1),dph
      007C18 D0 03            [24]19582 	pop	ar3
      007C1A D0 04            [24]19583 	pop	ar4
      007C1C D0 06            [24]19584 	pop	ar6
      007C1E 90 00 64         [24]19585 	mov	dptr,#0x0064
      007C21 C0 04            [24]19586 	push	ar4
      007C23 C0 03            [24]19587 	push	ar3
      007C25 12 83 E1         [24]19588 	lcall	__mulint
      007C28 AA 82            [24]19589 	mov	r2,dpl
      007C2A AE 83            [24]19590 	mov	r6,dph
      007C2C D0 03            [24]19591 	pop	ar3
      007C2E D0 04            [24]19592 	pop	ar4
      007C30 EB               [12]19593 	mov	a,r3
      007C31 C3               [12]19594 	clr	c
      007C32 9A               [12]19595 	subb	a,r2
      007C33 FB               [12]19596 	mov	r3,a
      007C34 EC               [12]19597 	mov	a,r4
      007C35 9E               [12]19598 	subb	a,r6
      007C36 FC               [12]19599 	mov	r4,a
      007C37 74 0A            [12]19600 	mov	a,#0x0a
      007C39 2B               [12]19601 	add	a,r3
      007C3A F5 82            [12]19602 	mov	dpl,a
      007C3C E4               [12]19603 	clr	a
      007C3D 3C               [12]19604 	addc	a,r4
      007C3E F5 83            [12]19605 	mov	dph,a
      007C40 75 1B 64         [24]19606 	mov	__moduint_PARM_2,#0x64
      007C43 75 1C 00         [24]19607 	mov	(__moduint_PARM_2 + 1),#0x00
      007C46 C0 06            [24]19608 	push	ar6
      007C48 C0 02            [24]19609 	push	ar2
      007C4A 12 83 FE         [24]19610 	lcall	__moduint
      007C4D AB 82            [24]19611 	mov	r3,dpl
      007C4F AC 83            [24]19612 	mov	r4,dph
      007C51 D0 02            [24]19613 	pop	ar2
      007C53 D0 06            [24]19614 	pop	ar6
      007C55 D0 07            [24]19615 	pop	ar7
      007C57 90 00 F7         [24]19616 	mov	dptr,#_song_name
      007C5A EB               [12]19617 	mov	a,r3
      007C5B 2A               [12]19618 	add	a,r2
      007C5C F0               [24]19619 	movx	@dptr,a
      007C5D EC               [12]19620 	mov	a,r4
      007C5E 3E               [12]19621 	addc	a,r6
      007C5F A3               [24]19622 	inc	dptr
      007C60 F0               [24]19623 	movx	@dptr,a
                                  19624 ;	src\main.c:841: break;
      007C61 D0 06            [24]19625 	pop	ar6
      007C63 02 7E C3         [24]19626 	ljmp	00614$
                                  19627 ;	src\main.c:842: case MP3SONGDVI  :
      007C66                      19628 00562$:
                                  19629 ;	src\main.c:843: song_name = (song_name/10*10) + (song_name-song_name/10*10+1)%10;
      007C66 C0 06            [24]19630 	push	ar6
      007C68 90 00 F7         [24]19631 	mov	dptr,#_song_name
      007C6B E0               [24]19632 	movx	a,@dptr
      007C6C FB               [12]19633 	mov	r3,a
      007C6D A3               [24]19634 	inc	dptr
      007C6E E0               [24]19635 	movx	a,@dptr
      007C6F FC               [12]19636 	mov	r4,a
      007C70 75 1B 0A         [24]19637 	mov	__divuint_PARM_2,#0x0a
      007C73 75 1C 00         [24]19638 	mov	(__divuint_PARM_2 + 1),#0x00
      007C76 8B 82            [24]19639 	mov	dpl,r3
      007C78 8C 83            [24]19640 	mov	dph,r4
      007C7A C0 07            [24]19641 	push	ar7
      007C7C C0 06            [24]19642 	push	ar6
      007C7E C0 04            [24]19643 	push	ar4
      007C80 C0 03            [24]19644 	push	ar3
      007C82 12 83 9D         [24]19645 	lcall	__divuint
      007C85 85 82 1B         [24]19646 	mov	__mulint_PARM_2,dpl
      007C88 85 83 1C         [24]19647 	mov	(__mulint_PARM_2 + 1),dph
      007C8B D0 03            [24]19648 	pop	ar3
      007C8D D0 04            [24]19649 	pop	ar4
      007C8F D0 06            [24]19650 	pop	ar6
      007C91 90 00 0A         [24]19651 	mov	dptr,#0x000a
      007C94 C0 04            [24]19652 	push	ar4
      007C96 C0 03            [24]19653 	push	ar3
      007C98 12 83 E1         [24]19654 	lcall	__mulint
      007C9B AA 82            [24]19655 	mov	r2,dpl
      007C9D AE 83            [24]19656 	mov	r6,dph
      007C9F D0 03            [24]19657 	pop	ar3
      007CA1 D0 04            [24]19658 	pop	ar4
      007CA3 EB               [12]19659 	mov	a,r3
      007CA4 C3               [12]19660 	clr	c
      007CA5 9A               [12]19661 	subb	a,r2
      007CA6 FB               [12]19662 	mov	r3,a
      007CA7 EC               [12]19663 	mov	a,r4
      007CA8 9E               [12]19664 	subb	a,r6
      007CA9 FC               [12]19665 	mov	r4,a
      007CAA 8B 82            [24]19666 	mov	dpl,r3
      007CAC 8C 83            [24]19667 	mov	dph,r4
      007CAE A3               [24]19668 	inc	dptr
      007CAF 75 1B 0A         [24]19669 	mov	__moduint_PARM_2,#0x0a
      007CB2 75 1C 00         [24]19670 	mov	(__moduint_PARM_2 + 1),#0x00
      007CB5 C0 06            [24]19671 	push	ar6
      007CB7 C0 02            [24]19672 	push	ar2
      007CB9 12 83 FE         [24]19673 	lcall	__moduint
      007CBC AB 82            [24]19674 	mov	r3,dpl
      007CBE AC 83            [24]19675 	mov	r4,dph
      007CC0 D0 02            [24]19676 	pop	ar2
      007CC2 D0 06            [24]19677 	pop	ar6
      007CC4 D0 07            [24]19678 	pop	ar7
      007CC6 90 00 F7         [24]19679 	mov	dptr,#_song_name
      007CC9 EB               [12]19680 	mov	a,r3
      007CCA 2A               [12]19681 	add	a,r2
      007CCB F0               [24]19682 	movx	@dptr,a
      007CCC EC               [12]19683 	mov	a,r4
      007CCD 3E               [12]19684 	addc	a,r6
      007CCE A3               [24]19685 	inc	dptr
      007CCF F0               [24]19686 	movx	@dptr,a
                                  19687 ;	src\main.c:844: break;
      007CD0 D0 06            [24]19688 	pop	ar6
      007CD2 02 7E C3         [24]19689 	ljmp	00614$
                                  19690 ;	src\main.c:845: case MP3GIOCHUC  :
      007CD5                      19691 00563$:
                                  19692 ;	src\main.c:846: if(giotemp>13)giotemp%=10;
      007CD5 EF               [12]19693 	mov	a,r7
      007CD6 24 F2            [12]19694 	add	a,#0xff - 0x0d
      007CD8 50 1D            [24]19695 	jnc	00565$
      007CDA 8F 03            [24]19696 	mov	ar3,r7
      007CDC 7C 00            [12]19697 	mov	r4,#0x00
      007CDE 75 1B 0A         [24]19698 	mov	__modsint_PARM_2,#0x0a
                                  19699 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      007CE1 8C 1C            [24]19700 	mov	(__modsint_PARM_2 + 1),r4
      007CE3 8B 82            [24]19701 	mov	dpl,r3
      007CE5 8C 83            [24]19702 	mov	dph,r4
      007CE7 C0 06            [24]19703 	push	ar6
      007CE9 12 84 67         [24]19704 	lcall	__modsint
      007CEC AB 82            [24]19705 	mov	r3,dpl
      007CEE AC 83            [24]19706 	mov	r4,dph
      007CF0 D0 06            [24]19707 	pop	ar6
      007CF2 8B 07            [24]19708 	mov	ar7,r3
      007CF4 02 7E C3         [24]19709 	ljmp	00614$
      007CF7                      19710 00565$:
                                  19711 ;	src\main.c:847: else giotemp +=10;
      007CF7 8F 04            [24]19712 	mov	ar4,r7
      007CF9 74 0A            [12]19713 	mov	a,#0x0a
      007CFB 2C               [12]19714 	add	a,r4
      007CFC FF               [12]19715 	mov	r7,a
                                  19716 ;	src\main.c:848: break;
      007CFD 02 7E C3         [24]19717 	ljmp	00614$
                                  19718 ;	src\main.c:849: case MP3GIODVI   :
      007D00                      19719 00567$:
                                  19720 ;	src\main.c:850: if(giotemp>22) giotemp = 20;
      007D00 EF               [12]19721 	mov	a,r7
      007D01 24 E9            [12]19722 	add	a,#0xff - 0x16
      007D03 50 05            [24]19723 	jnc	00572$
      007D05 7F 14            [12]19724 	mov	r7,#0x14
      007D07 02 7E C3         [24]19725 	ljmp	00614$
      007D0A                      19726 00572$:
                                  19727 ;	src\main.c:851: else if(giotemp%10==9) giotemp-=9;
      007D0A 8F 03            [24]19728 	mov	ar3,r7
      007D0C 7C 00            [12]19729 	mov	r4,#0x00
      007D0E 75 1B 0A         [24]19730 	mov	__modsint_PARM_2,#0x0a
                                  19731 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      007D11 8C 1C            [24]19732 	mov	(__modsint_PARM_2 + 1),r4
      007D13 8B 82            [24]19733 	mov	dpl,r3
      007D15 8C 83            [24]19734 	mov	dph,r4
      007D17 C0 07            [24]19735 	push	ar7
      007D19 C0 06            [24]19736 	push	ar6
      007D1B 12 84 67         [24]19737 	lcall	__modsint
      007D1E AB 82            [24]19738 	mov	r3,dpl
      007D20 AC 83            [24]19739 	mov	r4,dph
      007D22 D0 06            [24]19740 	pop	ar6
      007D24 D0 07            [24]19741 	pop	ar7
      007D26 BB 09 0C         [24]19742 	cjne	r3,#0x09,00569$
      007D29 BC 00 09         [24]19743 	cjne	r4,#0x00,00569$
      007D2C 8F 04            [24]19744 	mov	ar4,r7
      007D2E EC               [12]19745 	mov	a,r4
      007D2F 24 F7            [12]19746 	add	a,#0xf7
      007D31 FF               [12]19747 	mov	r7,a
      007D32 02 7E C3         [24]19748 	ljmp	00614$
      007D35                      19749 00569$:
                                  19750 ;	src\main.c:852: else giotemp++;
      007D35 0F               [12]19751 	inc	r7
                                  19752 ;	src\main.c:853: break;
      007D36 02 7E C3         [24]19753 	ljmp	00614$
                                  19754 ;	src\main.c:854: case MP3PHUTCHUC :
      007D39                      19755 00574$:
                                  19756 ;	src\main.c:855: if(phuttemp>49) phuttemp-=50;
      007D39 EE               [12]19757 	mov	a,r6
      007D3A 24 CE            [12]19758 	add	a,#0xff - 0x31
      007D3C 50 09            [24]19759 	jnc	00576$
      007D3E 8E 04            [24]19760 	mov	ar4,r6
      007D40 EC               [12]19761 	mov	a,r4
      007D41 24 CE            [12]19762 	add	a,#0xce
      007D43 FE               [12]19763 	mov	r6,a
      007D44 02 7E C3         [24]19764 	ljmp	00614$
      007D47                      19765 00576$:
                                  19766 ;	src\main.c:856: else phuttemp+=10;
      007D47 8E 04            [24]19767 	mov	ar4,r6
      007D49 74 0A            [12]19768 	mov	a,#0x0a
      007D4B 2C               [12]19769 	add	a,r4
      007D4C FE               [12]19770 	mov	r6,a
                                  19771 ;	src\main.c:857: break;
      007D4D 02 7E C3         [24]19772 	ljmp	00614$
                                  19773 ;	src\main.c:858: case MP3PHUTDVI  :
      007D50                      19774 00578$:
                                  19775 ;	src\main.c:859: phuttemp=phuttemp+(eep_mp3>3?5:1);
      007D50 90 F0 10         [24]19776 	mov	dptr,#_eep_mp3
      007D53 E4               [12]19777 	clr	a
      007D54 93               [24]19778 	movc	a,@a+dptr
      007D55 24 FC            [12]19779 	add	a,#0xff - 0x03
      007D57 50 06            [24]19780 	jnc	00780$
      007D59 7B 05            [12]19781 	mov	r3,#0x05
      007D5B 7C 00            [12]19782 	mov	r4,#0x00
      007D5D 80 04            [24]19783 	sjmp	00781$
      007D5F                      19784 00780$:
      007D5F 7B 01            [12]19785 	mov	r3,#0x01
      007D61 7C 00            [12]19786 	mov	r4,#0x00
      007D63                      19787 00781$:
      007D63 8E 04            [24]19788 	mov	ar4,r6
      007D65 EB               [12]19789 	mov	a,r3
      007D66 2C               [12]19790 	add	a,r4
                                  19791 ;	src\main.c:860: if(!(phuttemp%10)) phuttemp-=10;
      007D67 FE               [12]19792 	mov	r6,a
      007D68 FB               [12]19793 	mov	r3,a
      007D69 7C 00            [12]19794 	mov	r4,#0x00
      007D6B 75 1B 0A         [24]19795 	mov	__modsint_PARM_2,#0x0a
                                  19796 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      007D6E 8C 1C            [24]19797 	mov	(__modsint_PARM_2 + 1),r4
      007D70 8B 82            [24]19798 	mov	dpl,r3
      007D72 8C 83            [24]19799 	mov	dph,r4
      007D74 C0 07            [24]19800 	push	ar7
      007D76 C0 06            [24]19801 	push	ar6
      007D78 12 84 67         [24]19802 	lcall	__modsint
      007D7B E5 82            [12]19803 	mov	a,dpl
      007D7D 85 83 F0         [24]19804 	mov	b,dph
      007D80 D0 06            [24]19805 	pop	ar6
      007D82 D0 07            [24]19806 	pop	ar7
      007D84 45 F0            [12]19807 	orl	a,b
      007D86 60 03            [24]19808 	jz	02720$
      007D88 02 7E C3         [24]19809 	ljmp	00614$
      007D8B                      19810 02720$:
      007D8B 8E 04            [24]19811 	mov	ar4,r6
      007D8D EC               [12]19812 	mov	a,r4
      007D8E 24 F6            [12]19813 	add	a,#0xf6
      007D90 FE               [12]19814 	mov	r6,a
                                  19815 ;	src\main.c:861: break;
      007D91 02 7E C3         [24]19816 	ljmp	00614$
                                  19817 ;	src\main.c:862: case MP3NGAYCHUC :
      007D94                      19818 00581$:
                                  19819 ;	src\main.c:863: if(ngaytemp>21) ngaytemp%=10;
      007D94 90 01 35         [24]19820 	mov	dptr,#_main_ngaytemp_65536_253
      007D97 E0               [24]19821 	movx	a,@dptr
      007D98 FC               [12]19822 	mov  r4,a
      007D99 24 EA            [12]19823 	add	a,#0xff - 0x15
      007D9B 50 23            [24]19824 	jnc	00583$
      007D9D 8C 02            [24]19825 	mov	ar2,r4
      007D9F 7B 00            [12]19826 	mov	r3,#0x00
      007DA1 75 1B 0A         [24]19827 	mov	__modsint_PARM_2,#0x0a
                                  19828 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      007DA4 8B 1C            [24]19829 	mov	(__modsint_PARM_2 + 1),r3
      007DA6 8A 82            [24]19830 	mov	dpl,r2
      007DA8 8B 83            [24]19831 	mov	dph,r3
      007DAA C0 07            [24]19832 	push	ar7
      007DAC C0 06            [24]19833 	push	ar6
      007DAE 12 84 67         [24]19834 	lcall	__modsint
      007DB1 AA 82            [24]19835 	mov	r2,dpl
      007DB3 AB 83            [24]19836 	mov	r3,dph
      007DB5 D0 06            [24]19837 	pop	ar6
      007DB7 D0 07            [24]19838 	pop	ar7
      007DB9 90 01 35         [24]19839 	mov	dptr,#_main_ngaytemp_65536_253
      007DBC EA               [12]19840 	mov	a,r2
      007DBD F0               [24]19841 	movx	@dptr,a
      007DBE 80 07            [24]19842 	sjmp	00584$
      007DC0                      19843 00583$:
                                  19844 ;	src\main.c:864: else ngaytemp+=10;
      007DC0 90 01 35         [24]19845 	mov	dptr,#_main_ngaytemp_65536_253
      007DC3 74 0A            [12]19846 	mov	a,#0x0a
      007DC5 2C               [12]19847 	add	a,r4
      007DC6 F0               [24]19848 	movx	@dptr,a
      007DC7                      19849 00584$:
                                  19850 ;	src\main.c:865: if(!ngaytemp) ngaytemp = 10;
      007DC7 90 01 35         [24]19851 	mov	dptr,#_main_ngaytemp_65536_253
      007DCA E0               [24]19852 	movx	a,@dptr
      007DCB 60 03            [24]19853 	jz	02722$
      007DCD 02 7E C3         [24]19854 	ljmp	00614$
      007DD0                      19855 02722$:
      007DD0 90 01 35         [24]19856 	mov	dptr,#_main_ngaytemp_65536_253
      007DD3 74 0A            [12]19857 	mov	a,#0x0a
      007DD5 F0               [24]19858 	movx	@dptr,a
                                  19859 ;	src\main.c:866: break;
      007DD6 02 7E C3         [24]19860 	ljmp	00614$
                                  19861 ;	src\main.c:867: case MP3NGAYDVI  :
      007DD9                      19862 00587$:
                                  19863 ;	src\main.c:868: if(ngaytemp>30) ngaytemp = 30;
      007DD9 90 01 35         [24]19864 	mov	dptr,#_main_ngaytemp_65536_253
      007DDC E0               [24]19865 	movx	a,@dptr
      007DDD FC               [12]19866 	mov  r4,a
      007DDE 24 E1            [12]19867 	add	a,#0xff - 0x1e
      007DE0 50 09            [24]19868 	jnc	00592$
      007DE2 90 01 35         [24]19869 	mov	dptr,#_main_ngaytemp_65536_253
      007DE5 74 1E            [12]19870 	mov	a,#0x1e
      007DE7 F0               [24]19871 	movx	@dptr,a
      007DE8 02 7E C3         [24]19872 	ljmp	00614$
      007DEB                      19873 00592$:
                                  19874 ;	src\main.c:869: else if(ngaytemp%10==9) ngaytemp-=9;
      007DEB 8C 02            [24]19875 	mov	ar2,r4
      007DED 7B 00            [12]19876 	mov	r3,#0x00
      007DEF 75 1B 0A         [24]19877 	mov	__modsint_PARM_2,#0x0a
                                  19878 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      007DF2 8B 1C            [24]19879 	mov	(__modsint_PARM_2 + 1),r3
      007DF4 8A 82            [24]19880 	mov	dpl,r2
      007DF6 8B 83            [24]19881 	mov	dph,r3
      007DF8 C0 07            [24]19882 	push	ar7
      007DFA C0 06            [24]19883 	push	ar6
      007DFC C0 04            [24]19884 	push	ar4
      007DFE 12 84 67         [24]19885 	lcall	__modsint
      007E01 AA 82            [24]19886 	mov	r2,dpl
      007E03 AB 83            [24]19887 	mov	r3,dph
      007E05 D0 04            [24]19888 	pop	ar4
      007E07 D0 06            [24]19889 	pop	ar6
      007E09 D0 07            [24]19890 	pop	ar7
      007E0B BA 09 0F         [24]19891 	cjne	r2,#0x09,00589$
      007E0E BB 00 0C         [24]19892 	cjne	r3,#0x00,00589$
      007E11 8C 03            [24]19893 	mov	ar3,r4
      007E13 EB               [12]19894 	mov	a,r3
      007E14 24 F7            [12]19895 	add	a,#0xf7
      007E16 90 01 35         [24]19896 	mov	dptr,#_main_ngaytemp_65536_253
      007E19 F0               [24]19897 	movx	@dptr,a
      007E1A 02 7E C3         [24]19898 	ljmp	00614$
      007E1D                      19899 00589$:
                                  19900 ;	src\main.c:870: else ngaytemp++;
      007E1D 90 01 35         [24]19901 	mov	dptr,#_main_ngaytemp_65536_253
      007E20 EC               [12]19902 	mov	a,r4
      007E21 04               [12]19903 	inc	a
      007E22 F0               [24]19904 	movx	@dptr,a
                                  19905 ;	src\main.c:871: break;
      007E23 02 7E C3         [24]19906 	ljmp	00614$
                                  19907 ;	src\main.c:872: case MP3THANGCHUC :
      007E26                      19908 00594$:
                                  19909 ;	src\main.c:873: if(thangtemp<3) thangtemp+=10;
      007E26 90 01 36         [24]19910 	mov	dptr,#_main_thangtemp_65536_253
      007E29 E0               [24]19911 	movx	a,@dptr
      007E2A FC               [12]19912 	mov	r4,a
      007E2B BC 03 00         [24]19913 	cjne	r4,#0x03,02726$
      007E2E                      19914 02726$:
      007E2E 50 0C            [24]19915 	jnc	00598$
      007E30 8C 03            [24]19916 	mov	ar3,r4
      007E32 90 01 36         [24]19917 	mov	dptr,#_main_thangtemp_65536_253
      007E35 74 0A            [12]19918 	mov	a,#0x0a
      007E37 2B               [12]19919 	add	a,r3
      007E38 F0               [24]19920 	movx	@dptr,a
      007E39 02 7E C3         [24]19921 	ljmp	00614$
      007E3C                      19922 00598$:
                                  19923 ;	src\main.c:874: else if(thangtemp>10) thangtemp-=10;
      007E3C EC               [12]19924 	mov	a,r4
      007E3D 24 F5            [12]19925 	add	a,#0xff - 0x0a
      007E3F 40 03            [24]19926 	jc	02728$
      007E41 02 7E C3         [24]19927 	ljmp	00614$
      007E44                      19928 02728$:
      007E44 EC               [12]19929 	mov	a,r4
      007E45 24 F6            [12]19930 	add	a,#0xf6
      007E47 90 01 36         [24]19931 	mov	dptr,#_main_thangtemp_65536_253
      007E4A F0               [24]19932 	movx	@dptr,a
                                  19933 ;	src\main.c:875: break;
                                  19934 ;	src\main.c:876: case MP3THANGDVI  :
      007E4B 80 76            [24]19935 	sjmp	00614$
      007E4D                      19936 00600$:
                                  19937 ;	src\main.c:877: if(thangtemp==9) thangtemp = 1;
      007E4D 90 01 36         [24]19938 	mov	dptr,#_main_thangtemp_65536_253
      007E50 E0               [24]19939 	movx	a,@dptr
      007E51 FC               [12]19940 	mov	r4,a
      007E52 BC 09 08         [24]19941 	cjne	r4,#0x09,00605$
      007E55 90 01 36         [24]19942 	mov	dptr,#_main_thangtemp_65536_253
      007E58 74 01            [12]19943 	mov	a,#0x01
      007E5A F0               [24]19944 	movx	@dptr,a
      007E5B 80 66            [24]19945 	sjmp	00614$
      007E5D                      19946 00605$:
                                  19947 ;	src\main.c:878: else if(thangtemp>11) thangtemp = 10;
      007E5D EC               [12]19948 	mov	a,r4
      007E5E 24 F4            [12]19949 	add	a,#0xff - 0x0b
      007E60 50 08            [24]19950 	jnc	00602$
      007E62 90 01 36         [24]19951 	mov	dptr,#_main_thangtemp_65536_253
      007E65 74 0A            [12]19952 	mov	a,#0x0a
      007E67 F0               [24]19953 	movx	@dptr,a
      007E68 80 59            [24]19954 	sjmp	00614$
      007E6A                      19955 00602$:
                                  19956 ;	src\main.c:879: else thangtemp++;
      007E6A 90 01 36         [24]19957 	mov	dptr,#_main_thangtemp_65536_253
      007E6D EC               [12]19958 	mov	a,r4
      007E6E 04               [12]19959 	inc	a
      007E6F F0               [24]19960 	movx	@dptr,a
                                  19961 ;	src\main.c:880: break;
                                  19962 ;	src\main.c:881: case MP3NAMCHUC :
      007E70 80 51            [24]19963 	sjmp	00614$
      007E72                      19964 00607$:
                                  19965 ;	src\main.c:882: if(namtemp>89) namtemp-=90;
      007E72 90 01 37         [24]19966 	mov	dptr,#_main_namtemp_65536_253
      007E75 E0               [24]19967 	movx	a,@dptr
      007E76 FC               [12]19968 	mov  r4,a
      007E77 24 A6            [12]19969 	add	a,#0xff - 0x59
      007E79 50 0B            [24]19970 	jnc	00609$
      007E7B 8C 03            [24]19971 	mov	ar3,r4
      007E7D EB               [12]19972 	mov	a,r3
      007E7E 24 A6            [12]19973 	add	a,#0xa6
      007E80 90 01 37         [24]19974 	mov	dptr,#_main_namtemp_65536_253
      007E83 F0               [24]19975 	movx	@dptr,a
      007E84 80 3D            [24]19976 	sjmp	00614$
      007E86                      19977 00609$:
                                  19978 ;	src\main.c:883: else namtemp+=10;
      007E86 90 01 37         [24]19979 	mov	dptr,#_main_namtemp_65536_253
      007E89 74 0A            [12]19980 	mov	a,#0x0a
      007E8B 2C               [12]19981 	add	a,r4
      007E8C F0               [24]19982 	movx	@dptr,a
                                  19983 ;	src\main.c:884: break;
                                  19984 ;	src\main.c:885: case MP3NAMDVI  :
      007E8D 80 34            [24]19985 	sjmp	00614$
      007E8F                      19986 00611$:
                                  19987 ;	src\main.c:886: if(!(++namtemp%10)) namtemp-=10;
      007E8F 90 01 37         [24]19988 	mov	dptr,#_main_namtemp_65536_253
      007E92 E0               [24]19989 	movx	a,@dptr
      007E93 24 01            [12]19990 	add	a,#0x01
      007E95 F0               [24]19991 	movx	@dptr,a
      007E96 E0               [24]19992 	movx	a,@dptr
      007E97 FC               [12]19993 	mov	r4,a
      007E98 FA               [12]19994 	mov	r2,a
      007E99 7B 00            [12]19995 	mov	r3,#0x00
      007E9B 75 1B 0A         [24]19996 	mov	__modsint_PARM_2,#0x0a
                                  19997 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      007E9E 8B 1C            [24]19998 	mov	(__modsint_PARM_2 + 1),r3
      007EA0 8A 82            [24]19999 	mov	dpl,r2
      007EA2 8B 83            [24]20000 	mov	dph,r3
      007EA4 C0 07            [24]20001 	push	ar7
      007EA6 C0 06            [24]20002 	push	ar6
      007EA8 C0 04            [24]20003 	push	ar4
      007EAA 12 84 67         [24]20004 	lcall	__modsint
      007EAD E5 82            [12]20005 	mov	a,dpl
      007EAF 85 83 F0         [24]20006 	mov	b,dph
      007EB2 D0 04            [24]20007 	pop	ar4
      007EB4 D0 06            [24]20008 	pop	ar6
      007EB6 D0 07            [24]20009 	pop	ar7
      007EB8 45 F0            [12]20010 	orl	a,b
      007EBA 70 07            [24]20011 	jnz	00614$
      007EBC EC               [12]20012 	mov	a,r4
      007EBD 24 F6            [12]20013 	add	a,#0xf6
      007EBF 90 01 37         [24]20014 	mov	dptr,#_main_namtemp_65536_253
      007EC2 F0               [24]20015 	movx	@dptr,a
                                  20016 ;	src\main.c:889: }
      007EC3                      20017 00614$:
                                  20018 ;	src\main.c:890: LCD_guigio(0xc0,"    ",giotemp,phuttemp,251,1);
      007EC3 75 43 85         [24]20019 	mov	_LCD_guigio_PARM_2,#___str_172
      007EC6 75 44 92         [24]20020 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_172 >> 8)
      007EC9 75 45 80         [24]20021 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      007ECC 8F 46            [24]20022 	mov	_LCD_guigio_PARM_3,r7
      007ECE 8E 47            [24]20023 	mov	_LCD_guigio_PARM_4,r6
      007ED0 75 48 FB         [24]20024 	mov	_LCD_guigio_PARM_5,#0xfb
                                  20025 ;	assignBit
      007ED3 D2 01            [12]20026 	setb	_LCD_guigio_PARM_6
      007ED5 75 82 C0         [24]20027 	mov	dpl,#0xc0
      007ED8 C0 07            [24]20028 	push	ar7
      007EDA C0 06            [24]20029 	push	ar6
      007EDC 12 06 DC         [24]20030 	lcall	_LCD_guigio
                                  20031 ;	src\main.c:891: LCD_guilenh(0xc0);
      007EDF 75 82 C0         [24]20032 	mov	dpl,#0xc0
      007EE2 12 05 71         [24]20033 	lcall	_LCD_guilenh
                                  20034 ;	src\main.c:892: LCD_guidulieu(song_name/100+'0');
      007EE5 90 00 F7         [24]20035 	mov	dptr,#_song_name
      007EE8 E0               [24]20036 	movx	a,@dptr
      007EE9 FB               [12]20037 	mov	r3,a
      007EEA A3               [24]20038 	inc	dptr
      007EEB E0               [24]20039 	movx	a,@dptr
      007EEC FC               [12]20040 	mov	r4,a
      007EED 75 1B 64         [24]20041 	mov	__divuint_PARM_2,#0x64
      007EF0 75 1C 00         [24]20042 	mov	(__divuint_PARM_2 + 1),#0x00
      007EF3 8B 82            [24]20043 	mov	dpl,r3
      007EF5 8C 83            [24]20044 	mov	dph,r4
      007EF7 12 83 9D         [24]20045 	lcall	__divuint
      007EFA AB 82            [24]20046 	mov	r3,dpl
      007EFC 74 30            [12]20047 	mov	a,#0x30
      007EFE 2B               [12]20048 	add	a,r3
      007EFF F5 82            [12]20049 	mov	dpl,a
      007F01 12 05 13         [24]20050 	lcall	_LCD_guidulieu
                                  20051 ;	src\main.c:893: LCD_guidulieu(song_name/10%10+'0');
      007F04 90 00 F7         [24]20052 	mov	dptr,#_song_name
      007F07 E0               [24]20053 	movx	a,@dptr
      007F08 FB               [12]20054 	mov	r3,a
      007F09 A3               [24]20055 	inc	dptr
      007F0A E0               [24]20056 	movx	a,@dptr
      007F0B FC               [12]20057 	mov	r4,a
      007F0C 75 1B 0A         [24]20058 	mov	__divuint_PARM_2,#0x0a
      007F0F 75 1C 00         [24]20059 	mov	(__divuint_PARM_2 + 1),#0x00
      007F12 8B 82            [24]20060 	mov	dpl,r3
      007F14 8C 83            [24]20061 	mov	dph,r4
      007F16 12 83 9D         [24]20062 	lcall	__divuint
      007F19 75 1B 0A         [24]20063 	mov	__moduint_PARM_2,#0x0a
      007F1C 75 1C 00         [24]20064 	mov	(__moduint_PARM_2 + 1),#0x00
      007F1F 12 83 FE         [24]20065 	lcall	__moduint
      007F22 AB 82            [24]20066 	mov	r3,dpl
      007F24 74 30            [12]20067 	mov	a,#0x30
      007F26 2B               [12]20068 	add	a,r3
      007F27 F5 82            [12]20069 	mov	dpl,a
      007F29 12 05 13         [24]20070 	lcall	_LCD_guidulieu
                                  20071 ;	src\main.c:894: LCD_guidulieu(song_name%10 + '0');
      007F2C 90 00 F7         [24]20072 	mov	dptr,#_song_name
      007F2F E0               [24]20073 	movx	a,@dptr
      007F30 FB               [12]20074 	mov	r3,a
      007F31 A3               [24]20075 	inc	dptr
      007F32 E0               [24]20076 	movx	a,@dptr
      007F33 FC               [12]20077 	mov	r4,a
      007F34 75 1B 0A         [24]20078 	mov	__moduint_PARM_2,#0x0a
      007F37 75 1C 00         [24]20079 	mov	(__moduint_PARM_2 + 1),#0x00
      007F3A 8B 82            [24]20080 	mov	dpl,r3
      007F3C 8C 83            [24]20081 	mov	dph,r4
      007F3E 12 83 FE         [24]20082 	lcall	__moduint
      007F41 AB 82            [24]20083 	mov	r3,dpl
      007F43 74 30            [12]20084 	mov	a,#0x30
      007F45 2B               [12]20085 	add	a,r3
      007F46 F5 82            [12]20086 	mov	dpl,a
      007F48 12 05 13         [24]20087 	lcall	_LCD_guidulieu
      007F4B D0 06            [24]20088 	pop	ar6
      007F4D D0 07            [24]20089 	pop	ar7
                                  20090 ;	src\main.c:895: LCD_guigio(0xc8," ",ngaytemp,thangtemp,100+namtemp,1);
      007F4F 75 43 0D         [24]20091 	mov	_LCD_guigio_PARM_2,#___str_162
      007F52 75 44 92         [24]20092 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_162 >> 8)
      007F55 75 45 80         [24]20093 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      007F58 90 01 35         [24]20094 	mov	dptr,#_main_ngaytemp_65536_253
      007F5B E0               [24]20095 	movx	a,@dptr
      007F5C FC               [12]20096 	mov	r4,a
      007F5D 90 01 36         [24]20097 	mov	dptr,#_main_thangtemp_65536_253
      007F60 E0               [24]20098 	movx	a,@dptr
      007F61 FB               [12]20099 	mov	r3,a
      007F62 90 01 37         [24]20100 	mov	dptr,#_main_namtemp_65536_253
      007F65 E0               [24]20101 	movx	a,@dptr
      007F66 F5 7B            [12]20102 	mov	_main_sloc2_1_0,a
      007F68 C0 06            [24]20103 	push	ar6
      007F6A AE 7B            [24]20104 	mov	r6,_main_sloc2_1_0
      007F6C 74 64            [12]20105 	mov	a,#0x64
      007F6E 2E               [12]20106 	add	a,r6
      007F6F F5 48            [12]20107 	mov	_LCD_guigio_PARM_5,a
      007F71 8C 46            [24]20108 	mov	_LCD_guigio_PARM_3,r4
      007F73 8B 47            [24]20109 	mov	_LCD_guigio_PARM_4,r3
                                  20110 ;	assignBit
      007F75 D2 01            [12]20111 	setb	_LCD_guigio_PARM_6
      007F77 75 82 C8         [24]20112 	mov	dpl,#0xc8
      007F7A C0 07            [24]20113 	push	ar7
      007F7C C0 06            [24]20114 	push	ar6
      007F7E C0 04            [24]20115 	push	ar4
      007F80 C0 03            [24]20116 	push	ar3
      007F82 12 06 DC         [24]20117 	lcall	_LCD_guigio
      007F85 D0 03            [24]20118 	pop	ar3
                                  20119 ;	src\main.c:896: check = (23*thangtemp/9 + ngaytemp + (thangtemp>2?!(namtemp%4):2) + namtemp + (namtemp+3)/4 + 1);
      007F87 8B 1B            [24]20120 	mov	__mulint_PARM_2,r3
      007F89 75 1C 00         [24]20121 	mov	(__mulint_PARM_2 + 1),#0x00
      007F8C 90 00 17         [24]20122 	mov	dptr,#0x0017
      007F8F C0 03            [24]20123 	push	ar3
      007F91 12 83 E1         [24]20124 	lcall	__mulint
      007F94 75 1B 09         [24]20125 	mov	__divsint_PARM_2,#0x09
      007F97 75 1C 00         [24]20126 	mov	(__divsint_PARM_2 + 1),#0x00
      007F9A 12 84 9D         [24]20127 	lcall	__divsint
      007F9D 85 82 78         [24]20128 	mov	_main_sloc0_1_0,dpl
      007FA0 85 83 79         [24]20129 	mov	(_main_sloc0_1_0 + 1),dph
      007FA3 D0 03            [24]20130 	pop	ar3
      007FA5 D0 04            [24]20131 	pop	ar4
      007FA7 D0 06            [24]20132 	pop	ar6
      007FA9 D0 07            [24]20133 	pop	ar7
      007FAB 7E 00            [12]20134 	mov	r6,#0x00
      007FAD EC               [12]20135 	mov	a,r4
      007FAE 25 78            [12]20136 	add	a,_main_sloc0_1_0
      007FB0 F5 78            [12]20137 	mov	_main_sloc0_1_0,a
      007FB2 EE               [12]20138 	mov	a,r6
      007FB3 35 79            [12]20139 	addc	a,(_main_sloc0_1_0 + 1)
      007FB5 F5 79            [12]20140 	mov	(_main_sloc0_1_0 + 1),a
      007FB7 C3               [12]20141 	clr	c
      007FB8 74 02            [12]20142 	mov	a,#0x02
      007FBA 9B               [12]20143 	subb	a,r3
      007FBB D0 06            [24]20144 	pop	ar6
      007FBD 50 13            [24]20145 	jnc	00782$
      007FBF 74 03            [12]20146 	mov	a,#0x03
      007FC1 55 7B            [12]20147 	anl	a,_main_sloc2_1_0
      007FC3 7C 00            [12]20148 	mov	r4,#0x00
      007FC5 4C               [12]20149 	orl	a,r4
      007FC6 B4 01 00         [24]20150 	cjne	a,#0x01,02735$
      007FC9                      20151 02735$:
      007FC9 92 4E            [24]20152 	mov  _main_sloc3_1_0,c
      007FCB E4               [12]20153 	clr	a
      007FCC 33               [12]20154 	rlc	a
      007FCD FB               [12]20155 	mov	r3,a
      007FCE 7C 00            [12]20156 	mov	r4,#0x00
      007FD0 80 04            [24]20157 	sjmp	00783$
      007FD2                      20158 00782$:
      007FD2 7B 02            [12]20159 	mov	r3,#0x02
      007FD4 7C 00            [12]20160 	mov	r4,#0x00
      007FD6                      20161 00783$:
      007FD6 C0 06            [24]20162 	push	ar6
      007FD8 EB               [12]20163 	mov	a,r3
      007FD9 25 78            [12]20164 	add	a,_main_sloc0_1_0
      007FDB FB               [12]20165 	mov	r3,a
      007FDC EC               [12]20166 	mov	a,r4
      007FDD 35 79            [12]20167 	addc	a,(_main_sloc0_1_0 + 1)
      007FDF FC               [12]20168 	mov	r4,a
      007FE0 90 01 37         [24]20169 	mov	dptr,#_main_namtemp_65536_253
      007FE3 E0               [24]20170 	movx	a,@dptr
      007FE4 FA               [12]20171 	mov	r2,a
      007FE5 7E 00            [12]20172 	mov	r6,#0x00
      007FE7 2B               [12]20173 	add	a,r3
      007FE8 FB               [12]20174 	mov	r3,a
      007FE9 EE               [12]20175 	mov	a,r6
      007FEA 3C               [12]20176 	addc	a,r4
      007FEB FC               [12]20177 	mov	r4,a
      007FEC 8A 82            [24]20178 	mov	dpl,r2
      007FEE 8E 83            [24]20179 	mov	dph,r6
      007FF0 A3               [24]20180 	inc	dptr
      007FF1 A3               [24]20181 	inc	dptr
      007FF2 A3               [24]20182 	inc	dptr
      007FF3 75 1B 04         [24]20183 	mov	__divsint_PARM_2,#0x04
                                  20184 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      007FF6 8E 1C            [24]20185 	mov	(__divsint_PARM_2 + 1),r6
      007FF8 C0 07            [24]20186 	push	ar7
      007FFA C0 04            [24]20187 	push	ar4
      007FFC C0 03            [24]20188 	push	ar3
      007FFE 12 84 9D         [24]20189 	lcall	__divsint
      008001 AA 82            [24]20190 	mov	r2,dpl
      008003 AE 83            [24]20191 	mov	r6,dph
      008005 D0 03            [24]20192 	pop	ar3
      008007 D0 04            [24]20193 	pop	ar4
      008009 EA               [12]20194 	mov	a,r2
      00800A 2B               [12]20195 	add	a,r3
      00800B FB               [12]20196 	mov	r3,a
      00800C EE               [12]20197 	mov	a,r6
      00800D 3C               [12]20198 	addc	a,r4
      00800E FC               [12]20199 	mov	r4,a
      00800F 8B 82            [24]20200 	mov	dpl,r3
      008011 8C 83            [24]20201 	mov	dph,r4
      008013 A3               [24]20202 	inc	dptr
                                  20203 ;	src\main.c:897: thutemp = check%7+1; 
      008014 75 1B 07         [24]20204 	mov	__moduint_PARM_2,#0x07
      008017 75 1C 00         [24]20205 	mov	(__moduint_PARM_2 + 1),#0x00
      00801A 12 83 FE         [24]20206 	lcall	__moduint
      00801D AC 82            [24]20207 	mov	r4,dpl
      00801F AE 83            [24]20208 	mov	r6,dph
      008021 0C               [12]20209 	inc	r4
      008022 90 01 38         [24]20210 	mov	dptr,#_main_thutemp_65536_253
      008025 EC               [12]20211 	mov	a,r4
      008026 F0               [24]20212 	movx	@dptr,a
                                  20213 ;	src\main.c:898: LCD_guilenh(0xcf);
      008027 75 82 CF         [24]20214 	mov	dpl,#0xcf
      00802A C0 06            [24]20215 	push	ar6
      00802C C0 04            [24]20216 	push	ar4
      00802E 12 05 71         [24]20217 	lcall	_LCD_guilenh
      008031 D0 04            [24]20218 	pop	ar4
                                  20219 ;	src\main.c:899: LCD_guidulieu(thutemp+'0');
      008033 74 30            [12]20220 	mov	a,#0x30
      008035 2C               [12]20221 	add	a,r4
      008036 F5 82            [12]20222 	mov	dpl,a
      008038 12 05 13         [24]20223 	lcall	_LCD_guidulieu
      00803B D0 06            [24]20224 	pop	ar6
      00803D D0 07            [24]20225 	pop	ar7
                                  20226 ;	src\main.c:973: WATCHDOG;
      00803F D0 06            [24]20227 	pop	ar6
                                  20228 ;	src\main.c:899: LCD_guidulieu(thutemp+'0');
      008041                      20229 00616$:
                                  20230 ;	src\main.c:903: if(phim_back_nhan){
                                  20231 ;	src\main.c:904: phim_back_nhan = 0;
                                  20232 ;	assignBit
      008041 10 26 02         [24]20233 	jbc	_phim_back_nhan,02736$
      008044 80 40            [24]20234 	sjmp	00621$
      008046                      20235 02736$:
                                  20236 ;	src\main.c:905: mode_wait = TIME_MODE_WAIT;
      008046 90 00 F6         [24]20237 	mov	dptr,#_mode_wait
      008049 74 3C            [12]20238 	mov	a,#0x3c
      00804B F0               [24]20239 	movx	@dptr,a
                                  20240 ;	src\main.c:906: if(sub_mode)sub_mode--;
      00804C 90 00 F5         [24]20241 	mov	dptr,#_sub_mode
      00804F E0               [24]20242 	movx	a,@dptr
      008050 FC               [12]20243 	mov	r4,a
      008051 E0               [24]20244 	movx	a,@dptr
      008052 60 08            [24]20245 	jz	00618$
      008054 EC               [12]20246 	mov	a,r4
      008055 14               [12]20247 	dec	a
      008056 90 00 F5         [24]20248 	mov	dptr,#_sub_mode
      008059 F0               [24]20249 	movx	@dptr,a
      00805A 80 2A            [24]20250 	sjmp	00621$
      00805C                      20251 00618$:
                                  20252 ;	src\main.c:908: song_name = 0;
      00805C 90 00 F7         [24]20253 	mov	dptr,#_song_name
      00805F E4               [12]20254 	clr	a
      008060 F0               [24]20255 	movx	@dptr,a
      008061 A3               [24]20256 	inc	dptr
      008062 F0               [24]20257 	movx	@dptr,a
                                  20258 ;	src\main.c:909: LCD_guilenh(0xc0);
      008063 75 82 C0         [24]20259 	mov	dpl,#0xc0
      008066 C0 07            [24]20260 	push	ar7
      008068 C0 06            [24]20261 	push	ar6
      00806A 12 05 71         [24]20262 	lcall	_LCD_guilenh
                                  20263 ;	src\main.c:910: LCD_guichuoi("000 ");
      00806D 90 92 54         [24]20264 	mov	dptr,#___str_167
      008070 75 F0 80         [24]20265 	mov	b,#0x80
      008073 12 05 F1         [24]20266 	lcall	_LCD_guichuoi
                                  20267 ;	src\main.c:911: mp3_play(9,0,0);
      008076 75 19 00         [24]20268 	mov	_mp3_play_PARM_2,#0x00
      008079 75 1A 00         [24]20269 	mov	_mp3_play_PARM_3,#0x00
      00807C 75 82 09         [24]20270 	mov	dpl,#0x09
      00807F 12 82 9E         [24]20271 	lcall	_mp3_play
      008082 D0 06            [24]20272 	pop	ar6
      008084 D0 07            [24]20273 	pop	ar7
      008086                      20274 00621$:
                                  20275 ;	src\main.c:916: if(phim_mode_nhan){
                                  20276 ;	src\main.c:918: phim_mode_nhan = 0;
                                  20277 ;	assignBit
      008086 10 22 03         [24]20278 	jbc	_phim_mode_nhan,02738$
      008089 02 82 23         [24]20279 	ljmp	00643$
      00808C                      20280 02738$:
                                  20281 ;	src\main.c:919: mode_wait = TIME_MODE_WAIT;
      00808C 90 00 F6         [24]20282 	mov	dptr,#_mode_wait
      00808F 74 3C            [12]20283 	mov	a,#0x3c
      008091 F0               [24]20284 	movx	@dptr,a
                                  20285 ;	src\main.c:920: if(++sub_mode>12){
      008092 90 00 F5         [24]20286 	mov	dptr,#_sub_mode
      008095 E0               [24]20287 	movx	a,@dptr
      008096 24 01            [12]20288 	add	a,#0x01
      008098 F0               [24]20289 	movx	@dptr,a
      008099 E0               [24]20290 	movx	a,@dptr
      00809A FC               [12]20291 	mov  r4,a
      00809B 24 F3            [12]20292 	add	a,#0xff - 0x0c
      00809D 50 58            [24]20293 	jnc	00627$
                                  20294 ;	src\main.c:921: sub_mode = 0;
      00809F 90 00 F5         [24]20295 	mov	dptr,#_sub_mode
      0080A2 E4               [12]20296 	clr	a
      0080A3 F0               [24]20297 	movx	@dptr,a
                                  20298 ;	src\main.c:922: mp3_play(eep_mp3>3?thutemp:10,giotemp,phuttemp);
      0080A4 90 F0 10         [24]20299 	mov	dptr,#_eep_mp3
                                  20300 ;	genFromRTrack removed	clr	a
      0080A7 93               [24]20301 	movc	a,@a+dptr
      0080A8 24 FC            [12]20302 	add	a,#0xff - 0x03
      0080AA 50 09            [24]20303 	jnc	00784$
      0080AC 90 01 38         [24]20304 	mov	dptr,#_main_thutemp_65536_253
      0080AF E0               [24]20305 	movx	a,@dptr
      0080B0 FA               [12]20306 	mov	r2,a
      0080B1 7B 00            [12]20307 	mov	r3,#0x00
      0080B3 80 04            [24]20308 	sjmp	00785$
      0080B5                      20309 00784$:
      0080B5 7A 0A            [12]20310 	mov	r2,#0x0a
      0080B7 7B 00            [12]20311 	mov	r3,#0x00
      0080B9                      20312 00785$:
      0080B9 8A 82            [24]20313 	mov	dpl,r2
      0080BB 8F 19            [24]20314 	mov	_mp3_play_PARM_2,r7
      0080BD 8E 1A            [24]20315 	mov	_mp3_play_PARM_3,r6
      0080BF C0 07            [24]20316 	push	ar7
      0080C1 C0 06            [24]20317 	push	ar6
      0080C3 12 82 9E         [24]20318 	lcall	_mp3_play
                                  20319 ;	src\main.c:923: delay_ms(100);
      0080C6 90 00 64         [24]20320 	mov	dptr,#0x0064
      0080C9 12 04 BB         [24]20321 	lcall	_delay_ms
                                  20322 ;	src\main.c:924: AmplyRelay = mp3_playing;
                                  20323 ;	assignBit
      0080CC A2 92            [12]20324 	mov	c,_P12
      0080CE 92 C2            [24]20325 	mov	_P42,c
                                  20326 ;	src\main.c:925: LCD_guilenh(0xc3);
      0080D0 75 82 C3         [24]20327 	mov	dpl,#0xc3
      0080D3 12 05 71         [24]20328 	lcall	_LCD_guilenh
      0080D6 D0 06            [24]20329 	pop	ar6
      0080D8 D0 07            [24]20330 	pop	ar7
                                  20331 ;	src\main.c:926: LCD_guidulieu(mp3_playing?'O':'X');
      0080DA 30 92 06         [24]20332 	jnb	_P12,00786$
      0080DD 7A 4F            [12]20333 	mov	r2,#0x4f
      0080DF 7B 00            [12]20334 	mov	r3,#0x00
      0080E1 80 04            [24]20335 	sjmp	00787$
      0080E3                      20336 00786$:
      0080E3 7A 58            [12]20337 	mov	r2,#0x58
      0080E5 7B 00            [12]20338 	mov	r3,#0x00
      0080E7                      20339 00787$:
      0080E7 8A 82            [24]20340 	mov	dpl,r2
      0080E9 C0 07            [24]20341 	push	ar7
      0080EB C0 06            [24]20342 	push	ar6
      0080ED 12 05 13         [24]20343 	lcall	_LCD_guidulieu
      0080F0 D0 06            [24]20344 	pop	ar6
      0080F2 D0 07            [24]20345 	pop	ar7
      0080F4 02 82 23         [24]20346 	ljmp	00643$
      0080F7                      20347 00627$:
                                  20348 ;	src\main.c:933: }else if(song_name && sub_mode > 2 && eep_mp3>3){
      0080F7 90 00 F7         [24]20349 	mov	dptr,#_song_name
      0080FA E0               [24]20350 	movx	a,@dptr
      0080FB FA               [12]20351 	mov	r2,a
      0080FC A3               [24]20352 	inc	dptr
      0080FD E0               [24]20353 	movx	a,@dptr
      0080FE FB               [12]20354 	mov	r3,a
      0080FF 4A               [12]20355 	orl	a,r2
      008100 70 03            [24]20356 	jnz	02742$
      008102 02 82 23         [24]20357 	ljmp	00643$
      008105                      20358 02742$:
      008105 EC               [12]20359 	mov	a,r4
      008106 24 FD            [12]20360 	add	a,#0xff - 0x02
      008108 40 03            [24]20361 	jc	02743$
      00810A 02 82 23         [24]20362 	ljmp	00643$
      00810D                      20363 02743$:
      00810D 90 F0 10         [24]20364 	mov	dptr,#_eep_mp3
      008110 E4               [12]20365 	clr	a
      008111 93               [24]20366 	movc	a,@a+dptr
      008112 FC               [12]20367 	mov  r4,a
      008113 24 FC            [12]20368 	add	a,#0xff - 0x03
      008115 40 03            [24]20369 	jc	02744$
      008117 02 82 23         [24]20370 	ljmp	00643$
      00811A                      20371 02744$:
                                  20372 ;	src\main.c:934: sub_mode = 0;
      00811A C0 06            [24]20373 	push	ar6
      00811C 90 00 F5         [24]20374 	mov	dptr,#_sub_mode
      00811F E4               [12]20375 	clr	a
      008120 F0               [24]20376 	movx	@dptr,a
                                  20377 ;	src\main.c:935: mp3_play(0,song_name/12,(song_name-song_name/12*12)*5);
      008121 75 1B 0C         [24]20378 	mov	__divuint_PARM_2,#0x0c
                                  20379 ;	1-genFromRTrack replaced	mov	(__divuint_PARM_2 + 1),#0x00
      008124 F5 1C            [12]20380 	mov	(__divuint_PARM_2 + 1),a
      008126 8A 82            [24]20381 	mov	dpl,r2
      008128 8B 83            [24]20382 	mov	dph,r3
      00812A C0 07            [24]20383 	push	ar7
      00812C C0 03            [24]20384 	push	ar3
      00812E C0 02            [24]20385 	push	ar2
      008130 12 83 9D         [24]20386 	lcall	__divuint
      008133 AC 82            [24]20387 	mov	r4,dpl
      008135 D0 02            [24]20388 	pop	ar2
      008137 D0 03            [24]20389 	pop	ar3
      008139 EC               [12]20390 	mov	a,r4
      00813A 75 F0 0C         [24]20391 	mov	b,#0x0c
      00813D A4               [48]20392 	mul	ab
      00813E FE               [12]20393 	mov	r6,a
      00813F EA               [12]20394 	mov	a,r2
      008140 C3               [12]20395 	clr	c
      008141 9E               [12]20396 	subb	a,r6
      008142 FE               [12]20397 	mov	r6,a
      008143 75 F0 05         [24]20398 	mov	b,#0x05
      008146 A4               [48]20399 	mul	ab
      008147 F5 1A            [12]20400 	mov	_mp3_play_PARM_3,a
      008149 8C 19            [24]20401 	mov	_mp3_play_PARM_2,r4
      00814B 75 82 00         [24]20402 	mov	dpl,#0x00
      00814E C0 06            [24]20403 	push	ar6
      008150 12 82 9E         [24]20404 	lcall	_mp3_play
                                  20405 ;	src\main.c:936: delay_ms(100);
      008153 90 00 64         [24]20406 	mov	dptr,#0x0064
      008156 12 04 BB         [24]20407 	lcall	_delay_ms
                                  20408 ;	src\main.c:937: AmplyRelay = mp3_playing;
                                  20409 ;	assignBit
      008159 A2 92            [12]20410 	mov	c,_P12
      00815B 92 C2            [24]20411 	mov	_P42,c
                                  20412 ;	src\main.c:938: LCD_guilenh(0xc3);
      00815D 75 82 C3         [24]20413 	mov	dpl,#0xc3
      008160 12 05 71         [24]20414 	lcall	_LCD_guilenh
      008163 D0 06            [24]20415 	pop	ar6
      008165 D0 07            [24]20416 	pop	ar7
                                  20417 ;	src\main.c:939: LCD_guidulieu(mp3_playing?'M':'X');
      008167 D0 06            [24]20418 	pop	ar6
      008169 30 92 06         [24]20419 	jnb	_P12,00788$
      00816C 7B 4D            [12]20420 	mov	r3,#0x4d
      00816E 7C 00            [12]20421 	mov	r4,#0x00
      008170 80 04            [24]20422 	sjmp	00789$
      008172                      20423 00788$:
      008172 7B 58            [12]20424 	mov	r3,#0x58
      008174 7C 00            [12]20425 	mov	r4,#0x00
      008176                      20426 00789$:
      008176 8B 82            [24]20427 	mov	dpl,r3
      008178 C0 07            [24]20428 	push	ar7
      00817A C0 06            [24]20429 	push	ar6
      00817C 12 05 13         [24]20430 	lcall	_LCD_guidulieu
      00817F D0 06            [24]20431 	pop	ar6
      008181 D0 07            [24]20432 	pop	ar7
                                  20433 ;	src\main.c:943: break;
      008183 02 82 23         [24]20434 	ljmp	00643$
                                  20435 ;	src\main.c:944: case CANHKIM:
      008186                      20436 00631$:
                                  20437 ;	src\main.c:945: if(phim_mode_nhan){
                                  20438 ;	src\main.c:946: phim_mode_nhan=0;
                                  20439 ;	assignBit
      008186 10 22 02         [24]20440 	jbc	_phim_mode_nhan,02746$
      008189 80 2B            [24]20441 	sjmp	00633$
      00818B                      20442 02746$:
                                  20443 ;	src\main.c:947: canhkim = 5; 
      00818B 90 00 E1         [24]20444 	mov	dptr,#_canhkim
      00818E 74 05            [12]20445 	mov	a,#0x05
      008190 F0               [24]20446 	movx	@dptr,a
                                  20447 ;	src\main.c:948: may_canh_kim = sub_mode+1;
      008191 90 00 F5         [24]20448 	mov	dptr,#_sub_mode
      008194 E0               [24]20449 	movx	a,@dptr
      008195 90 00 E2         [24]20450 	mov	dptr,#_may_canh_kim
      008198 04               [12]20451 	inc	a
      008199 F0               [24]20452 	movx	@dptr,a
                                  20453 ;	src\main.c:949: delay_ve_kim = 5;
      00819A 90 00 E3         [24]20454 	mov	dptr,#_delay_ve_kim
      00819D 74 05            [12]20455 	mov	a,#0x05
      00819F F0               [24]20456 	movx	@dptr,a
                                  20457 ;	src\main.c:950: sub_mode = mode;
      0081A0 90 00 F5         [24]20458 	mov	dptr,#_sub_mode
      0081A3 ED               [12]20459 	mov	a,r5
      0081A4 F0               [24]20460 	movx	@dptr,a
                                  20461 ;	src\main.c:951: mode = SELECT;
      0081A5 90 00 F4         [24]20462 	mov	dptr,#_mode
      0081A8 74 07            [12]20463 	mov	a,#0x07
      0081AA F0               [24]20464 	movx	@dptr,a
                                  20465 ;	src\main.c:952: LCD_noblink();
      0081AB C0 07            [24]20466 	push	ar7
      0081AD C0 06            [24]20467 	push	ar6
      0081AF 12 05 CC         [24]20468 	lcall	_LCD_noblink
      0081B2 D0 06            [24]20469 	pop	ar6
      0081B4 D0 07            [24]20470 	pop	ar7
      0081B6                      20471 00633$:
                                  20472 ;	src\main.c:954: if(phim_cong_nhan){
      0081B6 30 2A 6A         [24]20473 	jnb	_phim_cong_nhan,00643$
                                  20474 ;	src\main.c:955: phim_cong_nhan = 0;
      0081B9 C0 06            [24]20475 	push	ar6
                                  20476 ;	assignBit
      0081BB C2 2A            [12]20477 	clr	_phim_cong_nhan
                                  20478 ;	src\main.c:956: if(++sub_mode>so_motor-1) sub_mode = 0;
      0081BD 90 00 F5         [24]20479 	mov	dptr,#_sub_mode
      0081C0 E0               [24]20480 	movx	a,@dptr
      0081C1 24 01            [12]20481 	add	a,#0x01
      0081C3 F0               [24]20482 	movx	@dptr,a
      0081C4 90 01 2F         [24]20483 	mov	dptr,#_so_motor
      0081C7 E0               [24]20484 	movx	a,@dptr
      0081C8 FC               [12]20485 	mov	r4,a
      0081C9 7B 00            [12]20486 	mov	r3,#0x00
      0081CB 1C               [12]20487 	dec	r4
      0081CC BC FF 01         [24]20488 	cjne	r4,#0xff,02748$
      0081CF 1B               [12]20489 	dec	r3
      0081D0                      20490 02748$:
      0081D0 90 00 F5         [24]20491 	mov	dptr,#_sub_mode
      0081D3 E0               [24]20492 	movx	a,@dptr
      0081D4 FA               [12]20493 	mov	r2,a
      0081D5 7E 00            [12]20494 	mov	r6,#0x00
      0081D7 C3               [12]20495 	clr	c
      0081D8 EC               [12]20496 	mov	a,r4
      0081D9 9A               [12]20497 	subb	a,r2
      0081DA EB               [12]20498 	mov	a,r3
      0081DB 64 80            [12]20499 	xrl	a,#0x80
      0081DD 8E F0            [24]20500 	mov	b,r6
      0081DF 63 F0 80         [24]20501 	xrl	b,#0x80
      0081E2 95 F0            [12]20502 	subb	a,b
      0081E4 D0 06            [24]20503 	pop	ar6
      0081E6 50 05            [24]20504 	jnc	00635$
      0081E8 90 00 F5         [24]20505 	mov	dptr,#_sub_mode
      0081EB E4               [12]20506 	clr	a
      0081EC F0               [24]20507 	movx	@dptr,a
      0081ED                      20508 00635$:
                                  20509 ;	src\main.c:957: LCD_guidulieu(sub_mode+'1');
      0081ED 90 00 F5         [24]20510 	mov	dptr,#_sub_mode
      0081F0 E0               [24]20511 	movx	a,@dptr
      0081F1 24 31            [12]20512 	add	a,#0x31
      0081F3 F5 82            [12]20513 	mov	dpl,a
      0081F5 C0 07            [24]20514 	push	ar7
      0081F7 C0 06            [24]20515 	push	ar6
      0081F9 12 05 13         [24]20516 	lcall	_LCD_guidulieu
                                  20517 ;	src\main.c:958: LCD_guilenh(0xc4);
      0081FC 75 82 C4         [24]20518 	mov	dpl,#0xc4
      0081FF 12 05 71         [24]20519 	lcall	_LCD_guilenh
      008202 D0 06            [24]20520 	pop	ar6
      008204 D0 07            [24]20521 	pop	ar7
                                  20522 ;	src\main.c:960: break;
                                  20523 ;	src\main.c:962: case DATE:
      008206 80 1B            [24]20524 	sjmp	00643$
      008208                      20525 00639$:
                                  20526 ;	src\main.c:964: if(phim_mode_nhan){
                                  20527 ;	src\main.c:965: phim_mode_nhan=0;
                                  20528 ;	assignBit
      008208 10 22 02         [24]20529 	jbc	_phim_mode_nhan,02750$
      00820B 80 16            [24]20530 	sjmp	00643$
      00820D                      20531 02750$:
                                  20532 ;	src\main.c:966: sub_mode = mode;
      00820D 90 00 F5         [24]20533 	mov	dptr,#_sub_mode
      008210 ED               [12]20534 	mov	a,r5
      008211 F0               [24]20535 	movx	@dptr,a
                                  20536 ;	src\main.c:967: mode = SELECT;
      008212 90 00 F4         [24]20537 	mov	dptr,#_mode
      008215 74 07            [12]20538 	mov	a,#0x07
      008217 F0               [24]20539 	movx	@dptr,a
                                  20540 ;	src\main.c:969: break;
                                  20541 ;	src\main.c:970: default: mode = sub_mode = 0;
      008218 80 09            [24]20542 	sjmp	00643$
      00821A                      20543 00642$:
      00821A 90 00 F5         [24]20544 	mov	dptr,#_sub_mode
      00821D E4               [12]20545 	clr	a
      00821E F0               [24]20546 	movx	@dptr,a
      00821F 90 00 F4         [24]20547 	mov	dptr,#_mode
      008222 F0               [24]20548 	movx	@dptr,a
                                  20549 ;	src\main.c:971: }
      008223                      20550 00643$:
                                  20551 ;	src\main.c:973: WATCHDOG;
      008223 43 C1 10         [24]20552 	orl	_WDT_CONTR,#0x10
                                  20553 ;	src\main.c:975: }
      008226 02 66 E6         [24]20554 	ljmp	00645$
                                  20555 ;------------------------------------------------------------
                                  20556 ;Allocation info for local variables in function 'mp3_serial_interupt'
                                  20557 ;------------------------------------------------------------
                                  20558 ;	src\main.c:977: void mp3_serial_interupt() __interrupt 8 __using 1 {
                                  20559 ;	-----------------------------------------
                                  20560 ;	 function mp3_serial_interupt
                                  20561 ;	-----------------------------------------
      008229                      20562 _mp3_serial_interupt:
                           00000F 20563 	ar7 = 0x0f
                           00000E 20564 	ar6 = 0x0e
                           00000D 20565 	ar5 = 0x0d
                           00000C 20566 	ar4 = 0x0c
                           00000B 20567 	ar3 = 0x0b
                           00000A 20568 	ar2 = 0x0a
                           000009 20569 	ar1 = 0x09
                           000008 20570 	ar0 = 0x08
      008229 C0 E0            [24]20571 	push	acc
                                  20572 ;	src\main.c:978: WATCHDOG;
      00822B 43 C1 10         [24]20573 	orl	_WDT_CONTR,#0x10
                                  20574 ;	src\main.c:979: if(mp3_RI)
      00822E E5 9A            [12]20575 	mov	a,_S2CON
      008230 30 E0 03         [24]20576 	jnb	acc.0,00103$
                                  20577 ;	src\main.c:980: S2CON &= 0xFE;
      008233 53 9A FE         [24]20578 	anl	_S2CON,#0xfe
      008236                      20579 00103$:
                                  20580 ;	src\main.c:982: }
      008236 D0 E0            [24]20581 	pop	acc
      008238 32               [24]20582 	reti
                                  20583 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                  20584 ;	eliminated unneeded push/pop not_psw
                                  20585 ;	eliminated unneeded push/pop dpl
                                  20586 ;	eliminated unneeded push/pop dph
                                  20587 ;	eliminated unneeded push/pop b
                                  20588 ;------------------------------------------------------------
                                  20589 ;Allocation info for local variables in function 'adc_isr'
                                  20590 ;------------------------------------------------------------
                                  20591 ;	src\main.c:986: void adc_isr() __interrupt ADC_VECTOR __using 0
                                  20592 ;	-----------------------------------------
                                  20593 ;	 function adc_isr
                                  20594 ;	-----------------------------------------
      008239                      20595 _adc_isr:
                           000007 20596 	ar7 = 0x07
                           000006 20597 	ar6 = 0x06
                           000005 20598 	ar5 = 0x05
                           000004 20599 	ar4 = 0x04
                           000003 20600 	ar3 = 0x03
                           000002 20601 	ar2 = 0x02
                           000001 20602 	ar1 = 0x01
                           000000 20603 	ar0 = 0x00
      008239 C0 E0            [24]20604 	push	acc
      00823B C0 07            [24]20605 	push	ar7
      00823D C0 00            [24]20606 	push	ar0
      00823F C0 D0            [24]20607 	push	psw
      008241 75 D0 00         [24]20608 	mov	psw,#0x00
                                  20609 ;	src\main.c:988: ADC_CONTR = 0x83; //Clear ADC interrupt flag
      008244 75 BC 83         [24]20610 	mov	_ADC_CONTR,#0x83
                                  20611 ;	src\main.c:991: dien_ap_nguon = ADC_RES;
      008247 AF BD            [24]20612 	mov	r7,_ADC_RES
      008249 78 7D            [12]20613 	mov	r0,#_dien_ap_nguon
      00824B A6 07            [24]20614 	mov	@r0,ar7
                                  20615 ;	src\main.c:992: if(motor_index==5 && motor_index2==5){
      00824D 74 05            [12]20616 	mov	a,#0x05
      00824F B5 56 2A         [24]20617 	cjne	a,_motor_index,00112$
      008252 74 05            [12]20618 	mov	a,#0x05
      008254 B5 57 25         [24]20619 	cjne	a,_motor_index2,00112$
                                  20620 ;	src\main.c:993: if(dien_ap_thap){
      008257 30 02 12         [24]20621 	jnb	_dien_ap_thap,00109$
                                  20622 ;	src\main.c:994: if(dien_ap_nguon<82) ChargeRelay = 0;
      00825A BF 52 00         [24]20623 	cjne	r7,#0x52,00145$
      00825D                      20624 00145$:
      00825D 50 04            [24]20625 	jnc	00104$
                                  20626 ;	assignBit
      00825F C2 A2            [12]20627 	clr	_P22
      008261 80 19            [24]20628 	sjmp	00112$
      008263                      20629 00104$:
                                  20630 ;	src\main.c:995: else if(dien_ap_nguon>110) {
      008263 EF               [12]20631 	mov	a,r7
      008264 24 91            [12]20632 	add	a,#0xff - 0x6e
      008266 50 14            [24]20633 	jnc	00112$
                                  20634 ;	src\main.c:996: dien_ap_thap = 0;
                                  20635 ;	assignBit
      008268 C2 02            [12]20636 	clr	_dien_ap_thap
      00826A 80 10            [24]20637 	sjmp	00112$
      00826C                      20638 00109$:
                                  20639 ;	src\main.c:998: }else if(dien_ap_nguon<92){
      00826C BF 5C 00         [24]20640 	cjne	r7,#0x5c,00148$
      00826F                      20641 00148$:
      00826F 50 0B            [24]20642 	jnc	00112$
                                  20643 ;	src\main.c:999: dien_ap_thap = 1;
                                  20644 ;	assignBit
      008271 D2 02            [12]20645 	setb	_dien_ap_thap
                                  20646 ;	src\main.c:1000: motor_index  = motor_index2 = 5;
      008273 75 57 05         [24]20647 	mov	_motor_index2,#0x05
      008276 75 56 05         [24]20648 	mov	_motor_index,#0x05
                                  20649 ;	src\main.c:1001: P2 &= 0x0F;
      008279 53 A0 0F         [24]20650 	anl	_P2,#0x0f
      00827C                      20651 00112$:
                                  20652 ;	src\main.c:1006: ADC_CONTR = 0x8b;
      00827C 75 BC 8B         [24]20653 	mov	_ADC_CONTR,#0x8b
                                  20654 ;	src\main.c:1007: }
      00827F D0 D0            [24]20655 	pop	psw
      008281 D0 00            [24]20656 	pop	ar0
      008283 D0 07            [24]20657 	pop	ar7
      008285 D0 E0            [24]20658 	pop	acc
      008287 32               [24]20659 	reti
                                  20660 ;	eliminated unneeded push/pop ar1
                                  20661 ;	eliminated unneeded push/pop dpl
                                  20662 ;	eliminated unneeded push/pop dph
                                  20663 ;	eliminated unneeded push/pop b
                                  20664 	.area CSEG    (CODE)
                                  20665 	.area CONST   (CODE)
                           00F000 20666 _eep_motor	=	0xf000
                           00F001 20667 _eep_baocao	=	0xf001
                           00F002 20668 _eep_gpson	=	0xf002
                           00F003 20669 _eep_ngayreset	=	0xf003
                           00F004 20670 _eep_gioreset	=	0xf004
                           00F005 20671 _eep_norreset	=	0xf005
                           00F006 20672 _eep_giosacxa	=	0xf006
                           00F007 20673 _eep_tatmoden	=	0xf007
                           00F010 20674 _eep_mp3	=	0xf010
                           00F011 20675 _eep_phonephu	=	0xf011
                           00F01D 20676 _eep_loithesim	=	0xf01d
                           00F01E 20677 _eep_debug	=	0xf01e
                           00F01F 20678 _eep_cam	=	0xf01f
                           00F200 20679 _eep_phut1	=	0xf200
                           00F201 20680 _eep_gio1	=	0xf201
                           00F202 20681 _eep_phut2	=	0xf202
                           00F203 20682 _eep_gio2	=	0xf203
                           00F204 20683 _eep_phut3	=	0xf204
                           00F205 20684 _eep_gio3	=	0xf205
                           00F206 20685 _eep_phut4	=	0xf206
                           00F207 20686 _eep_gio4	=	0xf207
      0084EA                      20687 _phone1:
      0084EA 30 39 34 39 38 34 37 20688 	.ascii "0949847098"
             30 39 38
      0084F4 00                   20689 	.db 0x00
      0084F5                      20690 _phone2:
      0084F5 30 39 38 38 38 38 38 20691 	.ascii "0988888901"
             39 30 31
      0084FF 00                   20692 	.db 0x00
      008500                      20693 _motor_step:
      008500 80                   20694 	.db #0x80	; 128
      008501 90                   20695 	.db #0x90	; 144
      008502 10                   20696 	.db #0x10	; 16
      008503 30                   20697 	.db #0x30	; 48	'0'
      008504 20                   20698 	.db #0x20	; 32
      008505 60                   20699 	.db #0x60	; 96
      008506 40                   20700 	.db #0x40	; 64
      008507 C0                   20701 	.db #0xc0	; 192
      008508                      20702 _mode_select:
      008508 20 20 20 20 20 20 45 20703 	.ascii "      EXIT      "
             58 49 54 20 20 20 20
             20 20
      008518 00                   20704 	.db 0x00
      008519 20 20 43 48 49 4E 48 20705 	.ascii "  CHINH GIO KIM "
             20 47 49 4F 20 4B 49
             4D 20
      008529 00                   20706 	.db 0x00
      00852A 20 43 48 49 4E 48 20 20707 	.ascii " CHINH GIO THUC "
             47 49 4F 20 54 48 55
             43 20
      00853A 00                   20708 	.db 0x00
      00853B 20 20 20 20 43 41 4E 20709 	.ascii "    CANH KIM    "
             48 20 4B 49 4D 20 20
             20 20
      00854B 00                   20710 	.db 0x00
      00854C 20 20 20 20 54 45 53 20711 	.ascii "    TEST MP3    "
             54 20 4D 50 33 20 20
             20 20
      00855C 00                   20712 	.db 0x00
      00855D 20 20 20 44 49 45 4E 20713 	.ascii "   DIEN THOAI   "
             20 54 48 4F 41 49 20
             20 20
      00856D 00                   20714 	.db 0x00
      00856E 20 4E 47 41 59 20 54 20715 	.ascii " NGAY THANG NAM "
             48 41 4E 47 20 4E 41
             4D 20
      00857E 00                   20716 	.db 0x00
      00857F                      20717 _ver:
      00857F 5F 41 53 49 41 5F 47 20718 	.ascii "_ASIA_GPS__4.7D_"
             50 53 5F 5F 34 2E 37
             44 5F
      00858F 00                   20719 	.db 0x00
      008590                      20720 _huongdan:
      008590 44 48 2C 4F 4E 20 64 20721 	.ascii "DH,ON dong ho chay - DH,OFF dong ho dung"
             6F 6E 67 20 68 6F 20
             63 68 61 79 20 2D 20
             44 48 2C 4F 46 46 20
             64 6F 6E 67 20 68 6F
             20 64 75 6E 67
      0085B8 0A                   20722 	.db 0x0a
      0085B9 44 48 2C 2B 6D 6D 20 20723 	.ascii "DH,+mm kim phut lech duong mm phut - DH,-mm lech am mm phut"
             6B 69 6D 20 70 68 75
             74 20 6C 65 63 68 20
             64 75 6F 6E 67 20 6D
             6D 20 70 68 75 74 20
             2D 20 44 48 2C 2D 6D
             6D 20 6C 65 63 68 20
             61 6D 20 6D 6D 20 70
             68 75 74
      0085F4 0A                   20724 	.db 0x0a
      0085F5 44 48 2C 6B 6B 6B 6B 20725 	.ascii "DH,kkkk,kkkk,kkkk,kkkk,tttt chinh gio kim gio thuc gio tu do"
             2C 6B 6B 6B 6B 2C 6B
             6B 6B 6B 2C 6B 6B 6B
             6B 2C 74 74 74 74 20
             63 68 69 6E 68 20 67
             69 6F 20 6B 69 6D 20
             67 69 6F 20 74 68 75
             63 20 67 69 6F 20 74
             75 20 64 6F
      008631 6E 67 20 74 68 61 79 20726 	.ascii "ng thay tttt bang auto"
             20 74 74 74 74 20 62
             61 6E 67 20 61 75 74
             6F
      008647 0A                   20727 	.db 0x0a
      008648 44 48 2C 78 54 44 20 20728 	.ascii "DH,xTD x la so may, T: D cho DC, S cho ST; D: A cho Atmel dr"
             78 20 6C 61 20 73 6F
             20 6D 61 79 2C 20 54
             3A 20 44 20 63 68 6F
             20 44 43 2C 20 53 20
             63 68 6F 20 53 54 3B
             20 44 3A 20 41 20 63
             68 6F 20 41 74 6D 65
             6C 20 64 72
      008684 69 76 65 72 2C 20 53 20729 	.ascii "iver, S cho STC15 truc tiep"
             20 63 68 6F 20 53 54
             43 31 35 20 74 72 75
             63 20 74 69 65 70
      00869F 0A                   20730 	.db 0x0a
      0086A0 42 43 2C 4F 4E 20 62 20731 	.ascii "BC,ON bao cao dau gio - BC,OFF tat bao cao dau gio"
             61 6F 20 63 61 6F 20
             64 61 75 20 67 69 6F
             20 2D 20 42 43 2C 4F
             46 46 20 74 61 74 20
             62 61 6F 20 63 61 6F
             20 64 61 75 20 67 69
             6F
      0086D2 0A                   20732 	.db 0x0a
      0086D3 42 43 20 67 75 69 20 20733 	.ascii "BC gui bao cao - BC,DEN BC,MP3 bao cao den bao cao mp3"
             62 61 6F 20 63 61 6F
             20 2D 20 42 43 2C 44
             45 4E 20 42 43 2C 4D
             50 33 20 62 61 6F 20
             63 61 6F 20 64 65 6E
             20 62 61 6F 20 63 61
             6F 20 6D 70 33
      008709 0A                   20734 	.db 0x0a
      00870A 52 53 20 72 65 73 65 20735 	.ascii "RS reset:RS,sys reset he thong - RS,sim reset gps module"
             74 3A 52 53 2C 73 79
             73 20 72 65 73 65 74
             20 68 65 20 74 68 6F
             6E 67 20 2D 20 52 53
             2C 73 69 6D 20 72 65
             73 65 74 20 67 70 73
             20 6D 6F 64 75 6C 65
      008742 0A                   20736 	.db 0x0a
      008743 52 53 2C 4E 47 2C 6E 20737 	.ascii "RS,NG,nn,gg moi nn ngay vao gio gg:06 bo dieu khien reset"
             6E 2C 67 67 20 6D 6F
             69 20 6E 6E 20 6E 67
             61 79 20 76 61 6F 20
             67 69 6F 20 67 67 3A
             30 36 20 62 6F 20 64
             69 65 75 20 6B 68 69
             65 6E 20 72 65 73 65
             74
      00877C 0A                   20738 	.db 0x0a
      00877D 44 45 4E 2C 58 4F 41 20739 	.ascii "DEN,XOA xoa toan bo thong so den tat den"
             20 78 6F 61 20 74 6F
             61 6E 20 62 6F 20 74
             68 6F 6E 67 20 73 6F
             20 64 65 6E 20 74 61
             74 20 64 65 6E
      0087A5 0A                   20740 	.db 0x0a
      0087A6 44 45 4E 2C 74 74 74 20741 	.ascii "DEN,tttt,mmmm,tttt,mmmm,tttt,mmmm tttt,mmmm gio tat/mo den"
             74 2C 6D 6D 6D 6D 2C
             74 74 74 74 2C 6D 6D
             6D 6D 2C 74 74 74 74
             2C 6D 6D 6D 6D 20 74
             74 74 74 2C 6D 6D 6D
             6D 20 67 69 6F 20 74
             61 74 2F 6D 6F 20 64
             65 6E
      0087E0 0A                   20742 	.db 0x0a
      0087E1 4D 50 33 2C 68 68 6D 20743 	.ascii "MP3,hhmm test bai hat luc hh gio mm phut"
             6D 20 74 65 73 74 20
             62 61 69 20 68 61 74
             20 6C 75 63 20 68 68
             20 67 69 6F 20 6D 6D
             20 70 68 75 74
      008809 0A                   20744 	.db 0x0a
      00880A 44 54 2C 30 78 78 78 20745 	.ascii "DT,0xxxxxxxxx DT,+84xxxxxxxxx thay doi so dien thoai phu"
             78 78 78 78 78 78 20
             44 54 2C 2B 38 34 78
             78 78 78 78 78 78 78
             78 20 74 68 61 79 20
             64 6F 69 20 73 6F 20
             64 69 65 6E 20 74 68
             6F 61 69 20 70 68 75
      008842 0A                   20746 	.db 0x0a
      008843 44 54 2C 58 4F 41 20 20747 	.ascii "DT,XOA xoa so dien thoai phu"
             78 6F 61 20 73 6F 20
             64 69 65 6E 20 74 68
             6F 61 69 20 70 68 75
      00885F 0A                   20748 	.db 0x0a
      008860 44 54 2C 4F 4E 20 44 20749 	.ascii "DT,ON DT,OFF - bat tat dien thoai phu"
             54 2C 4F 46 46 20 2D
             20 62 61 74 20 74 61
             74 20 64 69 65 6E 20
             74 68 6F 61 69 20 70
             68 75
      008885 0A                   20750 	.db 0x0a
      008886 44 54 2C 47 4F 49 20 20751 	.ascii "DT,GOI goi lai cho so dt chinh"
             67 6F 69 20 6C 61 69
             20 63 68 6F 20 73 6F
             20 64 74 20 63 68 69
             6E 68
      0088A4 0A                   20752 	.db 0x0a
      0088A5 00                   20753 	.db 0x00
                                  20754 	.area CONST   (CODE)
      0088A6                      20755 ___str_0:
      0088A6 20 20 47 50 53 20 20 20756 	.ascii "  GPS  "
      0088AD 00                   20757 	.db 0x00
                                  20758 	.area CSEG    (CODE)
                                  20759 	.area CONST   (CODE)
      0088AE                      20760 ___str_1:
      0088AE 20 41 53 49 41 20 20 20761 	.ascii " ASIA  "
      0088B5 00                   20762 	.db 0x00
                                  20763 	.area CSEG    (CODE)
                                  20764 	.area CONST   (CODE)
      0088B6                      20765 ___str_2:
      0088B6 20 20 20 44 53 20 20 20766 	.ascii "   DS  "
      0088BD 00                   20767 	.db 0x00
                                  20768 	.area CSEG    (CODE)
                                  20769 	.area CONST   (CODE)
      0088BE                      20770 ___str_3:
      0088BE 41 2F                20771 	.ascii "A/"
      0088C0 0D                   20772 	.db 0x0d
      0088C1 00                   20773 	.db 0x00
                                  20774 	.area CSEG    (CODE)
                                  20775 	.area CONST   (CODE)
      0088C2                      20776 ___str_4:
      0088C2 41 54 44             20777 	.ascii "ATD"
      0088C5 00                   20778 	.db 0x00
                                  20779 	.area CSEG    (CODE)
                                  20780 	.area CONST   (CODE)
      0088C6                      20781 ___str_5:
      0088C6 3B                   20782 	.ascii ";"
      0088C7 0D                   20783 	.db 0x0d
      0088C8 00                   20784 	.db 0x00
                                  20785 	.area CSEG    (CODE)
                                  20786 	.area CONST   (CODE)
      0088C9                      20787 ___str_6:
      0088C9 20 20 20 20 43 41 4C 20788 	.ascii "    CALLING     "
             4C 49 4E 47 20 20 20
             20 20
      0088D9 00                   20789 	.db 0x00
                                  20790 	.area CSEG    (CODE)
                                  20791 	.area CONST   (CODE)
      0088DA                      20792 ___str_7:
      0088DA 1A                   20793 	.db 0x1a
      0088DB 00                   20794 	.db 0x00
                                  20795 	.area CSEG    (CODE)
                                  20796 	.area CONST   (CODE)
      0088DC                      20797 ___str_8:
      0088DC 54 4B 3C 31 30 30 30 20798 	.ascii "TK<1000 K BAOCAO"
             20 4B 20 42 41 4F 43
             41 4F
      0088EC 00                   20799 	.db 0x00
                                  20800 	.area CSEG    (CODE)
                                  20801 	.area CONST   (CODE)
      0088ED                      20802 ___str_9:
      0088ED 41 54 2B 43 4D 47 53 20803 	.ascii "AT+CMGS="
             3D
      0088F5 22                   20804 	.db 0x22
      0088F6 00                   20805 	.db 0x00
                                  20806 	.area CSEG    (CODE)
                                  20807 	.area CONST   (CODE)
      0088F7                      20808 ___str_10:
      0088F7 22                   20809 	.db 0x22
      0088F8 0D                   20810 	.db 0x0d
      0088F9 00                   20811 	.db 0x00
                                  20812 	.area CSEG    (CODE)
                                  20813 	.area CONST   (CODE)
      0088FA                      20814 ___str_11:
      0088FA 20 20 20 53 45 4E 44 20815 	.ascii "   SENDING   "
             49 4E 47 20 20 20
      008907 00                   20816 	.db 0x00
                                  20817 	.area CSEG    (CODE)
                                  20818 	.area CONST   (CODE)
      008908                      20819 ___str_12:
      008908 41 54 2B 43 55 53 44 20820 	.ascii "AT+CUSD=1,"
             3D 31 2C
      008912 22                   20821 	.db 0x22
      008913 2A 31 30 31 23       20822 	.ascii "*101#"
      008918 22                   20823 	.db 0x22
      008919 2C                   20824 	.ascii ","
      00891A 0D                   20825 	.db 0x0d
      00891B 00                   20826 	.db 0x00
                                  20827 	.area CSEG    (CODE)
                                  20828 	.area CONST   (CODE)
      00891C                      20829 ___str_13:
      00891C 20 20 4B 49 45 4D 20 20830 	.ascii "  KIEM TRA TK   "
             54 52 41 20 54 4B 20
             20 20
      00892C 00                   20831 	.db 0x00
                                  20832 	.area CSEG    (CODE)
                                  20833 	.area CONST   (CODE)
      00892D                      20834 ___str_14:
      00892D 20 20 4B 49 45 4D 20 20835 	.ascii "  KIEM TRA SDT   "
             54 52 41 20 53 44 54
             20 20 20
      00893E 00                   20836 	.db 0x00
                                  20837 	.area CSEG    (CODE)
                                  20838 	.area CONST   (CODE)
      00893F                      20839 ___str_15:
      00893F 41 54 2B 43 55 53 44 20840 	.ascii "AT+CUSD=1,"
             3D 31 2C
      008949 22                   20841 	.db 0x22
      00894A 2A 31 31 30 23       20842 	.ascii "*110#"
      00894F 22                   20843 	.db 0x22
      008950 2C                   20844 	.ascii ","
      008951 0D                   20845 	.db 0x0d
      008952 00                   20846 	.db 0x00
                                  20847 	.area CSEG    (CODE)
                                  20848 	.area CONST   (CODE)
      008953                      20849 ___str_16:
      008953 41 54 2B 43 55 53 44 20850 	.ascii "AT+CUSD=1,"
             3D 31 2C
      00895D 22                   20851 	.db 0x22
      00895E 2A 30 23             20852 	.ascii "*0#"
      008961 22                   20853 	.db 0x22
      008962 2C                   20854 	.ascii ","
      008963 0D                   20855 	.db 0x0d
      008964 00                   20856 	.db 0x00
                                  20857 	.area CSEG    (CODE)
                                  20858 	.area CONST   (CODE)
      008965                      20859 ___str_17:
      008965 41 54 2B 43 53 51    20860 	.ascii "AT+CSQ"
      00896B 0D                   20861 	.db 0x0d
      00896C 00                   20862 	.db 0x00
                                  20863 	.area CSEG    (CODE)
                                  20864 	.area CONST   (CODE)
      00896D                      20865 ___str_18:
      00896D 20 53 4F 4E 47 20    20866 	.ascii " SONG "
      008973 00                   20867 	.db 0x00
                                  20868 	.area CSEG    (CODE)
                                  20869 	.area CONST   (CODE)
      008974                      20870 ___str_19:
      008974 0D                   20871 	.db 0x0d
      008975 38 39 43 35 35       20872 	.ascii "89C55"
      00897A 00                   20873 	.db 0x00
                                  20874 	.area CSEG    (CODE)
                                  20875 	.area CONST   (CODE)
      00897B                      20876 ___str_20:
      00897B 0D                   20877 	.db 0x0d
      00897C 53 54 43 31 35       20878 	.ascii "STC15"
      008981 00                   20879 	.db 0x00
                                  20880 	.area CSEG    (CODE)
                                  20881 	.area CONST   (CODE)
      008982                      20882 ___str_21:
      008982 20 44 43             20883 	.ascii " DC"
      008985 00                   20884 	.db 0x00
                                  20885 	.area CSEG    (CODE)
                                  20886 	.area CONST   (CODE)
      008986                      20887 ___str_22:
      008986 20 53 54             20888 	.ascii " ST"
      008989 00                   20889 	.db 0x00
                                  20890 	.area CSEG    (CODE)
                                  20891 	.area CONST   (CODE)
      00898A                      20892 ___str_23:
      00898A 20 54 3D             20893 	.ascii " T="
      00898D 00                   20894 	.db 0x00
                                  20895 	.area CSEG    (CODE)
                                  20896 	.area CONST   (CODE)
      00898E                      20897 ___str_24:
      00898E 20 43 4E 2C          20898 	.ascii " CN,"
      008992 00                   20899 	.db 0x00
                                  20900 	.area CSEG    (CODE)
                                  20901 	.area CONST   (CODE)
      008993                      20902 ___str_25:
      008993 20 54                20903 	.ascii " T"
      008995 00                   20904 	.db 0x00
                                  20905 	.area CSEG    (CODE)
                                  20906 	.area CONST   (CODE)
      008996                      20907 ___str_26:
      008996 20 47 50 53 3D       20908 	.ascii " GPS="
      00899B 00                   20909 	.db 0x00
                                  20910 	.area CSEG    (CODE)
                                  20911 	.area CONST   (CODE)
      00899C                      20912 ___str_27:
      00899C 20 44 48 3D          20913 	.ascii " DH="
      0089A0 00                   20914 	.db 0x00
                                  20915 	.area CSEG    (CODE)
                                  20916 	.area CONST   (CODE)
      0089A1                      20917 ___str_28:
      0089A1 20 42 43 3D          20918 	.ascii " BC="
      0089A5 00                   20919 	.db 0x00
                                  20920 	.area CSEG    (CODE)
                                  20921 	.area CONST   (CODE)
      0089A6                      20922 ___str_29:
      0089A6 20 58 47 3D          20923 	.ascii " XG="
      0089AA 00                   20924 	.db 0x00
                                  20925 	.area CSEG    (CODE)
                                  20926 	.area CONST   (CODE)
      0089AB                      20927 ___str_30:
      0089AB 20 52 53 3D          20928 	.ascii " RS="
      0089AF 00                   20929 	.db 0x00
                                  20930 	.area CSEG    (CODE)
                                  20931 	.area CONST   (CODE)
      0089B0                      20932 ___str_31:
      0089B0 20 54 52 3D          20933 	.ascii " TR="
      0089B4 00                   20934 	.db 0x00
                                  20935 	.area CSEG    (CODE)
                                  20936 	.area CONST   (CODE)
      0089B5                      20937 ___str_32:
      0089B5 3A 30 36             20938 	.ascii ":06"
      0089B8 00                   20939 	.db 0x00
                                  20940 	.area CSEG    (CODE)
                                  20941 	.area CONST   (CODE)
      0089B9                      20942 ___str_33:
      0089B9 20 44 45 4E 3D       20943 	.ascii " DEN="
      0089BE 00                   20944 	.db 0x00
                                  20945 	.area CSEG    (CODE)
                                  20946 	.area CONST   (CODE)
      0089BF                      20947 ___str_34:
      0089BF 20 56 4F 4C 3D       20948 	.ascii " VOL="
      0089C4 00                   20949 	.db 0x00
                                  20950 	.area CSEG    (CODE)
                                  20951 	.area CONST   (CODE)
      0089C5                      20952 ___str_35:
      0089C5 20 4D 50 33 3D       20953 	.ascii " MP3="
      0089CA 00                   20954 	.db 0x00
                                  20955 	.area CSEG    (CODE)
                                  20956 	.area CONST   (CODE)
      0089CB                      20957 ___str_36:
      0089CB 20 53 49 47 3D       20958 	.ascii " SIG="
      0089D0 00                   20959 	.db 0x00
                                  20960 	.area CSEG    (CODE)
                                  20961 	.area CONST   (CODE)
      0089D1                      20962 ___str_37:
      0089D1 20 44 54 3D          20963 	.ascii " DT="
      0089D5 00                   20964 	.db 0x00
                                  20965 	.area CSEG    (CODE)
                                  20966 	.area CONST   (CODE)
      0089D6                      20967 ___str_38:
      0089D6 41 54                20968 	.ascii "AT"
      0089D8 0D                   20969 	.db 0x0d
      0089D9 00                   20970 	.db 0x00
                                  20971 	.area CSEG    (CODE)
                                  20972 	.area CONST   (CODE)
      0089DA                      20973 ___str_39:
      0089DA 42 41 54 20 44 41 55 20974 	.ascii "BAT DAU BAO CAO "
             20 42 41 4F 20 43 41
             4F 20
      0089EA 00                   20975 	.db 0x00
                                  20976 	.area CSEG    (CODE)
                                  20977 	.area CONST   (CODE)
      0089EB                      20978 ___str_40:
      0089EB 0D                   20979 	.db 0x0d
      0089EC 54 4B 20 43 68 69 6E 20980 	.ascii "TK Chinh="
             68 3D
      0089F5 00                   20981 	.db 0x00
                                  20982 	.area CSEG    (CODE)
                                  20983 	.area CONST   (CODE)
      0089F6                      20984 ___str_41:
      0089F6 0D                   20985 	.db 0x0d
      0089F7 54 61 69 20 6B 68 6F 20986 	.ascii "Tai khoan con duoi 10000"
             61 6E 20 63 6F 6E 20
             64 75 6F 69 20 31 30
             30 30 30
      008A0F 00                   20987 	.db 0x00
                                  20988 	.area CSEG    (CODE)
                                  20989 	.area CONST   (CODE)
      008A10                      20990 ___str_42:
      008A10 44 41 4E 47 20 47 55 20991 	.ascii "DANG GUI BAO CAO"
             49 20 42 41 4F 20 43
             41 4F
      008A20 00                   20992 	.db 0x00
                                  20993 	.area CSEG    (CODE)
                                  20994 	.area CONST   (CODE)
      008A21                      20995 ___str_43:
      008A21 0D                   20996 	.db 0x0d
      008A22 4D 4F 44 45 4E 3D    20997 	.ascii "MODEN="
      008A28 00                   20998 	.db 0x00
                                  20999 	.area CSEG    (CODE)
                                  21000 	.area CONST   (CODE)
      008A29                      21001 ___str_44:
      008A29 0D                   21002 	.db 0x0d
      008A2A 4B 68 6F 6E 67 20 63 21003 	.ascii "Khong co gio mo den"
             6F 20 67 69 6F 20 6D
             6F 20 64 65 6E
      008A3D 00                   21004 	.db 0x00
                                  21005 	.area CSEG    (CODE)
                                  21006 	.area CONST   (CODE)
      008A3E                      21007 ___str_45:
      008A3E 0D                   21008 	.db 0x0d
      008A3F 47 69 6F 20 4D 6F 20 21009 	.ascii "Gio Mo Den:"
             44 65 6E 3A
      008A4A 00                   21010 	.db 0x00
                                  21011 	.area CSEG    (CODE)
                                  21012 	.area CONST   (CODE)
      008A4B                      21013 ___str_46:
      008A4B 30 20 2D 20          21014 	.ascii "0 - "
      008A4F 00                   21015 	.db 0x00
                                  21016 	.area CSEG    (CODE)
                                  21017 	.area CONST   (CODE)
      008A50                      21018 ___str_47:
      008A50 47 55 49 20 42 41 4F 21019 	.ascii "GUI BAO CAO DEN "
             20 43 41 4F 20 44 45
             4E 20
      008A60 00                   21020 	.db 0x00
                                  21021 	.area CSEG    (CODE)
                                  21022 	.area CONST   (CODE)
      008A61                      21023 ___str_48:
      008A61 20 47 55 49 20 48 55 21024 	.ascii " GUI HUONG DAN  "
             4F 4E 47 20 44 41 4E
             20 20
      008A71 00                   21025 	.db 0x00
                                  21026 	.area CSEG    (CODE)
                                  21027 	.area CONST   (CODE)
      008A72                      21028 ___str_49:
      008A72 54 48 49 45 54 20 4C 21029 	.ascii "THIET LAP SIM800"
             41 50 20 53 49 4D 38
             30 30
      008A82 00                   21030 	.db 0x00
                                  21031 	.area CSEG    (CODE)
                                  21032 	.area CONST   (CODE)
      008A83                      21033 ___str_50:
      008A83 41 54 2B 43 53 50 4E 21034 	.ascii "AT+CSPN?"
             3F
      008A8B 0D                   21035 	.db 0x0d
      008A8C 00                   21036 	.db 0x00
                                  21037 	.area CSEG    (CODE)
                                  21038 	.area CONST   (CODE)
      008A8D                      21039 ___str_51:
      008A8D 20 54 45 4E 20 54 4F 21040 	.ascii " TEN TONG DAI  "
             4E 47 20 44 41 49 20
             20
      008A9C 00                   21041 	.db 0x00
                                  21042 	.area CSEG    (CODE)
                                  21043 	.area CONST   (CODE)
      008A9D                      21044 ___str_52:
      008A9D 41 54 2B 43 4C 54 53 21045 	.ascii "AT+CLTS=1"
             3D 31
      008AA6 0D                   21046 	.db 0x0d
      008AA7 00                   21047 	.db 0x00
                                  21048 	.area CSEG    (CODE)
                                  21049 	.area CONST   (CODE)
      008AA8                      21050 ___str_53:
      008AA8 42 41 54 20 43 48 45 21051 	.ascii "BAT CHE DO GPS "
             20 44 4F 20 47 50 53
             20
      008AB7 00                   21052 	.db 0x00
                                  21053 	.area CSEG    (CODE)
                                  21054 	.area CONST   (CODE)
      008AB8                      21055 ___str_54:
      008AB8 41 54 2B 43 4F 50 53 21056 	.ascii "AT+COPS=2"
             3D 32
      008AC1 0D                   21057 	.db 0x0d
      008AC2 00                   21058 	.db 0x00
                                  21059 	.area CSEG    (CODE)
                                  21060 	.area CONST   (CODE)
      008AC3                      21061 ___str_55:
      008AC3 20 4B 48 4F 49 20 44 21062 	.ascii " KHOI DONG GPS "
             4F 4E 47 20 47 50 53
             20
      008AD2 00                   21063 	.db 0x00
                                  21064 	.area CSEG    (CODE)
                                  21065 	.area CONST   (CODE)
      008AD3                      21066 ___str_56:
      008AD3 41 54 2B 43 4F 50 53 21067 	.ascii "AT+COPS=0"
             3D 30
      008ADC 0D                   21068 	.db 0x0d
      008ADD 00                   21069 	.db 0x00
                                  21070 	.area CSEG    (CODE)
                                  21071 	.area CONST   (CODE)
      008ADE                      21072 ___str_57:
      008ADE 20 20 4B 45 54 20 4E 21073 	.ascii "  KET NOI GPS  "
             4F 49 20 47 50 53 20
             20
      008AED 00                   21074 	.db 0x00
                                  21075 	.area CSEG    (CODE)
                                  21076 	.area CONST   (CODE)
      008AEE                      21077 ___str_58:
      008AEE 41 54 2B 43 43 4C 4B 21078 	.ascii "AT+CCLK?"
             3F
      008AF6 0D                   21079 	.db 0x0d
      008AF7 00                   21080 	.db 0x00
                                  21081 	.area CSEG    (CODE)
                                  21082 	.area CONST   (CODE)
      008AF8                      21083 ___str_59:
      008AF8 20 4C 41 59 20 54 49 21084 	.ascii " LAY TIME GPS  "
             4D 45 20 47 50 53 20
             20
      008B07 00                   21085 	.db 0x00
                                  21086 	.area CSEG    (CODE)
                                  21087 	.area CONST   (CODE)
      008B08                      21088 ___str_60:
      008B08 41 54 2B 43 4C 49 50 21089 	.ascii "AT+CLIP=1"
             3D 31
      008B11 0D                   21090 	.db 0x0d
      008B12 00                   21091 	.db 0x00
                                  21092 	.area CSEG    (CODE)
                                  21093 	.area CONST   (CODE)
      008B13                      21094 ___str_61:
      008B13 20 20 53 45 4E 44 49 21095 	.ascii "  SENDING CLIP  "
             4E 47 20 43 4C 49 50
             20 20
      008B23 00                   21096 	.db 0x00
                                  21097 	.area CSEG    (CODE)
                                  21098 	.area CONST   (CODE)
      008B24                      21099 ___str_62:
      008B24 41 54 2B 43 43 41 4C 21100 	.ascii "AT+CCALR?"
             52 3F
      008B2D 0D                   21101 	.db 0x0d
      008B2E 00                   21102 	.db 0x00
                                  21103 	.area CSEG    (CODE)
                                  21104 	.area CONST   (CODE)
      008B2F                      21105 ___str_63:
      008B2F 20 54 48 49 45 54 20 21106 	.ascii " THIET LAP GOI "
             4C 41 50 20 47 4F 49
             20
      008B3E 00                   21107 	.db 0x00
                                  21108 	.area CSEG    (CODE)
                                  21109 	.area CONST   (CODE)
      008B3F                      21110 ___str_64:
      008B3F 41 54 2B 43 4D 47 46 21111 	.ascii "AT+CMGF=1"
             3D 31
      008B48 0D                   21112 	.db 0x0d
      008B49 00                   21113 	.db 0x00
                                  21114 	.area CSEG    (CODE)
                                  21115 	.area CONST   (CODE)
      008B4A                      21116 ___str_65:
      008B4A 20 20 53 45 4E 44 49 21117 	.ascii "  SENDING CMGF  "
             4E 47 20 43 4D 47 46
             20 20
      008B5A 00                   21118 	.db 0x00
                                  21119 	.area CSEG    (CODE)
                                  21120 	.area CONST   (CODE)
      008B5B                      21121 ___str_66:
      008B5B 41 54 2B 43 4E 4D 49 21122 	.ascii "AT+CNMI=1,1,0,0,1"
             3D 31 2C 31 2C 30 2C
             30 2C 31
      008B6C 0D                   21123 	.db 0x0d
      008B6D 00                   21124 	.db 0x00
                                  21125 	.area CSEG    (CODE)
                                  21126 	.area CONST   (CODE)
      008B6E                      21127 ___str_67:
      008B6E 20 20 53 45 4E 44 49 21128 	.ascii "  SENDING CNMI  "
             4E 47 20 43 4E 4D 49
             20 20
      008B7E 00                   21129 	.db 0x00
                                  21130 	.area CSEG    (CODE)
                                  21131 	.area CONST   (CODE)
      008B7F                      21132 ___str_68:
      008B7F 41 54 2B 43 4D 47 44 21133 	.ascii "AT+CMGDA="
             41 3D
      008B88 22                   21134 	.db 0x22
      008B89 44 45 4C 20 41 4C 4C 21135 	.ascii "DEL ALL"
      008B90 22                   21136 	.db 0x22
      008B91 0D                   21137 	.db 0x0d
      008B92 00                   21138 	.db 0x00
                                  21139 	.area CSEG    (CODE)
                                  21140 	.area CONST   (CODE)
      008B93                      21141 ___str_69:
      008B93 20 20 54 48 49 45 54 21142 	.ascii "  THIET LAP TN  "
             20 4C 41 50 20 54 4E
             20 20
      008BA3 00                   21143 	.db 0x00
                                  21144 	.area CSEG    (CODE)
                                  21145 	.area CONST   (CODE)
      008BA4                      21146 ___str_70:
      008BA4 54 48 49 45 54 20 4C 21147 	.ascii "THIET LAP TNHAN "
             41 50 20 54 4E 48 41
             4E 20
      008BB4 00                   21148 	.db 0x00
                                  21149 	.area CSEG    (CODE)
                                  21150 	.area CONST   (CODE)
      008BB5                      21151 ___str_71:
      008BB5 20 20 53 45 4E 44 49 21152 	.ascii "  SENDING CMGDA  "
             4E 47 20 43 4D 47 44
             41 20 20
      008BC6 00                   21153 	.db 0x00
                                  21154 	.area CSEG    (CODE)
                                  21155 	.area CONST   (CODE)
      008BC7                      21156 ___str_72:
      008BC7 4C 41 59 20 47 49 4F 21157 	.ascii "LAY GIO VE TINH "
             20 56 45 20 54 49 4E
             48 20
      008BD7 00                   21158 	.db 0x00
                                  21159 	.area CSEG    (CODE)
                                  21160 	.area CONST   (CODE)
      008BD8                      21161 ___str_73:
      008BD8 41 54 2B 49 50 52 3D 21162 	.ascii "AT+IPR=0"
             30
      008BE0 0D                   21163 	.db 0x0d
      008BE1 00                   21164 	.db 0x00
                                  21165 	.area CSEG    (CODE)
                                  21166 	.area CONST   (CODE)
      008BE2                      21167 ___str_74:
      008BE2 20 20 53 45 4E 44 49 21168 	.ascii "  SENDING IPR   "
             4E 47 20 49 50 52 20
             20 20
      008BF2 00                   21169 	.db 0x00
                                  21170 	.area CSEG    (CODE)
                                  21171 	.area CONST   (CODE)
      008BF3                      21172 ___str_75:
      008BF3 20 20 53 45 4E 44 49 21173 	.ascii "  SENDING CLTS  "
             4E 47 20 43 4C 54 53
             20 20
      008C03 00                   21174 	.db 0x00
                                  21175 	.area CSEG    (CODE)
                                  21176 	.area CONST   (CODE)
      008C04                      21177 ___str_76:
      008C04 41 54 2B 43 46 55 4E 21178 	.ascii "AT+CFUN=0"
             3D 30
      008C0D 0D                   21179 	.db 0x0d
      008C0E 00                   21180 	.db 0x00
                                  21181 	.area CSEG    (CODE)
                                  21182 	.area CONST   (CODE)
      008C0F                      21183 ___str_77:
      008C0F 20 20 53 45 4E 44 49 21184 	.ascii "  SENDING CFUN0  "
             4E 47 20 43 46 55 4E
             30 20 20
      008C20 00                   21185 	.db 0x00
                                  21186 	.area CSEG    (CODE)
                                  21187 	.area CONST   (CODE)
      008C21                      21188 ___str_78:
      008C21 41 54 2B 43 46 55 4E 21189 	.ascii "AT+CFUN=1"
             3D 31
      008C2A 0D                   21190 	.db 0x0d
      008C2B 00                   21191 	.db 0x00
                                  21192 	.area CSEG    (CODE)
                                  21193 	.area CONST   (CODE)
      008C2C                      21194 ___str_79:
      008C2C 20 20 53 45 4E 44 49 21195 	.ascii "  SENDING CFUN1  "
             4E 47 20 43 46 55 4E
             31 20 20
      008C3D 00                   21196 	.db 0x00
                                  21197 	.area CSEG    (CODE)
                                  21198 	.area CONST   (CODE)
      008C3E                      21199 ___str_80:
      008C3E 41 54 48             21200 	.ascii "ATH"
      008C41 0D                   21201 	.db 0x0d
      008C42 00                   21202 	.db 0x00
                                  21203 	.area CSEG    (CODE)
                                  21204 	.area CONST   (CODE)
      008C43                      21205 ___str_81:
      008C43 0D                   21206 	.db 0x0d
      008C44 74 68 61 79 20 64 6F 21207 	.ascii "thay doi may va reset bo dieu khien"
             69 20 6D 61 79 20 76
             61 20 72 65 73 65 74
             20 62 6F 20 64 69 65
             75 20 6B 68 69 65 6E
      008C67 00                   21208 	.db 0x00
                                  21209 	.area CSEG    (CODE)
                                  21210 	.area CONST   (CODE)
      008C68                      21211 ___str_82:
      008C68 0D                   21212 	.db 0x0d
      008C69 6C 65 6E 68 20 6B 68 21213 	.ascii "lenh khong hop le"
             6F 6E 67 20 68 6F 70
             20 6C 65
      008C7A 00                   21214 	.db 0x00
                                  21215 	.area CSEG    (CODE)
                                  21216 	.area CONST   (CODE)
      008C7B                      21217 ___str_83:
      008C7B 0D                   21218 	.db 0x0d
      008C7C 6C 65 6E 68 20 64 6F 21219 	.ascii "lenh dong ho khong hop le"
             6E 67 20 68 6F 20 6B
             68 6F 6E 67 20 68 6F
             70 20 6C 65
      008C95 0D                   21220 	.db 0x0d
      008C96 50 68 6F 6E 65 20 70 21221 	.ascii "Phone phu gui lenh"
             68 75 20 67 75 69 20
             6C 65 6E 68
      008CA8 00                   21222 	.db 0x00
                                  21223 	.area CSEG    (CODE)
                                  21224 	.area CONST   (CODE)
      008CA9                      21225 ___str_84:
      008CA9 0D                   21226 	.db 0x0d
      008CAA 63 68 69 6E 68 20 64 21227 	.ascii "chinh dong ho thanh cong"
             6F 6E 67 20 68 6F 20
             74 68 61 6E 68 20 63
             6F 6E 67
      008CC2 00                   21228 	.db 0x00
                                  21229 	.area CSEG    (CODE)
                                  21230 	.area CONST   (CODE)
      008CC3                      21231 ___str_85:
      008CC3 0D                   21232 	.db 0x0d
      008CC4 63 68 69 6E 68 20 64 21233 	.ascii "chinh dong ho thanh cong"
             6F 6E 67 20 68 6F 20
             74 68 61 6E 68 20 63
             6F 6E 67
      008CDC 0D                   21234 	.db 0x0d
      008CDD 50 68 6F 6E 65 20 70 21235 	.ascii "Phone phu gui lenh"
             68 75 20 67 75 69 20
             6C 65 6E 68
      008CEF 00                   21236 	.db 0x00
                                  21237 	.area CSEG    (CODE)
                                  21238 	.area CONST   (CODE)
      008CF0                      21239 ___str_86:
      008CF0 0D                   21240 	.db 0x0d
      008CF1 62 61 6F 20 63 61 6F 21241 	.ascii "bao cao den thanh cong"
             20 64 65 6E 20 74 68
             61 6E 68 20 63 6F 6E
             67
      008D07 00                   21242 	.db 0x00
                                  21243 	.area CSEG    (CODE)
                                  21244 	.area CONST   (CODE)
      008D08                      21245 ___str_87:
      008D08 0D                   21246 	.db 0x0d
      008D09 6C 65 6E 68 20 6B 68 21247 	.ascii "lenh khong hop le"
             6F 6E 67 20 68 6F 70
             20 6C 65
      008D1A 0D                   21248 	.db 0x0d
      008D1B 50 68 6F 6E 65 20 70 21249 	.ascii "Phone phu gui lenh den"
             68 75 20 67 75 69 20
             6C 65 6E 68 20 64 65
             6E
      008D31 00                   21250 	.db 0x00
                                  21251 	.area CSEG    (CODE)
                                  21252 	.area CONST   (CODE)
      008D32                      21253 ___str_88:
      008D32 0D                   21254 	.db 0x0d
      008D33 62 61 6F 20 63 61 6F 21255 	.ascii "bao cao thanh cong"
             20 74 68 61 6E 68 20
             63 6F 6E 67
      008D45 00                   21256 	.db 0x00
                                  21257 	.area CSEG    (CODE)
                                  21258 	.area CONST   (CODE)
      008D46                      21259 ___str_89:
      008D46 0D                   21260 	.db 0x0d
      008D47 62 61 6F 20 63 61 6F 21261 	.ascii "bao cao thanh cong"
             20 74 68 61 6E 68 20
             63 6F 6E 67
      008D59 0D                   21262 	.db 0x0d
      008D5A 50 68 6F 6E 65 20 70 21263 	.ascii "Phone phu gui lenh"
             68 75 20 67 75 69 20
             6C 65 6E 68
      008D6C 00                   21264 	.db 0x00
                                  21265 	.area CSEG    (CODE)
                                  21266 	.area CONST   (CODE)
      008D6D                      21267 ___str_90:
      008D6D 0D                   21268 	.db 0x0d
      008D6E 72 65 73 65 74 20 62 21269 	.ascii "reset bo dieu khien"
             6F 20 64 69 65 75 20
             6B 68 69 65 6E
      008D81 00                   21270 	.db 0x00
                                  21271 	.area CSEG    (CODE)
                                  21272 	.area CONST   (CODE)
      008D82                      21273 ___str_91:
      008D82 0D                   21274 	.db 0x0d
      008D83 64 61 74 20 72 65 73 21275 	.ascii "dat reset thanh cong"
             65 74 20 74 68 61 6E
             68 20 63 6F 6E 67
      008D97 00                   21276 	.db 0x00
                                  21277 	.area CSEG    (CODE)
                                  21278 	.area CONST   (CODE)
      008D98                      21279 ___str_92:
      008D98 0D                   21280 	.db 0x0d
      008D99 64 61 74 20 72 65 73 21281 	.ascii "dat reset khong hop le"
             65 74 20 6B 68 6F 6E
             67 20 68 6F 70 20 6C
             65
      008DAF 00                   21282 	.db 0x00
                                  21283 	.area CSEG    (CODE)
                                  21284 	.area CONST   (CODE)
      008DB0                      21285 ___str_93:
      008DB0 0D                   21286 	.db 0x0d
      008DB1 72 65 73 65 74 20 67 21287 	.ascii "reset gsm sau10s"
             73 6D 20 73 61 75 31
             30 73
      008DC1 00                   21288 	.db 0x00
                                  21289 	.area CSEG    (CODE)
                                  21290 	.area CONST   (CODE)
      008DC2                      21291 ___str_94:
      008DC2 0D                   21292 	.db 0x0d
      008DC3 6C 65 6E 68 20 72 65 21293 	.ascii "lenh reset khong hop le"
             73 65 74 20 6B 68 6F
             6E 67 20 68 6F 70 20
             6C 65
      008DDA 00                   21294 	.db 0x00
                                  21295 	.area CSEG    (CODE)
                                  21296 	.area CONST   (CODE)
      008DDB                      21297 ___str_95:
      008DDB 0D                   21298 	.db 0x0d
      008DDC 78 6F 61 20 67 69 6F 21299 	.ascii "xoa gio den thanh cong"
             20 64 65 6E 20 74 68
             61 6E 68 20 63 6F 6E
             67
      008DF2 00                   21300 	.db 0x00
                                  21301 	.area CSEG    (CODE)
                                  21302 	.area CONST   (CODE)
      008DF3                      21303 ___str_96:
      008DF3 0D                   21304 	.db 0x0d
      008DF4 6C 65 6E 68 20 64 65 21305 	.ascii "lenh den thanh cong"
             6E 20 74 68 61 6E 68
             20 63 6F 6E 67
      008E07 00                   21306 	.db 0x00
                                  21307 	.area CSEG    (CODE)
                                  21308 	.area CONST   (CODE)
      008E08                      21309 ___str_97:
      008E08 0D                   21310 	.db 0x0d
      008E09 74 68 6F 6E 67 20 73 21311 	.ascii "thong so den khong hop le"
             6F 20 64 65 6E 20 6B
             68 6F 6E 67 20 68 6F
             70 20 6C 65
      008E22 00                   21312 	.db 0x00
                                  21313 	.area CSEG    (CODE)
                                  21314 	.area CONST   (CODE)
      008E23                      21315 ___str_98:
      008E23 0D                   21316 	.db 0x0d
      008E24 4B 68 6F 6E 67 20 43 21317 	.ascii "Khong Co Module Mp3"
             6F 20 4D 6F 64 75 6C
             65 20 4D 70 33
      008E37 00                   21318 	.db 0x00
                                  21319 	.area CSEG    (CODE)
                                  21320 	.area CONST   (CODE)
      008E38                      21321 ___str_99:
      008E38 0D                   21322 	.db 0x0d
      008E39 44 75 6E 67 20 4D 70 21323 	.ascii "Dung Mp3"
             33
      008E41 00                   21324 	.db 0x00
                                  21325 	.area CSEG    (CODE)
                                  21326 	.area CONST   (CODE)
      008E42                      21327 ___str_100:
      008E42 0D                   21328 	.db 0x0d
      008E43 42 61 74 20 6D 70 33 21329 	.ascii "Bat mp3"
      008E4A 00                   21330 	.db 0x00
                                  21331 	.area CSEG    (CODE)
                                  21332 	.area CONST   (CODE)
      008E4B                      21333 ___str_101:
      008E4B 0D                   21334 	.db 0x0d
      008E4C 54 61 74 20 6D 70 33 21335 	.ascii "Tat mp3"
      008E53 00                   21336 	.db 0x00
                                  21337 	.area CSEG    (CODE)
                                  21338 	.area CONST   (CODE)
      008E54                      21339 ___str_102:
      008E54 0D                   21340 	.db 0x0d
      008E55 54 65 73 74 20 6D 70 21341 	.ascii "Test mp3 thanh cong"
             33 20 74 68 61 6E 68
             20 63 6F 6E 67
      008E68 00                   21342 	.db 0x00
                                  21343 	.area CSEG    (CODE)
                                  21344 	.area CONST   (CODE)
      008E69                      21345 ___str_103:
      008E69 0D                   21346 	.db 0x0d
      008E6A 6B 68 6F 6E 67 20 64 21347 	.ascii "khong dung gio phat hoac mp3 loi"
             75 6E 67 20 67 69 6F
             20 70 68 61 74 20 68
             6F 61 63 20 6D 70 33
             20 6C 6F 69
      008E8A 00                   21348 	.db 0x00
                                  21349 	.area CSEG    (CODE)
                                  21350 	.area CONST   (CODE)
      008E8B                      21351 ___str_104:
      008E8B 0D                   21352 	.db 0x0d
      008E8C 4D 70 33 20 64 61 6E 21353 	.ascii "Mp3 dang choi nhac nen chua the test"
             67 20 63 68 6F 69 20
             6E 68 61 63 20 6E 65
             6E 20 63 68 75 61 20
             74 68 65 20 74 65 73
             74
      008EB0 00                   21354 	.db 0x00
                                  21355 	.area CSEG    (CODE)
                                  21356 	.area CONST   (CODE)
      008EB1                      21357 ___str_105:
      008EB1 0D                   21358 	.db 0x0d
      008EB2 4C 65 6E 68 20 4D 50 21359 	.ascii "Lenh MP3 khong hop le"
             33 20 6B 68 6F 6E 67
             20 68 6F 70 20 6C 65
      008EC7 00                   21360 	.db 0x00
                                  21361 	.area CSEG    (CODE)
                                  21362 	.area CONST   (CODE)
      008EC8                      21363 ___str_106:
      008EC8 0D                   21364 	.db 0x0d
      008EC9 42 61 74 20 47 50 53 21365 	.ascii "Bat GPS"
      008ED0 00                   21366 	.db 0x00
                                  21367 	.area CSEG    (CODE)
                                  21368 	.area CONST   (CODE)
      008ED1                      21369 ___str_107:
      008ED1 0D                   21370 	.db 0x0d
      008ED2 54 61 74 20 47 50 53 21371 	.ascii "Tat GPS"
      008ED9 00                   21372 	.db 0x00
                                  21373 	.area CSEG    (CODE)
                                  21374 	.area CONST   (CODE)
      008EDA                      21375 ___str_108:
      008EDA 0D                   21376 	.db 0x0d
      008EDB 44 61 6E 67 20 67 6F 21377 	.ascii "Dang goi dien thoai ve ...."
             69 20 64 69 65 6E 20
             74 68 6F 61 69 20 76
             65 20 2E 2E 2E 2E
      008EF6 00                   21378 	.db 0x00
                                  21379 	.area CSEG    (CODE)
                                  21380 	.area CONST   (CODE)
      008EF7                      21381 ___str_109:
      008EF7 0D                   21382 	.db 0x0d
      008EF8 67 68 69 20 70 68 6F 21383 	.ascii "ghi phone phu moi thanh cong"
             6E 65 20 70 68 75 20
             6D 6F 69 20 74 68 61
             6E 68 20 63 6F 6E 67
      008F14 00                   21384 	.db 0x00
                                  21385 	.area CSEG    (CODE)
                                  21386 	.area CONST   (CODE)
      008F15                      21387 ___str_110:
      008F15 0D                   21388 	.db 0x0d
      008F16 74 68 61 79 20 64 6F 21389 	.ascii "thay doi phone phu khong thanh cong"
             69 20 70 68 6F 6E 65
             20 70 68 75 20 6B 68
             6F 6E 67 20 74 68 61
             6E 68 20 63 6F 6E 67
      008F39 00                   21390 	.db 0x00
                                  21391 	.area CSEG    (CODE)
                                  21392 	.area CONST   (CODE)
      008F3A                      21393 ___str_111:
      008F3A 0D                   21394 	.db 0x0d
      008F3B 58 6F 61 20 70 68 6F 21395 	.ascii "Xoa phone phu"
             6E 65 20 70 68 75
      008F48 00                   21396 	.db 0x00
                                  21397 	.area CSEG    (CODE)
                                  21398 	.area CONST   (CODE)
      008F49                      21399 ___str_112:
      008F49 0D                   21400 	.db 0x0d
      008F4A 6C 65 6E 68 20 6B 68 21401 	.ascii "lenh khong thanh cong do chua khoi tao phone phu"
             6F 6E 67 20 74 68 61
             6E 68 20 63 6F 6E 67
             20 64 6F 20 63 68 75
             61 20 6B 68 6F 69 20
             74 61 6F 20 70 68 6F
             6E 65 20 70 68 75
      008F7A 00                   21402 	.db 0x00
                                  21403 	.area CSEG    (CODE)
                                  21404 	.area CONST   (CODE)
      008F7B                      21405 ___str_113:
      008F7B 0D                   21406 	.db 0x0d
      008F7C 42 61 74 20 70 68 6F 21407 	.ascii "Bat phone phu"
             6E 65 20 70 68 75
      008F89 00                   21408 	.db 0x00
                                  21409 	.area CSEG    (CODE)
                                  21410 	.area CONST   (CODE)
      008F8A                      21411 ___str_114:
      008F8A 0D                   21412 	.db 0x0d
      008F8B 54 61 74 20 70 68 6F 21413 	.ascii "Tat phone phu"
             6E 65 20 70 68 75
      008F98 00                   21414 	.db 0x00
                                  21415 	.area CSEG    (CODE)
                                  21416 	.area CONST   (CODE)
      008F99                      21417 ___str_115:
      008F99 0D                   21418 	.db 0x0d
      008F9A 4C 65 6E 68 20 70 68 21419 	.ascii "Lenh phone phu khong hop le"
             6F 6E 65 20 70 68 75
             20 6B 68 6F 6E 67 20
             68 6F 70 20 6C 65
      008FB5 00                   21420 	.db 0x00
                                  21421 	.area CSEG    (CODE)
                                  21422 	.area CONST   (CODE)
      008FB6                      21423 ___str_116:
      008FB6 0D                   21424 	.db 0x0d
      008FB7 4C 65 6E 68 20 6B 68 21425 	.ascii "Lenh khong hop le"
             6F 6E 67 20 68 6F 70
             20 6C 65
      008FC8 00                   21426 	.db 0x00
                                  21427 	.area CSEG    (CODE)
                                  21428 	.area CONST   (CODE)
      008FC9                      21429 ___str_117:
      008FC9 0D                   21430 	.db 0x0d
      008FCA 4C 65 6E 68 20 6B 68 21431 	.ascii "Lenh khong hop le"
             6F 6E 67 20 68 6F 70
             20 6C 65
      008FDB 0D                   21432 	.db 0x0d
      008FDC 50 68 6F 6E 65 20 70 21433 	.ascii "Phone phu gui lenh"
             68 75 20 67 75 69 20
             6C 65 6E 68
      008FEE 00                   21434 	.db 0x00
                                  21435 	.area CSEG    (CODE)
                                  21436 	.area CONST   (CODE)
      008FEF                      21437 ___str_118:
      008FEF 54 48 49 45 54 20 4C 21438 	.ascii "THIET LAP EEPROM"
             41 50 20 45 45 50 52
             4F 4D
      008FFF 00                   21439 	.db 0x00
                                  21440 	.area CSEG    (CODE)
                                  21441 	.area CONST   (CODE)
      009000                      21442 ___str_119:
      009000 50 4F 57 45 52 20 4F 21443 	.ascii "POWER ON SIM800 "
             4E 20 53 49 4D 38 30
             30 20
      009010 00                   21444 	.db 0x00
                                  21445 	.area CSEG    (CODE)
                                  21446 	.area CONST   (CODE)
      009011                      21447 ___str_120:
      009011 20 20 4B 48 4F 49 20 21448 	.ascii "  KHOI TAO MP3  "
             54 41 4F 20 4D 50 33
             20 20
      009021 00                   21449 	.db 0x00
                                  21450 	.area CSEG    (CODE)
                                  21451 	.area CONST   (CODE)
      009022                      21452 ___str_121:
      009022 80                   21453 	.db 0x80
      009023 20 4E 48 41 20 50 48 21454 	.ascii " NHA PHAT TRIEN"
             41 54 20 54 52 49 45
             4E
      009032 00                   21455 	.db 0x00
                                  21456 	.area CSEG    (CODE)
                                  21457 	.area CONST   (CODE)
      009033                      21458 ___str_122:
      009033 C0                   21459 	.db 0xc0
      009034 4D 41 59 3A          21460 	.ascii "MAY:"
      009038 00                   21461 	.db 0x00
                                  21462 	.area CSEG    (CODE)
                                  21463 	.area CONST   (CODE)
      009039                      21464 ___str_123:
      009039 C5                   21465 	.db 0xc5
      00903A 20 44 43 20          21466 	.ascii " DC "
      00903E 00                   21467 	.db 0x00
                                  21468 	.area CSEG    (CODE)
                                  21469 	.area CONST   (CODE)
      00903F                      21470 ___str_124:
      00903F C5                   21471 	.db 0xc5
      009040 20 53 54 20          21472 	.ascii " ST "
      009044 00                   21473 	.db 0x00
                                  21474 	.area CSEG    (CODE)
                                  21475 	.area CONST   (CODE)
      009045                      21476 ___str_125:
      009045 C9                   21477 	.db 0xc9
      009046 43 35 35 20          21478 	.ascii "C55 "
      00904A 00                   21479 	.db 0x00
                                  21480 	.area CSEG    (CODE)
                                  21481 	.area CONST   (CODE)
      00904B                      21482 ___str_126:
      00904B C9                   21483 	.db 0xc9
      00904C 53 54 43 20          21484 	.ascii "STC "
      009050 00                   21485 	.db 0x00
                                  21486 	.area CSEG    (CODE)
                                  21487 	.area CONST   (CODE)
      009051                      21488 ___str_127:
      009051 CD                   21489 	.db 0xcd
      009052 53 3A                21490 	.ascii "S:"
      009054 00                   21491 	.db 0x00
                                  21492 	.area CSEG    (CODE)
                                  21493 	.area CONST   (CODE)
      009055                      21494 ___str_128:
      009055 C0                   21495 	.db 0xc0
      009056 50 3A                21496 	.ascii "P:"
      009058 00                   21497 	.db 0x00
                                  21498 	.area CSEG    (CODE)
                                  21499 	.area CONST   (CODE)
      009059                      21500 ___str_129:
      009059 20 54 3A             21501 	.ascii " T:"
      00905C 00                   21502 	.db 0x00
                                  21503 	.area CSEG    (CODE)
                                  21504 	.area CONST   (CODE)
      00905D                      21505 ___str_130:
      00905D 20 47 3A             21506 	.ascii " G:"
      009060 00                   21507 	.db 0x00
                                  21508 	.area CSEG    (CODE)
                                  21509 	.area CONST   (CODE)
      009061                      21510 ___str_131:
      009061 20 4D 3A             21511 	.ascii " M:"
      009064 00                   21512 	.db 0x00
                                  21513 	.area CSEG    (CODE)
                                  21514 	.area CONST   (CODE)
      009065                      21515 ___str_132:
      009065 C5                   21516 	.db 0xc5
      009066 20 5F 5F 20          21517 	.ascii " __ "
      00906A 00                   21518 	.db 0x00
                                  21519 	.area CSEG    (CODE)
                                  21520 	.area CONST   (CODE)
      00906B                      21521 ___str_133:
      00906B C9                   21522 	.db 0xc9
      00906C 5F 5F 5F             21523 	.ascii "___"
      00906F 00                   21524 	.db 0x00
                                  21525 	.area CSEG    (CODE)
                                  21526 	.area CONST   (CODE)
      009070                      21527 ___str_134:
      009070 80                   21528 	.db 0x80
      009071 20 20 20 20 20 20 53 21529 	.ascii "      SAVE      "
             41 56 45 20 20 20 20
             20 20
      009081 00                   21530 	.db 0x00
                                  21531 	.area CSEG    (CODE)
                                  21532 	.area CONST   (CODE)
      009082                      21533 ___str_135:
      009082 C0                   21534 	.db 0xc0
      009083 4D 4F 44 45 3A 4F 4B 21535 	.ascii "MODE:OK    RS:BO"
             20 20 20 20 52 53 3A
             42 4F
      009093 00                   21536 	.db 0x00
                                  21537 	.area CSEG    (CODE)
                                  21538 	.area CONST   (CODE)
      009094                      21539 ___str_136:
      009094 4B 49 45 4D 20 54 52 21540 	.ascii "KIEM TRA GIO RTC"
             41 20 47 49 4F 20 52
             54 43
      0090A4 00                   21541 	.db 0x00
                                  21542 	.area CSEG    (CODE)
                                  21543 	.area CONST   (CODE)
      0090A5                      21544 ___str_137:
      0090A5 4B 49 45 4D 20 4D 4F 21545 	.ascii "KIEM MOTOR 1 - 3"
             54 4F 52 20 31 20 2D
             20 33
      0090B5 00                   21546 	.db 0x00
                                  21547 	.area CSEG    (CODE)
                                  21548 	.area CONST   (CODE)
      0090B6                      21549 ___str_138:
      0090B6 4B 49 45 4D 20 4D 4F 21550 	.ascii "KIEM MOTOR 2 - 4"
             54 4F 52 20 32 20 2D
             20 34
      0090C6 00                   21551 	.db 0x00
                                  21552 	.area CSEG    (CODE)
                                  21553 	.area CONST   (CODE)
      0090C7                      21554 ___str_139:
      0090C7 54 48 49 45 54 20 4C 21555 	.ascii "THIET LAP MOTOR "
             41 50 20 4D 4F 54 4F
             52 20
      0090D7 00                   21556 	.db 0x00
                                  21557 	.area CSEG    (CODE)
                                  21558 	.area CONST   (CODE)
      0090D8                      21559 ___str_140:
      0090D8 0D                   21560 	.db 0x0d
      0090D9 6B 68 6F 69 20 64 6F 21561 	.ascii "khoi dong phan mem san sang"
             6E 67 20 70 68 61 6E
             20 6D 65 6D 20 73 61
             6E 20 73 61 6E 67
      0090F4 00                   21562 	.db 0x00
                                  21563 	.area CSEG    (CODE)
                                  21564 	.area CONST   (CODE)
      0090F5                      21565 ___str_141:
      0090F5 0D                   21566 	.db 0x0d
      0090F6 6B 68 6F 69 20 64 6F 21567 	.ascii "khoi dong san sang"
             6E 67 20 73 61 6E 20
             73 61 6E 67
      009108 00                   21568 	.db 0x00
                                  21569 	.area CSEG    (CODE)
                                  21570 	.area CONST   (CODE)
      009109                      21571 ___str_142:
      009109 2A 2A 2A 73 74 63    21572 	.ascii "***stc"
      00910F 00                   21573 	.db 0x00
                                  21574 	.area CSEG    (CODE)
                                  21575 	.area CONST   (CODE)
      009110                      21576 ___str_143:
      009110 23 23 23             21577 	.ascii "###"
      009113 0D                   21578 	.db 0x0d
      009114 0A                   21579 	.db 0x0a
      009115 00                   21580 	.db 0x00
                                  21581 	.area CSEG    (CODE)
                                  21582 	.area CONST   (CODE)
      009116                      21583 ___str_144:
      009116 0D                   21584 	.db 0x0d
      009117 64 69 65 6E 20 61 70 21585 	.ascii "dien ap thap"
             20 74 68 61 70
      009123 00                   21586 	.db 0x00
                                  21587 	.area CSEG    (CODE)
                                  21588 	.area CONST   (CODE)
      009124                      21589 ___str_145:
      009124 0D                   21590 	.db 0x0d
      009125 64 69 65 6E 20 61 70 21591 	.ascii "dien ap khoi phuc"
             20 6B 68 6F 69 20 70
             68 75 63
      009136 00                   21592 	.db 0x00
                                  21593 	.area CSEG    (CODE)
                                  21594 	.area CONST   (CODE)
      009137                      21595 ___str_146:
      009137 0D                   21596 	.db 0x0d
      009138 6D 61 74 20 78 75 6E 21597 	.ascii "mat xung giay"
             67 20 67 69 61 79
      009145 00                   21598 	.db 0x00
                                  21599 	.area CSEG    (CODE)
                                  21600 	.area CONST   (CODE)
      009146                      21601 ___str_147:
      009146 0D                   21602 	.db 0x0d
      009147 6C 6F 69 20 64 6F 63 21603 	.ascii "loi doc cam 1"
             20 63 61 6D 20 31
      009154 00                   21604 	.db 0x00
                                  21605 	.area CSEG    (CODE)
                                  21606 	.area CONST   (CODE)
      009155                      21607 ___str_148:
      009155 0D                   21608 	.db 0x0d
      009156 6C 6F 69 20 64 6F 63 21609 	.ascii "loi doc cam 2"
             20 63 61 6D 20 32
      009163 00                   21610 	.db 0x00
                                  21611 	.area CSEG    (CODE)
                                  21612 	.area CONST   (CODE)
      009164                      21613 ___str_149:
      009164 0D                   21614 	.db 0x0d
      009165 6C 6F 69 20 64 6F 63 21615 	.ascii "loi doc cam 3"
             20 63 61 6D 20 33
      009172 00                   21616 	.db 0x00
                                  21617 	.area CSEG    (CODE)
                                  21618 	.area CONST   (CODE)
      009173                      21619 ___str_150:
      009173 0D                   21620 	.db 0x0d
      009174 6C 6F 69 20 64 6F 63 21621 	.ascii "loi doc cam 4"
             20 63 61 6D 20 34
      009181 00                   21622 	.db 0x00
                                  21623 	.area CSEG    (CODE)
                                  21624 	.area CONST   (CODE)
      009182                      21625 ___str_151:
      009182 0D                   21626 	.db 0x0d
      009183 43 68 75 61 6E 20 62 21627 	.ascii "Chuan bi reset phan mem tu cuoc goi"
             69 20 72 65 73 65 74
             20 70 68 61 6E 20 6D
             65 6D 20 74 75 20 63
             75 6F 63 20 67 6F 69
      0091A6 00                   21628 	.db 0x00
                                  21629 	.area CSEG    (CODE)
                                  21630 	.area CONST   (CODE)
      0091A7                      21631 ___str_152:
      0091A7 0D                   21632 	.db 0x0d
      0091A8 62 61 6F 20 63 61 6F 21633 	.ascii "bao cao dau gio"
             20 64 61 75 20 67 69
             6F
      0091B7 00                   21634 	.db 0x00
                                  21635 	.area CSEG    (CODE)
                                  21636 	.area CONST   (CODE)
      0091B8                      21637 ___str_153:
      0091B8 43 4F 20 54 49 4E 20 21638 	.ascii "CO TIN NHAN MOI "
             4E 48 41 4E 20 4D 4F
             49 20
      0091C8 00                   21639 	.db 0x00
                                  21640 	.area CSEG    (CODE)
                                  21641 	.area CONST   (CODE)
      0091C9                      21642 ___str_154:
      0091C9 41 54 2B 43 4D 47 4C 21643 	.ascii "AT+CMGL="
             3D
      0091D1 22                   21644 	.db 0x22
      0091D2 41 4C 4C             21645 	.ascii "ALL"
      0091D5 22                   21646 	.db 0x22
      0091D6 0D                   21647 	.db 0x0d
      0091D7 00                   21648 	.db 0x00
                                  21649 	.area CSEG    (CODE)
                                  21650 	.area CONST   (CODE)
      0091D8                      21651 ___str_155:
      0091D8 0D                   21652 	.db 0x0d
      0091D9 67 73 6D 20 72 65 73 21653 	.ascii "gsm reset thanh cong"
             65 74 20 74 68 61 6E
             68 20 63 6F 6E 67
      0091ED 00                   21654 	.db 0x00
                                  21655 	.area CSEG    (CODE)
                                  21656 	.area CONST   (CODE)
      0091EE                      21657 ___str_156:
      0091EE 20 20 4D 44 43 20 20 21658 	.ascii "  MDC  "
      0091F5 00                   21659 	.db 0x00
                                  21660 	.area CSEG    (CODE)
                                  21661 	.area CONST   (CODE)
      0091F6                      21662 ___str_157:
      0091F6 20 20 4D 53 54 20 20 21663 	.ascii "  MST  "
      0091FD 00                   21664 	.db 0x00
                                  21665 	.area CSEG    (CODE)
                                  21666 	.area CONST   (CODE)
      0091FE                      21667 ___str_158:
      0091FE 20 20                21668 	.ascii "  "
      009200 00                   21669 	.db 0x00
                                  21670 	.area CSEG    (CODE)
                                  21671 	.area CONST   (CODE)
      009201                      21672 ___str_159:
      009201 20 47 20             21673 	.ascii " G "
      009204 00                   21674 	.db 0x00
                                  21675 	.area CSEG    (CODE)
                                  21676 	.area CONST   (CODE)
      009205                      21677 ___str_160:
      009205 20 44 20             21678 	.ascii " D "
      009208 00                   21679 	.db 0x00
                                  21680 	.area CSEG    (CODE)
                                  21681 	.area CONST   (CODE)
      009209                      21682 ___str_161:
      009209 20 41 20             21683 	.ascii " A "
      00920C 00                   21684 	.db 0x00
                                  21685 	.area CSEG    (CODE)
                                  21686 	.area CONST   (CODE)
      00920D                      21687 ___str_162:
      00920D 20                   21688 	.ascii " "
      00920E 00                   21689 	.db 0x00
                                  21690 	.area CSEG    (CODE)
                                  21691 	.area CONST   (CODE)
      00920F                      21692 ___str_163:
      00920F 0D                   21693 	.db 0x0d
      009210 63 68 69 6E 68 20 67 21694 	.ascii "chinh gio bang tay"
             69 6F 20 62 61 6E 67
             20 74 61 79
      009222 00                   21695 	.db 0x00
                                  21696 	.area CSEG    (CODE)
                                  21697 	.area CONST   (CODE)
      009223                      21698 ___str_164:
      009223 0D                   21699 	.db 0x0d
      009224 2A 63 68 69 6E 68 20 21700 	.ascii "*chinh gio bang tay*"
             67 69 6F 20 62 61 6E
             67 20 74 61 79 2A
      009238 00                   21701 	.db 0x00
                                  21702 	.area CSEG    (CODE)
                                  21703 	.area CONST   (CODE)
      009239                      21704 ___str_165:
      009239 20 20 20 20 20 20 20 21705 	.ascii "         "
             20 20
      009242 00                   21706 	.db 0x00
                                  21707 	.area CSEG    (CODE)
                                  21708 	.area CONST   (CODE)
      009243                      21709 ___str_166:
      009243 C0                   21710 	.db 0xc0
      009244 4D 41 59 20 31 20 20 21711 	.ascii "MAY 1          "
             20 20 20 20 20 20 20
             20
      009253 00                   21712 	.db 0x00
                                  21713 	.area CSEG    (CODE)
                                  21714 	.area CONST   (CODE)
      009254                      21715 ___str_167:
      009254 30 30 30 20          21716 	.ascii "000 "
      009258 00                   21717 	.db 0x00
                                  21718 	.area CSEG    (CODE)
                                  21719 	.area CONST   (CODE)
      009259                      21720 ___str_168:
      009259 C0                   21721 	.db 0xc0
      00925A 20 20 4B 48 4F 4E 47 21722 	.ascii "  KHONG CO SIM  "
             20 43 4F 20 53 49 4D
             20 20
      00926A 00                   21723 	.db 0x00
                                  21724 	.area CSEG    (CODE)
                                  21725 	.area CONST   (CODE)
      00926B                      21726 ___str_169:
      00926B C0                   21727 	.db 0xc0
      00926C 20 20 47 53 4D 20 54 21728 	.ascii "  GSM TAT NGUON "
             41 54 20 4E 47 55 4F
             4E 20
      00927C 00                   21729 	.db 0x00
                                  21730 	.area CSEG    (CODE)
                                  21731 	.area CONST   (CODE)
      00927D                      21732 ___str_170:
      00927D C0                   21733 	.db 0xc0
      00927E 20 20                21734 	.ascii "  "
      009280 00                   21735 	.db 0x00
                                  21736 	.area CSEG    (CODE)
                                  21737 	.area CONST   (CODE)
      009281                      21738 ___str_171:
      009281 20 2D 20             21739 	.ascii " - "
      009284 00                   21740 	.db 0x00
                                  21741 	.area CSEG    (CODE)
                                  21742 	.area CONST   (CODE)
      009285                      21743 ___str_172:
      009285 20 20 20 20          21744 	.ascii "    "
      009289 00                   21745 	.db 0x00
                                  21746 	.area CSEG    (CODE)
                                  21747 	.area XINIT   (CODE)
      00928A                      21748 __xinit__cnt:
      00928A 14                   21749 	.db #0x14	; 20
      00928B                      21750 __xinit__counter_xung_giay:
      00928B 28                   21751 	.db #0x28	; 40
                                  21752 	.area CABS    (ABS,CODE)
