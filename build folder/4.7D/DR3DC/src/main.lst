                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _huongdan
                                     12 	.globl _ver
                                     13 	.globl _mode_select
                                     14 	.globl _motor_step
                                     15 	.globl _phone2
                                     16 	.globl _phone1
                                     17 	.globl _eep_gio4
                                     18 	.globl _eep_phut4
                                     19 	.globl _eep_gio3
                                     20 	.globl _eep_phut3
                                     21 	.globl _eep_gio2
                                     22 	.globl _eep_phut2
                                     23 	.globl _eep_gio1
                                     24 	.globl _eep_phut1
                                     25 	.globl _eep_cam
                                     26 	.globl _eep_debug
                                     27 	.globl _eep_loithesim
                                     28 	.globl _eep_phonephu
                                     29 	.globl _eep_mp3
                                     30 	.globl _eep_tatmoden
                                     31 	.globl _eep_giosacxa
                                     32 	.globl _eep_norreset
                                     33 	.globl _eep_gioreset
                                     34 	.globl _eep_ngayreset
                                     35 	.globl _eep_gpson
                                     36 	.globl _eep_baocao
                                     37 	.globl _eep_motor
                                     38 	.globl _adc_isr
                                     39 	.globl _mp3_serial_interupt
                                     40 	.globl _main
                                     41 	.globl _xu_ly_tin_nhan
                                     42 	.globl _gsm_serial_interrupt
                                     43 	.globl _gsm_laygio_gps
                                     44 	.globl _gsm_thietlapnhantin1
                                     45 	.globl _gsm_thietlapnhantin
                                     46 	.globl _gsm_thietlapgoidien
                                     47 	.globl _gsm_thietlapngaygiothuc
                                     48 	.globl _gsm_thietlapsim800
                                     49 	.globl _gui_huong_dan
                                     50 	.globl _baocaoden
                                     51 	.globl _send_thong_so_den
                                     52 	.globl _baocaosms
                                     53 	.globl _send_thong_so
                                     54 	.globl _send_gio_thuc
                                     55 	.globl _send_gio_kim
                                     56 	.globl _send_thong_so_rut_gon
                                     57 	.globl _kiemtratinhieu
                                     58 	.globl _kiemtrasodienthoai
                                     59 	.globl _kiemtrataikhoan
                                     60 	.globl _send_sms
                                     61 	.globl _gsm_quay_so
                                     62 	.globl _gsm_sendandcheck
                                     63 	.globl _clear_sms_buffer
                                     64 	.globl _cam_phim
                                     65 	.globl _PCA_Handler
                                     66 	.globl _clock_servide
                                     67 	.globl _xunggiay
                                     68 	.globl _motor_step_int_init
                                     69 	.globl _PCA_Timer_init
                                     70 	.globl _luu_gio_kim
                                     71 	.globl _motor_run_check2
                                     72 	.globl _motor_run_check
                                     73 	.globl _kiem_tra_nhac
                                     74 	.globl _kiem_tra_den
                                     75 	.globl _mp3_play
                                     76 	.globl _mp3_serial_init
                                     77 	.globl _send_gsm_cmd
                                     78 	.globl _send_gsm_byte
                                     79 	.globl _gsm_init
                                     80 	.globl _IAP_xoasector
                                     81 	.globl _IAP_docxoasector1
                                     82 	.globl _IAP_ghisector1
                                     83 	.globl _IAP_ghibyte
                                     84 	.globl _LCD_noblink
                                     85 	.globl _LCD_blinkXY
                                     86 	.globl _LCD_chop
                                     87 	.globl _LCD_xoa
                                     88 	.globl _delay_ms
                                     89 	.globl _LCD_guigio
                                     90 	.globl _LCD_Init
                                     91 	.globl _LCD_guidulieu
                                     92 	.globl _LCD_guilenh
                                     93 	.globl _LCD_guichuoi
                                     94 	.globl _rtc_settime
                                     95 	.globl _rtc_gettime
                                     96 	.globl _rtc_setdate
                                     97 	.globl _rtc_getdate
                                     98 	.globl _rtc_init
                                     99 	.globl _CCF0
                                    100 	.globl _CCF1
                                    101 	.globl _CCF2
                                    102 	.globl _CR
                                    103 	.globl _CF
                                    104 	.globl _RI
                                    105 	.globl _TI
                                    106 	.globl _RB8
                                    107 	.globl _TB8
                                    108 	.globl _REN
                                    109 	.globl _SM2
                                    110 	.globl _SM1
                                    111 	.globl _SM0
                                    112 	.globl _IT0
                                    113 	.globl _IE0
                                    114 	.globl _IT1
                                    115 	.globl _IE1
                                    116 	.globl _TR0
                                    117 	.globl _TF0
                                    118 	.globl _TR1
                                    119 	.globl _TF1
                                    120 	.globl _PX0
                                    121 	.globl _PT0
                                    122 	.globl _PX1
                                    123 	.globl _PT1
                                    124 	.globl _PS
                                    125 	.globl _PADC
                                    126 	.globl _PLVD
                                    127 	.globl _PPCA
                                    128 	.globl _EX0
                                    129 	.globl _ET0
                                    130 	.globl _EX1
                                    131 	.globl _ET1
                                    132 	.globl _ES
                                    133 	.globl _EADC
                                    134 	.globl _ELVD
                                    135 	.globl _EA
                                    136 	.globl _P77
                                    137 	.globl _P76
                                    138 	.globl _P75
                                    139 	.globl _P74
                                    140 	.globl _P73
                                    141 	.globl _P72
                                    142 	.globl _P71
                                    143 	.globl _P70
                                    144 	.globl _P67
                                    145 	.globl _P66
                                    146 	.globl _P65
                                    147 	.globl _P64
                                    148 	.globl _P63
                                    149 	.globl _P62
                                    150 	.globl _P61
                                    151 	.globl _P60
                                    152 	.globl _P57
                                    153 	.globl _P56
                                    154 	.globl _P55
                                    155 	.globl _P54
                                    156 	.globl _P53
                                    157 	.globl _P52
                                    158 	.globl _P51
                                    159 	.globl _P50
                                    160 	.globl _P47
                                    161 	.globl _P46
                                    162 	.globl _P45
                                    163 	.globl _P44
                                    164 	.globl _P43
                                    165 	.globl _P42
                                    166 	.globl _P41
                                    167 	.globl _P40
                                    168 	.globl _P37
                                    169 	.globl _P36
                                    170 	.globl _P35
                                    171 	.globl _P34
                                    172 	.globl _P33
                                    173 	.globl _P32
                                    174 	.globl _P31
                                    175 	.globl _P30
                                    176 	.globl _P27
                                    177 	.globl _P26
                                    178 	.globl _P25
                                    179 	.globl _P24
                                    180 	.globl _P23
                                    181 	.globl _P22
                                    182 	.globl _P21
                                    183 	.globl _P20
                                    184 	.globl _P17
                                    185 	.globl _P16
                                    186 	.globl _P15
                                    187 	.globl _P14
                                    188 	.globl _P13
                                    189 	.globl _P12
                                    190 	.globl _P11
                                    191 	.globl _P10
                                    192 	.globl _P07
                                    193 	.globl _P06
                                    194 	.globl _P05
                                    195 	.globl _P04
                                    196 	.globl _P03
                                    197 	.globl _P02
                                    198 	.globl _P01
                                    199 	.globl _P00
                                    200 	.globl _P
                                    201 	.globl _F1
                                    202 	.globl _OV
                                    203 	.globl _RS0
                                    204 	.globl _RS1
                                    205 	.globl _F0
                                    206 	.globl _AC
                                    207 	.globl _CY
                                    208 	.globl _PWMFDCR
                                    209 	.globl _PWMIF
                                    210 	.globl _PWMCR
                                    211 	.globl _PWMCFG
                                    212 	.globl _CMPCR2
                                    213 	.globl _CMPCR1
                                    214 	.globl _CCAP2H
                                    215 	.globl _CCAP1H
                                    216 	.globl _CCAP0H
                                    217 	.globl _PCA_PWM2
                                    218 	.globl _PCA_PWM1
                                    219 	.globl _PCA_PWM0
                                    220 	.globl _CCAP2L
                                    221 	.globl _CCAP1L
                                    222 	.globl _CCAP0L
                                    223 	.globl _CCAPM2
                                    224 	.globl _CCAPM1
                                    225 	.globl _CCAPM0
                                    226 	.globl _CH
                                    227 	.globl _CL
                                    228 	.globl _CMOD
                                    229 	.globl _CCON
                                    230 	.globl _IAP_CONTR
                                    231 	.globl _IAP_TRIG
                                    232 	.globl _IAP_CMD
                                    233 	.globl _IAP_ADDRL
                                    234 	.globl _IAP_ADDRH
                                    235 	.globl _IAP_DATA
                                    236 	.globl _SPDAT
                                    237 	.globl _SPCTL
                                    238 	.globl _SPSTAT
                                    239 	.globl _ADC_RESL
                                    240 	.globl _ADC_RES
                                    241 	.globl _ADC_CONTR
                                    242 	.globl _SADEN
                                    243 	.globl _SADDR
                                    244 	.globl _S4BUF
                                    245 	.globl _S4CON
                                    246 	.globl _S3BUF
                                    247 	.globl _S3CON
                                    248 	.globl _S2BUF
                                    249 	.globl _S2CON
                                    250 	.globl _SBUF
                                    251 	.globl _SCON
                                    252 	.globl _WDT_CONTR
                                    253 	.globl _WKTCH
                                    254 	.globl _WKTCL
                                    255 	.globl _T2L
                                    256 	.globl _T2H
                                    257 	.globl _T3L
                                    258 	.globl _T3H
                                    259 	.globl _T4L
                                    260 	.globl _T4H
                                    261 	.globl _T4T3M
                                    262 	.globl _TH1
                                    263 	.globl _TH0
                                    264 	.globl _TL1
                                    265 	.globl _TL0
                                    266 	.globl _TMOD
                                    267 	.globl _TCON
                                    268 	.globl _INT_CLKO
                                    269 	.globl _IP2
                                    270 	.globl _IE2
                                    271 	.globl _IP
                                    272 	.globl _IE
                                    273 	.globl _P_SW2
                                    274 	.globl _P1ASF
                                    275 	.globl _BUS_SPEED
                                    276 	.globl _CLK_DIV
                                    277 	.globl _P_SW1
                                    278 	.globl _AUXR1
                                    279 	.globl _AUXR
                                    280 	.globl _PCON
                                    281 	.globl _P7M1
                                    282 	.globl _P7M0
                                    283 	.globl _P6M1
                                    284 	.globl _P6M0
                                    285 	.globl _P5M1
                                    286 	.globl _P5M0
                                    287 	.globl _P4M1
                                    288 	.globl _P4M0
                                    289 	.globl _P3M1
                                    290 	.globl _P3M0
                                    291 	.globl _P2M1
                                    292 	.globl _P2M0
                                    293 	.globl _P1M1
                                    294 	.globl _P1M0
                                    295 	.globl _P0M1
                                    296 	.globl _P0M0
                                    297 	.globl _P7
                                    298 	.globl _P6
                                    299 	.globl _P5
                                    300 	.globl _P4
                                    301 	.globl _P3
                                    302 	.globl _P2
                                    303 	.globl _P1
                                    304 	.globl _P0
                                    305 	.globl _DPH
                                    306 	.globl _DPL
                                    307 	.globl _SP
                                    308 	.globl _PSW
                                    309 	.globl _B
                                    310 	.globl _ACC
                                    311 	.globl _counter_xung_giay
                                    312 	.globl _cnt
                                    313 	.globl _phut_sac_xa_acqui_con_lai
                                    314 	.globl _sms_on
                                    315 	.globl _sim_test_sec
                                    316 	.globl _max_second
                                    317 	.globl _so_motor
                                    318 	.globl _date_str
                                    319 	.globl _gsm_receive_buf
                                    320 	.globl _date_pointer
                                    321 	.globl _gsm_receive_pointer
                                    322 	.globl _have_time
                                    323 	.globl _gsm_serial_cmd
                                    324 	.globl _total_try_time_out
                                    325 	.globl _connect_time_out
                                    326 	.globl _connect
                                    327 	.globl _signal
                                    328 	.globl _nha_mang
                                    329 	.globl _song_name
                                    330 	.globl _mode_wait
                                    331 	.globl _sub_mode
                                    332 	.globl _mode
                                    333 	.globl _phim_cong_doi
                                    334 	.globl _phim_back_doi
                                    335 	.globl _phim_mode_doi
                                    336 	.globl _lcd_data_index
                                    337 	.globl _lcd_process_index
                                    338 	.globl _lcd_index
                                    339 	.globl _toc_do_motor_step
                                    340 	.globl _thoi_gian_doi_cam_chuan
                                    341 	.globl _thoi_gian_doi_doc_cam
                                    342 	.globl _xung_giay_check
                                    343 	.globl _ngay_reset_con_lai
                                    344 	.globl _PCA_Timer0
                                    345 	.globl _delay_ve_kim
                                    346 	.globl _may_canh_kim
                                    347 	.globl _canhkim
                                    348 	.globl _year
                                    349 	.globl _month
                                    350 	.globl _day
                                    351 	.globl _date
                                    352 	.globl _eeprom_buf
                                    353 	.globl _message_index
                                    354 	.globl _sms_index
                                    355 	.globl _delay_cuoc_goi_ke_tiep
                                    356 	.globl _so_lan_goi_dien
                                    357 	.globl _gsm_delay_reset
                                    358 	.globl _lenh_sms
                                    359 	.globl _phone
                                    360 	.globl _phone_chinh
                                    361 	.globl _baocaoden_PARM_1
                                    362 	.globl _baocaosms_PARM_1
                                    363 	.globl _send_thong_so_PARM_1
                                    364 	.globl _send_gio_thuc_PARM_1
                                    365 	.globl _send_thong_so_rut_gon_PARM_1
                                    366 	.globl _send_sms_PARM_1
                                    367 	.globl _lcd_update_chop
                                    368 	.globl _bao_cao_dien_ap_thap
                                    369 	.globl _loi_eeprom_tat_mo_den
                                    370 	.globl _loi_cam_motor4
                                    371 	.globl _loi_cam_motor3
                                    372 	.globl _loi_cam_motor2
                                    373 	.globl _loi_cam_motor1
                                    374 	.globl _mat_xung_giay
                                    375 	.globl _motor_debug
                                    376 	.globl _motor_dung
                                    377 	.globl _atmel_phat
                                    378 	.globl _may_dc
                                    379 	.globl _test_gps
                                    380 	.globl _skip_gsm_cmd
                                    381 	.globl _error
                                    382 	.globl _nosim
                                    383 	.globl _have_not
                                    384 	.globl _gui_lenh_thanh_cong
                                    385 	.globl _chop
                                    386 	.globl _phim_cong_giu
                                    387 	.globl _phim_cong_cu
                                    388 	.globl _phim_cong_nhan
                                    389 	.globl _phim_cong_xuong
                                    390 	.globl _phim_back_giu
                                    391 	.globl _phim_back_cu
                                    392 	.globl _phim_back_nhan
                                    393 	.globl _phim_back_xuong
                                    394 	.globl _phim_mode_giu
                                    395 	.globl _phim_mode_cu
                                    396 	.globl _phim_mode_nhan
                                    397 	.globl _phim_mode_xuong
                                    398 	.globl _flip_pulse
                                    399 	.globl _phut_out
                                    400 	.globl _giay_out
                                    401 	.globl _GPS_time
                                    402 	.globl _cam_ra2
                                    403 	.globl _cam_ra
                                    404 	.globl _cam_vao_han2
                                    405 	.globl _cam_vao_han
                                    406 	.globl _cam_vao2
                                    407 	.globl _cam_vao
                                    408 	.globl _trang_thai_cam2
                                    409 	.globl _trang_thai_cam
                                    410 	.globl _motorDir2
                                    411 	.globl _motorDir1
                                    412 	.globl _motorDir
                                    413 	.globl _have_quote
                                    414 	.globl _lenh_khong_hop_le
                                    415 	.globl _have_cusd
                                    416 	.globl _sms_dang_xu_ly
                                    417 	.globl _pin_chinh_xac
                                    418 	.globl _co_tin_nhan_moi
                                    419 	.globl _phone_header
                                    420 	.globl _bat_phone_phu
                                    421 	.globl _phone_phu_so_sanh_that_bai
                                    422 	.globl _phone_chinh_so_sanh_that_bai
                                    423 	.globl _goi_dien_thoai
                                    424 	.globl _co_cuoc_goi_toi
                                    425 	.globl _gsm_reset
                                    426 	.globl _da_gui_bao_cao_thang
                                    427 	.globl _da_gui_bao_cao
                                    428 	.globl _dien_ap_thap
                                    429 	.globl _mp3_doi_start
                                    430 	.globl _mp3_minute
                                    431 	.globl _mp3_hour
                                    432 	.globl _mp3_date
                                    433 	.globl _mp3_status
                                    434 	.globl _dien_ap_nguon
                                    435 	.globl _gsm_sendandcheck_PARM_4
                                    436 	.globl _gsm_sendandcheck_PARM_3
                                    437 	.globl _gsm_sendandcheck_PARM_2
                                    438 	.globl _motor_index2
                                    439 	.globl _motor_index
                                    440 	.globl _step_index
                                    441 	.globl _phut
                                    442 	.globl _gio
                                    443 	.globl _hour12
                                    444 	.globl _hour
                                    445 	.globl _minute
                                    446 	.globl _second
                                    447 ;--------------------------------------------------------
                                    448 ; special function registers
                                    449 ;--------------------------------------------------------
                                    450 	.area RSEG    (ABS,DATA)
      000000                        451 	.org 0x0000
                           0000E0   452 _ACC	=	0x00e0
                           0000F0   453 _B	=	0x00f0
                           0000D0   454 _PSW	=	0x00d0
                           000081   455 _SP	=	0x0081
                           000082   456 _DPL	=	0x0082
                           000083   457 _DPH	=	0x0083
                           000080   458 _P0	=	0x0080
                           000090   459 _P1	=	0x0090
                           0000A0   460 _P2	=	0x00a0
                           0000B0   461 _P3	=	0x00b0
                           0000C0   462 _P4	=	0x00c0
                           0000C8   463 _P5	=	0x00c8
                           0000E8   464 _P6	=	0x00e8
                           0000F8   465 _P7	=	0x00f8
                           000094   466 _P0M0	=	0x0094
                           000093   467 _P0M1	=	0x0093
                           000092   468 _P1M0	=	0x0092
                           000091   469 _P1M1	=	0x0091
                           000096   470 _P2M0	=	0x0096
                           000095   471 _P2M1	=	0x0095
                           0000B2   472 _P3M0	=	0x00b2
                           0000B1   473 _P3M1	=	0x00b1
                           0000B4   474 _P4M0	=	0x00b4
                           0000B3   475 _P4M1	=	0x00b3
                           0000CA   476 _P5M0	=	0x00ca
                           0000C9   477 _P5M1	=	0x00c9
                           0000CC   478 _P6M0	=	0x00cc
                           0000CB   479 _P6M1	=	0x00cb
                           0000E2   480 _P7M0	=	0x00e2
                           0000E1   481 _P7M1	=	0x00e1
                           000087   482 _PCON	=	0x0087
                           00008E   483 _AUXR	=	0x008e
                           0000A2   484 _AUXR1	=	0x00a2
                           0000A2   485 _P_SW1	=	0x00a2
                           000097   486 _CLK_DIV	=	0x0097
                           0000A1   487 _BUS_SPEED	=	0x00a1
                           00009D   488 _P1ASF	=	0x009d
                           0000BA   489 _P_SW2	=	0x00ba
                           0000A8   490 _IE	=	0x00a8
                           0000B8   491 _IP	=	0x00b8
                           0000AF   492 _IE2	=	0x00af
                           0000B5   493 _IP2	=	0x00b5
                           00008F   494 _INT_CLKO	=	0x008f
                           000088   495 _TCON	=	0x0088
                           000089   496 _TMOD	=	0x0089
                           00008A   497 _TL0	=	0x008a
                           00008B   498 _TL1	=	0x008b
                           00008C   499 _TH0	=	0x008c
                           00008D   500 _TH1	=	0x008d
                           0000D1   501 _T4T3M	=	0x00d1
                           0000D2   502 _T4H	=	0x00d2
                           0000D3   503 _T4L	=	0x00d3
                           0000D4   504 _T3H	=	0x00d4
                           0000D5   505 _T3L	=	0x00d5
                           0000D6   506 _T2H	=	0x00d6
                           0000D7   507 _T2L	=	0x00d7
                           0000AA   508 _WKTCL	=	0x00aa
                           0000AB   509 _WKTCH	=	0x00ab
                           0000C1   510 _WDT_CONTR	=	0x00c1
                           000098   511 _SCON	=	0x0098
                           000099   512 _SBUF	=	0x0099
                           00009A   513 _S2CON	=	0x009a
                           00009B   514 _S2BUF	=	0x009b
                           0000AC   515 _S3CON	=	0x00ac
                           0000AD   516 _S3BUF	=	0x00ad
                           000084   517 _S4CON	=	0x0084
                           000085   518 _S4BUF	=	0x0085
                           0000A9   519 _SADDR	=	0x00a9
                           0000B9   520 _SADEN	=	0x00b9
                           0000BC   521 _ADC_CONTR	=	0x00bc
                           0000BD   522 _ADC_RES	=	0x00bd
                           0000BE   523 _ADC_RESL	=	0x00be
                           0000CD   524 _SPSTAT	=	0x00cd
                           0000CE   525 _SPCTL	=	0x00ce
                           0000CF   526 _SPDAT	=	0x00cf
                           0000C2   527 _IAP_DATA	=	0x00c2
                           0000C3   528 _IAP_ADDRH	=	0x00c3
                           0000C4   529 _IAP_ADDRL	=	0x00c4
                           0000C5   530 _IAP_CMD	=	0x00c5
                           0000C6   531 _IAP_TRIG	=	0x00c6
                           0000C7   532 _IAP_CONTR	=	0x00c7
                           0000D8   533 _CCON	=	0x00d8
                           0000D9   534 _CMOD	=	0x00d9
                           0000E9   535 _CL	=	0x00e9
                           0000F9   536 _CH	=	0x00f9
                           0000DA   537 _CCAPM0	=	0x00da
                           0000DB   538 _CCAPM1	=	0x00db
                           0000DC   539 _CCAPM2	=	0x00dc
                           0000EA   540 _CCAP0L	=	0x00ea
                           0000EB   541 _CCAP1L	=	0x00eb
                           0000EC   542 _CCAP2L	=	0x00ec
                           0000F2   543 _PCA_PWM0	=	0x00f2
                           0000F3   544 _PCA_PWM1	=	0x00f3
                           0000F4   545 _PCA_PWM2	=	0x00f4
                           0000FA   546 _CCAP0H	=	0x00fa
                           0000FB   547 _CCAP1H	=	0x00fb
                           0000FC   548 _CCAP2H	=	0x00fc
                           0000E6   549 _CMPCR1	=	0x00e6
                           0000E7   550 _CMPCR2	=	0x00e7
                           0000F1   551 _PWMCFG	=	0x00f1
                           0000F5   552 _PWMCR	=	0x00f5
                           0000F6   553 _PWMIF	=	0x00f6
                           0000F7   554 _PWMFDCR	=	0x00f7
                                    555 ;--------------------------------------------------------
                                    556 ; special function bits
                                    557 ;--------------------------------------------------------
                                    558 	.area RSEG    (ABS,DATA)
      000000                        559 	.org 0x0000
                           0000D7   560 _CY	=	0x00d7
                           0000D6   561 _AC	=	0x00d6
                           0000D5   562 _F0	=	0x00d5
                           0000D4   563 _RS1	=	0x00d4
                           0000D3   564 _RS0	=	0x00d3
                           0000D2   565 _OV	=	0x00d2
                           0000D1   566 _F1	=	0x00d1
                           0000D0   567 _P	=	0x00d0
                           000080   568 _P00	=	0x0080
                           000081   569 _P01	=	0x0081
                           000082   570 _P02	=	0x0082
                           000083   571 _P03	=	0x0083
                           000084   572 _P04	=	0x0084
                           000085   573 _P05	=	0x0085
                           000086   574 _P06	=	0x0086
                           000087   575 _P07	=	0x0087
                           000090   576 _P10	=	0x0090
                           000091   577 _P11	=	0x0091
                           000092   578 _P12	=	0x0092
                           000093   579 _P13	=	0x0093
                           000094   580 _P14	=	0x0094
                           000095   581 _P15	=	0x0095
                           000096   582 _P16	=	0x0096
                           000097   583 _P17	=	0x0097
                           0000A0   584 _P20	=	0x00a0
                           0000A1   585 _P21	=	0x00a1
                           0000A2   586 _P22	=	0x00a2
                           0000A3   587 _P23	=	0x00a3
                           0000A4   588 _P24	=	0x00a4
                           0000A5   589 _P25	=	0x00a5
                           0000A6   590 _P26	=	0x00a6
                           0000A7   591 _P27	=	0x00a7
                           0000B0   592 _P30	=	0x00b0
                           0000B1   593 _P31	=	0x00b1
                           0000B2   594 _P32	=	0x00b2
                           0000B3   595 _P33	=	0x00b3
                           0000B4   596 _P34	=	0x00b4
                           0000B5   597 _P35	=	0x00b5
                           0000B6   598 _P36	=	0x00b6
                           0000B7   599 _P37	=	0x00b7
                           0000C0   600 _P40	=	0x00c0
                           0000C1   601 _P41	=	0x00c1
                           0000C2   602 _P42	=	0x00c2
                           0000C3   603 _P43	=	0x00c3
                           0000C4   604 _P44	=	0x00c4
                           0000C5   605 _P45	=	0x00c5
                           0000C6   606 _P46	=	0x00c6
                           0000C7   607 _P47	=	0x00c7
                           0000C8   608 _P50	=	0x00c8
                           0000C9   609 _P51	=	0x00c9
                           0000CA   610 _P52	=	0x00ca
                           0000CB   611 _P53	=	0x00cb
                           0000CC   612 _P54	=	0x00cc
                           0000CD   613 _P55	=	0x00cd
                           0000CE   614 _P56	=	0x00ce
                           0000CF   615 _P57	=	0x00cf
                           0000E8   616 _P60	=	0x00e8
                           0000E9   617 _P61	=	0x00e9
                           0000EA   618 _P62	=	0x00ea
                           0000EB   619 _P63	=	0x00eb
                           0000EC   620 _P64	=	0x00ec
                           0000ED   621 _P65	=	0x00ed
                           0000EE   622 _P66	=	0x00ee
                           0000EF   623 _P67	=	0x00ef
                           0000F8   624 _P70	=	0x00f8
                           0000F9   625 _P71	=	0x00f9
                           0000FA   626 _P72	=	0x00fa
                           0000FB   627 _P73	=	0x00fb
                           0000FC   628 _P74	=	0x00fc
                           0000FD   629 _P75	=	0x00fd
                           0000FE   630 _P76	=	0x00fe
                           0000FF   631 _P77	=	0x00ff
                           0000AF   632 _EA	=	0x00af
                           0000AE   633 _ELVD	=	0x00ae
                           0000AD   634 _EADC	=	0x00ad
                           0000AC   635 _ES	=	0x00ac
                           0000AB   636 _ET1	=	0x00ab
                           0000AA   637 _EX1	=	0x00aa
                           0000A9   638 _ET0	=	0x00a9
                           0000A8   639 _EX0	=	0x00a8
                           0000BF   640 _PPCA	=	0x00bf
                           0000BE   641 _PLVD	=	0x00be
                           0000BD   642 _PADC	=	0x00bd
                           0000BC   643 _PS	=	0x00bc
                           0000BB   644 _PT1	=	0x00bb
                           0000BA   645 _PX1	=	0x00ba
                           0000B9   646 _PT0	=	0x00b9
                           0000B8   647 _PX0	=	0x00b8
                           00008F   648 _TF1	=	0x008f
                           00008E   649 _TR1	=	0x008e
                           00008D   650 _TF0	=	0x008d
                           00008C   651 _TR0	=	0x008c
                           00008B   652 _IE1	=	0x008b
                           00008A   653 _IT1	=	0x008a
                           000089   654 _IE0	=	0x0089
                           000088   655 _IT0	=	0x0088
                           00009F   656 _SM0	=	0x009f
                           00009E   657 _SM1	=	0x009e
                           00009D   658 _SM2	=	0x009d
                           00009C   659 _REN	=	0x009c
                           00009B   660 _TB8	=	0x009b
                           00009A   661 _RB8	=	0x009a
                           000099   662 _TI	=	0x0099
                           000098   663 _RI	=	0x0098
                           0000DF   664 _CF	=	0x00df
                           0000DE   665 _CR	=	0x00de
                           0000DA   666 _CCF2	=	0x00da
                           0000D9   667 _CCF1	=	0x00d9
                           0000D8   668 _CCF0	=	0x00d8
                                    669 ;--------------------------------------------------------
                                    670 ; overlayable register banks
                                    671 ;--------------------------------------------------------
                                    672 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        673 	.ds 8
                                    674 	.area REG_BANK_1	(REL,OVR,DATA)
      000000                        675 	.ds 8
                                    676 	.area REG_BANK_2	(REL,OVR,DATA)
      000000                        677 	.ds 8
                                    678 ;--------------------------------------------------------
                                    679 ; overlayable bit register bank
                                    680 ;--------------------------------------------------------
                                    681 	.area BIT_BANK	(REL,OVR,DATA)
      000000                        682 bits:
      000000                        683 	.ds 1
                           008000   684 	b0 = bits[0]
                           008100   685 	b1 = bits[1]
                           008200   686 	b2 = bits[2]
                           008300   687 	b3 = bits[3]
                           008400   688 	b4 = bits[4]
                           008500   689 	b5 = bits[5]
                           008600   690 	b6 = bits[6]
                           008700   691 	b7 = bits[7]
                                    692 ;--------------------------------------------------------
                                    693 ; internal ram data
                                    694 ;--------------------------------------------------------
                                    695 	.area DSEG    (DATA)
      000000                        696 _second::
      000000                        697 	.ds 1
      000001                        698 _minute::
      000001                        699 	.ds 1
      000002                        700 _hour::
      000002                        701 	.ds 1
      000003                        702 _hour12::
      000003                        703 	.ds 1
      000004                        704 _gio::
      000004                        705 	.ds 4
      000008                        706 _phut::
      000008                        707 	.ds 4
      00000C                        708 _step_index::
      00000C                        709 	.ds 1
      00000D                        710 _motor_index::
      00000D                        711 	.ds 1
      00000E                        712 _motor_index2::
      00000E                        713 	.ds 1
      00000F                        714 _kiem_tra_den_now_65536_19:
      00000F                        715 	.ds 1
      000010                        716 _gsm_sendandcheck_PARM_2:
      000010                        717 	.ds 1
      000011                        718 _gsm_sendandcheck_PARM_3:
      000011                        719 	.ds 1
      000012                        720 _gsm_sendandcheck_PARM_4:
      000012                        721 	.ds 3
      000015                        722 _gsm_sendandcheck_cmd_65536_79:
      000015                        723 	.ds 3
      000018                        724 _gsm_sendandcheck_sloc0_1_0:
      000018                        725 	.ds 3
      00001B                        726 _gsm_sendandcheck_sloc1_1_0:
      00001B                        727 	.ds 3
      00001E                        728 _xu_ly_tin_nhan_phutdelta_65537_185:
      00001E                        729 	.ds 1
      00001F                        730 _xu_ly_tin_nhan_kim_index_65537_185:
      00001F                        731 	.ds 1
      000020                        732 _xu_ly_tin_nhan_sloc0_1_0:
      000020                        733 	.ds 1
      000021                        734 _xu_ly_tin_nhan_sloc1_1_0:
      000021                        735 	.ds 1
      000022                        736 _xu_ly_tin_nhan_sloc2_1_0:
      000022                        737 	.ds 1
      000023                        738 _xu_ly_tin_nhan_sloc3_1_0:
      000023                        739 	.ds 1
      000024                        740 _xu_ly_tin_nhan_sloc4_1_0:
      000024                        741 	.ds 1
      000025                        742 _xu_ly_tin_nhan_sloc5_1_0:
      000025                        743 	.ds 1
      000026                        744 _xu_ly_tin_nhan_sloc6_1_0:
      000026                        745 	.ds 2
      000028                        746 _xu_ly_tin_nhan_sloc7_1_0:
      000028                        747 	.ds 2
      00002A                        748 _main_giotemp_65536_253:
      00002A                        749 	.ds 1
      00002B                        750 _main_debug_dem_131073_263:
      00002B                        751 	.ds 1
      00002C                        752 _main_mp3temp_131073_263:
      00002C                        753 	.ds 1
      00002D                        754 _main_retry_131073_284:
      00002D                        755 	.ds 1
      00002E                        756 _main_retry_131073_287:
      00002E                        757 	.ds 1
      00002F                        758 _main_sloc0_1_0:
      00002F                        759 	.ds 2
      000031                        760 _main_sloc1_1_0:
      000031                        761 	.ds 1
      000032                        762 _main_sloc2_1_0:
      000032                        763 	.ds 2
                                    764 ;--------------------------------------------------------
                                    765 ; overlayable items in internal ram
                                    766 ;--------------------------------------------------------
                                    767 	.area	OSEG    (OVR,DATA)
                                    768 ;--------------------------------------------------------
                                    769 ; Stack segment in internal ram
                                    770 ;--------------------------------------------------------
                                    771 	.area	SSEG
      000000                        772 __start__stack:
      000000                        773 	.ds	1
                                    774 
                                    775 ;--------------------------------------------------------
                                    776 ; indirectly addressable internal ram data
                                    777 ;--------------------------------------------------------
                                    778 	.area ISEG    (DATA)
      000000                        779 _dien_ap_nguon::
      000000                        780 	.ds 1
      000001                        781 _mp3_status::
      000001                        782 	.ds 1
      000002                        783 _mp3_date::
      000002                        784 	.ds 1
      000003                        785 _mp3_hour::
      000003                        786 	.ds 1
      000004                        787 _mp3_minute::
      000004                        788 	.ds 1
      000005                        789 _mp3_doi_start::
      000005                        790 	.ds 1
                                    791 ;--------------------------------------------------------
                                    792 ; absolute internal ram data
                                    793 ;--------------------------------------------------------
                                    794 	.area IABS    (ABS,DATA)
                                    795 	.area IABS    (ABS,DATA)
                                    796 ;--------------------------------------------------------
                                    797 ; bit data
                                    798 ;--------------------------------------------------------
                                    799 	.area BSEG    (BIT)
      000000                        800 _dien_ap_thap::
      000000                        801 	.ds 1
      000001                        802 _da_gui_bao_cao::
      000001                        803 	.ds 1
      000002                        804 _da_gui_bao_cao_thang::
      000002                        805 	.ds 1
      000003                        806 _gsm_reset::
      000003                        807 	.ds 1
      000004                        808 _co_cuoc_goi_toi::
      000004                        809 	.ds 1
      000005                        810 _goi_dien_thoai::
      000005                        811 	.ds 1
      000006                        812 _phone_chinh_so_sanh_that_bai::
      000006                        813 	.ds 1
      000007                        814 _phone_phu_so_sanh_that_bai::
      000007                        815 	.ds 1
      000008                        816 _bat_phone_phu::
      000008                        817 	.ds 1
      000009                        818 _phone_header::
      000009                        819 	.ds 1
      00000A                        820 _co_tin_nhan_moi::
      00000A                        821 	.ds 1
      00000B                        822 _pin_chinh_xac::
      00000B                        823 	.ds 1
      00000C                        824 _sms_dang_xu_ly::
      00000C                        825 	.ds 1
      00000D                        826 _have_cusd::
      00000D                        827 	.ds 1
      00000E                        828 _lenh_khong_hop_le::
      00000E                        829 	.ds 1
      00000F                        830 _have_quote::
      00000F                        831 	.ds 1
      000010                        832 _motorDir::
      000010                        833 	.ds 1
      000011                        834 _motorDir1::
      000011                        835 	.ds 1
      000012                        836 _motorDir2::
      000012                        837 	.ds 1
      000013                        838 _trang_thai_cam::
      000013                        839 	.ds 1
      000014                        840 _trang_thai_cam2::
      000014                        841 	.ds 1
      000015                        842 _cam_vao::
      000015                        843 	.ds 1
      000016                        844 _cam_vao2::
      000016                        845 	.ds 1
      000017                        846 _cam_vao_han::
      000017                        847 	.ds 1
      000018                        848 _cam_vao_han2::
      000018                        849 	.ds 1
      000019                        850 _cam_ra::
      000019                        851 	.ds 1
      00001A                        852 _cam_ra2::
      00001A                        853 	.ds 1
      00001B                        854 _GPS_time::
      00001B                        855 	.ds 1
      00001C                        856 _giay_out::
      00001C                        857 	.ds 1
      00001D                        858 _phut_out::
      00001D                        859 	.ds 1
      00001E                        860 _flip_pulse::
      00001E                        861 	.ds 1
      00001F                        862 _phim_mode_xuong::
      00001F                        863 	.ds 1
      000020                        864 _phim_mode_nhan::
      000020                        865 	.ds 1
      000021                        866 _phim_mode_cu::
      000021                        867 	.ds 1
      000022                        868 _phim_mode_giu::
      000022                        869 	.ds 1
      000023                        870 _phim_back_xuong::
      000023                        871 	.ds 1
      000024                        872 _phim_back_nhan::
      000024                        873 	.ds 1
      000025                        874 _phim_back_cu::
      000025                        875 	.ds 1
      000026                        876 _phim_back_giu::
      000026                        877 	.ds 1
      000027                        878 _phim_cong_xuong::
      000027                        879 	.ds 1
      000028                        880 _phim_cong_nhan::
      000028                        881 	.ds 1
      000029                        882 _phim_cong_cu::
      000029                        883 	.ds 1
      00002A                        884 _phim_cong_giu::
      00002A                        885 	.ds 1
      00002B                        886 _chop::
      00002B                        887 	.ds 1
      00002C                        888 _gui_lenh_thanh_cong::
      00002C                        889 	.ds 1
      00002D                        890 _have_not::
      00002D                        891 	.ds 1
      00002E                        892 _nosim::
      00002E                        893 	.ds 1
      00002F                        894 _error::
      00002F                        895 	.ds 1
      000030                        896 _skip_gsm_cmd::
      000030                        897 	.ds 1
      000031                        898 _test_gps::
      000031                        899 	.ds 1
      000032                        900 _may_dc::
      000032                        901 	.ds 1
      000033                        902 _atmel_phat::
      000033                        903 	.ds 1
      000034                        904 _motor_dung::
      000034                        905 	.ds 1
      000035                        906 _motor_debug::
      000035                        907 	.ds 1
      000036                        908 _mat_xung_giay::
      000036                        909 	.ds 1
      000037                        910 _loi_cam_motor1::
      000037                        911 	.ds 1
      000038                        912 _loi_cam_motor2::
      000038                        913 	.ds 1
      000039                        914 _loi_cam_motor3::
      000039                        915 	.ds 1
      00003A                        916 _loi_cam_motor4::
      00003A                        917 	.ds 1
      00003B                        918 _loi_eeprom_tat_mo_den::
      00003B                        919 	.ds 1
      00003C                        920 _bao_cao_dien_ap_thap::
      00003C                        921 	.ds 1
      00003D                        922 _lcd_update_chop::
      00003D                        923 	.ds 1
      00003E                        924 _PCA_Handler_sloc0_1_0:
      00003E                        925 	.ds 1
      00003F                        926 _cam_phim_sloc0_1_0:
      00003F                        927 	.ds 1
      000040                        928 _send_sms_PARM_1:
      000040                        929 	.ds 1
      000041                        930 _send_thong_so_rut_gon_PARM_1:
      000041                        931 	.ds 1
      000042                        932 _send_gio_thuc_PARM_1:
      000042                        933 	.ds 1
      000043                        934 _send_thong_so_PARM_1:
      000043                        935 	.ds 1
      000044                        936 _baocaosms_PARM_1:
      000044                        937 	.ds 1
      000045                        938 _baocaoden_PARM_1:
      000045                        939 	.ds 1
      000046                        940 _gsm_thietlapngaygiothuc_GPS_time_temp_65536_124:
      000046                        941 	.ds 1
      000047                        942 _gsm_thietlapngaygiothuc_sloc0_1_0:
      000047                        943 	.ds 1
      000048                        944 _gsm_laygio_gps_GPS_time_temp_65536_141:
      000048                        945 	.ds 1
      000049                        946 _gsm_serial_interrupt_sloc0_1_0:
      000049                        947 	.ds 1
      00004A                        948 _xu_ly_tin_nhan_sloc8_1_0:
      00004A                        949 	.ds 1
      00004B                        950 _main_debug_131073_263:
      00004B                        951 	.ds 1
      00004C                        952 _main_sloc3_1_0:
      00004C                        953 	.ds 1
                                    954 ;--------------------------------------------------------
                                    955 ; paged external ram data
                                    956 ;--------------------------------------------------------
                                    957 	.area PSEG    (PAG,XDATA)
                                    958 ;--------------------------------------------------------
                                    959 ; external ram data
                                    960 ;--------------------------------------------------------
                                    961 	.area XSEG    (XDATA)
      000000                        962 _phone_chinh::
      000000                        963 	.ds 11
      00000B                        964 _phone::
      00000B                        965 	.ds 11
      000016                        966 _lenh_sms::
      000016                        967 	.ds 161
      0000B7                        968 _gsm_delay_reset::
      0000B7                        969 	.ds 1
      0000B8                        970 _so_lan_goi_dien::
      0000B8                        971 	.ds 1
      0000B9                        972 _delay_cuoc_goi_ke_tiep::
      0000B9                        973 	.ds 1
      0000BA                        974 _sms_index::
      0000BA                        975 	.ds 1
      0000BB                        976 _message_index::
      0000BB                        977 	.ds 1
      0000BC                        978 _eeprom_buf::
      0000BC                        979 	.ds 32
      0000DC                        980 _date::
      0000DC                        981 	.ds 1
      0000DD                        982 _day::
      0000DD                        983 	.ds 1
      0000DE                        984 _month::
      0000DE                        985 	.ds 1
      0000DF                        986 _year::
      0000DF                        987 	.ds 1
      0000E0                        988 _canhkim::
      0000E0                        989 	.ds 1
      0000E1                        990 _may_canh_kim::
      0000E1                        991 	.ds 1
      0000E2                        992 _delay_ve_kim::
      0000E2                        993 	.ds 1
      0000E3                        994 _PCA_Timer0::
      0000E3                        995 	.ds 2
      0000E5                        996 _ngay_reset_con_lai::
      0000E5                        997 	.ds 1
      0000E6                        998 _xung_giay_check::
      0000E6                        999 	.ds 1
      0000E7                       1000 _thoi_gian_doi_doc_cam::
      0000E7                       1001 	.ds 4
      0000EB                       1002 _thoi_gian_doi_cam_chuan::
      0000EB                       1003 	.ds 1
      0000EC                       1004 _toc_do_motor_step::
      0000EC                       1005 	.ds 1
      0000ED                       1006 _lcd_index::
      0000ED                       1007 	.ds 1
      0000EE                       1008 _lcd_process_index::
      0000EE                       1009 	.ds 1
      0000EF                       1010 _lcd_data_index::
      0000EF                       1011 	.ds 1
      0000F0                       1012 _phim_mode_doi::
      0000F0                       1013 	.ds 1
      0000F1                       1014 _phim_back_doi::
      0000F1                       1015 	.ds 1
      0000F2                       1016 _phim_cong_doi::
      0000F2                       1017 	.ds 1
      0000F3                       1018 _mode::
      0000F3                       1019 	.ds 1
      0000F4                       1020 _sub_mode::
      0000F4                       1021 	.ds 1
      0000F5                       1022 _mode_wait::
      0000F5                       1023 	.ds 1
      0000F6                       1024 _song_name::
      0000F6                       1025 	.ds 2
      0000F8                       1026 _nha_mang::
      0000F8                       1027 	.ds 1
      0000F9                       1028 _signal::
      0000F9                       1029 	.ds 1
      0000FA                       1030 _connect::
      0000FA                       1031 	.ds 1
      0000FB                       1032 _connect_time_out::
      0000FB                       1033 	.ds 1
      0000FC                       1034 _total_try_time_out::
      0000FC                       1035 	.ds 1
      0000FD                       1036 _gsm_serial_cmd::
      0000FD                       1037 	.ds 1
      0000FE                       1038 _have_time::
      0000FE                       1039 	.ds 1
      0000FF                       1040 _gsm_receive_pointer::
      0000FF                       1041 	.ds 1
      000100                       1042 _date_pointer::
      000100                       1043 	.ds 1
      000101                       1044 _gsm_receive_buf::
      000101                       1045 	.ds 15
      000110                       1046 _date_str::
      000110                       1047 	.ds 30
      00012E                       1048 _so_motor::
      00012E                       1049 	.ds 1
      00012F                       1050 _max_second::
      00012F                       1051 	.ds 1
      000130                       1052 _sim_test_sec::
      000130                       1053 	.ds 1
      000131                       1054 _sms_on::
      000131                       1055 	.ds 1
      000132                       1056 _phut_sac_xa_acqui_con_lai::
      000132                       1057 	.ds 1
      000133                       1058 _xu_ly_tin_nhan_i_65537_185:
      000133                       1059 	.ds 1
      000134                       1060 _main_ngaytemp_65536_253:
      000134                       1061 	.ds 1
      000135                       1062 _main_thangtemp_65536_253:
      000135                       1063 	.ds 1
      000136                       1064 _main_namtemp_65536_253:
      000136                       1065 	.ds 1
      000137                       1066 _main_thutemp_65536_253:
      000137                       1067 	.ds 1
      000138                       1068 _main_i_65537_254:
      000138                       1069 	.ds 1
                                   1070 ;--------------------------------------------------------
                                   1071 ; absolute external ram data
                                   1072 ;--------------------------------------------------------
                                   1073 	.area XABS    (ABS,XDATA)
                                   1074 ;--------------------------------------------------------
                                   1075 ; external initialized ram data
                                   1076 ;--------------------------------------------------------
                                   1077 	.area XISEG   (XDATA)
      000000                       1078 _cnt::
      000000                       1079 	.ds 1
      000001                       1080 _counter_xung_giay::
      000001                       1081 	.ds 1
                                   1082 	.area HOME    (CODE)
                                   1083 	.area GSINIT0 (CODE)
                                   1084 	.area GSINIT1 (CODE)
                                   1085 	.area GSINIT2 (CODE)
                                   1086 	.area GSINIT3 (CODE)
                                   1087 	.area GSINIT4 (CODE)
                                   1088 	.area GSINIT5 (CODE)
                                   1089 	.area GSINIT  (CODE)
                                   1090 	.area GSFINAL (CODE)
                                   1091 	.area CSEG    (CODE)
                                   1092 ;--------------------------------------------------------
                                   1093 ; interrupt vector
                                   1094 ;--------------------------------------------------------
                                   1095 	.area HOME    (CODE)
      000000                       1096 __interrupt_vect:
      000000 02r00r00         [24] 1097 	ljmp	__sdcc_gsinit_startup
      000003 02r08r3F         [24] 1098 	ljmp	_clock_servide
      000006                       1099 	.ds	5
      00000B 02r0BrFE         [24] 1100 	ljmp	_cam_phim
      00000E                       1101 	.ds	5
      000013 32               [24] 1102 	reti
      000014                       1103 	.ds	7
      00001B 32               [24] 1104 	reti
      00001C                       1105 	.ds	7
      000023 02r21rC1         [24] 1106 	ljmp	_gsm_serial_interrupt
      000026                       1107 	.ds	5
      00002B 02r79r95         [24] 1108 	ljmp	_adc_isr
      00002E                       1109 	.ds	5
      000033 32               [24] 1110 	reti
      000034                       1111 	.ds	7
      00003B 02r08r8F         [24] 1112 	ljmp	_PCA_Handler
      00003E                       1113 	.ds	5
      000043 02r79r85         [24] 1114 	ljmp	_mp3_serial_interupt
                                   1115 ;--------------------------------------------------------
                                   1116 ; global & static initialisations
                                   1117 ;--------------------------------------------------------
                                   1118 	.area HOME    (CODE)
                                   1119 	.area GSINIT  (CODE)
                                   1120 	.area GSFINAL (CODE)
                                   1121 	.area GSINIT  (CODE)
                                   1122 	.globl __sdcc_gsinit_startup
                                   1123 	.globl __sdcc_program_startup
                                   1124 	.globl __start__stack
                                   1125 	.globl __mcs51_genXINIT
                                   1126 	.globl __mcs51_genXRAMCLEAR
                                   1127 	.globl __mcs51_genRAMCLEAR
                                   1128 ;	include/motor_cam_phim.c:146: __bit lcd_update_chop = 0;
                                   1129 ;	assignBit
      000000 C2*3D            [12] 1130 	clr	_lcd_update_chop
                                   1131 	.area GSFINAL (CODE)
      000000 02r00r46         [24] 1132 	ljmp	__sdcc_program_startup
                                   1133 ;--------------------------------------------------------
                                   1134 ; Home
                                   1135 ;--------------------------------------------------------
                                   1136 	.area HOME    (CODE)
                                   1137 	.area HOME    (CODE)
      000046                       1138 __sdcc_program_startup:
      000046 02r4Er7D         [24] 1139 	ljmp	_main
                                   1140 ;	return from main will return to caller
                                   1141 ;--------------------------------------------------------
                                   1142 ; code
                                   1143 ;--------------------------------------------------------
                                   1144 	.area CSEG    (CODE)
                                   1145 ;------------------------------------------------------------
                                   1146 ;Allocation info for local variables in function 'kiem_tra_den'
                                   1147 ;------------------------------------------------------------
                                   1148 ;i                         Allocated to registers r6 
                                   1149 ;now                       Allocated with name '_kiem_tra_den_now_65536_19'
                                   1150 ;------------------------------------------------------------
                                   1151 ;	include/chuong_trinh.c:3: void kiem_tra_den(){
                                   1152 ;	-----------------------------------------
                                   1153 ;	 function kiem_tra_den
                                   1154 ;	-----------------------------------------
      000000                       1155 _kiem_tra_den:
                           000007  1156 	ar7 = 0x07
                           000006  1157 	ar6 = 0x06
                           000005  1158 	ar5 = 0x05
                           000004  1159 	ar4 = 0x04
                           000003  1160 	ar3 = 0x03
                           000002  1161 	ar2 = 0x02
                           000001  1162 	ar1 = 0x01
                           000000  1163 	ar0 = 0x00
                                   1164 ;	include/chuong_trinh.c:4: u8 __data i,now = hour*6+minute/10;
      000000 E5*02            [12] 1165 	mov	a,_hour
      000002 75 F0 06         [24] 1166 	mov	b,#0x06
      000005 A4               [48] 1167 	mul	ab
      000006 FF               [12] 1168 	mov	r7,a
      000007 AD*01            [24] 1169 	mov	r5,_minute
      000009 7E 00            [12] 1170 	mov	r6,#0x00
      00000B 75*00 0A         [24] 1171 	mov	__divsint_PARM_2,#0x0a
                                   1172 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      00000E 8E*01            [24] 1173 	mov	(__divsint_PARM_2 + 1),r6
      000010 8D 82            [24] 1174 	mov	dpl,r5
      000012 8E 83            [24] 1175 	mov	dph,r6
      000014 C0 07            [24] 1176 	push	ar7
      000016 12r00r00         [24] 1177 	lcall	__divsint
      000019 AD 82            [24] 1178 	mov	r5,dpl
      00001B D0 07            [24] 1179 	pop	ar7
      00001D ED               [12] 1180 	mov	a,r5
      00001E 2F               [12] 1181 	add	a,r7
      00001F F5*0F            [12] 1182 	mov	_kiem_tra_den_now_65536_19,a
                                   1183 ;	include/chuong_trinh.c:5: for(i=1;i<eep_tatmoden[0];i++)
      000021 7E 01            [12] 1184 	mov	r6,#0x01
      000023 7D 01            [12] 1185 	mov	r5,#0x01
      000025                       1186 00108$:
      000025 90 F0 07         [24] 1187 	mov	dptr,#_eep_tatmoden
      000028 E4               [12] 1188 	clr	a
      000029 93               [24] 1189 	movc	a,@a+dptr
      00002A FC               [12] 1190 	mov	r4,a
      00002B C3               [12] 1191 	clr	c
      00002C ED               [12] 1192 	mov	a,r5
      00002D 9C               [12] 1193 	subb	a,r4
      00002E 40 03            [24] 1194 	jc	00132$
      000030 02r00rCA         [24] 1195 	ljmp	00103$
      000033                       1196 00132$:
                                   1197 ;	include/chuong_trinh.c:6: if((1+(eep_tatmoden[i]<eep_tatmoden[i+1]) + (now<eep_tatmoden[i]) + (now<eep_tatmoden[i+1]))%2){
      000033 ED               [12] 1198 	mov	a,r5
      000034 90 F0 07         [24] 1199 	mov	dptr,#_eep_tatmoden
      000037 93               [24] 1200 	movc	a,@a+dptr
      000038 FC               [12] 1201 	mov	r4,a
      000039 8D 03            [24] 1202 	mov	ar3,r5
      00003B 0B               [12] 1203 	inc	r3
      00003C EB               [12] 1204 	mov	a,r3
      00003D 33               [12] 1205 	rlc	a
      00003E 95 E0            [12] 1206 	subb	a,acc
      000040 FA               [12] 1207 	mov	r2,a
      000041 EB               [12] 1208 	mov	a,r3
      000042 24 07            [12] 1209 	add	a,#_eep_tatmoden
      000044 F5 82            [12] 1210 	mov	dpl,a
      000046 EA               [12] 1211 	mov	a,r2
      000047 34 F0            [12] 1212 	addc	a,#(_eep_tatmoden >> 8)
      000049 F5 83            [12] 1213 	mov	dph,a
      00004B E4               [12] 1214 	clr	a
      00004C 93               [24] 1215 	movc	a,@a+dptr
      00004D F9               [12] 1216 	mov	r1,a
      00004E C3               [12] 1217 	clr	c
      00004F EC               [12] 1218 	mov	a,r4
      000050 99               [12] 1219 	subb	a,r1
      000051 E4               [12] 1220 	clr	a
      000052 33               [12] 1221 	rlc	a
      000053 F9               [12] 1222 	mov	r1,a
      000054 7C 00            [12] 1223 	mov	r4,#0x00
      000056 09               [12] 1224 	inc	r1
      000057 B9 00 01         [24] 1225 	cjne	r1,#0x00,00133$
      00005A 0C               [12] 1226 	inc	r4
      00005B                       1227 00133$:
      00005B ED               [12] 1228 	mov	a,r5
      00005C 90 F0 07         [24] 1229 	mov	dptr,#_eep_tatmoden
      00005F 93               [24] 1230 	movc	a,@a+dptr
      000060 F8               [12] 1231 	mov	r0,a
      000061 C3               [12] 1232 	clr	c
      000062 E5*0F            [12] 1233 	mov	a,_kiem_tra_den_now_65536_19
      000064 98               [12] 1234 	subb	a,r0
      000065 E4               [12] 1235 	clr	a
      000066 33               [12] 1236 	rlc	a
      000067 7F 00            [12] 1237 	mov	r7,#0x00
      000069 29               [12] 1238 	add	a,r1
      00006A F9               [12] 1239 	mov	r1,a
      00006B EF               [12] 1240 	mov	a,r7
      00006C 3C               [12] 1241 	addc	a,r4
      00006D FC               [12] 1242 	mov	r4,a
      00006E EB               [12] 1243 	mov	a,r3
      00006F 24 07            [12] 1244 	add	a,#_eep_tatmoden
      000071 F5 82            [12] 1245 	mov	dpl,a
      000073 EA               [12] 1246 	mov	a,r2
      000074 34 F0            [12] 1247 	addc	a,#(_eep_tatmoden >> 8)
      000076 F5 83            [12] 1248 	mov	dph,a
      000078 E4               [12] 1249 	clr	a
      000079 93               [24] 1250 	movc	a,@a+dptr
      00007A FF               [12] 1251 	mov	r7,a
      00007B C3               [12] 1252 	clr	c
      00007C E5*0F            [12] 1253 	mov	a,_kiem_tra_den_now_65536_19
      00007E 9F               [12] 1254 	subb	a,r7
      00007F E4               [12] 1255 	clr	a
      000080 33               [12] 1256 	rlc	a
      000081 7B 00            [12] 1257 	mov	r3,#0x00
      000083 29               [12] 1258 	add	a,r1
      000084 F5 82            [12] 1259 	mov	dpl,a
      000086 EB               [12] 1260 	mov	a,r3
      000087 3C               [12] 1261 	addc	a,r4
      000088 F5 83            [12] 1262 	mov	dph,a
      00008A 75*00 02         [24] 1263 	mov	__modsint_PARM_2,#0x02
                                   1264 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      00008D 8B*01            [24] 1265 	mov	(__modsint_PARM_2 + 1),r3
      00008F C0 06            [24] 1266 	push	ar6
      000091 C0 05            [24] 1267 	push	ar5
      000093 12r00r00         [24] 1268 	lcall	__modsint
      000096 E5 82            [12] 1269 	mov	a,dpl
      000098 85 83 F0         [24] 1270 	mov	b,dph
      00009B D0 05            [24] 1271 	pop	ar5
      00009D D0 06            [24] 1272 	pop	ar6
      00009F 45 F0            [12] 1273 	orl	a,b
      0000A1 60 21            [24] 1274 	jz	00109$
                                   1275 ;	include/chuong_trinh.c:7: DenRelay = (i+1)%2; break;
      0000A3 8E 04            [24] 1276 	mov	ar4,r6
      0000A5 7F 00            [12] 1277 	mov	r7,#0x00
      0000A7 8C 82            [24] 1278 	mov	dpl,r4
      0000A9 8F 83            [24] 1279 	mov	dph,r7
      0000AB A3               [24] 1280 	inc	dptr
      0000AC 75*00 02         [24] 1281 	mov	__modsint_PARM_2,#0x02
                                   1282 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0000AF 8F*01            [24] 1283 	mov	(__modsint_PARM_2 + 1),r7
      0000B1 C0 06            [24] 1284 	push	ar6
      0000B3 12r00r00         [24] 1285 	lcall	__modsint
      0000B6 AC 82            [24] 1286 	mov	r4,dpl
      0000B8 AF 83            [24] 1287 	mov	r7,dph
      0000BA D0 06            [24] 1288 	pop	ar6
                                   1289 ;	assignBit
      0000BC EC               [12] 1290 	mov	a,r4
      0000BD 4F               [12] 1291 	orl	a,r7
      0000BE 24 FF            [12] 1292 	add	a,#0xff
      0000C0 92 A1            [24] 1293 	mov	_P21,c
      0000C2 80 06            [24] 1294 	sjmp	00103$
      0000C4                       1295 00109$:
                                   1296 ;	include/chuong_trinh.c:5: for(i=1;i<eep_tatmoden[0];i++)
      0000C4 0D               [12] 1297 	inc	r5
      0000C5 8D 06            [24] 1298 	mov	ar6,r5
      0000C7 02r00r25         [24] 1299 	ljmp	00108$
      0000CA                       1300 00103$:
                                   1301 ;	include/chuong_trinh.c:10: if( i==eep_tatmoden[0] && (1+(eep_tatmoden[i]<eep_tatmoden[1]) + (now<eep_tatmoden[i]) + (now<eep_tatmoden[1]))%2)
      0000CA 90 F0 07         [24] 1302 	mov	dptr,#_eep_tatmoden
      0000CD E4               [12] 1303 	clr	a
      0000CE 93               [24] 1304 	movc	a,@a+dptr
      0000CF FF               [12] 1305 	mov	r7,a
      0000D0 EE               [12] 1306 	mov	a,r6
      0000D1 B5 07 02         [24] 1307 	cjne	a,ar7,00135$
      0000D4 80 01            [24] 1308 	sjmp	00136$
      0000D6                       1309 00135$:
      0000D6 22               [24] 1310 	ret
      0000D7                       1311 00136$:
      0000D7 EE               [12] 1312 	mov	a,r6
      0000D8 90 F0 07         [24] 1313 	mov	dptr,#_eep_tatmoden
      0000DB 93               [24] 1314 	movc	a,@a+dptr
      0000DC FF               [12] 1315 	mov	r7,a
      0000DD 90 F0 08         [24] 1316 	mov	dptr,#(_eep_tatmoden + 0x0001)
      0000E0 E4               [12] 1317 	clr	a
      0000E1 93               [24] 1318 	movc	a,@a+dptr
      0000E2 FD               [12] 1319 	mov	r5,a
      0000E3 C3               [12] 1320 	clr	c
      0000E4 EF               [12] 1321 	mov	a,r7
      0000E5 9D               [12] 1322 	subb	a,r5
      0000E6 E4               [12] 1323 	clr	a
      0000E7 33               [12] 1324 	rlc	a
      0000E8 FF               [12] 1325 	mov	r7,a
      0000E9 7D 00            [12] 1326 	mov	r5,#0x00
      0000EB 0F               [12] 1327 	inc	r7
      0000EC BF 00 01         [24] 1328 	cjne	r7,#0x00,00137$
      0000EF 0D               [12] 1329 	inc	r5
      0000F0                       1330 00137$:
      0000F0 EE               [12] 1331 	mov	a,r6
      0000F1 90 F0 07         [24] 1332 	mov	dptr,#_eep_tatmoden
      0000F4 93               [24] 1333 	movc	a,@a+dptr
      0000F5 FC               [12] 1334 	mov	r4,a
      0000F6 C3               [12] 1335 	clr	c
      0000F7 E5*0F            [12] 1336 	mov	a,_kiem_tra_den_now_65536_19
      0000F9 9C               [12] 1337 	subb	a,r4
      0000FA E4               [12] 1338 	clr	a
      0000FB 33               [12] 1339 	rlc	a
      0000FC 7B 00            [12] 1340 	mov	r3,#0x00
      0000FE 2F               [12] 1341 	add	a,r7
      0000FF FF               [12] 1342 	mov	r7,a
      000100 EB               [12] 1343 	mov	a,r3
      000101 3D               [12] 1344 	addc	a,r5
      000102 FD               [12] 1345 	mov	r5,a
      000103 90 F0 08         [24] 1346 	mov	dptr,#(_eep_tatmoden + 0x0001)
      000106 E4               [12] 1347 	clr	a
      000107 93               [24] 1348 	movc	a,@a+dptr
      000108 FC               [12] 1349 	mov	r4,a
      000109 C3               [12] 1350 	clr	c
      00010A E5*0F            [12] 1351 	mov	a,_kiem_tra_den_now_65536_19
      00010C 9C               [12] 1352 	subb	a,r4
      00010D E4               [12] 1353 	clr	a
      00010E 33               [12] 1354 	rlc	a
      00010F 7B 00            [12] 1355 	mov	r3,#0x00
      000111 2F               [12] 1356 	add	a,r7
      000112 F5 82            [12] 1357 	mov	dpl,a
      000114 EB               [12] 1358 	mov	a,r3
      000115 3D               [12] 1359 	addc	a,r5
      000116 F5 83            [12] 1360 	mov	dph,a
      000118 75*00 02         [24] 1361 	mov	__modsint_PARM_2,#0x02
                                   1362 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      00011B 8B*01            [24] 1363 	mov	(__modsint_PARM_2 + 1),r3
      00011D C0 06            [24] 1364 	push	ar6
      00011F 12r00r00         [24] 1365 	lcall	__modsint
      000122 E5 82            [12] 1366 	mov	a,dpl
      000124 85 83 F0         [24] 1367 	mov	b,dph
      000127 D0 06            [24] 1368 	pop	ar6
      000129 45 F0            [12] 1369 	orl	a,b
      00012B 60 19            [24] 1370 	jz	00110$
                                   1371 ;	include/chuong_trinh.c:11: DenRelay = (i+1)%2;   
      00012D 7F 00            [12] 1372 	mov	r7,#0x00
      00012F 8E 82            [24] 1373 	mov	dpl,r6
      000131 8F 83            [24] 1374 	mov	dph,r7
      000133 A3               [24] 1375 	inc	dptr
      000134 75*00 02         [24] 1376 	mov	__modsint_PARM_2,#0x02
                                   1377 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      000137 8F*01            [24] 1378 	mov	(__modsint_PARM_2 + 1),r7
      000139 12r00r00         [24] 1379 	lcall	__modsint
      00013C AE 82            [24] 1380 	mov	r6,dpl
      00013E AF 83            [24] 1381 	mov	r7,dph
                                   1382 ;	assignBit
      000140 EE               [12] 1383 	mov	a,r6
      000141 4F               [12] 1384 	orl	a,r7
      000142 24 FF            [12] 1385 	add	a,#0xff
      000144 92 A1            [24] 1386 	mov	_P21,c
      000146                       1387 00110$:
                                   1388 ;	include/chuong_trinh.c:12: }
      000146 22               [24] 1389 	ret
                                   1390 ;------------------------------------------------------------
                                   1391 ;Allocation info for local variables in function 'kiem_tra_nhac'
                                   1392 ;------------------------------------------------------------
                                   1393 ;	include/chuong_trinh.c:14: void kiem_tra_nhac(){
                                   1394 ;	-----------------------------------------
                                   1395 ;	 function kiem_tra_nhac
                                   1396 ;	-----------------------------------------
      000147                       1397 _kiem_tra_nhac:
                                   1398 ;	include/chuong_trinh.c:15: switch(mp3_status){
      000147 78r01            [12] 1399 	mov	r0,#_mp3_status
      000149 B6 00 02         [24] 1400 	cjne	@r0,#0x00,00154$
      00014C 80 10            [24] 1401 	sjmp	00101$
      00014E                       1402 00154$:
      00014E 78r01            [12] 1403 	mov	r0,#_mp3_status
      000150 B6 01 03         [24] 1404 	cjne	@r0,#0x01,00155$
      000153 02r01rDE         [24] 1405 	ljmp	00116$
      000156                       1406 00155$:
      000156 78r01            [12] 1407 	mov	r0,#_mp3_status
      000158 B6 02 02         [24] 1408 	cjne	@r0,#0x02,00156$
      00015B 80 67            [24] 1409 	sjmp	00110$
      00015D                       1410 00156$:
      00015D 22               [24] 1411 	ret
                                   1412 ;	include/chuong_trinh.c:16: case mp3_IDLE:
      00015E                       1413 00101$:
                                   1414 ;	include/chuong_trinh.c:17: if( mp3_hour != hour || mp3_minute!=minute ){
      00015E 78r03            [12] 1415 	mov	r0,#_mp3_hour
      000160 E6               [12] 1416 	mov	a,@r0
      000161 B5*02 07         [24] 1417 	cjne	a,_hour,00107$
      000164 78r04            [12] 1418 	mov	r0,#_mp3_minute
      000166 E6               [12] 1419 	mov	a,@r0
      000167 B5*01 01         [24] 1420 	cjne	a,_minute,00159$
      00016A 22               [24] 1421 	ret
      00016B                       1422 00159$:
      00016B                       1423 00107$:
                                   1424 ;	include/chuong_trinh.c:18: mp3_hour = hour;
      00016B AF*02            [24] 1425 	mov	r7,_hour
      00016D 78r03            [12] 1426 	mov	r0,#_mp3_hour
      00016F A6 07            [24] 1427 	mov	@r0,ar7
                                   1428 ;	include/chuong_trinh.c:19: mp3_minute = minute;
      000171 AE*01            [24] 1429 	mov	r6,_minute
      000173 78r04            [12] 1430 	mov	r0,#_mp3_minute
      000175 A6 06            [24] 1431 	mov	@r0,ar6
                                   1432 ;	include/chuong_trinh.c:21: if(eep_mp3==2)mp3_play(10, mp3_hour,mp3_minute);
      000177 90 F0 10         [24] 1433 	mov	dptr,#_eep_mp3
      00017A E4               [12] 1434 	clr	a
      00017B 93               [24] 1435 	movc	a,@a+dptr
      00017C FD               [12] 1436 	mov	r5,a
      00017D BD 02 0C         [24] 1437 	cjne	r5,#0x02,00105$
      000180 8F*00            [24] 1438 	mov	_mp3_play_PARM_2,r7
      000182 8E*00            [24] 1439 	mov	_mp3_play_PARM_3,r6
      000184 75 82 0A         [24] 1440 	mov	dpl,#0x0a
      000187 12r00r00         [24] 1441 	lcall	_mp3_play
      00018A 80 2F            [24] 1442 	sjmp	00106$
      00018C                       1443 00105$:
                                   1444 ;	include/chuong_trinh.c:22: else if(!(mp3_minute%5))mp3_play(date, mp3_hour,mp3_minute);
      00018C 8E 04            [24] 1445 	mov	ar4,r6
      00018E 7D 00            [12] 1446 	mov	r5,#0x00
      000190 75*00 05         [24] 1447 	mov	__modsint_PARM_2,#0x05
                                   1448 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      000193 8D*01            [24] 1449 	mov	(__modsint_PARM_2 + 1),r5
      000195 8C 82            [24] 1450 	mov	dpl,r4
      000197 8D 83            [24] 1451 	mov	dph,r5
      000199 C0 07            [24] 1452 	push	ar7
      00019B C0 06            [24] 1453 	push	ar6
      00019D 12r00r00         [24] 1454 	lcall	__modsint
      0001A0 E5 82            [12] 1455 	mov	a,dpl
      0001A2 85 83 F0         [24] 1456 	mov	b,dph
      0001A5 D0 06            [24] 1457 	pop	ar6
      0001A7 D0 07            [24] 1458 	pop	ar7
      0001A9 45 F0            [12] 1459 	orl	a,b
      0001AB 70 0E            [24] 1460 	jnz	00106$
      0001AD 90r00rDC         [24] 1461 	mov	dptr,#_date
      0001B0 E0               [24] 1462 	movx	a,@dptr
      0001B1 FD               [12] 1463 	mov	r5,a
      0001B2 8F*00            [24] 1464 	mov	_mp3_play_PARM_2,r7
      0001B4 8E*00            [24] 1465 	mov	_mp3_play_PARM_3,r6
      0001B6 8D 82            [24] 1466 	mov	dpl,r5
      0001B8 12r00r00         [24] 1467 	lcall	_mp3_play
      0001BB                       1468 00106$:
                                   1469 ;	include/chuong_trinh.c:23: mp3_doi_start = 90;
      0001BB 78r05            [12] 1470 	mov	r0,#_mp3_doi_start
      0001BD 76 5A            [12] 1471 	mov	@r0,#0x5a
                                   1472 ;	include/chuong_trinh.c:24: mp3_status = mp3_START;
      0001BF 78r01            [12] 1473 	mov	r0,#_mp3_status
      0001C1 76 02            [12] 1474 	mov	@r0,#0x02
                                   1475 ;	include/chuong_trinh.c:26: break;
                                   1476 ;	include/chuong_trinh.c:27: case mp3_START:
      0001C3 22               [24] 1477 	ret
      0001C4                       1478 00110$:
                                   1479 ;	include/chuong_trinh.c:28: if(mp3_playing) mp3_status = AmplyRelay = mp3_END;
      0001C4 30 92 0B         [24] 1480 	jnb	_P12,00114$
                                   1481 ;	assignBit
      0001C7 D2 C2            [12] 1482 	setb	_P42
      0001C9 78r01            [12] 1483 	mov	r0,#_mp3_status
      0001CB A2 C2            [12] 1484 	mov	c,_P42
      0001CD E4               [12] 1485 	clr	a
      0001CE 33               [12] 1486 	rlc	a
      0001CF F6               [12] 1487 	mov	@r0,a
      0001D0 80 0C            [24] 1488 	sjmp	00116$
      0001D2                       1489 00114$:
                                   1490 ;	include/chuong_trinh.c:29: else if(mp3_doi_start--) break;
      0001D2 78r05            [12] 1491 	mov	r0,#_mp3_doi_start
      0001D4 86 07            [24] 1492 	mov	ar7,@r0
      0001D6 78r05            [12] 1493 	mov	r0,#_mp3_doi_start
      0001D8 EF               [12] 1494 	mov	a,r7
      0001D9 14               [12] 1495 	dec	a
      0001DA F6               [12] 1496 	mov	@r0,a
      0001DB EF               [12] 1497 	mov	a,r7
      0001DC 70 09            [24] 1498 	jnz	00120$
                                   1499 ;	include/chuong_trinh.c:30: case mp3_END:
      0001DE                       1500 00116$:
                                   1501 ;	include/chuong_trinh.c:31: if(!mp3_playing) AmplyRelay = mp3_status = mp3_IDLE;
      0001DE 20 92 06         [24] 1502 	jb	_P12,00120$
      0001E1 78r01            [12] 1503 	mov	r0,#_mp3_status
      0001E3 76 00            [12] 1504 	mov	@r0,#0x00
                                   1505 ;	assignBit
      0001E5 C2 C2            [12] 1506 	clr	_P42
                                   1507 ;	include/chuong_trinh.c:32: }
      0001E7                       1508 00120$:
                                   1509 ;	include/chuong_trinh.c:34: }
      0001E7 22               [24] 1510 	ret
                                   1511 ;------------------------------------------------------------
                                   1512 ;Allocation info for local variables in function 'motor_run_check'
                                   1513 ;------------------------------------------------------------
                                   1514 ;	include/motor_cam_phim.c:3: u8 motor_run_check() __reentrant {
                                   1515 ;	-----------------------------------------
                                   1516 ;	 function motor_run_check
                                   1517 ;	-----------------------------------------
      0001E8                       1518 _motor_run_check:
                                   1519 ;	include/motor_cam_phim.c:7: if (dien_ap_thap || motor_dung || mode ){ motorDir1 = 0; return 5;}
      0001E8 20*00 09         [24] 1520 	jb	_dien_ap_thap,00101$
      0001EB 20*34 06         [24] 1521 	jb	_motor_dung,00101$
      0001EE 90r00rF3         [24] 1522 	mov	dptr,#_mode
      0001F1 E0               [24] 1523 	movx	a,@dptr
      0001F2 60 06            [24] 1524 	jz	00102$
      0001F4                       1525 00101$:
                                   1526 ;	assignBit
      0001F4 C2*11            [12] 1527 	clr	_motorDir1
      0001F6 75 82 05         [24] 1528 	mov	dpl,#0x05
      0001F9 22               [24] 1529 	ret
      0001FA                       1530 00102$:
                                   1531 ;	include/motor_cam_phim.c:8: if(may_canh_kim)return (canhkim && (may_canh_kim & 1))?may_canh_kim-1:5;
      0001FA 90r00rE1         [24] 1532 	mov	dptr,#_may_canh_kim
      0001FD E0               [24] 1533 	movx	a,@dptr
      0001FE FF               [12] 1534 	mov	r7,a
      0001FF 60 1C            [24] 1535 	jz	00106$
      000201 90r00rE0         [24] 1536 	mov	dptr,#_canhkim
      000204 E0               [24] 1537 	movx	a,@dptr
      000205 60 0F            [24] 1538 	jz	00132$
      000207 EF               [12] 1539 	mov	a,r7
      000208 54 01            [12] 1540 	anl	a,#0x01
      00020A FE               [12] 1541 	mov	r6,a
      00020B 60 09            [24] 1542 	jz	00132$
      00020D 1F               [12] 1543 	dec	r7
      00020E EF               [12] 1544 	mov	a,r7
      00020F FE               [12] 1545 	mov	r6,a
      000210 33               [12] 1546 	rlc	a
      000211 95 E0            [12] 1547 	subb	a,acc
      000213 FF               [12] 1548 	mov	r7,a
      000214 80 04            [24] 1549 	sjmp	00133$
      000216                       1550 00132$:
      000216 7E 05            [12] 1551 	mov	r6,#0x05
      000218 7F 00            [12] 1552 	mov	r7,#0x00
      00021A                       1553 00133$:
      00021A 8E 82            [24] 1554 	mov	dpl,r6
      00021C 22               [24] 1555 	ret
      00021D                       1556 00106$:
                                   1557 ;	include/motor_cam_phim.c:10: if(so_motor<3){
      00021D 90r01r2E         [24] 1558 	mov	dptr,#_so_motor
      000220 E0               [24] 1559 	movx	a,@dptr
      000221 FF               [12] 1560 	mov	r7,a
      000222 BF 03 00         [24] 1561 	cjne	r7,#0x03,00206$
      000225                       1562 00206$:
      000225 40 03            [24] 1563 	jc	00207$
      000227 02r02rB6         [24] 1564 	ljmp	00113$
      00022A                       1565 00207$:
                                   1566 ;	include/motor_cam_phim.c:11: if(thoi_gian_doi_doc_cam[0] && (phut[0]!=minute || gio[0]!=hour12)){
      00022A 90r00rE7         [24] 1567 	mov	dptr,#_thoi_gian_doi_doc_cam
      00022D E0               [24] 1568 	movx	a,@dptr
      00022E 70 03            [24] 1569 	jnz	00208$
      000230 02r02rB0         [24] 1570 	ljmp	00108$
      000233                       1571 00208$:
      000233 E5*08            [12] 1572 	mov	a,_phut
      000235 FF               [12] 1573 	mov	r7,a
      000236 B5*01 07         [24] 1574 	cjne	a,_minute,00107$
      000239 E5*03            [12] 1575 	mov	a,_hour12
      00023B B5*04 02         [24] 1576 	cjne	a,_gio,00211$
      00023E 80 70            [24] 1577 	sjmp	00108$
      000240                       1578 00211$:
      000240                       1579 00107$:
                                   1580 ;	include/motor_cam_phim.c:12: motorDir1 = (720 + gio[0]*60 + phut[0] - hour12*60 - minute) % 720 > 360;
      000240 85*04*00         [24] 1581 	mov	__mulint_PARM_2,_gio
      000243 75*01 00         [24] 1582 	mov	(__mulint_PARM_2 + 1),#0x00
      000246 90 00 3C         [24] 1583 	mov	dptr,#0x003c
      000249 C0 07            [24] 1584 	push	ar7
      00024B 12r00r00         [24] 1585 	lcall	__mulint
      00024E E5 82            [12] 1586 	mov	a,dpl
      000250 85 83 F0         [24] 1587 	mov	b,dph
      000253 D0 07            [24] 1588 	pop	ar7
      000255 24 D0            [12] 1589 	add	a,#0xd0
      000257 FD               [12] 1590 	mov	r5,a
      000258 74 02            [12] 1591 	mov	a,#0x02
      00025A 35 F0            [12] 1592 	addc	a,b
      00025C FE               [12] 1593 	mov	r6,a
      00025D 7C 00            [12] 1594 	mov	r4,#0x00
      00025F EF               [12] 1595 	mov	a,r7
      000260 2D               [12] 1596 	add	a,r5
      000261 FD               [12] 1597 	mov	r5,a
      000262 EC               [12] 1598 	mov	a,r4
      000263 3E               [12] 1599 	addc	a,r6
      000264 FE               [12] 1600 	mov	r6,a
      000265 85*03*00         [24] 1601 	mov	__mulint_PARM_2,_hour12
                                   1602 ;	1-genFromRTrack replaced	mov	(__mulint_PARM_2 + 1),#0x00
      000268 8C*01            [24] 1603 	mov	(__mulint_PARM_2 + 1),r4
      00026A 90 00 3C         [24] 1604 	mov	dptr,#0x003c
      00026D C0 06            [24] 1605 	push	ar6
      00026F C0 05            [24] 1606 	push	ar5
      000271 12r00r00         [24] 1607 	lcall	__mulint
      000274 AC 82            [24] 1608 	mov	r4,dpl
      000276 AF 83            [24] 1609 	mov	r7,dph
      000278 D0 05            [24] 1610 	pop	ar5
      00027A D0 06            [24] 1611 	pop	ar6
      00027C ED               [12] 1612 	mov	a,r5
      00027D C3               [12] 1613 	clr	c
      00027E 9C               [12] 1614 	subb	a,r4
      00027F FD               [12] 1615 	mov	r5,a
      000280 EE               [12] 1616 	mov	a,r6
      000281 9F               [12] 1617 	subb	a,r7
      000282 FE               [12] 1618 	mov	r6,a
      000283 AC*01            [24] 1619 	mov	r4,_minute
      000285 7F 00            [12] 1620 	mov	r7,#0x00
      000287 ED               [12] 1621 	mov	a,r5
      000288 C3               [12] 1622 	clr	c
      000289 9C               [12] 1623 	subb	a,r4
      00028A F5 82            [12] 1624 	mov	dpl,a
      00028C EE               [12] 1625 	mov	a,r6
      00028D 9F               [12] 1626 	subb	a,r7
      00028E F5 83            [12] 1627 	mov	dph,a
      000290 75*00 D0         [24] 1628 	mov	__modsint_PARM_2,#0xd0
      000293 75*01 02         [24] 1629 	mov	(__modsint_PARM_2 + 1),#0x02
      000296 12r00r00         [24] 1630 	lcall	__modsint
      000299 AE 82            [24] 1631 	mov	r6,dpl
      00029B AF 83            [24] 1632 	mov	r7,dph
      00029D C3               [12] 1633 	clr	c
      00029E 74 68            [12] 1634 	mov	a,#0x68
      0002A0 9E               [12] 1635 	subb	a,r6
      0002A1 74 81            [12] 1636 	mov	a,#(0x01 ^ 0x80)
      0002A3 8F F0            [24] 1637 	mov	b,r7
      0002A5 63 F0 80         [24] 1638 	xrl	b,#0x80
      0002A8 95 F0            [12] 1639 	subb	a,b
      0002AA 92*11            [24] 1640 	mov	_motorDir1,c
                                   1641 ;	include/motor_cam_phim.c:15: return 0;
      0002AC 75 82 00         [24] 1642 	mov	dpl,#0x00
      0002AF 22               [24] 1643 	ret
      0002B0                       1644 00108$:
                                   1645 ;	include/motor_cam_phim.c:17: }else {motorDir1 = 0; return 5;}
                                   1646 ;	assignBit
      0002B0 C2*11            [12] 1647 	clr	_motorDir1
      0002B2 75 82 05         [24] 1648 	mov	dpl,#0x05
      0002B5 22               [24] 1649 	ret
      0002B6                       1650 00113$:
                                   1651 ;	include/motor_cam_phim.c:20: if(motor_index>1){
      0002B6 E5*0D            [12] 1652 	mov	a,_motor_index
      0002B8 24 FE            [12] 1653 	add	a,#0xff - 0x01
      0002BA 40 03            [24] 1654 	jc	00212$
      0002BC 02r03r45         [24] 1655 	ljmp	00119$
      0002BF                       1656 00212$:
                                   1657 ;	include/motor_cam_phim.c:21: if(thoi_gian_doi_doc_cam[0] && (phut[0]!=minute || gio[0]!=hour12)){
      0002BF 90r00rE7         [24] 1658 	mov	dptr,#_thoi_gian_doi_doc_cam
      0002C2 E0               [24] 1659 	movx	a,@dptr
      0002C3 70 03            [24] 1660 	jnz	00213$
      0002C5 02r03r45         [24] 1661 	ljmp	00119$
      0002C8                       1662 00213$:
      0002C8 E5*08            [12] 1663 	mov	a,_phut
      0002CA FF               [12] 1664 	mov	r7,a
      0002CB B5*01 07         [24] 1665 	cjne	a,_minute,00114$
      0002CE E5*03            [12] 1666 	mov	a,_hour12
      0002D0 B5*04 02         [24] 1667 	cjne	a,_gio,00216$
      0002D3 80 70            [24] 1668 	sjmp	00119$
      0002D5                       1669 00216$:
      0002D5                       1670 00114$:
                                   1671 ;	include/motor_cam_phim.c:22: motorDir1 = (720 + gio[0]*60 + phut[0] - hour12*60 - minute) % 720 > 360;
      0002D5 85*04*00         [24] 1672 	mov	__mulint_PARM_2,_gio
      0002D8 75*01 00         [24] 1673 	mov	(__mulint_PARM_2 + 1),#0x00
      0002DB 90 00 3C         [24] 1674 	mov	dptr,#0x003c
      0002DE C0 07            [24] 1675 	push	ar7
      0002E0 12r00r00         [24] 1676 	lcall	__mulint
      0002E3 E5 82            [12] 1677 	mov	a,dpl
      0002E5 85 83 F0         [24] 1678 	mov	b,dph
      0002E8 D0 07            [24] 1679 	pop	ar7
      0002EA 24 D0            [12] 1680 	add	a,#0xd0
      0002EC FD               [12] 1681 	mov	r5,a
      0002ED 74 02            [12] 1682 	mov	a,#0x02
      0002EF 35 F0            [12] 1683 	addc	a,b
      0002F1 FE               [12] 1684 	mov	r6,a
      0002F2 7C 00            [12] 1685 	mov	r4,#0x00
      0002F4 EF               [12] 1686 	mov	a,r7
      0002F5 2D               [12] 1687 	add	a,r5
      0002F6 FD               [12] 1688 	mov	r5,a
      0002F7 EC               [12] 1689 	mov	a,r4
      0002F8 3E               [12] 1690 	addc	a,r6
      0002F9 FE               [12] 1691 	mov	r6,a
      0002FA 85*03*00         [24] 1692 	mov	__mulint_PARM_2,_hour12
                                   1693 ;	1-genFromRTrack replaced	mov	(__mulint_PARM_2 + 1),#0x00
      0002FD 8C*01            [24] 1694 	mov	(__mulint_PARM_2 + 1),r4
      0002FF 90 00 3C         [24] 1695 	mov	dptr,#0x003c
      000302 C0 06            [24] 1696 	push	ar6
      000304 C0 05            [24] 1697 	push	ar5
      000306 12r00r00         [24] 1698 	lcall	__mulint
      000309 AC 82            [24] 1699 	mov	r4,dpl
      00030B AF 83            [24] 1700 	mov	r7,dph
      00030D D0 05            [24] 1701 	pop	ar5
      00030F D0 06            [24] 1702 	pop	ar6
      000311 ED               [12] 1703 	mov	a,r5
      000312 C3               [12] 1704 	clr	c
      000313 9C               [12] 1705 	subb	a,r4
      000314 FD               [12] 1706 	mov	r5,a
      000315 EE               [12] 1707 	mov	a,r6
      000316 9F               [12] 1708 	subb	a,r7
      000317 FE               [12] 1709 	mov	r6,a
      000318 AC*01            [24] 1710 	mov	r4,_minute
      00031A 7F 00            [12] 1711 	mov	r7,#0x00
      00031C ED               [12] 1712 	mov	a,r5
      00031D C3               [12] 1713 	clr	c
      00031E 9C               [12] 1714 	subb	a,r4
      00031F F5 82            [12] 1715 	mov	dpl,a
      000321 EE               [12] 1716 	mov	a,r6
      000322 9F               [12] 1717 	subb	a,r7
      000323 F5 83            [12] 1718 	mov	dph,a
      000325 75*00 D0         [24] 1719 	mov	__modsint_PARM_2,#0xd0
      000328 75*01 02         [24] 1720 	mov	(__modsint_PARM_2 + 1),#0x02
      00032B 12r00r00         [24] 1721 	lcall	__modsint
      00032E AE 82            [24] 1722 	mov	r6,dpl
      000330 AF 83            [24] 1723 	mov	r7,dph
      000332 C3               [12] 1724 	clr	c
      000333 74 68            [12] 1725 	mov	a,#0x68
      000335 9E               [12] 1726 	subb	a,r6
      000336 74 81            [12] 1727 	mov	a,#(0x01 ^ 0x80)
      000338 8F F0            [24] 1728 	mov	b,r7
      00033A 63 F0 80         [24] 1729 	xrl	b,#0x80
      00033D 95 F0            [12] 1730 	subb	a,b
      00033F 92*11            [24] 1731 	mov	_motorDir1,c
                                   1732 ;	include/motor_cam_phim.c:23: return 0;
      000341 75 82 00         [24] 1733 	mov	dpl,#0x00
      000344 22               [24] 1734 	ret
      000345                       1735 00119$:
                                   1736 ;	include/motor_cam_phim.c:26: if(thoi_gian_doi_doc_cam[2] && (phut[2]!=minute || gio[2]!=hour12)){
      000345 90r00rE9         [24] 1737 	mov	dptr,#(_thoi_gian_doi_doc_cam + 0x0002)
      000348 E0               [24] 1738 	movx	a,@dptr
      000349 70 03            [24] 1739 	jnz	00217$
      00034B 02r03rCB         [24] 1740 	ljmp	00121$
      00034E                       1741 00217$:
      00034E E5*0A            [12] 1742 	mov	a,(_phut + 0x0002)
      000350 FF               [12] 1743 	mov	r7,a
      000351 B5*01 07         [24] 1744 	cjne	a,_minute,00120$
      000354 E5*03            [12] 1745 	mov	a,_hour12
      000356 B5*06 02         [24] 1746 	cjne	a,(_gio + 0x0002),00220$
      000359 80 70            [24] 1747 	sjmp	00121$
      00035B                       1748 00220$:
      00035B                       1749 00120$:
                                   1750 ;	include/motor_cam_phim.c:27: motorDir1 = (720 + gio[2]*60 + phut[2] - hour12*60 - minute) % 720 > 360;
      00035B 85*06*00         [24] 1751 	mov	__mulint_PARM_2,(_gio + 0x0002)
      00035E 75*01 00         [24] 1752 	mov	(__mulint_PARM_2 + 1),#0x00
      000361 90 00 3C         [24] 1753 	mov	dptr,#0x003c
      000364 C0 07            [24] 1754 	push	ar7
      000366 12r00r00         [24] 1755 	lcall	__mulint
      000369 E5 82            [12] 1756 	mov	a,dpl
      00036B 85 83 F0         [24] 1757 	mov	b,dph
      00036E D0 07            [24] 1758 	pop	ar7
      000370 24 D0            [12] 1759 	add	a,#0xd0
      000372 FD               [12] 1760 	mov	r5,a
      000373 74 02            [12] 1761 	mov	a,#0x02
      000375 35 F0            [12] 1762 	addc	a,b
      000377 FE               [12] 1763 	mov	r6,a
      000378 7C 00            [12] 1764 	mov	r4,#0x00
      00037A EF               [12] 1765 	mov	a,r7
      00037B 2D               [12] 1766 	add	a,r5
      00037C FD               [12] 1767 	mov	r5,a
      00037D EC               [12] 1768 	mov	a,r4
      00037E 3E               [12] 1769 	addc	a,r6
      00037F FE               [12] 1770 	mov	r6,a
      000380 85*03*00         [24] 1771 	mov	__mulint_PARM_2,_hour12
                                   1772 ;	1-genFromRTrack replaced	mov	(__mulint_PARM_2 + 1),#0x00
      000383 8C*01            [24] 1773 	mov	(__mulint_PARM_2 + 1),r4
      000385 90 00 3C         [24] 1774 	mov	dptr,#0x003c
      000388 C0 06            [24] 1775 	push	ar6
      00038A C0 05            [24] 1776 	push	ar5
      00038C 12r00r00         [24] 1777 	lcall	__mulint
      00038F AC 82            [24] 1778 	mov	r4,dpl
      000391 AF 83            [24] 1779 	mov	r7,dph
      000393 D0 05            [24] 1780 	pop	ar5
      000395 D0 06            [24] 1781 	pop	ar6
      000397 ED               [12] 1782 	mov	a,r5
      000398 C3               [12] 1783 	clr	c
      000399 9C               [12] 1784 	subb	a,r4
      00039A FD               [12] 1785 	mov	r5,a
      00039B EE               [12] 1786 	mov	a,r6
      00039C 9F               [12] 1787 	subb	a,r7
      00039D FE               [12] 1788 	mov	r6,a
      00039E AC*01            [24] 1789 	mov	r4,_minute
      0003A0 7F 00            [12] 1790 	mov	r7,#0x00
      0003A2 ED               [12] 1791 	mov	a,r5
      0003A3 C3               [12] 1792 	clr	c
      0003A4 9C               [12] 1793 	subb	a,r4
      0003A5 F5 82            [12] 1794 	mov	dpl,a
      0003A7 EE               [12] 1795 	mov	a,r6
      0003A8 9F               [12] 1796 	subb	a,r7
      0003A9 F5 83            [12] 1797 	mov	dph,a
      0003AB 75*00 D0         [24] 1798 	mov	__modsint_PARM_2,#0xd0
      0003AE 75*01 02         [24] 1799 	mov	(__modsint_PARM_2 + 1),#0x02
      0003B1 12r00r00         [24] 1800 	lcall	__modsint
      0003B4 AE 82            [24] 1801 	mov	r6,dpl
      0003B6 AF 83            [24] 1802 	mov	r7,dph
      0003B8 C3               [12] 1803 	clr	c
      0003B9 74 68            [12] 1804 	mov	a,#0x68
      0003BB 9E               [12] 1805 	subb	a,r6
      0003BC 74 81            [12] 1806 	mov	a,#(0x01 ^ 0x80)
      0003BE 8F F0            [24] 1807 	mov	b,r7
      0003C0 63 F0 80         [24] 1808 	xrl	b,#0x80
      0003C3 95 F0            [12] 1809 	subb	a,b
      0003C5 92*11            [24] 1810 	mov	_motorDir1,c
                                   1811 ;	include/motor_cam_phim.c:28: return 2;
      0003C7 75 82 02         [24] 1812 	mov	dpl,#0x02
      0003CA 22               [24] 1813 	ret
      0003CB                       1814 00121$:
                                   1815 ;	include/motor_cam_phim.c:30: if(motor_index<2){
      0003CB 74 FE            [12] 1816 	mov	a,#0x100 - 0x02
      0003CD 25*0D            [12] 1817 	add	a,_motor_index
      0003CF 50 03            [24] 1818 	jnc	00221$
      0003D1 02r04r5A         [24] 1819 	ljmp	00129$
      0003D4                       1820 00221$:
                                   1821 ;	include/motor_cam_phim.c:31: if(thoi_gian_doi_doc_cam[0] && (phut[0]!=minute || gio[0]!=hour12)){
      0003D4 90r00rE7         [24] 1822 	mov	dptr,#_thoi_gian_doi_doc_cam
      0003D7 E0               [24] 1823 	movx	a,@dptr
      0003D8 70 03            [24] 1824 	jnz	00222$
      0003DA 02r04r5A         [24] 1825 	ljmp	00129$
      0003DD                       1826 00222$:
      0003DD E5*08            [12] 1827 	mov	a,_phut
      0003DF FF               [12] 1828 	mov	r7,a
      0003E0 B5*01 07         [24] 1829 	cjne	a,_minute,00124$
      0003E3 E5*03            [12] 1830 	mov	a,_hour12
      0003E5 B5*04 02         [24] 1831 	cjne	a,_gio,00225$
      0003E8 80 70            [24] 1832 	sjmp	00129$
      0003EA                       1833 00225$:
      0003EA                       1834 00124$:
                                   1835 ;	include/motor_cam_phim.c:32: motorDir1 = (720 + gio[0]*60 + phut[0] - hour12*60 - minute) % 720 > 360;
      0003EA 85*04*00         [24] 1836 	mov	__mulint_PARM_2,_gio
      0003ED 75*01 00         [24] 1837 	mov	(__mulint_PARM_2 + 1),#0x00
      0003F0 90 00 3C         [24] 1838 	mov	dptr,#0x003c
      0003F3 C0 07            [24] 1839 	push	ar7
      0003F5 12r00r00         [24] 1840 	lcall	__mulint
      0003F8 E5 82            [12] 1841 	mov	a,dpl
      0003FA 85 83 F0         [24] 1842 	mov	b,dph
      0003FD D0 07            [24] 1843 	pop	ar7
      0003FF 24 D0            [12] 1844 	add	a,#0xd0
      000401 FD               [12] 1845 	mov	r5,a
      000402 74 02            [12] 1846 	mov	a,#0x02
      000404 35 F0            [12] 1847 	addc	a,b
      000406 FE               [12] 1848 	mov	r6,a
      000407 7C 00            [12] 1849 	mov	r4,#0x00
      000409 EF               [12] 1850 	mov	a,r7
      00040A 2D               [12] 1851 	add	a,r5
      00040B FD               [12] 1852 	mov	r5,a
      00040C EC               [12] 1853 	mov	a,r4
      00040D 3E               [12] 1854 	addc	a,r6
      00040E FE               [12] 1855 	mov	r6,a
      00040F 85*03*00         [24] 1856 	mov	__mulint_PARM_2,_hour12
                                   1857 ;	1-genFromRTrack replaced	mov	(__mulint_PARM_2 + 1),#0x00
      000412 8C*01            [24] 1858 	mov	(__mulint_PARM_2 + 1),r4
      000414 90 00 3C         [24] 1859 	mov	dptr,#0x003c
      000417 C0 06            [24] 1860 	push	ar6
      000419 C0 05            [24] 1861 	push	ar5
      00041B 12r00r00         [24] 1862 	lcall	__mulint
      00041E AC 82            [24] 1863 	mov	r4,dpl
      000420 AF 83            [24] 1864 	mov	r7,dph
      000422 D0 05            [24] 1865 	pop	ar5
      000424 D0 06            [24] 1866 	pop	ar6
      000426 ED               [12] 1867 	mov	a,r5
      000427 C3               [12] 1868 	clr	c
      000428 9C               [12] 1869 	subb	a,r4
      000429 FD               [12] 1870 	mov	r5,a
      00042A EE               [12] 1871 	mov	a,r6
      00042B 9F               [12] 1872 	subb	a,r7
      00042C FE               [12] 1873 	mov	r6,a
      00042D AC*01            [24] 1874 	mov	r4,_minute
      00042F 7F 00            [12] 1875 	mov	r7,#0x00
      000431 ED               [12] 1876 	mov	a,r5
      000432 C3               [12] 1877 	clr	c
      000433 9C               [12] 1878 	subb	a,r4
      000434 F5 82            [12] 1879 	mov	dpl,a
      000436 EE               [12] 1880 	mov	a,r6
      000437 9F               [12] 1881 	subb	a,r7
      000438 F5 83            [12] 1882 	mov	dph,a
      00043A 75*00 D0         [24] 1883 	mov	__modsint_PARM_2,#0xd0
      00043D 75*01 02         [24] 1884 	mov	(__modsint_PARM_2 + 1),#0x02
      000440 12r00r00         [24] 1885 	lcall	__modsint
      000443 AE 82            [24] 1886 	mov	r6,dpl
      000445 AF 83            [24] 1887 	mov	r7,dph
      000447 C3               [12] 1888 	clr	c
      000448 74 68            [12] 1889 	mov	a,#0x68
      00044A 9E               [12] 1890 	subb	a,r6
      00044B 74 81            [12] 1891 	mov	a,#(0x01 ^ 0x80)
      00044D 8F F0            [24] 1892 	mov	b,r7
      00044F 63 F0 80         [24] 1893 	xrl	b,#0x80
      000452 95 F0            [12] 1894 	subb	a,b
      000454 92*11            [24] 1895 	mov	_motorDir1,c
                                   1896 ;	include/motor_cam_phim.c:33: return 0;
      000456 75 82 00         [24] 1897 	mov	dpl,#0x00
      000459 22               [24] 1898 	ret
      00045A                       1899 00129$:
                                   1900 ;	include/motor_cam_phim.c:37: motorDir1 = 0;
                                   1901 ;	assignBit
      00045A C2*11            [12] 1902 	clr	_motorDir1
                                   1903 ;	include/motor_cam_phim.c:39: return 5;
      00045C 75 82 05         [24] 1904 	mov	dpl,#0x05
                                   1905 ;	include/motor_cam_phim.c:40: }
      00045F 22               [24] 1906 	ret
                                   1907 ;------------------------------------------------------------
                                   1908 ;Allocation info for local variables in function 'motor_run_check2'
                                   1909 ;------------------------------------------------------------
                                   1910 ;	include/motor_cam_phim.c:41: u8 motor_run_check2(){
                                   1911 ;	-----------------------------------------
                                   1912 ;	 function motor_run_check2
                                   1913 ;	-----------------------------------------
      000460                       1914 _motor_run_check2:
                                   1915 ;	include/motor_cam_phim.c:45: if (so_motor==1 || dien_ap_thap || motor_dung || mode ) {motorDir2 = 0;return 5;}
      000460 90r01r2E         [24] 1916 	mov	dptr,#_so_motor
      000463 E0               [24] 1917 	movx	a,@dptr
      000464 FF               [12] 1918 	mov	r7,a
      000465 BF 01 02         [24] 1919 	cjne	r7,#0x01,00205$
      000468 80 0C            [24] 1920 	sjmp	00101$
      00046A                       1921 00205$:
      00046A 20*00 09         [24] 1922 	jb	_dien_ap_thap,00101$
      00046D 20*34 06         [24] 1923 	jb	_motor_dung,00101$
      000470 90r00rF3         [24] 1924 	mov	dptr,#_mode
      000473 E0               [24] 1925 	movx	a,@dptr
      000474 60 06            [24] 1926 	jz	00102$
      000476                       1927 00101$:
                                   1928 ;	assignBit
      000476 C2*12            [12] 1929 	clr	_motorDir2
      000478 75 82 05         [24] 1930 	mov	dpl,#0x05
      00047B 22               [24] 1931 	ret
      00047C                       1932 00102$:
                                   1933 ;	include/motor_cam_phim.c:46: if(may_canh_kim)return (canhkim && !(may_canh_kim & 1))?may_canh_kim-1:5;
      00047C 90r00rE1         [24] 1934 	mov	dptr,#_may_canh_kim
      00047F E0               [24] 1935 	movx	a,@dptr
      000480 FE               [12] 1936 	mov	r6,a
      000481 60 1C            [24] 1937 	jz	00107$
      000483 90r00rE0         [24] 1938 	mov	dptr,#_canhkim
      000486 E0               [24] 1939 	movx	a,@dptr
      000487 60 0F            [24] 1940 	jz	00133$
      000489 EE               [12] 1941 	mov	a,r6
      00048A 54 01            [12] 1942 	anl	a,#0x01
      00048C FD               [12] 1943 	mov	r5,a
      00048D 70 09            [24] 1944 	jnz	00133$
      00048F 1E               [12] 1945 	dec	r6
      000490 EE               [12] 1946 	mov	a,r6
      000491 FD               [12] 1947 	mov	r5,a
      000492 33               [12] 1948 	rlc	a
      000493 95 E0            [12] 1949 	subb	a,acc
      000495 FE               [12] 1950 	mov	r6,a
      000496 80 04            [24] 1951 	sjmp	00134$
      000498                       1952 00133$:
      000498 7D 05            [12] 1953 	mov	r5,#0x05
      00049A 7E 00            [12] 1954 	mov	r6,#0x00
      00049C                       1955 00134$:
      00049C 8D 82            [24] 1956 	mov	dpl,r5
      00049E 22               [24] 1957 	ret
      00049F                       1958 00107$:
                                   1959 ;	include/motor_cam_phim.c:47: if(so_motor<4){
      00049F BF 04 00         [24] 1960 	cjne	r7,#0x04,00212$
      0004A2                       1961 00212$:
      0004A2 40 03            [24] 1962 	jc	00213$
      0004A4 02r05r33         [24] 1963 	ljmp	00114$
      0004A7                       1964 00213$:
                                   1965 ;	include/motor_cam_phim.c:48: if(thoi_gian_doi_doc_cam[1] && (phut[1]!=minute || gio[1]!=hour12)){
      0004A7 90r00rE8         [24] 1966 	mov	dptr,#(_thoi_gian_doi_doc_cam + 0x0001)
      0004AA E0               [24] 1967 	movx	a,@dptr
      0004AB 70 03            [24] 1968 	jnz	00214$
      0004AD 02r05r2D         [24] 1969 	ljmp	00109$
      0004B0                       1970 00214$:
      0004B0 E5*09            [12] 1971 	mov	a,(_phut + 0x0001)
      0004B2 FF               [12] 1972 	mov	r7,a
      0004B3 B5*01 07         [24] 1973 	cjne	a,_minute,00108$
      0004B6 E5*03            [12] 1974 	mov	a,_hour12
      0004B8 B5*05 02         [24] 1975 	cjne	a,(_gio + 0x0001),00217$
      0004BB 80 70            [24] 1976 	sjmp	00109$
      0004BD                       1977 00217$:
      0004BD                       1978 00108$:
                                   1979 ;	include/motor_cam_phim.c:49: motorDir2 = (720 + gio[1]*60 + phut[1] - hour12*60 - minute) % 720 > 360;
      0004BD 85*05*00         [24] 1980 	mov	__mulint_PARM_2,(_gio + 0x0001)
      0004C0 75*01 00         [24] 1981 	mov	(__mulint_PARM_2 + 1),#0x00
      0004C3 90 00 3C         [24] 1982 	mov	dptr,#0x003c
      0004C6 C0 07            [24] 1983 	push	ar7
      0004C8 12r00r00         [24] 1984 	lcall	__mulint
      0004CB E5 82            [12] 1985 	mov	a,dpl
      0004CD 85 83 F0         [24] 1986 	mov	b,dph
      0004D0 D0 07            [24] 1987 	pop	ar7
      0004D2 24 D0            [12] 1988 	add	a,#0xd0
      0004D4 FD               [12] 1989 	mov	r5,a
      0004D5 74 02            [12] 1990 	mov	a,#0x02
      0004D7 35 F0            [12] 1991 	addc	a,b
      0004D9 FE               [12] 1992 	mov	r6,a
      0004DA 7C 00            [12] 1993 	mov	r4,#0x00
      0004DC EF               [12] 1994 	mov	a,r7
      0004DD 2D               [12] 1995 	add	a,r5
      0004DE FD               [12] 1996 	mov	r5,a
      0004DF EC               [12] 1997 	mov	a,r4
      0004E0 3E               [12] 1998 	addc	a,r6
      0004E1 FE               [12] 1999 	mov	r6,a
      0004E2 85*03*00         [24] 2000 	mov	__mulint_PARM_2,_hour12
                                   2001 ;	1-genFromRTrack replaced	mov	(__mulint_PARM_2 + 1),#0x00
      0004E5 8C*01            [24] 2002 	mov	(__mulint_PARM_2 + 1),r4
      0004E7 90 00 3C         [24] 2003 	mov	dptr,#0x003c
      0004EA C0 06            [24] 2004 	push	ar6
      0004EC C0 05            [24] 2005 	push	ar5
      0004EE 12r00r00         [24] 2006 	lcall	__mulint
      0004F1 AC 82            [24] 2007 	mov	r4,dpl
      0004F3 AF 83            [24] 2008 	mov	r7,dph
      0004F5 D0 05            [24] 2009 	pop	ar5
      0004F7 D0 06            [24] 2010 	pop	ar6
      0004F9 ED               [12] 2011 	mov	a,r5
      0004FA C3               [12] 2012 	clr	c
      0004FB 9C               [12] 2013 	subb	a,r4
      0004FC FD               [12] 2014 	mov	r5,a
      0004FD EE               [12] 2015 	mov	a,r6
      0004FE 9F               [12] 2016 	subb	a,r7
      0004FF FE               [12] 2017 	mov	r6,a
      000500 AC*01            [24] 2018 	mov	r4,_minute
      000502 7F 00            [12] 2019 	mov	r7,#0x00
      000504 ED               [12] 2020 	mov	a,r5
      000505 C3               [12] 2021 	clr	c
      000506 9C               [12] 2022 	subb	a,r4
      000507 F5 82            [12] 2023 	mov	dpl,a
      000509 EE               [12] 2024 	mov	a,r6
      00050A 9F               [12] 2025 	subb	a,r7
      00050B F5 83            [12] 2026 	mov	dph,a
      00050D 75*00 D0         [24] 2027 	mov	__modsint_PARM_2,#0xd0
      000510 75*01 02         [24] 2028 	mov	(__modsint_PARM_2 + 1),#0x02
      000513 12r00r00         [24] 2029 	lcall	__modsint
      000516 AE 82            [24] 2030 	mov	r6,dpl
      000518 AF 83            [24] 2031 	mov	r7,dph
      00051A C3               [12] 2032 	clr	c
      00051B 74 68            [12] 2033 	mov	a,#0x68
      00051D 9E               [12] 2034 	subb	a,r6
      00051E 74 81            [12] 2035 	mov	a,#(0x01 ^ 0x80)
      000520 8F F0            [24] 2036 	mov	b,r7
      000522 63 F0 80         [24] 2037 	xrl	b,#0x80
      000525 95 F0            [12] 2038 	subb	a,b
      000527 92*12            [24] 2039 	mov	_motorDir2,c
                                   2040 ;	include/motor_cam_phim.c:50: return 1;
      000529 75 82 01         [24] 2041 	mov	dpl,#0x01
      00052C 22               [24] 2042 	ret
      00052D                       2043 00109$:
                                   2044 ;	include/motor_cam_phim.c:51: }else {motorDir2 = 0; return 5;}
                                   2045 ;	assignBit
      00052D C2*12            [12] 2046 	clr	_motorDir2
      00052F 75 82 05         [24] 2047 	mov	dpl,#0x05
      000532 22               [24] 2048 	ret
      000533                       2049 00114$:
                                   2050 ;	include/motor_cam_phim.c:53: if(motor_index2>1){
      000533 E5*0E            [12] 2051 	mov	a,_motor_index2
      000535 24 FE            [12] 2052 	add	a,#0xff - 0x01
      000537 40 03            [24] 2053 	jc	00218$
      000539 02r05rC2         [24] 2054 	ljmp	00120$
      00053C                       2055 00218$:
                                   2056 ;	include/motor_cam_phim.c:54: if(thoi_gian_doi_doc_cam[1] && (phut[1]!=minute || gio[1]!=hour12)){
      00053C 90r00rE8         [24] 2057 	mov	dptr,#(_thoi_gian_doi_doc_cam + 0x0001)
      00053F E0               [24] 2058 	movx	a,@dptr
      000540 70 03            [24] 2059 	jnz	00219$
      000542 02r05rC2         [24] 2060 	ljmp	00120$
      000545                       2061 00219$:
      000545 E5*09            [12] 2062 	mov	a,(_phut + 0x0001)
      000547 FF               [12] 2063 	mov	r7,a
      000548 B5*01 07         [24] 2064 	cjne	a,_minute,00115$
      00054B E5*03            [12] 2065 	mov	a,_hour12
      00054D B5*05 02         [24] 2066 	cjne	a,(_gio + 0x0001),00222$
      000550 80 70            [24] 2067 	sjmp	00120$
      000552                       2068 00222$:
      000552                       2069 00115$:
                                   2070 ;	include/motor_cam_phim.c:55: motorDir2 = (720 + gio[1]*60 + phut[1] - hour12*60 - minute) % 720 > 360;
      000552 85*05*00         [24] 2071 	mov	__mulint_PARM_2,(_gio + 0x0001)
      000555 75*01 00         [24] 2072 	mov	(__mulint_PARM_2 + 1),#0x00
      000558 90 00 3C         [24] 2073 	mov	dptr,#0x003c
      00055B C0 07            [24] 2074 	push	ar7
      00055D 12r00r00         [24] 2075 	lcall	__mulint
      000560 E5 82            [12] 2076 	mov	a,dpl
      000562 85 83 F0         [24] 2077 	mov	b,dph
      000565 D0 07            [24] 2078 	pop	ar7
      000567 24 D0            [12] 2079 	add	a,#0xd0
      000569 FD               [12] 2080 	mov	r5,a
      00056A 74 02            [12] 2081 	mov	a,#0x02
      00056C 35 F0            [12] 2082 	addc	a,b
      00056E FE               [12] 2083 	mov	r6,a
      00056F 7C 00            [12] 2084 	mov	r4,#0x00
      000571 EF               [12] 2085 	mov	a,r7
      000572 2D               [12] 2086 	add	a,r5
      000573 FD               [12] 2087 	mov	r5,a
      000574 EC               [12] 2088 	mov	a,r4
      000575 3E               [12] 2089 	addc	a,r6
      000576 FE               [12] 2090 	mov	r6,a
      000577 85*03*00         [24] 2091 	mov	__mulint_PARM_2,_hour12
                                   2092 ;	1-genFromRTrack replaced	mov	(__mulint_PARM_2 + 1),#0x00
      00057A 8C*01            [24] 2093 	mov	(__mulint_PARM_2 + 1),r4
      00057C 90 00 3C         [24] 2094 	mov	dptr,#0x003c
      00057F C0 06            [24] 2095 	push	ar6
      000581 C0 05            [24] 2096 	push	ar5
      000583 12r00r00         [24] 2097 	lcall	__mulint
      000586 AC 82            [24] 2098 	mov	r4,dpl
      000588 AF 83            [24] 2099 	mov	r7,dph
      00058A D0 05            [24] 2100 	pop	ar5
      00058C D0 06            [24] 2101 	pop	ar6
      00058E ED               [12] 2102 	mov	a,r5
      00058F C3               [12] 2103 	clr	c
      000590 9C               [12] 2104 	subb	a,r4
      000591 FD               [12] 2105 	mov	r5,a
      000592 EE               [12] 2106 	mov	a,r6
      000593 9F               [12] 2107 	subb	a,r7
      000594 FE               [12] 2108 	mov	r6,a
      000595 AC*01            [24] 2109 	mov	r4,_minute
      000597 7F 00            [12] 2110 	mov	r7,#0x00
      000599 ED               [12] 2111 	mov	a,r5
      00059A C3               [12] 2112 	clr	c
      00059B 9C               [12] 2113 	subb	a,r4
      00059C F5 82            [12] 2114 	mov	dpl,a
      00059E EE               [12] 2115 	mov	a,r6
      00059F 9F               [12] 2116 	subb	a,r7
      0005A0 F5 83            [12] 2117 	mov	dph,a
      0005A2 75*00 D0         [24] 2118 	mov	__modsint_PARM_2,#0xd0
      0005A5 75*01 02         [24] 2119 	mov	(__modsint_PARM_2 + 1),#0x02
      0005A8 12r00r00         [24] 2120 	lcall	__modsint
      0005AB AE 82            [24] 2121 	mov	r6,dpl
      0005AD AF 83            [24] 2122 	mov	r7,dph
      0005AF C3               [12] 2123 	clr	c
      0005B0 74 68            [12] 2124 	mov	a,#0x68
      0005B2 9E               [12] 2125 	subb	a,r6
      0005B3 74 81            [12] 2126 	mov	a,#(0x01 ^ 0x80)
      0005B5 8F F0            [24] 2127 	mov	b,r7
      0005B7 63 F0 80         [24] 2128 	xrl	b,#0x80
      0005BA 95 F0            [12] 2129 	subb	a,b
      0005BC 92*12            [24] 2130 	mov	_motorDir2,c
                                   2131 ;	include/motor_cam_phim.c:56: return 1;
      0005BE 75 82 01         [24] 2132 	mov	dpl,#0x01
      0005C1 22               [24] 2133 	ret
      0005C2                       2134 00120$:
                                   2135 ;	include/motor_cam_phim.c:59: if(thoi_gian_doi_doc_cam[3] && (phut[3]!=minute || gio[3]!=hour12)){
      0005C2 90r00rEA         [24] 2136 	mov	dptr,#(_thoi_gian_doi_doc_cam + 0x0003)
      0005C5 E0               [24] 2137 	movx	a,@dptr
      0005C6 70 03            [24] 2138 	jnz	00223$
      0005C8 02r06r48         [24] 2139 	ljmp	00122$
      0005CB                       2140 00223$:
      0005CB E5*0B            [12] 2141 	mov	a,(_phut + 0x0003)
      0005CD FF               [12] 2142 	mov	r7,a
      0005CE B5*01 07         [24] 2143 	cjne	a,_minute,00121$
      0005D1 E5*03            [12] 2144 	mov	a,_hour12
      0005D3 B5*07 02         [24] 2145 	cjne	a,(_gio + 0x0003),00226$
      0005D6 80 70            [24] 2146 	sjmp	00122$
      0005D8                       2147 00226$:
      0005D8                       2148 00121$:
                                   2149 ;	include/motor_cam_phim.c:60: motorDir2 = (720 + gio[3]*60 + phut[3] - hour12*60 - minute) % 720 > 360;
      0005D8 85*07*00         [24] 2150 	mov	__mulint_PARM_2,(_gio + 0x0003)
      0005DB 75*01 00         [24] 2151 	mov	(__mulint_PARM_2 + 1),#0x00
      0005DE 90 00 3C         [24] 2152 	mov	dptr,#0x003c
      0005E1 C0 07            [24] 2153 	push	ar7
      0005E3 12r00r00         [24] 2154 	lcall	__mulint
      0005E6 E5 82            [12] 2155 	mov	a,dpl
      0005E8 85 83 F0         [24] 2156 	mov	b,dph
      0005EB D0 07            [24] 2157 	pop	ar7
      0005ED 24 D0            [12] 2158 	add	a,#0xd0
      0005EF FD               [12] 2159 	mov	r5,a
      0005F0 74 02            [12] 2160 	mov	a,#0x02
      0005F2 35 F0            [12] 2161 	addc	a,b
      0005F4 FE               [12] 2162 	mov	r6,a
      0005F5 7C 00            [12] 2163 	mov	r4,#0x00
      0005F7 EF               [12] 2164 	mov	a,r7
      0005F8 2D               [12] 2165 	add	a,r5
      0005F9 FD               [12] 2166 	mov	r5,a
      0005FA EC               [12] 2167 	mov	a,r4
      0005FB 3E               [12] 2168 	addc	a,r6
      0005FC FE               [12] 2169 	mov	r6,a
      0005FD 85*03*00         [24] 2170 	mov	__mulint_PARM_2,_hour12
                                   2171 ;	1-genFromRTrack replaced	mov	(__mulint_PARM_2 + 1),#0x00
      000600 8C*01            [24] 2172 	mov	(__mulint_PARM_2 + 1),r4
      000602 90 00 3C         [24] 2173 	mov	dptr,#0x003c
      000605 C0 06            [24] 2174 	push	ar6
      000607 C0 05            [24] 2175 	push	ar5
      000609 12r00r00         [24] 2176 	lcall	__mulint
      00060C AC 82            [24] 2177 	mov	r4,dpl
      00060E AF 83            [24] 2178 	mov	r7,dph
      000610 D0 05            [24] 2179 	pop	ar5
      000612 D0 06            [24] 2180 	pop	ar6
      000614 ED               [12] 2181 	mov	a,r5
      000615 C3               [12] 2182 	clr	c
      000616 9C               [12] 2183 	subb	a,r4
      000617 FD               [12] 2184 	mov	r5,a
      000618 EE               [12] 2185 	mov	a,r6
      000619 9F               [12] 2186 	subb	a,r7
      00061A FE               [12] 2187 	mov	r6,a
      00061B AC*01            [24] 2188 	mov	r4,_minute
      00061D 7F 00            [12] 2189 	mov	r7,#0x00
      00061F ED               [12] 2190 	mov	a,r5
      000620 C3               [12] 2191 	clr	c
      000621 9C               [12] 2192 	subb	a,r4
      000622 F5 82            [12] 2193 	mov	dpl,a
      000624 EE               [12] 2194 	mov	a,r6
      000625 9F               [12] 2195 	subb	a,r7
      000626 F5 83            [12] 2196 	mov	dph,a
      000628 75*00 D0         [24] 2197 	mov	__modsint_PARM_2,#0xd0
      00062B 75*01 02         [24] 2198 	mov	(__modsint_PARM_2 + 1),#0x02
      00062E 12r00r00         [24] 2199 	lcall	__modsint
      000631 AE 82            [24] 2200 	mov	r6,dpl
      000633 AF 83            [24] 2201 	mov	r7,dph
      000635 C3               [12] 2202 	clr	c
      000636 74 68            [12] 2203 	mov	a,#0x68
      000638 9E               [12] 2204 	subb	a,r6
      000639 74 81            [12] 2205 	mov	a,#(0x01 ^ 0x80)
      00063B 8F F0            [24] 2206 	mov	b,r7
      00063D 63 F0 80         [24] 2207 	xrl	b,#0x80
      000640 95 F0            [12] 2208 	subb	a,b
      000642 92*12            [24] 2209 	mov	_motorDir2,c
                                   2210 ;	include/motor_cam_phim.c:61: return 3;
      000644 75 82 03         [24] 2211 	mov	dpl,#0x03
      000647 22               [24] 2212 	ret
      000648                       2213 00122$:
                                   2214 ;	include/motor_cam_phim.c:63: if(motor_index2<2){
      000648 74 FE            [12] 2215 	mov	a,#0x100 - 0x02
      00064A 25*0E            [12] 2216 	add	a,_motor_index2
      00064C 50 03            [24] 2217 	jnc	00227$
      00064E 02r06rD7         [24] 2218 	ljmp	00130$
      000651                       2219 00227$:
                                   2220 ;	include/motor_cam_phim.c:64: if(thoi_gian_doi_doc_cam[1] && (phut[1]!=minute || gio[1]!=hour12)){
      000651 90r00rE8         [24] 2221 	mov	dptr,#(_thoi_gian_doi_doc_cam + 0x0001)
      000654 E0               [24] 2222 	movx	a,@dptr
      000655 70 03            [24] 2223 	jnz	00228$
      000657 02r06rD7         [24] 2224 	ljmp	00130$
      00065A                       2225 00228$:
      00065A E5*09            [12] 2226 	mov	a,(_phut + 0x0001)
      00065C FF               [12] 2227 	mov	r7,a
      00065D B5*01 07         [24] 2228 	cjne	a,_minute,00125$
      000660 E5*03            [12] 2229 	mov	a,_hour12
      000662 B5*05 02         [24] 2230 	cjne	a,(_gio + 0x0001),00231$
      000665 80 70            [24] 2231 	sjmp	00130$
      000667                       2232 00231$:
      000667                       2233 00125$:
                                   2234 ;	include/motor_cam_phim.c:65: motorDir2 = (720 + gio[1]*60 + phut[1] - hour12*60 - minute) % 720 > 360;
      000667 85*05*00         [24] 2235 	mov	__mulint_PARM_2,(_gio + 0x0001)
      00066A 75*01 00         [24] 2236 	mov	(__mulint_PARM_2 + 1),#0x00
      00066D 90 00 3C         [24] 2237 	mov	dptr,#0x003c
      000670 C0 07            [24] 2238 	push	ar7
      000672 12r00r00         [24] 2239 	lcall	__mulint
      000675 E5 82            [12] 2240 	mov	a,dpl
      000677 85 83 F0         [24] 2241 	mov	b,dph
      00067A D0 07            [24] 2242 	pop	ar7
      00067C 24 D0            [12] 2243 	add	a,#0xd0
      00067E FD               [12] 2244 	mov	r5,a
      00067F 74 02            [12] 2245 	mov	a,#0x02
      000681 35 F0            [12] 2246 	addc	a,b
      000683 FE               [12] 2247 	mov	r6,a
      000684 7C 00            [12] 2248 	mov	r4,#0x00
      000686 EF               [12] 2249 	mov	a,r7
      000687 2D               [12] 2250 	add	a,r5
      000688 FD               [12] 2251 	mov	r5,a
      000689 EC               [12] 2252 	mov	a,r4
      00068A 3E               [12] 2253 	addc	a,r6
      00068B FE               [12] 2254 	mov	r6,a
      00068C 85*03*00         [24] 2255 	mov	__mulint_PARM_2,_hour12
                                   2256 ;	1-genFromRTrack replaced	mov	(__mulint_PARM_2 + 1),#0x00
      00068F 8C*01            [24] 2257 	mov	(__mulint_PARM_2 + 1),r4
      000691 90 00 3C         [24] 2258 	mov	dptr,#0x003c
      000694 C0 06            [24] 2259 	push	ar6
      000696 C0 05            [24] 2260 	push	ar5
      000698 12r00r00         [24] 2261 	lcall	__mulint
      00069B AC 82            [24] 2262 	mov	r4,dpl
      00069D AF 83            [24] 2263 	mov	r7,dph
      00069F D0 05            [24] 2264 	pop	ar5
      0006A1 D0 06            [24] 2265 	pop	ar6
      0006A3 ED               [12] 2266 	mov	a,r5
      0006A4 C3               [12] 2267 	clr	c
      0006A5 9C               [12] 2268 	subb	a,r4
      0006A6 FD               [12] 2269 	mov	r5,a
      0006A7 EE               [12] 2270 	mov	a,r6
      0006A8 9F               [12] 2271 	subb	a,r7
      0006A9 FE               [12] 2272 	mov	r6,a
      0006AA AC*01            [24] 2273 	mov	r4,_minute
      0006AC 7F 00            [12] 2274 	mov	r7,#0x00
      0006AE ED               [12] 2275 	mov	a,r5
      0006AF C3               [12] 2276 	clr	c
      0006B0 9C               [12] 2277 	subb	a,r4
      0006B1 F5 82            [12] 2278 	mov	dpl,a
      0006B3 EE               [12] 2279 	mov	a,r6
      0006B4 9F               [12] 2280 	subb	a,r7
      0006B5 F5 83            [12] 2281 	mov	dph,a
      0006B7 75*00 D0         [24] 2282 	mov	__modsint_PARM_2,#0xd0
      0006BA 75*01 02         [24] 2283 	mov	(__modsint_PARM_2 + 1),#0x02
      0006BD 12r00r00         [24] 2284 	lcall	__modsint
      0006C0 AE 82            [24] 2285 	mov	r6,dpl
      0006C2 AF 83            [24] 2286 	mov	r7,dph
      0006C4 C3               [12] 2287 	clr	c
      0006C5 74 68            [12] 2288 	mov	a,#0x68
      0006C7 9E               [12] 2289 	subb	a,r6
      0006C8 74 81            [12] 2290 	mov	a,#(0x01 ^ 0x80)
      0006CA 8F F0            [24] 2291 	mov	b,r7
      0006CC 63 F0 80         [24] 2292 	xrl	b,#0x80
      0006CF 95 F0            [12] 2293 	subb	a,b
      0006D1 92*12            [24] 2294 	mov	_motorDir2,c
                                   2295 ;	include/motor_cam_phim.c:66: return 1;
      0006D3 75 82 01         [24] 2296 	mov	dpl,#0x01
      0006D6 22               [24] 2297 	ret
      0006D7                       2298 00130$:
                                   2299 ;	include/motor_cam_phim.c:69: motorDir2 = 0;
                                   2300 ;	assignBit
      0006D7 C2*12            [12] 2301 	clr	_motorDir2
                                   2302 ;	include/motor_cam_phim.c:70: return 5;
      0006D9 75 82 05         [24] 2303 	mov	dpl,#0x05
                                   2304 ;	include/motor_cam_phim.c:71: }
      0006DC 22               [24] 2305 	ret
                                   2306 ;------------------------------------------------------------
                                   2307 ;Allocation info for local variables in function 'luu_gio_kim'
                                   2308 ;------------------------------------------------------------
                                   2309 ;	include/motor_cam_phim.c:73: void luu_gio_kim(){
                                   2310 ;	-----------------------------------------
                                   2311 ;	 function luu_gio_kim
                                   2312 ;	-----------------------------------------
      0006DD                       2313 _luu_gio_kim:
                                   2314 ;	include/motor_cam_phim.c:74: IAP_xoasector(SECTOR2);
      0006DD 90 02 00         [24] 2315 	mov	dptr,#0x0200
      0006E0 12r00r00         [24] 2316 	lcall	_IAP_xoasector
                                   2317 ;	include/motor_cam_phim.c:75: switch(so_motor){
      0006E3 90r01r2E         [24] 2318 	mov	dptr,#_so_motor
      0006E6 E0               [24] 2319 	movx	a,@dptr
      0006E7 FF               [12] 2320 	mov	r7,a
      0006E8 BF 01 02         [24] 2321 	cjne	r7,#0x01,00125$
      0006EB 80 43            [24] 2322 	sjmp	00104$
      0006ED                       2323 00125$:
      0006ED BF 02 02         [24] 2324 	cjne	r7,#0x02,00126$
      0006F0 80 2C            [24] 2325 	sjmp	00103$
      0006F2                       2326 00126$:
      0006F2 BF 03 02         [24] 2327 	cjne	r7,#0x03,00127$
      0006F5 80 15            [24] 2328 	sjmp	00102$
      0006F7                       2329 00127$:
      0006F7 BF 04 48         [24] 2330 	cjne	r7,#0x04,00107$
                                   2331 ;	include/motor_cam_phim.c:76: case 4:IAP_ghibyte(PHUT4_EEPROM,phut[3]);IAP_ghibyte(GIO4_EEPROM,gio[3]);
      0006FA 85*0B*00         [24] 2332 	mov	_IAP_ghibyte_PARM_2,(_phut + 0x0003)
      0006FD 90 02 06         [24] 2333 	mov	dptr,#0x0206
      000700 12r00r00         [24] 2334 	lcall	_IAP_ghibyte
      000703 85*07*00         [24] 2335 	mov	_IAP_ghibyte_PARM_2,(_gio + 0x0003)
      000706 90 02 07         [24] 2336 	mov	dptr,#0x0207
      000709 12r00r00         [24] 2337 	lcall	_IAP_ghibyte
                                   2338 ;	include/motor_cam_phim.c:77: case 3:IAP_ghibyte(PHUT3_EEPROM,phut[2]);IAP_ghibyte(GIO3_EEPROM,gio[2]);
      00070C                       2339 00102$:
      00070C 85*0A*00         [24] 2340 	mov	_IAP_ghibyte_PARM_2,(_phut + 0x0002)
      00070F 90 02 04         [24] 2341 	mov	dptr,#0x0204
      000712 12r00r00         [24] 2342 	lcall	_IAP_ghibyte
      000715 85*06*00         [24] 2343 	mov	_IAP_ghibyte_PARM_2,(_gio + 0x0002)
      000718 90 02 05         [24] 2344 	mov	dptr,#0x0205
      00071B 12r00r00         [24] 2345 	lcall	_IAP_ghibyte
                                   2346 ;	include/motor_cam_phim.c:78: case 2:IAP_ghibyte(PHUT2_EEPROM,phut[1]);IAP_ghibyte(GIO2_EEPROM,gio[1]);
      00071E                       2347 00103$:
      00071E 85*09*00         [24] 2348 	mov	_IAP_ghibyte_PARM_2,(_phut + 0x0001)
      000721 90 02 02         [24] 2349 	mov	dptr,#0x0202
      000724 12r00r00         [24] 2350 	lcall	_IAP_ghibyte
      000727 85*05*00         [24] 2351 	mov	_IAP_ghibyte_PARM_2,(_gio + 0x0001)
      00072A 90 02 03         [24] 2352 	mov	dptr,#0x0203
      00072D 12r00r00         [24] 2353 	lcall	_IAP_ghibyte
                                   2354 ;	include/motor_cam_phim.c:79: case 1:IAP_ghibyte(PHUT1_EEPROM,phut[0]);IAP_ghibyte(GIO1_EEPROM,gio[0]);
      000730                       2355 00104$:
      000730 85*08*00         [24] 2356 	mov	_IAP_ghibyte_PARM_2,_phut
      000733 90 02 00         [24] 2357 	mov	dptr,#0x0200
      000736 12r00r00         [24] 2358 	lcall	_IAP_ghibyte
      000739 85*04*00         [24] 2359 	mov	_IAP_ghibyte_PARM_2,_gio
      00073C 90 02 01         [24] 2360 	mov	dptr,#0x0201
                                   2361 ;	include/motor_cam_phim.c:81: }
                                   2362 ;	include/motor_cam_phim.c:83: }
      00073F 02r00r00         [24] 2363 	ljmp	_IAP_ghibyte
      000742                       2364 00107$:
      000742 22               [24] 2365 	ret
                                   2366 ;------------------------------------------------------------
                                   2367 ;Allocation info for local variables in function 'PCA_Timer_init'
                                   2368 ;------------------------------------------------------------
                                   2369 ;	include/motor_cam_phim.c:84: void PCA_Timer_init(){
                                   2370 ;	-----------------------------------------
                                   2371 ;	 function PCA_Timer_init
                                   2372 ;	-----------------------------------------
      000743                       2373 _PCA_Timer_init:
                                   2374 ;	include/motor_cam_phim.c:85: CCAP0L = CCAP0H = 0;
      000743 75 FA 00         [24] 2375 	mov	_CCAP0H,#0x00
      000746 75 EA 00         [24] 2376 	mov	_CCAP0L,#0x00
                                   2377 ;	include/motor_cam_phim.c:86: PCA_Timer0 = 25000;
      000749 90r00rE3         [24] 2378 	mov	dptr,#_PCA_Timer0
      00074C 74 A8            [12] 2379 	mov	a,#0xa8
      00074E F0               [24] 2380 	movx	@dptr,a
      00074F 74 61            [12] 2381 	mov	a,#0x61
      000751 A3               [24] 2382 	inc	dptr
      000752 F0               [24] 2383 	movx	@dptr,a
                                   2384 ;	include/motor_cam_phim.c:87: CCAPM0 = 0x49;
      000753 75 DA 49         [24] 2385 	mov	_CCAPM0,#0x49
                                   2386 ;	include/motor_cam_phim.c:88: CR=1;
                                   2387 ;	assignBit
      000756 D2 DE            [12] 2388 	setb	_CR
                                   2389 ;	include/motor_cam_phim.c:89: }
      000758 22               [24] 2390 	ret
                                   2391 ;------------------------------------------------------------
                                   2392 ;Allocation info for local variables in function 'motor_step_int_init'
                                   2393 ;------------------------------------------------------------
                                   2394 ;	include/motor_cam_phim.c:91: void motor_step_int_init(){
                                   2395 ;	-----------------------------------------
                                   2396 ;	 function motor_step_int_init
                                   2397 ;	-----------------------------------------
      000759                       2398 _motor_step_int_init:
                                   2399 ;	include/motor_cam_phim.c:92: AUXR &=0x7F;	//Timer clock is 12T mode
      000759 53 8E 7F         [24] 2400 	anl	_AUXR,#0x7f
                                   2401 ;	include/motor_cam_phim.c:93: TMOD = 0;		//Set timer work mode
      00075C 75 89 00         [24] 2402 	mov	_TMOD,#0x00
                                   2403 ;	include/motor_cam_phim.c:100: TH0 = (63536 - (toc_do_motor_step * 2000)) >> 8;
      00075F 90r00rEC         [24] 2404 	mov	dptr,#_toc_do_motor_step
      000762 E0               [24] 2405 	movx	a,@dptr
      000763 FF               [12] 2406 	mov	r7,a
      000764 8F*00            [24] 2407 	mov	__mulint_PARM_2,r7
      000766 75*01 00         [24] 2408 	mov	(__mulint_PARM_2 + 1),#0x00
      000769 90 07 D0         [24] 2409 	mov	dptr,#0x07d0
      00076C C0 07            [24] 2410 	push	ar7
      00076E 12r00r00         [24] 2411 	lcall	__mulint
      000771 AD 82            [24] 2412 	mov	r5,dpl
      000773 AE 83            [24] 2413 	mov	r6,dph
      000775 D0 07            [24] 2414 	pop	ar7
      000777 EE               [12] 2415 	mov	a,r6
      000778 33               [12] 2416 	rlc	a
      000779 95 E0            [12] 2417 	subb	a,acc
      00077B FC               [12] 2418 	mov	r4,a
      00077C FB               [12] 2419 	mov	r3,a
      00077D 74 30            [12] 2420 	mov	a,#0x30
      00077F C3               [12] 2421 	clr	c
      000780 9D               [12] 2422 	subb	a,r5
      000781 74 F8            [12] 2423 	mov	a,#0xf8
      000783 9E               [12] 2424 	subb	a,r6
      000784 FE               [12] 2425 	mov	r6,a
      000785 E4               [12] 2426 	clr	a
      000786 9C               [12] 2427 	subb	a,r4
      000787 E4               [12] 2428 	clr	a
      000788 9B               [12] 2429 	subb	a,r3
      000789 8E 8C            [24] 2430 	mov	_TH0,r6
                                   2431 ;	include/motor_cam_phim.c:101: TL0 = (63536 - (toc_do_motor_step * 2000));
      00078B EF               [12] 2432 	mov	a,r7
      00078C 75 F0 D0         [24] 2433 	mov	b,#0xd0
      00078F A4               [48] 2434 	mul	ab
      000790 D3               [12] 2435 	setb	c
      000791 94 30            [12] 2436 	subb	a,#0x30
      000793 F4               [12] 2437 	cpl	a
      000794 F5 8A            [12] 2438 	mov	_TL0,a
                                   2439 ;	include/motor_cam_phim.c:102: TF0 = 0;
                                   2440 ;	assignBit
      000796 C2 8D            [12] 2441 	clr	_TF0
                                   2442 ;	include/motor_cam_phim.c:103: TR0 = 1;
                                   2443 ;	assignBit
      000798 D2 8C            [12] 2444 	setb	_TR0
                                   2445 ;	include/motor_cam_phim.c:104: ET0 = 1;
                                   2446 ;	assignBit
      00079A D2 A9            [12] 2447 	setb	_ET0
                                   2448 ;	include/motor_cam_phim.c:105: }
      00079C 22               [24] 2449 	ret
                                   2450 ;------------------------------------------------------------
                                   2451 ;Allocation info for local variables in function 'xunggiay'
                                   2452 ;------------------------------------------------------------
                                   2453 ;	include/motor_cam_phim.c:107: void xunggiay(){
                                   2454 ;	-----------------------------------------
                                   2455 ;	 function xunggiay
                                   2456 ;	-----------------------------------------
      00079D                       2457 _xunggiay:
                                   2458 ;	include/motor_cam_phim.c:108: WATCHDOG;
      00079D 43 C1 10         [24] 2459 	orl	_WDT_CONTR,#0x10
                                   2460 ;	include/motor_cam_phim.c:109: flip_pulse^=1;
      0007A0 B2*1E            [12] 2461 	cpl	_flip_pulse
                                   2462 ;	include/motor_cam_phim.c:110: over_cur_led = flip_pulse;
                                   2463 ;	assignBit
      0007A2 A2*1E            [12] 2464 	mov	c,_flip_pulse
      0007A4 92 87            [24] 2465 	mov	_P07,c
                                   2466 ;	include/motor_cam_phim.c:111: giay_out=1;	
                                   2467 ;	assignBit
      0007A6 D2*1C            [12] 2468 	setb	_giay_out
                                   2469 ;	include/motor_cam_phim.c:112: if(connect) connect--;
      0007A8 90r00rFA         [24] 2470 	mov	dptr,#_connect
      0007AB E0               [24] 2471 	movx	a,@dptr
      0007AC FF               [12] 2472 	mov	r7,a
      0007AD E0               [24] 2473 	movx	a,@dptr
      0007AE 60 06            [24] 2474 	jz	00102$
      0007B0 EF               [12] 2475 	mov	a,r7
      0007B1 14               [12] 2476 	dec	a
      0007B2 90r00rFA         [24] 2477 	mov	dptr,#_connect
      0007B5 F0               [24] 2478 	movx	@dptr,a
      0007B6                       2479 00102$:
                                   2480 ;	include/motor_cam_phim.c:113: if(total_try_time_out) total_try_time_out--;
      0007B6 90r00rFC         [24] 2481 	mov	dptr,#_total_try_time_out
      0007B9 E0               [24] 2482 	movx	a,@dptr
      0007BA FF               [12] 2483 	mov	r7,a
      0007BB E0               [24] 2484 	movx	a,@dptr
      0007BC 60 06            [24] 2485 	jz	00104$
      0007BE EF               [12] 2486 	mov	a,r7
      0007BF 14               [12] 2487 	dec	a
      0007C0 90r00rFC         [24] 2488 	mov	dptr,#_total_try_time_out
      0007C3 F0               [24] 2489 	movx	@dptr,a
      0007C4                       2490 00104$:
                                   2491 ;	include/motor_cam_phim.c:115: if(mode!=2 && ++second>max_second-1){
      0007C4 90r00rF3         [24] 2492 	mov	dptr,#_mode
      0007C7 E0               [24] 2493 	movx	a,@dptr
      0007C8 FF               [12] 2494 	mov	r7,a
      0007C9 BF 02 01         [24] 2495 	cjne	r7,#0x02,00163$
      0007CC 22               [24] 2496 	ret
      0007CD                       2497 00163$:
      0007CD 05*00            [12] 2498 	inc	_second
      0007CF 90r01r2F         [24] 2499 	mov	dptr,#_max_second
      0007D2 E0               [24] 2500 	movx	a,@dptr
      0007D3 FF               [12] 2501 	mov	r7,a
      0007D4 7E 00            [12] 2502 	mov	r6,#0x00
      0007D6 1F               [12] 2503 	dec	r7
      0007D7 BF FF 01         [24] 2504 	cjne	r7,#0xff,00164$
      0007DA 1E               [12] 2505 	dec	r6
      0007DB                       2506 00164$:
      0007DB AC*00            [24] 2507 	mov	r4,_second
      0007DD 7D 00            [12] 2508 	mov	r5,#0x00
      0007DF C3               [12] 2509 	clr	c
      0007E0 EF               [12] 2510 	mov	a,r7
      0007E1 9C               [12] 2511 	subb	a,r4
      0007E2 EE               [12] 2512 	mov	a,r6
      0007E3 64 80            [12] 2513 	xrl	a,#0x80
      0007E5 8D F0            [24] 2514 	mov	b,r5
      0007E7 63 F0 80         [24] 2515 	xrl	b,#0x80
      0007EA 95 F0            [12] 2516 	subb	a,b
      0007EC 50 50            [24] 2517 	jnc	00119$
                                   2518 ;	include/motor_cam_phim.c:116: second=0;
      0007EE 75*00 00         [24] 2519 	mov	_second,#0x00
                                   2520 ;	include/motor_cam_phim.c:117: if(so_lan_goi_dien && !--delay_cuoc_goi_ke_tiep) so_lan_goi_dien = 0;
      0007F1 90r00rB8         [24] 2521 	mov	dptr,#_so_lan_goi_dien
      0007F4 E0               [24] 2522 	movx	a,@dptr
      0007F5 60 0E            [24] 2523 	jz	00106$
      0007F7 90r00rB9         [24] 2524 	mov	dptr,#_delay_cuoc_goi_ke_tiep
      0007FA E0               [24] 2525 	movx	a,@dptr
      0007FB 14               [12] 2526 	dec	a
      0007FC F0               [24] 2527 	movx	@dptr,a
      0007FD E0               [24] 2528 	movx	a,@dptr
      0007FE 70 05            [24] 2529 	jnz	00106$
      000800 90r00rB8         [24] 2530 	mov	dptr,#_so_lan_goi_dien
      000803 E4               [12] 2531 	clr	a
      000804 F0               [24] 2532 	movx	@dptr,a
      000805                       2533 00106$:
                                   2534 ;	include/motor_cam_phim.c:118: phut_out = 1;
                                   2535 ;	assignBit
      000805 D2*1D            [12] 2536 	setb	_phut_out
                                   2537 ;	include/motor_cam_phim.c:119: if(++minute>59){
      000807 05*01            [12] 2538 	inc	_minute
      000809 E5*01            [12] 2539 	mov	a,_minute
      00080B 24 C4            [12] 2540 	add	a,#0xff - 0x3b
      00080D 50 2F            [24] 2541 	jnc	00119$
                                   2542 ;	include/motor_cam_phim.c:120: da_gui_bao_cao = 0;
                                   2543 ;	assignBit
      00080F C2*01            [12] 2544 	clr	_da_gui_bao_cao
                                   2545 ;	include/motor_cam_phim.c:121: minute=0;
      000811 75*01 00         [24] 2546 	mov	_minute,#0x00
                                   2547 ;	include/motor_cam_phim.c:122: if(++hour>23){
      000814 05*02            [12] 2548 	inc	_hour
      000816 E5*02            [12] 2549 	mov	a,_hour
      000818 24 E8            [12] 2550 	add	a,#0xff - 0x17
      00081A 50 17            [24] 2551 	jnc	00111$
                                   2552 ;	include/motor_cam_phim.c:123: mp3_hour = 24;
      00081C 78r03            [12] 2553 	mov	r0,#_mp3_hour
      00081E 76 18            [12] 2554 	mov	@r0,#0x18
                                   2555 ;	include/motor_cam_phim.c:124: hour=0;
      000820 75*02 00         [24] 2556 	mov	_hour,#0x00
                                   2557 ;	include/motor_cam_phim.c:125: if(ngay_reset_con_lai)
      000823 90r00rE5         [24] 2558 	mov	dptr,#_ngay_reset_con_lai
      000826 E0               [24] 2559 	movx	a,@dptr
      000827 FF               [12] 2560 	mov	r7,a
      000828 E0               [24] 2561 	movx	a,@dptr
      000829 60 06            [24] 2562 	jz	00109$
                                   2563 ;	include/motor_cam_phim.c:126: ngay_reset_con_lai--;
      00082B EF               [12] 2564 	mov	a,r7
      00082C 14               [12] 2565 	dec	a
      00082D 90r00rE5         [24] 2566 	mov	dptr,#_ngay_reset_con_lai
      000830 F0               [24] 2567 	movx	@dptr,a
      000831                       2568 00109$:
                                   2569 ;	include/motor_cam_phim.c:127: da_gui_bao_cao_thang = 0;
                                   2570 ;	assignBit
      000831 C2*02            [12] 2571 	clr	_da_gui_bao_cao_thang
      000833                       2572 00111$:
                                   2573 ;	include/motor_cam_phim.c:129: if(++hour12>11) hour12 = 0;
      000833 05*03            [12] 2574 	inc	_hour12
      000835 E5*03            [12] 2575 	mov	a,_hour12
      000837 24 F4            [12] 2576 	add	a,#0xff - 0x0b
      000839 50 03            [24] 2577 	jnc	00119$
      00083B 75*03 00         [24] 2578 	mov	_hour12,#0x00
      00083E                       2579 00119$:
                                   2580 ;	include/motor_cam_phim.c:133: }
      00083E 22               [24] 2581 	ret
                                   2582 ;------------------------------------------------------------
                                   2583 ;Allocation info for local variables in function 'clock_servide'
                                   2584 ;------------------------------------------------------------
                                   2585 ;	include/motor_cam_phim.c:135: void clock_servide () __interrupt INT_DONG_HO __using MEM_DONG_HO {
                                   2586 ;	-----------------------------------------
                                   2587 ;	 function clock_servide
                                   2588 ;	-----------------------------------------
      00083F                       2589 _clock_servide:
                           00000F  2590 	ar7 = 0x0f
                           00000E  2591 	ar6 = 0x0e
                           00000D  2592 	ar5 = 0x0d
                           00000C  2593 	ar4 = 0x0c
                           00000B  2594 	ar3 = 0x0b
                           00000A  2595 	ar2 = 0x0a
                           000009  2596 	ar1 = 0x09
                           000008  2597 	ar0 = 0x08
      00083F C0*00            [24] 2598 	push	bits
      000841 C0 E0            [24] 2599 	push	acc
      000843 C0 F0            [24] 2600 	push	b
      000845 C0 82            [24] 2601 	push	dpl
      000847 C0 83            [24] 2602 	push	dph
      000849 C0 07            [24] 2603 	push	(0+7)
      00084B C0 06            [24] 2604 	push	(0+6)
      00084D C0 05            [24] 2605 	push	(0+5)
      00084F C0 04            [24] 2606 	push	(0+4)
      000851 C0 03            [24] 2607 	push	(0+3)
      000853 C0 02            [24] 2608 	push	(0+2)
      000855 C0 01            [24] 2609 	push	(0+1)
      000857 C0 00            [24] 2610 	push	(0+0)
      000859 C0 D0            [24] 2611 	push	psw
      00085B 75 D0 08         [24] 2612 	mov	psw,#0x08
                                   2613 ;	include/motor_cam_phim.c:136: WATCHDOG;
      00085E 43 C1 10         [24] 2614 	orl	_WDT_CONTR,#0x10
                                   2615 ;	include/motor_cam_phim.c:137: xung_giay_check=250;
      000861 90r00rE6         [24] 2616 	mov	dptr,#_xung_giay_check
      000864 74 FA            [12] 2617 	mov	a,#0xfa
      000866 F0               [24] 2618 	movx	@dptr,a
                                   2619 ;	include/motor_cam_phim.c:138: mat_xung_giay=0;
                                   2620 ;	assignBit
      000867 C2*36            [12] 2621 	clr	_mat_xung_giay
                                   2622 ;	include/motor_cam_phim.c:139: xunggiay();
      000869 75 D0 00         [24] 2623 	mov	psw,#0x00
      00086C 12r07r9D         [24] 2624 	lcall	_xunggiay
      00086F 75 D0 08         [24] 2625 	mov	psw,#0x08
                                   2626 ;	include/motor_cam_phim.c:141: }
      000872 D0 D0            [24] 2627 	pop	psw
      000874 D0 00            [24] 2628 	pop	(0+0)
      000876 D0 01            [24] 2629 	pop	(0+1)
      000878 D0 02            [24] 2630 	pop	(0+2)
      00087A D0 03            [24] 2631 	pop	(0+3)
      00087C D0 04            [24] 2632 	pop	(0+4)
      00087E D0 05            [24] 2633 	pop	(0+5)
      000880 D0 06            [24] 2634 	pop	(0+6)
      000882 D0 07            [24] 2635 	pop	(0+7)
      000884 D0 83            [24] 2636 	pop	dph
      000886 D0 82            [24] 2637 	pop	dpl
      000888 D0 F0            [24] 2638 	pop	b
      00088A D0 E0            [24] 2639 	pop	acc
      00088C D0*00            [24] 2640 	pop	bits
      00088E 32               [24] 2641 	reti
                                   2642 ;------------------------------------------------------------
                                   2643 ;Allocation info for local variables in function 'PCA_Handler'
                                   2644 ;------------------------------------------------------------
                                   2645 ;	include/motor_cam_phim.c:147: void	PCA_Handler (void) __interrupt PCA_VECTOR __using MEM_DONG_HO{
                                   2646 ;	-----------------------------------------
                                   2647 ;	 function PCA_Handler
                                   2648 ;	-----------------------------------------
      00088F                       2649 _PCA_Handler:
      00088F C0*00            [24] 2650 	push	bits
      000891 C0 E0            [24] 2651 	push	acc
      000893 C0 F0            [24] 2652 	push	b
      000895 C0 82            [24] 2653 	push	dpl
      000897 C0 83            [24] 2654 	push	dph
      000899 C0 07            [24] 2655 	push	(0+7)
      00089B C0 06            [24] 2656 	push	(0+6)
      00089D C0 05            [24] 2657 	push	(0+5)
      00089F C0 04            [24] 2658 	push	(0+4)
      0008A1 C0 03            [24] 2659 	push	(0+3)
      0008A3 C0 02            [24] 2660 	push	(0+2)
      0008A5 C0 01            [24] 2661 	push	(0+1)
      0008A7 C0 00            [24] 2662 	push	(0+0)
      0008A9 C0 D0            [24] 2663 	push	psw
      0008AB 75 D0 08         [24] 2664 	mov	psw,#0x08
                                   2665 ;	include/motor_cam_phim.c:148: WATCHDOG;
      0008AE 43 C1 10         [24] 2666 	orl	_WDT_CONTR,#0x10
                                   2667 ;	include/motor_cam_phim.c:149: if(CCF0){
                                   2668 ;	include/motor_cam_phim.c:150: CCF0=0;//tat co PCA timer 0
                                   2669 ;	assignBit
      0008B1 10 D8 03         [24] 2670 	jbc	_CCF0,00479$
      0008B4 02r0BrE1         [24] 2671 	ljmp	00193$
      0008B7                       2672 00479$:
                                   2673 ;	include/motor_cam_phim.c:151: CCAP0L = PCA_Timer0; //nap vao vi tri timer tiep theo
      0008B7 90r00rE3         [24] 2674 	mov	dptr,#_PCA_Timer0
      0008BA E0               [24] 2675 	movx	a,@dptr
      0008BB FE               [12] 2676 	mov	r6,a
      0008BC A3               [24] 2677 	inc	dptr
      0008BD E0               [24] 2678 	movx	a,@dptr
      0008BE FF               [12] 2679 	mov	r7,a
      0008BF 8E EA            [24] 2680 	mov	_CCAP0L,r6
                                   2681 ;	include/motor_cam_phim.c:152: CCAP0H = PCA_Timer0 >> 8;
      0008C1 8F FA            [24] 2682 	mov	_CCAP0H,r7
                                   2683 ;	include/motor_cam_phim.c:153: PCA_Timer0 += 25000; //tang bien nap vao len 25ms
      0008C3 90r00rE3         [24] 2684 	mov	dptr,#_PCA_Timer0
      0008C6 74 A8            [12] 2685 	mov	a,#0xa8
      0008C8 2E               [12] 2686 	add	a,r6
      0008C9 F0               [24] 2687 	movx	@dptr,a
      0008CA 74 61            [12] 2688 	mov	a,#0x61
      0008CC 3F               [12] 2689 	addc	a,r7
      0008CD A3               [24] 2690 	inc	dptr
      0008CE F0               [24] 2691 	movx	@dptr,a
                                   2692 ;	include/motor_cam_phim.c:155: if(eep_cam){
      0008CF 90 F0 1F         [24] 2693 	mov	dptr,#_eep_cam
      0008D2 E4               [12] 2694 	clr	a
      0008D3 93               [24] 2695 	movc	a,@a+dptr
      0008D4 60 0C            [24] 2696 	jz	00102$
                                   2697 ;	include/motor_cam_phim.c:156: trang_thai_cam = !cam_che;
      0008D6 A2 B6            [12] 2698 	mov	c,_P36
      0008D8 B3               [12] 2699 	cpl	c
      0008D9 92*13            [24] 2700 	mov	_trang_thai_cam,c
                                   2701 ;	include/motor_cam_phim.c:157: trang_thai_cam2 = !cam_che2;
      0008DB A2 B7            [12] 2702 	mov	c,_P37
      0008DD B3               [12] 2703 	cpl	c
      0008DE 92*14            [24] 2704 	mov	_trang_thai_cam2,c
      0008E0 80 08            [24] 2705 	sjmp	00103$
      0008E2                       2706 00102$:
                                   2707 ;	include/motor_cam_phim.c:159: trang_thai_cam = cam_che;
                                   2708 ;	assignBit
      0008E2 A2 B6            [12] 2709 	mov	c,_P36
      0008E4 92*13            [24] 2710 	mov	_trang_thai_cam,c
                                   2711 ;	include/motor_cam_phim.c:160: trang_thai_cam2 = cam_che2;
                                   2712 ;	assignBit
      0008E6 A2 B7            [12] 2713 	mov	c,_P37
      0008E8 92*14            [24] 2714 	mov	_trang_thai_cam2,c
      0008EA                       2715 00103$:
                                   2716 ;	include/motor_cam_phim.c:162: if(so_motor == 1){
      0008EA 90r01r2E         [24] 2717 	mov	dptr,#_so_motor
      0008ED E0               [24] 2718 	movx	a,@dptr
      0008EE FF               [12] 2719 	mov	r7,a
      0008EF BF 01 53         [24] 2720 	cjne	r7,#0x01,00114$
                                   2721 ;	include/motor_cam_phim.c:163: if(eep_cam){
      0008F2 90 F0 1F         [24] 2722 	mov	dptr,#_eep_cam
      0008F5 E4               [12] 2723 	clr	a
      0008F6 93               [24] 2724 	movc	a,@a+dptr
      0008F7 60 27            [24] 2725 	jz	00111$
                                   2726 ;	include/motor_cam_phim.c:164: if(may_dc) trang_thai_cam = !trang_thai_cam && !trang_thai_cam2;  
      0008F9 30*32 12         [24] 2727 	jnb	_may_dc,00105$
      0008FC 20*13 03         [24] 2728 	jb	_trang_thai_cam,00195$
      0008FF 30*14 04         [24] 2729 	jnb	_trang_thai_cam2,00196$
      000902                       2730 00195$:
                                   2731 ;	assignBit
      000902 C2*3E            [12] 2732 	clr	_PCA_Handler_sloc0_1_0
      000904 80 02            [24] 2733 	sjmp	00197$
      000906                       2734 00196$:
                                   2735 ;	assignBit
      000906 D2*3E            [12] 2736 	setb	_PCA_Handler_sloc0_1_0
      000908                       2737 00197$:
                                   2738 ;	assignBit
      000908 A2*3E            [12] 2739 	mov	c,_PCA_Handler_sloc0_1_0
      00090A 92*13            [24] 2740 	mov	_trang_thai_cam,c
      00090C 80 37            [24] 2741 	sjmp	00114$
      00090E                       2742 00105$:
                                   2743 ;	include/motor_cam_phim.c:165: else trang_thai_cam = trang_thai_cam || trang_thai_cam2;
      00090E 20*13 07         [24] 2744 	jb	_trang_thai_cam,00199$
      000911 20*14 04         [24] 2745 	jb	_trang_thai_cam2,00199$
                                   2746 ;	assignBit
      000914 C2*3E            [12] 2747 	clr	_PCA_Handler_sloc0_1_0
      000916 80 02            [24] 2748 	sjmp	00200$
      000918                       2749 00199$:
                                   2750 ;	assignBit
      000918 D2*3E            [12] 2751 	setb	_PCA_Handler_sloc0_1_0
      00091A                       2752 00200$:
                                   2753 ;	assignBit
      00091A A2*3E            [12] 2754 	mov	c,_PCA_Handler_sloc0_1_0
      00091C 92*13            [24] 2755 	mov	_trang_thai_cam,c
      00091E 80 25            [24] 2756 	sjmp	00114$
      000920                       2757 00111$:
                                   2758 ;	include/motor_cam_phim.c:167: if(may_dc) trang_thai_cam = !trang_thai_cam || !trang_thai_cam2;  
      000920 30*32 12         [24] 2759 	jnb	_may_dc,00108$
      000923 30*13 07         [24] 2760 	jnb	_trang_thai_cam,00202$
      000926 30*14 04         [24] 2761 	jnb	_trang_thai_cam2,00202$
                                   2762 ;	assignBit
      000929 C2*3E            [12] 2763 	clr	_PCA_Handler_sloc0_1_0
      00092B 80 02            [24] 2764 	sjmp	00203$
      00092D                       2765 00202$:
                                   2766 ;	assignBit
      00092D D2*3E            [12] 2767 	setb	_PCA_Handler_sloc0_1_0
      00092F                       2768 00203$:
                                   2769 ;	assignBit
      00092F A2*3E            [12] 2770 	mov	c,_PCA_Handler_sloc0_1_0
      000931 92*13            [24] 2771 	mov	_trang_thai_cam,c
      000933 80 10            [24] 2772 	sjmp	00114$
      000935                       2773 00108$:
                                   2774 ;	include/motor_cam_phim.c:168: else trang_thai_cam = trang_thai_cam && trang_thai_cam2;
      000935 30*13 03         [24] 2775 	jnb	_trang_thai_cam,00204$
      000938 20*14 04         [24] 2776 	jb	_trang_thai_cam2,00205$
      00093B                       2777 00204$:
                                   2778 ;	assignBit
      00093B C2*3E            [12] 2779 	clr	_PCA_Handler_sloc0_1_0
      00093D 80 02            [24] 2780 	sjmp	00206$
      00093F                       2781 00205$:
                                   2782 ;	assignBit
      00093F D2*3E            [12] 2783 	setb	_PCA_Handler_sloc0_1_0
      000941                       2784 00206$:
                                   2785 ;	assignBit
      000941 A2*3E            [12] 2786 	mov	c,_PCA_Handler_sloc0_1_0
      000943 92*13            [24] 2787 	mov	_trang_thai_cam,c
      000945                       2788 00114$:
                                   2789 ;	include/motor_cam_phim.c:172: if(motor_index!=5){
      000945 74 05            [12] 2790 	mov	a,#0x05
      000947 B5*0D 03         [24] 2791 	cjne	a,_motor_index,00494$
      00094A 02r0Ar0E         [24] 2792 	ljmp	00144$
      00094D                       2793 00494$:
                                   2794 ;	include/motor_cam_phim.c:174: if(trang_thai_cam)
      00094D 30*13 0D         [24] 2795 	jnb	_trang_thai_cam,00141$
                                   2796 ;	include/motor_cam_phim.c:175: if(cam_vao) cam_vao_han = 1;				
      000950 30*15 05         [24] 2797 	jnb	_cam_vao,00116$
                                   2798 ;	assignBit
      000953 D2*17            [12] 2799 	setb	_cam_vao_han
      000955 02r0Ar0E         [24] 2800 	ljmp	00144$
      000958                       2801 00116$:
                                   2802 ;	include/motor_cam_phim.c:176: else cam_vao = 1;
                                   2803 ;	assignBit
      000958 D2*15            [12] 2804 	setb	_cam_vao
      00095A 02r0Ar0E         [24] 2805 	ljmp	00144$
      00095D                       2806 00141$:
                                   2807 ;	include/motor_cam_phim.c:177: else if(cam_ra){
      00095D 20*19 03         [24] 2808 	jb	_cam_ra,00497$
      000960 02r0Ar02         [24] 2809 	ljmp	00138$
      000963                       2810 00497$:
                                   2811 ;	include/motor_cam_phim.c:178: thoi_gian_doi_doc_cam[motor_index] = thoi_gian_doi_cam_chuan;
      000963 E5*0D            [12] 2812 	mov	a,_motor_index
      000965 24rE7            [12] 2813 	add	a,#_thoi_gian_doi_doc_cam
      000967 FE               [12] 2814 	mov	r6,a
      000968 E4               [12] 2815 	clr	a
      000969 34s00            [12] 2816 	addc	a,#(_thoi_gian_doi_doc_cam >> 8)
      00096B FF               [12] 2817 	mov	r7,a
      00096C 90r00rEB         [24] 2818 	mov	dptr,#_thoi_gian_doi_cam_chuan
      00096F E0               [24] 2819 	movx	a,@dptr
      000970 8E 82            [24] 2820 	mov	dpl,r6
      000972 8F 83            [24] 2821 	mov	dph,r7
      000974 F0               [24] 2822 	movx	@dptr,a
                                   2823 ;	include/motor_cam_phim.c:179: if(canhkim) canhkim--;
      000975 90r00rE0         [24] 2824 	mov	dptr,#_canhkim
      000978 E0               [24] 2825 	movx	a,@dptr
      000979 FF               [12] 2826 	mov	r7,a
      00097A E0               [24] 2827 	movx	a,@dptr
      00097B 60 08            [24] 2828 	jz	00130$
      00097D EF               [12] 2829 	mov	a,r7
      00097E 14               [12] 2830 	dec	a
      00097F 90r00rE0         [24] 2831 	mov	dptr,#_canhkim
      000982 F0               [24] 2832 	movx	@dptr,a
      000983 80 60            [24] 2833 	sjmp	00131$
      000985                       2834 00130$:
                                   2835 ;	include/motor_cam_phim.c:180: else if(motorDir && ++phut[motor_index]>59){
      000985 30*10 2E         [24] 2836 	jnb	_motorDir,00126$
      000988 E5*0D            [12] 2837 	mov	a,_motor_index
      00098A 24r08            [12] 2838 	add	a,#_phut
      00098C F9               [12] 2839 	mov	r1,a
      00098D 87 0F            [24] 2840 	mov	ar7,@r1
      00098F 0F               [12] 2841 	inc	r7
      000990 A7 0F            [24] 2842 	mov	@r1,ar7
      000992 EF               [12] 2843 	mov	a,r7
      000993 24 C4            [12] 2844 	add	a,#0xff - 0x3b
      000995 50 1F            [24] 2845 	jnc	00126$
                                   2846 ;	include/motor_cam_phim.c:181: phut[motor_index] = 0;
      000997 E5*0D            [12] 2847 	mov	a,_motor_index
      000999 24r08            [12] 2848 	add	a,#_phut
      00099B F8               [12] 2849 	mov	r0,a
      00099C 76 00            [12] 2850 	mov	@r0,#0x00
                                   2851 ;	include/motor_cam_phim.c:182: if(++gio[motor_index]>11) gio[motor_index] = 0;
      00099E E5*0D            [12] 2852 	mov	a,_motor_index
      0009A0 24r04            [12] 2853 	add	a,#_gio
      0009A2 F9               [12] 2854 	mov	r1,a
      0009A3 87 0F            [24] 2855 	mov	ar7,@r1
      0009A5 0F               [12] 2856 	inc	r7
      0009A6 A7 0F            [24] 2857 	mov	@r1,ar7
      0009A8 EF               [12] 2858 	mov	a,r7
      0009A9 24 F4            [12] 2859 	add	a,#0xff - 0x0b
      0009AB 50 38            [24] 2860 	jnc	00131$
      0009AD E5*0D            [12] 2861 	mov	a,_motor_index
      0009AF 24r04            [12] 2862 	add	a,#_gio
      0009B1 F8               [12] 2863 	mov	r0,a
      0009B2 76 00            [12] 2864 	mov	@r0,#0x00
      0009B4 80 2F            [24] 2865 	sjmp	00131$
      0009B6                       2866 00126$:
                                   2867 ;	include/motor_cam_phim.c:183: }else if(!motorDir && --phut[motor_index]>60){
      0009B6 20*10 2C         [24] 2868 	jb	_motorDir,00131$
      0009B9 E5*0D            [12] 2869 	mov	a,_motor_index
      0009BB 24r08            [12] 2870 	add	a,#_phut
      0009BD F9               [12] 2871 	mov	r1,a
      0009BE 87 0F            [24] 2872 	mov	ar7,@r1
      0009C0 1F               [12] 2873 	dec	r7
      0009C1 A7 0F            [24] 2874 	mov	@r1,ar7
      0009C3 EF               [12] 2875 	mov	a,r7
      0009C4 24 C3            [12] 2876 	add	a,#0xff - 0x3c
      0009C6 50 1D            [24] 2877 	jnc	00131$
                                   2878 ;	include/motor_cam_phim.c:184: phut[motor_index] = 59;
      0009C8 E5*0D            [12] 2879 	mov	a,_motor_index
      0009CA 24r08            [12] 2880 	add	a,#_phut
      0009CC F8               [12] 2881 	mov	r0,a
      0009CD 76 3B            [12] 2882 	mov	@r0,#0x3b
                                   2883 ;	include/motor_cam_phim.c:185: if(--gio[motor_index]>12) gio[motor_index] = 11;
      0009CF E5*0D            [12] 2884 	mov	a,_motor_index
      0009D1 24r04            [12] 2885 	add	a,#_gio
      0009D3 F9               [12] 2886 	mov	r1,a
      0009D4 87 0F            [24] 2887 	mov	ar7,@r1
      0009D6 1F               [12] 2888 	dec	r7
      0009D7 A7 0F            [24] 2889 	mov	@r1,ar7
      0009D9 EF               [12] 2890 	mov	a,r7
      0009DA 24 F3            [12] 2891 	add	a,#0xff - 0x0c
      0009DC 50 07            [24] 2892 	jnc	00131$
      0009DE E5*0D            [12] 2893 	mov	a,_motor_index
      0009E0 24r04            [12] 2894 	add	a,#_gio
      0009E2 F8               [12] 2895 	mov	r0,a
      0009E3 76 0B            [12] 2896 	mov	@r0,#0x0b
      0009E5                       2897 00131$:
                                   2898 ;	include/motor_cam_phim.c:187: cam_ra = cam_vao = cam_vao_han = 0;
                                   2899 ;	assignBit
      0009E5 C2*17            [12] 2900 	clr	_cam_vao_han
                                   2901 ;	assignBit
      0009E7 C2*15            [12] 2902 	clr	_cam_vao
                                   2903 ;	assignBit
      0009E9 C2*19            [12] 2904 	clr	_cam_ra
                                   2905 ;	include/motor_cam_phim.c:188: motor_index = motor_run_check();
      0009EB 75 D0 00         [24] 2906 	mov	psw,#0x00
      0009EE 12r01rE8         [24] 2907 	lcall	_motor_run_check
      0009F1 75 D0 08         [24] 2908 	mov	psw,#0x08
      0009F4 85 82*0D         [24] 2909 	mov	_motor_index,dpl
                                   2910 ;	include/motor_cam_phim.c:190: luu_gio_kim();				
      0009F7 75 D0 00         [24] 2911 	mov	psw,#0x00
      0009FA 12r06rDD         [24] 2912 	lcall	_luu_gio_kim
      0009FD 75 D0 08         [24] 2913 	mov	psw,#0x08
      000A00 80 0C            [24] 2914 	sjmp	00144$
      000A02                       2915 00138$:
                                   2916 ;	include/motor_cam_phim.c:191: }else if(cam_vao_han) cam_ra = 1;
      000A02 30*17 04         [24] 2917 	jnb	_cam_vao_han,00135$
                                   2918 ;	assignBit
      000A05 D2*19            [12] 2919 	setb	_cam_ra
      000A07 80 05            [24] 2920 	sjmp	00144$
      000A09                       2921 00135$:
                                   2922 ;	include/motor_cam_phim.c:192: else if(cam_vao) cam_vao = 0;
                                   2923 ;	assignBit
      000A09 10*15 02         [24] 2924 	jbc	_cam_vao,00506$
      000A0C 80 00            [24] 2925 	sjmp	00144$
      000A0E                       2926 00506$:
      000A0E                       2927 00144$:
                                   2928 ;	include/motor_cam_phim.c:195: if(motor_index2!=5){
      000A0E 74 05            [12] 2929 	mov	a,#0x05
      000A10 B5*0E 03         [24] 2930 	cjne	a,_motor_index2,00507$
      000A13 02r0ArD7         [24] 2931 	ljmp	00174$
      000A16                       2932 00507$:
                                   2933 ;	include/motor_cam_phim.c:196: if(trang_thai_cam2)
      000A16 30*14 0D         [24] 2934 	jnb	_trang_thai_cam2,00171$
                                   2935 ;	include/motor_cam_phim.c:197: if(cam_vao2) cam_vao_han2 = 1;				
      000A19 30*16 05         [24] 2936 	jnb	_cam_vao2,00146$
                                   2937 ;	assignBit
      000A1C D2*18            [12] 2938 	setb	_cam_vao_han2
      000A1E 02r0ArD7         [24] 2939 	ljmp	00174$
      000A21                       2940 00146$:
                                   2941 ;	include/motor_cam_phim.c:198: else cam_vao2 = 1;
                                   2942 ;	assignBit
      000A21 D2*16            [12] 2943 	setb	_cam_vao2
      000A23 02r0ArD7         [24] 2944 	ljmp	00174$
      000A26                       2945 00171$:
                                   2946 ;	include/motor_cam_phim.c:199: else if(cam_ra2){
      000A26 20*1A 03         [24] 2947 	jb	_cam_ra2,00510$
      000A29 02r0ArCB         [24] 2948 	ljmp	00168$
      000A2C                       2949 00510$:
                                   2950 ;	include/motor_cam_phim.c:200: thoi_gian_doi_doc_cam[motor_index2] = thoi_gian_doi_cam_chuan;
      000A2C E5*0E            [12] 2951 	mov	a,_motor_index2
      000A2E 24rE7            [12] 2952 	add	a,#_thoi_gian_doi_doc_cam
      000A30 FE               [12] 2953 	mov	r6,a
      000A31 E4               [12] 2954 	clr	a
      000A32 34s00            [12] 2955 	addc	a,#(_thoi_gian_doi_doc_cam >> 8)
      000A34 FF               [12] 2956 	mov	r7,a
      000A35 90r00rEB         [24] 2957 	mov	dptr,#_thoi_gian_doi_cam_chuan
      000A38 E0               [24] 2958 	movx	a,@dptr
      000A39 8E 82            [24] 2959 	mov	dpl,r6
      000A3B 8F 83            [24] 2960 	mov	dph,r7
      000A3D F0               [24] 2961 	movx	@dptr,a
                                   2962 ;	include/motor_cam_phim.c:201: if(canhkim) canhkim--;
      000A3E 90r00rE0         [24] 2963 	mov	dptr,#_canhkim
      000A41 E0               [24] 2964 	movx	a,@dptr
      000A42 FF               [12] 2965 	mov	r7,a
      000A43 E0               [24] 2966 	movx	a,@dptr
      000A44 60 08            [24] 2967 	jz	00160$
      000A46 EF               [12] 2968 	mov	a,r7
      000A47 14               [12] 2969 	dec	a
      000A48 90r00rE0         [24] 2970 	mov	dptr,#_canhkim
      000A4B F0               [24] 2971 	movx	@dptr,a
      000A4C 80 60            [24] 2972 	sjmp	00161$
      000A4E                       2973 00160$:
                                   2974 ;	include/motor_cam_phim.c:202: else if(motorDir && ++phut[motor_index2]>59){
      000A4E 30*10 2E         [24] 2975 	jnb	_motorDir,00156$
      000A51 E5*0E            [12] 2976 	mov	a,_motor_index2
      000A53 24r08            [12] 2977 	add	a,#_phut
      000A55 F9               [12] 2978 	mov	r1,a
      000A56 87 0F            [24] 2979 	mov	ar7,@r1
      000A58 0F               [12] 2980 	inc	r7
      000A59 A7 0F            [24] 2981 	mov	@r1,ar7
      000A5B EF               [12] 2982 	mov	a,r7
      000A5C 24 C4            [12] 2983 	add	a,#0xff - 0x3b
      000A5E 50 1F            [24] 2984 	jnc	00156$
                                   2985 ;	include/motor_cam_phim.c:203: phut[motor_index2] = 0;
      000A60 E5*0E            [12] 2986 	mov	a,_motor_index2
      000A62 24r08            [12] 2987 	add	a,#_phut
      000A64 F8               [12] 2988 	mov	r0,a
      000A65 76 00            [12] 2989 	mov	@r0,#0x00
                                   2990 ;	include/motor_cam_phim.c:204: if(++gio[motor_index2]>11) gio[motor_index2] = 0;
      000A67 E5*0E            [12] 2991 	mov	a,_motor_index2
      000A69 24r04            [12] 2992 	add	a,#_gio
      000A6B F9               [12] 2993 	mov	r1,a
      000A6C 87 0F            [24] 2994 	mov	ar7,@r1
      000A6E 0F               [12] 2995 	inc	r7
      000A6F A7 0F            [24] 2996 	mov	@r1,ar7
      000A71 EF               [12] 2997 	mov	a,r7
      000A72 24 F4            [12] 2998 	add	a,#0xff - 0x0b
      000A74 50 38            [24] 2999 	jnc	00161$
      000A76 E5*0E            [12] 3000 	mov	a,_motor_index2
      000A78 24r04            [12] 3001 	add	a,#_gio
      000A7A F8               [12] 3002 	mov	r0,a
      000A7B 76 00            [12] 3003 	mov	@r0,#0x00
      000A7D 80 2F            [24] 3004 	sjmp	00161$
      000A7F                       3005 00156$:
                                   3006 ;	include/motor_cam_phim.c:205: }else if(!motorDir && --phut[motor_index2]>60){
      000A7F 20*10 2C         [24] 3007 	jb	_motorDir,00161$
      000A82 E5*0E            [12] 3008 	mov	a,_motor_index2
      000A84 24r08            [12] 3009 	add	a,#_phut
      000A86 F9               [12] 3010 	mov	r1,a
      000A87 87 0F            [24] 3011 	mov	ar7,@r1
      000A89 1F               [12] 3012 	dec	r7
      000A8A A7 0F            [24] 3013 	mov	@r1,ar7
      000A8C EF               [12] 3014 	mov	a,r7
      000A8D 24 C3            [12] 3015 	add	a,#0xff - 0x3c
      000A8F 50 1D            [24] 3016 	jnc	00161$
                                   3017 ;	include/motor_cam_phim.c:206: phut[motor_index2] = 59;
      000A91 E5*0E            [12] 3018 	mov	a,_motor_index2
      000A93 24r08            [12] 3019 	add	a,#_phut
      000A95 F8               [12] 3020 	mov	r0,a
      000A96 76 3B            [12] 3021 	mov	@r0,#0x3b
                                   3022 ;	include/motor_cam_phim.c:207: if(--gio[motor_index2]>12) gio[motor_index2] = 11;
      000A98 E5*0E            [12] 3023 	mov	a,_motor_index2
      000A9A 24r04            [12] 3024 	add	a,#_gio
      000A9C F9               [12] 3025 	mov	r1,a
      000A9D 87 0F            [24] 3026 	mov	ar7,@r1
      000A9F 1F               [12] 3027 	dec	r7
      000AA0 A7 0F            [24] 3028 	mov	@r1,ar7
      000AA2 EF               [12] 3029 	mov	a,r7
      000AA3 24 F3            [12] 3030 	add	a,#0xff - 0x0c
      000AA5 50 07            [24] 3031 	jnc	00161$
      000AA7 E5*0E            [12] 3032 	mov	a,_motor_index2
      000AA9 24r04            [12] 3033 	add	a,#_gio
      000AAB F8               [12] 3034 	mov	r0,a
      000AAC 76 0B            [12] 3035 	mov	@r0,#0x0b
      000AAE                       3036 00161$:
                                   3037 ;	include/motor_cam_phim.c:209: cam_ra2 = cam_vao2 = cam_vao_han2 = 0;
                                   3038 ;	assignBit
      000AAE C2*18            [12] 3039 	clr	_cam_vao_han2
                                   3040 ;	assignBit
      000AB0 C2*16            [12] 3041 	clr	_cam_vao2
                                   3042 ;	assignBit
      000AB2 C2*1A            [12] 3043 	clr	_cam_ra2
                                   3044 ;	include/motor_cam_phim.c:210: motor_index2 = motor_run_check2();
      000AB4 75 D0 00         [24] 3045 	mov	psw,#0x00
      000AB7 12r04r60         [24] 3046 	lcall	_motor_run_check2
      000ABA 75 D0 08         [24] 3047 	mov	psw,#0x08
      000ABD 85 82*0E         [24] 3048 	mov	_motor_index2,dpl
                                   3049 ;	include/motor_cam_phim.c:211: luu_gio_kim();				
      000AC0 75 D0 00         [24] 3050 	mov	psw,#0x00
      000AC3 12r06rDD         [24] 3051 	lcall	_luu_gio_kim
      000AC6 75 D0 08         [24] 3052 	mov	psw,#0x08
      000AC9 80 0C            [24] 3053 	sjmp	00174$
      000ACB                       3054 00168$:
                                   3055 ;	include/motor_cam_phim.c:212: }else if(cam_vao_han2) cam_ra2 = 1;
      000ACB 30*18 04         [24] 3056 	jnb	_cam_vao_han2,00165$
                                   3057 ;	assignBit
      000ACE D2*1A            [12] 3058 	setb	_cam_ra2
      000AD0 80 05            [24] 3059 	sjmp	00174$
      000AD2                       3060 00165$:
                                   3061 ;	include/motor_cam_phim.c:213: else if(cam_vao2) cam_vao2 = 0;
                                   3062 ;	assignBit
      000AD2 10*16 02         [24] 3063 	jbc	_cam_vao2,00519$
      000AD5 80 00            [24] 3064 	sjmp	00174$
      000AD7                       3065 00519$:
      000AD7                       3066 00174$:
                                   3067 ;	include/motor_cam_phim.c:218: if(phim_mode_xuong && phim_mode_vao) phim_mode_doi = 2;
      000AD7 30*1F 09         [24] 3068 	jnb	_phim_mode_xuong,00176$
      000ADA 30 B5 06         [24] 3069 	jnb	_P35,00176$
      000ADD 90r00rF0         [24] 3070 	mov	dptr,#_phim_mode_doi
      000AE0 74 02            [12] 3071 	mov	a,#0x02
      000AE2 F0               [24] 3072 	movx	@dptr,a
      000AE3                       3073 00176$:
                                   3074 ;	include/motor_cam_phim.c:219: phim_mode_giu = phim_mode_xuong && !phim_mode_vao;
      000AE3 30*1F 03         [24] 3075 	jnb	_phim_mode_xuong,00207$
      000AE6 30 B5 04         [24] 3076 	jnb	_P35,00208$
      000AE9                       3077 00207$:
                                   3078 ;	assignBit
      000AE9 C2*3E            [12] 3079 	clr	_PCA_Handler_sloc0_1_0
      000AEB 80 02            [24] 3080 	sjmp	00209$
      000AED                       3081 00208$:
                                   3082 ;	assignBit
      000AED D2*3E            [12] 3083 	setb	_PCA_Handler_sloc0_1_0
      000AEF                       3084 00209$:
                                   3085 ;	assignBit
      000AEF A2*3E            [12] 3086 	mov	c,_PCA_Handler_sloc0_1_0
      000AF1 92*22            [24] 3087 	mov	_phim_mode_giu,c
                                   3088 ;	include/motor_cam_phim.c:220: phim_mode_xuong = !phim_mode_cu && !phim_mode_vao;
      000AF3 20*21 03         [24] 3089 	jb	_phim_mode_cu,00210$
      000AF6 30 B5 04         [24] 3090 	jnb	_P35,00211$
      000AF9                       3091 00210$:
                                   3092 ;	assignBit
      000AF9 C2*3E            [12] 3093 	clr	_PCA_Handler_sloc0_1_0
      000AFB 80 02            [24] 3094 	sjmp	00212$
      000AFD                       3095 00211$:
                                   3096 ;	assignBit
      000AFD D2*3E            [12] 3097 	setb	_PCA_Handler_sloc0_1_0
      000AFF                       3098 00212$:
                                   3099 ;	assignBit
      000AFF A2*3E            [12] 3100 	mov	c,_PCA_Handler_sloc0_1_0
      000B01 92*1F            [24] 3101 	mov	_phim_mode_xuong,c
                                   3102 ;	include/motor_cam_phim.c:221: phim_mode_nhan = phim_mode_nhan || (!phim_mode_giu && phim_mode_xuong);
      000B03 20*20 0A         [24] 3103 	jb	_phim_mode_nhan,00214$
      000B06 20*22 03         [24] 3104 	jb	_phim_mode_giu,00213$
      000B09 20*1F 04         [24] 3105 	jb	_phim_mode_xuong,00214$
      000B0C                       3106 00213$:
                                   3107 ;	assignBit
      000B0C C2*3E            [12] 3108 	clr	_PCA_Handler_sloc0_1_0
      000B0E 80 02            [24] 3109 	sjmp	00215$
      000B10                       3110 00214$:
                                   3111 ;	assignBit
      000B10 D2*3E            [12] 3112 	setb	_PCA_Handler_sloc0_1_0
      000B12                       3113 00215$:
                                   3114 ;	assignBit
      000B12 A2*3E            [12] 3115 	mov	c,_PCA_Handler_sloc0_1_0
      000B14 92*20            [24] 3116 	mov	_phim_mode_nhan,c
                                   3117 ;	include/motor_cam_phim.c:222: phim_mode_cu = phim_mode_vao;
                                   3118 ;	assignBit
      000B16 A2 B5            [12] 3119 	mov	c,_P35
      000B18 92*21            [24] 3120 	mov	_phim_mode_cu,c
                                   3121 ;	include/motor_cam_phim.c:224: if(phim_back_xuong && key_in2) phim_back_doi = 2;
      000B1A 30*23 09         [24] 3122 	jnb	_phim_back_xuong,00179$
      000B1D 30 B3 06         [24] 3123 	jnb	_P33,00179$
      000B20 90r00rF1         [24] 3124 	mov	dptr,#_phim_back_doi
      000B23 74 02            [12] 3125 	mov	a,#0x02
      000B25 F0               [24] 3126 	movx	@dptr,a
      000B26                       3127 00179$:
                                   3128 ;	include/motor_cam_phim.c:225: phim_back_giu = phim_back_xuong && !key_in2;
      000B26 30*23 03         [24] 3129 	jnb	_phim_back_xuong,00219$
      000B29 30 B3 04         [24] 3130 	jnb	_P33,00220$
      000B2C                       3131 00219$:
                                   3132 ;	assignBit
      000B2C C2*3E            [12] 3133 	clr	_PCA_Handler_sloc0_1_0
      000B2E 80 02            [24] 3134 	sjmp	00221$
      000B30                       3135 00220$:
                                   3136 ;	assignBit
      000B30 D2*3E            [12] 3137 	setb	_PCA_Handler_sloc0_1_0
      000B32                       3138 00221$:
                                   3139 ;	assignBit
      000B32 A2*3E            [12] 3140 	mov	c,_PCA_Handler_sloc0_1_0
      000B34 92*26            [24] 3141 	mov	_phim_back_giu,c
                                   3142 ;	include/motor_cam_phim.c:226: phim_back_xuong = !phim_back_cu && !key_in2;
      000B36 20*25 03         [24] 3143 	jb	_phim_back_cu,00222$
      000B39 30 B3 04         [24] 3144 	jnb	_P33,00223$
      000B3C                       3145 00222$:
                                   3146 ;	assignBit
      000B3C C2*3E            [12] 3147 	clr	_PCA_Handler_sloc0_1_0
      000B3E 80 02            [24] 3148 	sjmp	00224$
      000B40                       3149 00223$:
                                   3150 ;	assignBit
      000B40 D2*3E            [12] 3151 	setb	_PCA_Handler_sloc0_1_0
      000B42                       3152 00224$:
                                   3153 ;	assignBit
      000B42 A2*3E            [12] 3154 	mov	c,_PCA_Handler_sloc0_1_0
      000B44 92*23            [24] 3155 	mov	_phim_back_xuong,c
                                   3156 ;	include/motor_cam_phim.c:227: phim_back_nhan = phim_back_nhan || (!phim_back_giu && phim_back_xuong);
      000B46 20*24 0A         [24] 3157 	jb	_phim_back_nhan,00226$
      000B49 20*26 03         [24] 3158 	jb	_phim_back_giu,00225$
      000B4C 20*23 04         [24] 3159 	jb	_phim_back_xuong,00226$
      000B4F                       3160 00225$:
                                   3161 ;	assignBit
      000B4F C2*3E            [12] 3162 	clr	_PCA_Handler_sloc0_1_0
      000B51 80 02            [24] 3163 	sjmp	00227$
      000B53                       3164 00226$:
                                   3165 ;	assignBit
      000B53 D2*3E            [12] 3166 	setb	_PCA_Handler_sloc0_1_0
      000B55                       3167 00227$:
                                   3168 ;	assignBit
      000B55 A2*3E            [12] 3169 	mov	c,_PCA_Handler_sloc0_1_0
      000B57 92*24            [24] 3170 	mov	_phim_back_nhan,c
                                   3171 ;	include/motor_cam_phim.c:228: phim_back_cu = key_in2;
                                   3172 ;	assignBit
      000B59 A2 B3            [12] 3173 	mov	c,_P33
      000B5B 92*25            [24] 3174 	mov	_phim_back_cu,c
                                   3175 ;	include/motor_cam_phim.c:230: if(phim_cong_xuong && key_in3) phim_cong_doi = 2;
      000B5D 30*27 09         [24] 3176 	jnb	_phim_cong_xuong,00182$
      000B60 30 B4 06         [24] 3177 	jnb	_P34,00182$
      000B63 90r00rF2         [24] 3178 	mov	dptr,#_phim_cong_doi
      000B66 74 02            [12] 3179 	mov	a,#0x02
      000B68 F0               [24] 3180 	movx	@dptr,a
      000B69                       3181 00182$:
                                   3182 ;	include/motor_cam_phim.c:231: phim_cong_giu = phim_cong_xuong && !key_in3;
      000B69 30*27 03         [24] 3183 	jnb	_phim_cong_xuong,00231$
      000B6C 30 B4 04         [24] 3184 	jnb	_P34,00232$
      000B6F                       3185 00231$:
                                   3186 ;	assignBit
      000B6F C2*3E            [12] 3187 	clr	_PCA_Handler_sloc0_1_0
      000B71 80 02            [24] 3188 	sjmp	00233$
      000B73                       3189 00232$:
                                   3190 ;	assignBit
      000B73 D2*3E            [12] 3191 	setb	_PCA_Handler_sloc0_1_0
      000B75                       3192 00233$:
                                   3193 ;	assignBit
      000B75 A2*3E            [12] 3194 	mov	c,_PCA_Handler_sloc0_1_0
      000B77 92*2A            [24] 3195 	mov	_phim_cong_giu,c
                                   3196 ;	include/motor_cam_phim.c:232: phim_cong_xuong = !phim_cong_cu && !key_in3;
      000B79 20*29 03         [24] 3197 	jb	_phim_cong_cu,00234$
      000B7C 30 B4 04         [24] 3198 	jnb	_P34,00235$
      000B7F                       3199 00234$:
                                   3200 ;	assignBit
      000B7F C2*3E            [12] 3201 	clr	_PCA_Handler_sloc0_1_0
      000B81 80 02            [24] 3202 	sjmp	00236$
      000B83                       3203 00235$:
                                   3204 ;	assignBit
      000B83 D2*3E            [12] 3205 	setb	_PCA_Handler_sloc0_1_0
      000B85                       3206 00236$:
                                   3207 ;	assignBit
      000B85 A2*3E            [12] 3208 	mov	c,_PCA_Handler_sloc0_1_0
      000B87 92*27            [24] 3209 	mov	_phim_cong_xuong,c
                                   3210 ;	include/motor_cam_phim.c:233: phim_cong_nhan = phim_cong_nhan || (!phim_cong_giu && phim_cong_xuong);
      000B89 20*28 0A         [24] 3211 	jb	_phim_cong_nhan,00238$
      000B8C 20*2A 03         [24] 3212 	jb	_phim_cong_giu,00237$
      000B8F 20*27 04         [24] 3213 	jb	_phim_cong_xuong,00238$
      000B92                       3214 00237$:
                                   3215 ;	assignBit
      000B92 C2*3E            [12] 3216 	clr	_PCA_Handler_sloc0_1_0
      000B94 80 02            [24] 3217 	sjmp	00239$
      000B96                       3218 00238$:
                                   3219 ;	assignBit
      000B96 D2*3E            [12] 3220 	setb	_PCA_Handler_sloc0_1_0
      000B98                       3221 00239$:
                                   3222 ;	assignBit
      000B98 A2*3E            [12] 3223 	mov	c,_PCA_Handler_sloc0_1_0
      000B9A 92*28            [24] 3224 	mov	_phim_cong_nhan,c
                                   3225 ;	include/motor_cam_phim.c:234: phim_cong_cu = key_in3;
                                   3226 ;	assignBit
      000B9C A2 B4            [12] 3227 	mov	c,_P34
      000B9E 92*29            [24] 3228 	mov	_phim_cong_cu,c
                                   3229 ;	include/motor_cam_phim.c:236: if(!--cnt){
      000BA0 90r00r00         [24] 3230 	mov	dptr,#_cnt
      000BA3 E0               [24] 3231 	movx	a,@dptr
      000BA4 14               [12] 3232 	dec	a
      000BA5 F0               [24] 3233 	movx	@dptr,a
      000BA6 E0               [24] 3234 	movx	a,@dptr
      000BA7 70 0A            [24] 3235 	jnz	00185$
                                   3236 ;	include/motor_cam_phim.c:237: lcd_update_chop = 1;
                                   3237 ;	assignBit
      000BA9 D2*3D            [12] 3238 	setb	_lcd_update_chop
                                   3239 ;	include/motor_cam_phim.c:238: cnt=20;
      000BAB 90r00r00         [24] 3240 	mov	dptr,#_cnt
      000BAE 74 14            [12] 3241 	mov	a,#0x14
      000BB0 F0               [24] 3242 	movx	@dptr,a
                                   3243 ;	include/motor_cam_phim.c:239: chop=!chop;
      000BB1 B2*2B            [12] 3244 	cpl	_chop
      000BB3                       3245 00185$:
                                   3246 ;	include/motor_cam_phim.c:242: if(xung_giay_check){
      000BB3 90r00rE6         [24] 3247 	mov	dptr,#_xung_giay_check
      000BB6 E0               [24] 3248 	movx	a,@dptr
      000BB7 FF               [12] 3249 	mov	r7,a
      000BB8 E0               [24] 3250 	movx	a,@dptr
      000BB9 60 0E            [24] 3251 	jz	00189$
                                   3252 ;	include/motor_cam_phim.c:243: xung_giay_check--;
      000BBB EF               [12] 3253 	mov	a,r7
      000BBC 14               [12] 3254 	dec	a
      000BBD 90r00rE6         [24] 3255 	mov	dptr,#_xung_giay_check
      000BC0 F0               [24] 3256 	movx	@dptr,a
                                   3257 ;	include/motor_cam_phim.c:244: counter_xung_giay=40;
      000BC1 90r00r01         [24] 3258 	mov	dptr,#_counter_xung_giay
      000BC4 74 28            [12] 3259 	mov	a,#0x28
      000BC6 F0               [24] 3260 	movx	@dptr,a
      000BC7 80 18            [24] 3261 	sjmp	00193$
      000BC9                       3262 00189$:
                                   3263 ;	include/motor_cam_phim.c:245: }else if(!--counter_xung_giay){
      000BC9 90r00r01         [24] 3264 	mov	dptr,#_counter_xung_giay
      000BCC E0               [24] 3265 	movx	a,@dptr
      000BCD 14               [12] 3266 	dec	a
      000BCE F0               [24] 3267 	movx	@dptr,a
      000BCF E0               [24] 3268 	movx	a,@dptr
      000BD0 70 0F            [24] 3269 	jnz	00193$
                                   3270 ;	include/motor_cam_phim.c:246: counter_xung_giay=40;
      000BD2 90r00r01         [24] 3271 	mov	dptr,#_counter_xung_giay
      000BD5 74 28            [12] 3272 	mov	a,#0x28
      000BD7 F0               [24] 3273 	movx	@dptr,a
                                   3274 ;	include/motor_cam_phim.c:247: xunggiay();
      000BD8 75 D0 00         [24] 3275 	mov	psw,#0x00
      000BDB 12r07r9D         [24] 3276 	lcall	_xunggiay
      000BDE 75 D0 08         [24] 3277 	mov	psw,#0x08
      000BE1                       3278 00193$:
                                   3279 ;	include/motor_cam_phim.c:252: }
      000BE1 D0 D0            [24] 3280 	pop	psw
      000BE3 D0 00            [24] 3281 	pop	(0+0)
      000BE5 D0 01            [24] 3282 	pop	(0+1)
      000BE7 D0 02            [24] 3283 	pop	(0+2)
      000BE9 D0 03            [24] 3284 	pop	(0+3)
      000BEB D0 04            [24] 3285 	pop	(0+4)
      000BED D0 05            [24] 3286 	pop	(0+5)
      000BEF D0 06            [24] 3287 	pop	(0+6)
      000BF1 D0 07            [24] 3288 	pop	(0+7)
      000BF3 D0 83            [24] 3289 	pop	dph
      000BF5 D0 82            [24] 3290 	pop	dpl
      000BF7 D0 F0            [24] 3291 	pop	b
      000BF9 D0 E0            [24] 3292 	pop	acc
      000BFB D0*00            [24] 3293 	pop	bits
      000BFD 32               [24] 3294 	reti
                                   3295 ;------------------------------------------------------------
                                   3296 ;Allocation info for local variables in function 'cam_phim'
                                   3297 ;------------------------------------------------------------
                                   3298 ;	include/motor_cam_phim.c:254: void cam_phim() __interrupt 1 __using 2 {
                                   3299 ;	-----------------------------------------
                                   3300 ;	 function cam_phim
                                   3301 ;	-----------------------------------------
      000BFE                       3302 _cam_phim:
                           000017  3303 	ar7 = 0x17
                           000016  3304 	ar6 = 0x16
                           000015  3305 	ar5 = 0x15
                           000014  3306 	ar4 = 0x14
                           000013  3307 	ar3 = 0x13
                           000012  3308 	ar2 = 0x12
                           000011  3309 	ar1 = 0x11
                           000010  3310 	ar0 = 0x10
      000BFE C0 E0            [24] 3311 	push	acc
      000C00 C0 82            [24] 3312 	push	dpl
      000C02 C0 83            [24] 3313 	push	dph
      000C04 C0 D0            [24] 3314 	push	psw
      000C06 75 D0 10         [24] 3315 	mov	psw,#0x10
                                   3316 ;	include/motor_cam_phim.c:255: WATCHDOG;
      000C09 43 C1 10         [24] 3317 	orl	_WDT_CONTR,#0x10
                                   3318 ;	include/motor_cam_phim.c:256: if(atmel_phat){
      000C0C 30*33 43         [24] 3319 	jnb	_atmel_phat,00113$
                                   3320 ;	include/motor_cam_phim.c:257: motor1 = motor_index == 0; motor2 = motor_index2 == 1;
      000C0F E5*0D            [12] 3321 	mov	a,_motor_index
      000C11 B4 01 00         [24] 3322 	cjne	a,#0x01,00180$
      000C14                       3323 00180$:
      000C14 92*3F            [24] 3324 	mov  _cam_phim_sloc0_1_0,c
      000C16 E4               [12] 3325 	clr	a
      000C17 33               [12] 3326 	rlc	a
      000C18 24 FF            [12] 3327 	add	a,#0xff
      000C1A 92 A7            [24] 3328 	mov	_P27,c
      000C1C 74 01            [12] 3329 	mov	a,#0x01
      000C1E B5*0E 03         [24] 3330 	cjne	a,_motor_index2,00181$
      000C21 D3               [12] 3331 	setb	c
      000C22 80 01            [24] 3332 	sjmp	00182$
      000C24                       3333 00181$:
      000C24 C3               [12] 3334 	clr	c
      000C25                       3335 00182$:
      000C25 92*3F            [24] 3336 	mov  _cam_phim_sloc0_1_0,c
      000C27 E4               [12] 3337 	clr	a
      000C28 33               [12] 3338 	rlc	a
      000C29 24 FF            [12] 3339 	add	a,#0xff
      000C2B 92 A5            [24] 3340 	mov	_P25,c
                                   3341 ;	include/motor_cam_phim.c:258: motor3 = motor_index == 2; motor4 = motor_index2 == 3;
      000C2D 74 02            [12] 3342 	mov	a,#0x02
      000C2F B5*0D 03         [24] 3343 	cjne	a,_motor_index,00183$
      000C32 D3               [12] 3344 	setb	c
      000C33 80 01            [24] 3345 	sjmp	00184$
      000C35                       3346 00183$:
      000C35 C3               [12] 3347 	clr	c
      000C36                       3348 00184$:
      000C36 92*3F            [24] 3349 	mov  _cam_phim_sloc0_1_0,c
      000C38 E4               [12] 3350 	clr	a
      000C39 33               [12] 3351 	rlc	a
      000C3A 24 FF            [12] 3352 	add	a,#0xff
      000C3C 92 A6            [24] 3353 	mov	_P26,c
      000C3E 74 03            [12] 3354 	mov	a,#0x03
      000C40 B5*0E 03         [24] 3355 	cjne	a,_motor_index2,00185$
      000C43 D3               [12] 3356 	setb	c
      000C44 80 01            [24] 3357 	sjmp	00186$
      000C46                       3358 00185$:
      000C46 C3               [12] 3359 	clr	c
      000C47                       3360 00186$:
      000C47 92*3F            [24] 3361 	mov  _cam_phim_sloc0_1_0,c
      000C49 E4               [12] 3362 	clr	a
      000C4A 33               [12] 3363 	rlc	a
      000C4B 24 FF            [12] 3364 	add	a,#0xff
      000C4D 92 A4            [24] 3365 	mov	_P24,c
      000C4F 02r0CrE1         [24] 3366 	ljmp	00115$
      000C52                       3367 00113$:
                                   3368 ;	include/motor_cam_phim.c:260: motorS1 = !motor_index && (eep_motor & 7) ; motorS2 = motor_index2 == 1;
      000C52 E5*0D            [12] 3369 	mov	a,_motor_index
      000C54 70 0B            [24] 3370 	jnz	00117$
      000C56 90 F0 00         [24] 3371 	mov	dptr,#_eep_motor
      000C59 E4               [12] 3372 	clr	a
      000C5A 93               [24] 3373 	movc	a,@a+dptr
      000C5B 54 07            [12] 3374 	anl	a,#0x07
      000C5D 60 02            [24] 3375 	jz	00189$
      000C5F 80 04            [24] 3376 	sjmp	00118$
      000C61                       3377 00189$:
      000C61                       3378 00117$:
                                   3379 ;	assignBit
      000C61 C2*3F            [12] 3380 	clr	_cam_phim_sloc0_1_0
      000C63 80 02            [24] 3381 	sjmp	00119$
      000C65                       3382 00118$:
                                   3383 ;	assignBit
      000C65 D2*3F            [12] 3384 	setb	_cam_phim_sloc0_1_0
      000C67                       3385 00119$:
      000C67 A2*3F            [12] 3386 	mov	c,_cam_phim_sloc0_1_0
      000C69 E4               [12] 3387 	clr	a
      000C6A 33               [12] 3388 	rlc	a
      000C6B 24 FF            [12] 3389 	add	a,#0xff
      000C6D 92 C4            [24] 3390 	mov	_P44,c
      000C6F 74 01            [12] 3391 	mov	a,#0x01
      000C71 B5*0E 03         [24] 3392 	cjne	a,_motor_index2,00190$
      000C74 D3               [12] 3393 	setb	c
      000C75 80 01            [24] 3394 	sjmp	00191$
      000C77                       3395 00190$:
      000C77 C3               [12] 3396 	clr	c
      000C78                       3397 00191$:
      000C78 92*3F            [24] 3398 	mov  _cam_phim_sloc0_1_0,c
      000C7A E4               [12] 3399 	clr	a
      000C7B 33               [12] 3400 	rlc	a
      000C7C 24 FF            [12] 3401 	add	a,#0xff
      000C7E 92 C3            [24] 3402 	mov	_P43,c
                                   3403 ;	include/motor_cam_phim.c:261: motorDir = may_dc || may_canh_kim || motorDir1 || motorDir2;
      000C80 20*32 10         [24] 3404 	jb	_may_dc,00121$
      000C83 90r00rE1         [24] 3405 	mov	dptr,#_may_canh_kim
      000C86 E0               [24] 3406 	movx	a,@dptr
      000C87 70 0A            [24] 3407 	jnz	00121$
      000C89 20*11 07         [24] 3408 	jb	_motorDir1,00121$
      000C8C 20*12 04         [24] 3409 	jb	_motorDir2,00121$
                                   3410 ;	assignBit
      000C8F C2*3F            [12] 3411 	clr	_cam_phim_sloc0_1_0
      000C91 80 02            [24] 3412 	sjmp	00122$
      000C93                       3413 00121$:
                                   3414 ;	assignBit
      000C93 D2*3F            [12] 3415 	setb	_cam_phim_sloc0_1_0
      000C95                       3416 00122$:
                                   3417 ;	assignBit
      000C95 A2*3F            [12] 3418 	mov	c,_cam_phim_sloc0_1_0
      000C97 92*10            [24] 3419 	mov	_motorDir,c
                                   3420 ;	include/motor_cam_phim.c:262: if(!may_dc && (motor_index!=5 || motor_index2!=5 || !motor_index) ){
      000C99 20*32 42         [24] 3421 	jb	_may_dc,00107$
      000C9C 74 05            [12] 3422 	mov	a,#0x05
      000C9E B5*0D 09         [24] 3423 	cjne	a,_motor_index,00106$
      000CA1 74 05            [12] 3424 	mov	a,#0x05
      000CA3 B5*0E 04         [24] 3425 	cjne	a,_motor_index2,00106$
      000CA6 E5*0D            [12] 3426 	mov	a,_motor_index
      000CA8 70 34            [24] 3427 	jnz	00107$
      000CAA                       3428 00106$:
                                   3429 ;	include/motor_cam_phim.c:263: P2=(P2&0x0f)|motor_step[step_index];
      000CAA E5 A0            [12] 3430 	mov	a,_P2
      000CAC 54 0F            [12] 3431 	anl	a,#0x0f
      000CAE FF               [12] 3432 	mov	r7,a
      000CAF E5*0C            [12] 3433 	mov	a,_step_index
      000CB1 90r00r16         [24] 3434 	mov	dptr,#_motor_step
      000CB4 93               [24] 3435 	movc	a,@a+dptr
      000CB5 4F               [12] 3436 	orl	a,r7
      000CB6 F5 A0            [12] 3437 	mov	_P2,a
                                   3438 ;	include/motor_cam_phim.c:264: step_index+= motorDir?1:-1; 
      000CB8 30*10 06         [24] 3439 	jnb	_motorDir,00129$
      000CBB 7E 01            [12] 3440 	mov	r6,#0x01
      000CBD 7F 00            [12] 3441 	mov	r7,#0x00
      000CBF 80 04            [24] 3442 	sjmp	00130$
      000CC1                       3443 00129$:
      000CC1 7E FF            [12] 3444 	mov	r6,#0xff
      000CC3 7F FF            [12] 3445 	mov	r7,#0xff
      000CC5                       3446 00130$:
      000CC5 AF*0C            [24] 3447 	mov	r7,_step_index
      000CC7 EE               [12] 3448 	mov	a,r6
      000CC8 2F               [12] 3449 	add	a,r7
                                   3450 ;	include/motor_cam_phim.c:265: if(step_index>8) step_index=7;
      000CC9 F5*0C            [12] 3451 	mov  _step_index,a
      000CCB 24 F7            [12] 3452 	add	a,#0xff - 0x08
      000CCD 50 05            [24] 3453 	jnc	00104$
      000CCF 75*0C 07         [24] 3454 	mov	_step_index,#0x07
      000CD2 80 0D            [24] 3455 	sjmp	00115$
      000CD4                       3456 00104$:
                                   3457 ;	include/motor_cam_phim.c:266: else if(step_index==8) step_index=0;
      000CD4 74 08            [12] 3458 	mov	a,#0x08
      000CD6 B5*0C 08         [24] 3459 	cjne	a,_step_index,00115$
      000CD9 75*0C 00         [24] 3460 	mov	_step_index,#0x00
      000CDC 80 03            [24] 3461 	sjmp	00115$
      000CDE                       3462 00107$:
                                   3463 ;	include/motor_cam_phim.c:267: } else P2 &= 0x0f;
      000CDE 53 A0 0F         [24] 3464 	anl	_P2,#0x0f
      000CE1                       3465 00115$:
                                   3466 ;	include/motor_cam_phim.c:270: }
      000CE1 D0 D0            [24] 3467 	pop	psw
      000CE3 D0 83            [24] 3468 	pop	dph
      000CE5 D0 82            [24] 3469 	pop	dpl
      000CE7 D0 E0            [24] 3470 	pop	acc
      000CE9 32               [24] 3471 	reti
                                   3472 ;	eliminated unneeded push/pop b
                                   3473 ;------------------------------------------------------------
                                   3474 ;Allocation info for local variables in function 'clear_sms_buffer'
                                   3475 ;------------------------------------------------------------
                                   3476 ;index_dau                 Allocated to registers 
                                   3477 ;------------------------------------------------------------
                                   3478 ;	include/gsm_serial.c:3: void clear_sms_buffer(u8 index_dau){
                                   3479 ;	-----------------------------------------
                                   3480 ;	 function clear_sms_buffer
                                   3481 ;	-----------------------------------------
      000CEA                       3482 _clear_sms_buffer:
                           000007  3483 	ar7 = 0x07
                           000006  3484 	ar6 = 0x06
                           000005  3485 	ar5 = 0x05
                           000004  3486 	ar4 = 0x04
                           000003  3487 	ar3 = 0x03
                           000002  3488 	ar2 = 0x02
                           000001  3489 	ar1 = 0x01
                           000000  3490 	ar0 = 0x00
      000CEA AF 82            [24] 3491 	mov	r7,dpl
                                   3492 ;	include/gsm_serial.c:4: sms_index = 0;
      000CEC 90r00rBA         [24] 3493 	mov	dptr,#_sms_index
      000CEF E4               [12] 3494 	clr	a
      000CF0 F0               [24] 3495 	movx	@dptr,a
                                   3496 ;	include/gsm_serial.c:5: while(index_dau<161)lenh_sms[index_dau++] = 0;
      000CF1                       3497 00101$:
      000CF1 BF A1 00         [24] 3498 	cjne	r7,#0xa1,00115$
      000CF4                       3499 00115$:
      000CF4 50 0F            [24] 3500 	jnc	00104$
      000CF6 EF               [12] 3501 	mov	a,r7
      000CF7 24r16            [12] 3502 	add	a,#_lenh_sms
      000CF9 F5 82            [12] 3503 	mov	dpl,a
      000CFB E4               [12] 3504 	clr	a
      000CFC 34s00            [12] 3505 	addc	a,#(_lenh_sms >> 8)
      000CFE F5 83            [12] 3506 	mov	dph,a
      000D00 0F               [12] 3507 	inc	r7
      000D01 E4               [12] 3508 	clr	a
      000D02 F0               [24] 3509 	movx	@dptr,a
      000D03 80 EC            [24] 3510 	sjmp	00101$
      000D05                       3511 00104$:
                                   3512 ;	include/gsm_serial.c:6: }
      000D05 22               [24] 3513 	ret
                                   3514 ;------------------------------------------------------------
                                   3515 ;Allocation info for local variables in function 'gsm_sendandcheck'
                                   3516 ;------------------------------------------------------------
                                   3517 ;retry                     Allocated with name '_gsm_sendandcheck_PARM_2'
                                   3518 ;delay                     Allocated with name '_gsm_sendandcheck_PARM_3'
                                   3519 ;display                   Allocated with name '_gsm_sendandcheck_PARM_4'
                                   3520 ;cmd                       Allocated with name '_gsm_sendandcheck_cmd_65536_79'
                                   3521 ;sloc0                     Allocated with name '_gsm_sendandcheck_sloc0_1_0'
                                   3522 ;sloc1                     Allocated with name '_gsm_sendandcheck_sloc1_1_0'
                                   3523 ;------------------------------------------------------------
                                   3524 ;	include/gsm_serial.c:8: __bit gsm_sendandcheck(u8 *cmd, u8 retry, u8 delay, u8 *display){
                                   3525 ;	-----------------------------------------
                                   3526 ;	 function gsm_sendandcheck
                                   3527 ;	-----------------------------------------
      000D06                       3528 _gsm_sendandcheck:
      000D06 85 82*15         [24] 3529 	mov	_gsm_sendandcheck_cmd_65536_79,dpl
      000D09 85 83*16         [24] 3530 	mov	(_gsm_sendandcheck_cmd_65536_79 + 1),dph
      000D0C 85 F0*17         [24] 3531 	mov	(_gsm_sendandcheck_cmd_65536_79 + 2),b
                                   3532 ;	include/gsm_serial.c:9: connect_time_out = delay;
      000D0F AC*11            [24] 3533 	mov	r4,_gsm_sendandcheck_PARM_3
      000D11 90r00rFB         [24] 3534 	mov	dptr,#_connect_time_out
      000D14 EC               [12] 3535 	mov	a,r4
      000D15 F0               [24] 3536 	movx	@dptr,a
                                   3537 ;	include/gsm_serial.c:10: total_try_time_out = retry*delay + 10;
      000D16 85*10 F0         [24] 3538 	mov	b,_gsm_sendandcheck_PARM_2
      000D19 EC               [12] 3539 	mov	a,r4
      000D1A A4               [48] 3540 	mul	ab
      000D1B FB               [12] 3541 	mov	r3,a
      000D1C 90r00rFC         [24] 3542 	mov	dptr,#_total_try_time_out
      000D1F 74 0A            [12] 3543 	mov	a,#0x0a
      000D21 2B               [12] 3544 	add	a,r3
      000D22 F0               [24] 3545 	movx	@dptr,a
                                   3546 ;	include/gsm_serial.c:11: gui_lenh_thanh_cong = 0;
                                   3547 ;	assignBit
      000D23 C2*2C            [12] 3548 	clr	_gui_lenh_thanh_cong
                                   3549 ;	include/gsm_serial.c:12: send_gsm_cmd(cmd);
      000D25 85*15 82         [24] 3550 	mov	dpl,_gsm_sendandcheck_cmd_65536_79
      000D28 85*16 83         [24] 3551 	mov	dph,(_gsm_sendandcheck_cmd_65536_79 + 1)
      000D2B 85*17 F0         [24] 3552 	mov	b,(_gsm_sendandcheck_cmd_65536_79 + 2)
      000D2E C0 04            [24] 3553 	push	ar4
      000D30 12r00r00         [24] 3554 	lcall	_send_gsm_cmd
      000D33 D0 04            [24] 3555 	pop	ar4
                                   3556 ;	include/gsm_serial.c:13: while(!gui_lenh_thanh_cong && total_try_time_out && !nosim){ 
      000D35 74 02            [12] 3557 	mov	a,#0x02
      000D37 25*15            [12] 3558 	add	a,_gsm_sendandcheck_cmd_65536_79
      000D39 F9               [12] 3559 	mov	r1,a
      000D3A E4               [12] 3560 	clr	a
      000D3B 35*16            [12] 3561 	addc	a,(_gsm_sendandcheck_cmd_65536_79 + 1)
      000D3D FA               [12] 3562 	mov	r2,a
      000D3E AB*17            [24] 3563 	mov	r3,(_gsm_sendandcheck_cmd_65536_79 + 2)
      000D40 74 07            [12] 3564 	mov	a,#0x07
      000D42 25*15            [12] 3565 	add	a,_gsm_sendandcheck_cmd_65536_79
      000D44 F5*18            [12] 3566 	mov	_gsm_sendandcheck_sloc0_1_0,a
      000D46 E4               [12] 3567 	clr	a
      000D47 35*16            [12] 3568 	addc	a,(_gsm_sendandcheck_cmd_65536_79 + 1)
      000D49 F5*19            [12] 3569 	mov	(_gsm_sendandcheck_sloc0_1_0 + 1),a
      000D4B 85*17*1A         [24] 3570 	mov	(_gsm_sendandcheck_sloc0_1_0 + 2),(_gsm_sendandcheck_cmd_65536_79 + 2)
      000D4E 74 08            [12] 3571 	mov	a,#0x08
      000D50 25*15            [12] 3572 	add	a,_gsm_sendandcheck_cmd_65536_79
      000D52 F5*1B            [12] 3573 	mov	_gsm_sendandcheck_sloc1_1_0,a
      000D54 E4               [12] 3574 	clr	a
      000D55 35*16            [12] 3575 	addc	a,(_gsm_sendandcheck_cmd_65536_79 + 1)
      000D57 F5*1C            [12] 3576 	mov	(_gsm_sendandcheck_sloc1_1_0 + 1),a
      000D59 85*17*1D         [24] 3577 	mov	(_gsm_sendandcheck_sloc1_1_0 + 2),(_gsm_sendandcheck_cmd_65536_79 + 2)
      000D5C A8*10            [24] 3578 	mov	r0,_gsm_sendandcheck_PARM_2
      000D5E                       3579 00121$:
      000D5E 30*2C 03         [24] 3580 	jnb	_gui_lenh_thanh_cong,00174$
      000D61 02r0ErD6         [24] 3581 	ljmp	00123$
      000D64                       3582 00174$:
      000D64 90r00rFC         [24] 3583 	mov	dptr,#_total_try_time_out
      000D67 E0               [24] 3584 	movx	a,@dptr
      000D68 70 03            [24] 3585 	jnz	00175$
      000D6A 02r0ErD6         [24] 3586 	ljmp	00123$
      000D6D                       3587 00175$:
      000D6D 30*2E 03         [24] 3588 	jnb	_nosim,00176$
      000D70 02r0ErD6         [24] 3589 	ljmp	00123$
      000D73                       3590 00176$:
                                   3591 ;	include/gsm_serial.c:14: WATCHDOG;
      000D73 43 C1 10         [24] 3592 	orl	_WDT_CONTR,#0x10
                                   3593 ;	include/gsm_serial.c:15: LCD_guilenh(0x80);
      000D76 75 82 80         [24] 3594 	mov	dpl,#0x80
      000D79 C0 04            [24] 3595 	push	ar4
      000D7B C0 03            [24] 3596 	push	ar3
      000D7D C0 02            [24] 3597 	push	ar2
      000D7F C0 01            [24] 3598 	push	ar1
      000D81 C0 00            [24] 3599 	push	ar0
      000D83 12r00r00         [24] 3600 	lcall	_LCD_guilenh
                                   3601 ;	include/gsm_serial.c:16: LCD_guichuoi(display);
      000D86 85*12 82         [24] 3602 	mov	dpl,_gsm_sendandcheck_PARM_4
      000D89 85*13 83         [24] 3603 	mov	dph,(_gsm_sendandcheck_PARM_4 + 1)
      000D8C 85*14 F0         [24] 3604 	mov	b,(_gsm_sendandcheck_PARM_4 + 2)
      000D8F 12r00r00         [24] 3605 	lcall	_LCD_guichuoi
      000D92 D0 00            [24] 3606 	pop	ar0
      000D94 D0 01            [24] 3607 	pop	ar1
      000D96 D0 02            [24] 3608 	pop	ar2
      000D98 D0 03            [24] 3609 	pop	ar3
      000D9A D0 04            [24] 3610 	pop	ar4
                                   3611 ;	include/gsm_serial.c:17: if(GPS_time) LCD_guigio(0xc0,"  GPS  ",hour,minute,second,flip_pulse);
      000D9C 30*1B 32         [24] 3612 	jnb	_GPS_time,00105$
      000D9F 75*00rBC         [24] 3613 	mov	_LCD_guigio_PARM_2,#___str_0
      000DA2 75*01s03         [24] 3614 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_0 >> 8)
      000DA5 75*02 80         [24] 3615 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      000DA8 85*02*00         [24] 3616 	mov	_LCD_guigio_PARM_3,_hour
      000DAB 85*01*00         [24] 3617 	mov	_LCD_guigio_PARM_4,_minute
      000DAE 85*00*00         [24] 3618 	mov	_LCD_guigio_PARM_5,_second
                                   3619 ;	assignBit
      000DB1 A2*1E            [12] 3620 	mov	c,_flip_pulse
      000DB3 92*00            [24] 3621 	mov	_LCD_guigio_PARM_6,c
      000DB5 75 82 C0         [24] 3622 	mov	dpl,#0xc0
      000DB8 C0 04            [24] 3623 	push	ar4
      000DBA C0 03            [24] 3624 	push	ar3
      000DBC C0 02            [24] 3625 	push	ar2
      000DBE C0 01            [24] 3626 	push	ar1
      000DC0 C0 00            [24] 3627 	push	ar0
      000DC2 12r00r00         [24] 3628 	lcall	_LCD_guigio
      000DC5 D0 00            [24] 3629 	pop	ar0
      000DC7 D0 01            [24] 3630 	pop	ar1
      000DC9 D0 02            [24] 3631 	pop	ar2
      000DCB D0 03            [24] 3632 	pop	ar3
      000DCD D0 04            [24] 3633 	pop	ar4
      000DCF 80 69            [24] 3634 	sjmp	00106$
      000DD1                       3635 00105$:
                                   3636 ;	include/gsm_serial.c:18: else if(!eep_gpson) LCD_guigio(0xc0," ASIA  ",hour,minute,second,flip_pulse);
      000DD1 90 F0 02         [24] 3637 	mov	dptr,#_eep_gpson
      000DD4 E4               [12] 3638 	clr	a
      000DD5 93               [24] 3639 	movc	a,@a+dptr
      000DD6 70 32            [24] 3640 	jnz	00102$
      000DD8 75*00rC4         [24] 3641 	mov	_LCD_guigio_PARM_2,#___str_1
      000DDB 75*01s03         [24] 3642 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_1 >> 8)
      000DDE 75*02 80         [24] 3643 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      000DE1 85*02*00         [24] 3644 	mov	_LCD_guigio_PARM_3,_hour
      000DE4 85*01*00         [24] 3645 	mov	_LCD_guigio_PARM_4,_minute
      000DE7 85*00*00         [24] 3646 	mov	_LCD_guigio_PARM_5,_second
                                   3647 ;	assignBit
      000DEA A2*1E            [12] 3648 	mov	c,_flip_pulse
      000DEC 92*00            [24] 3649 	mov	_LCD_guigio_PARM_6,c
      000DEE 75 82 C0         [24] 3650 	mov	dpl,#0xc0
      000DF1 C0 04            [24] 3651 	push	ar4
      000DF3 C0 03            [24] 3652 	push	ar3
      000DF5 C0 02            [24] 3653 	push	ar2
      000DF7 C0 01            [24] 3654 	push	ar1
      000DF9 C0 00            [24] 3655 	push	ar0
      000DFB 12r00r00         [24] 3656 	lcall	_LCD_guigio
      000DFE D0 00            [24] 3657 	pop	ar0
      000E00 D0 01            [24] 3658 	pop	ar1
      000E02 D0 02            [24] 3659 	pop	ar2
      000E04 D0 03            [24] 3660 	pop	ar3
      000E06 D0 04            [24] 3661 	pop	ar4
      000E08 80 30            [24] 3662 	sjmp	00106$
      000E0A                       3663 00102$:
                                   3664 ;	include/gsm_serial.c:19: else LCD_guigio(0xc0,"   DS  ",hour,minute,second,flip_pulse);
      000E0A 75*00rCC         [24] 3665 	mov	_LCD_guigio_PARM_2,#___str_2
      000E0D 75*01s03         [24] 3666 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_2 >> 8)
      000E10 75*02 80         [24] 3667 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      000E13 85*02*00         [24] 3668 	mov	_LCD_guigio_PARM_3,_hour
      000E16 85*01*00         [24] 3669 	mov	_LCD_guigio_PARM_4,_minute
      000E19 85*00*00         [24] 3670 	mov	_LCD_guigio_PARM_5,_second
                                   3671 ;	assignBit
      000E1C A2*1E            [12] 3672 	mov	c,_flip_pulse
      000E1E 92*00            [24] 3673 	mov	_LCD_guigio_PARM_6,c
      000E20 75 82 C0         [24] 3674 	mov	dpl,#0xc0
      000E23 C0 04            [24] 3675 	push	ar4
      000E25 C0 03            [24] 3676 	push	ar3
      000E27 C0 02            [24] 3677 	push	ar2
      000E29 C0 01            [24] 3678 	push	ar1
      000E2B C0 00            [24] 3679 	push	ar0
      000E2D 12r00r00         [24] 3680 	lcall	_LCD_guigio
      000E30 D0 00            [24] 3681 	pop	ar0
      000E32 D0 01            [24] 3682 	pop	ar1
      000E34 D0 02            [24] 3683 	pop	ar2
      000E36 D0 03            [24] 3684 	pop	ar3
      000E38 D0 04            [24] 3685 	pop	ar4
      000E3A                       3686 00106$:
                                   3687 ;	include/gsm_serial.c:20: if(skip_gsm_cmd){skip_gsm_cmd = 0;return 0;}
                                   3688 ;	assignBit
      000E3A 10*30 02         [24] 3689 	jbc	_skip_gsm_cmd,00179$
      000E3D 80 02            [24] 3690 	sjmp	00108$
      000E3F                       3691 00179$:
      000E3F C3               [12] 3692 	clr	c
      000E40 22               [24] 3693 	ret
      000E41                       3694 00108$:
                                   3695 ;	include/gsm_serial.c:21: if(!connect || error){
      000E41 90r00rFA         [24] 3696 	mov	dptr,#_connect
      000E44 E0               [24] 3697 	movx	a,@dptr
      000E45 60 06            [24] 3698 	jz	00116$
      000E47 20*2F 03         [24] 3699 	jb	_error,00181$
      000E4A 02r0Dr5E         [24] 3700 	ljmp	00121$
      000E4D                       3701 00181$:
      000E4D                       3702 00116$:
                                   3703 ;	include/gsm_serial.c:22: error = 0;
                                   3704 ;	assignBit
      000E4D C2*2F            [12] 3705 	clr	_error
                                   3706 ;	include/gsm_serial.c:23: if(!retry--) break;
      000E4F 88 07            [24] 3707 	mov	ar7,r0
      000E51 18               [12] 3708 	dec	r0
      000E52 EF               [12] 3709 	mov	a,r7
      000E53 70 03            [24] 3710 	jnz	00182$
      000E55 02r0ErD6         [24] 3711 	ljmp	00123$
      000E58                       3712 00182$:
                                   3713 ;	include/gsm_serial.c:24: connect_time_out = connect = delay;
      000E58 90r00rFA         [24] 3714 	mov	dptr,#_connect
      000E5B EC               [12] 3715 	mov	a,r4
      000E5C F0               [24] 3716 	movx	@dptr,a
      000E5D 90r00rFB         [24] 3717 	mov	dptr,#_connect_time_out
      000E60 EC               [12] 3718 	mov	a,r4
      000E61 F0               [24] 3719 	movx	@dptr,a
                                   3720 ;	include/gsm_serial.c:25: if(*(cmd+2) == '+' && *(cmd+7)!='?' && *(cmd+8)!='?') send_gsm_cmd("A/\r"); 
      000E62 89 82            [24] 3721 	mov	dpl,r1
      000E64 8A 83            [24] 3722 	mov	dph,r2
      000E66 8B F0            [24] 3723 	mov	b,r3
      000E68 12r00r00         [24] 3724 	lcall	__gptrget
      000E6B FF               [12] 3725 	mov	r7,a
      000E6C BF 2B 44         [24] 3726 	cjne	r7,#0x2b,00112$
      000E6F 85*18 82         [24] 3727 	mov	dpl,_gsm_sendandcheck_sloc0_1_0
      000E72 85*19 83         [24] 3728 	mov	dph,(_gsm_sendandcheck_sloc0_1_0 + 1)
      000E75 85*1A F0         [24] 3729 	mov	b,(_gsm_sendandcheck_sloc0_1_0 + 2)
      000E78 12r00r00         [24] 3730 	lcall	__gptrget
      000E7B FF               [12] 3731 	mov	r7,a
      000E7C BF 3F 02         [24] 3732 	cjne	r7,#0x3f,00185$
      000E7F 80 32            [24] 3733 	sjmp	00112$
      000E81                       3734 00185$:
      000E81 85*1B 82         [24] 3735 	mov	dpl,_gsm_sendandcheck_sloc1_1_0
      000E84 85*1C 83         [24] 3736 	mov	dph,(_gsm_sendandcheck_sloc1_1_0 + 1)
      000E87 85*1D F0         [24] 3737 	mov	b,(_gsm_sendandcheck_sloc1_1_0 + 2)
      000E8A 12r00r00         [24] 3738 	lcall	__gptrget
      000E8D FF               [12] 3739 	mov	r7,a
      000E8E BF 3F 02         [24] 3740 	cjne	r7,#0x3f,00186$
      000E91 80 20            [24] 3741 	sjmp	00112$
      000E93                       3742 00186$:
      000E93 90r03rD4         [24] 3743 	mov	dptr,#___str_3
      000E96 75 F0 80         [24] 3744 	mov	b,#0x80
      000E99 C0 04            [24] 3745 	push	ar4
      000E9B C0 03            [24] 3746 	push	ar3
      000E9D C0 02            [24] 3747 	push	ar2
      000E9F C0 01            [24] 3748 	push	ar1
      000EA1 C0 00            [24] 3749 	push	ar0
      000EA3 12r00r00         [24] 3750 	lcall	_send_gsm_cmd
      000EA6 D0 00            [24] 3751 	pop	ar0
      000EA8 D0 01            [24] 3752 	pop	ar1
      000EAA D0 02            [24] 3753 	pop	ar2
      000EAC D0 03            [24] 3754 	pop	ar3
      000EAE D0 04            [24] 3755 	pop	ar4
      000EB0 02r0Dr5E         [24] 3756 	ljmp	00121$
      000EB3                       3757 00112$:
                                   3758 ;	include/gsm_serial.c:26: else send_gsm_cmd(cmd);
      000EB3 85*15 82         [24] 3759 	mov	dpl,_gsm_sendandcheck_cmd_65536_79
      000EB6 85*16 83         [24] 3760 	mov	dph,(_gsm_sendandcheck_cmd_65536_79 + 1)
      000EB9 85*17 F0         [24] 3761 	mov	b,(_gsm_sendandcheck_cmd_65536_79 + 2)
      000EBC C0 04            [24] 3762 	push	ar4
      000EBE C0 03            [24] 3763 	push	ar3
      000EC0 C0 02            [24] 3764 	push	ar2
      000EC2 C0 01            [24] 3765 	push	ar1
      000EC4 C0 00            [24] 3766 	push	ar0
      000EC6 12r00r00         [24] 3767 	lcall	_send_gsm_cmd
      000EC9 D0 00            [24] 3768 	pop	ar0
      000ECB D0 01            [24] 3769 	pop	ar1
      000ECD D0 02            [24] 3770 	pop	ar2
      000ECF D0 03            [24] 3771 	pop	ar3
      000ED1 D0 04            [24] 3772 	pop	ar4
      000ED3 02r0Dr5E         [24] 3773 	ljmp	00121$
      000ED6                       3774 00123$:
                                   3775 ;	include/gsm_serial.c:30: LCD_xoa(TREN);
      000ED6 75 82 80         [24] 3776 	mov	dpl,#0x80
      000ED9 12r00r00         [24] 3777 	lcall	_LCD_xoa
                                   3778 ;	include/gsm_serial.c:31: gsm_serial_cmd = NORMAL;
      000EDC 90r00rFD         [24] 3779 	mov	dptr,#_gsm_serial_cmd
      000EDF E4               [12] 3780 	clr	a
      000EE0 F0               [24] 3781 	movx	@dptr,a
                                   3782 ;	include/gsm_serial.c:32: return gui_lenh_thanh_cong;
      000EE1 A2*2C            [12] 3783 	mov	c,_gui_lenh_thanh_cong
                                   3784 ;	include/gsm_serial.c:33: }
      000EE3 22               [24] 3785 	ret
                                   3786 ;------------------------------------------------------------
                                   3787 ;Allocation info for local variables in function 'gsm_quay_so'
                                   3788 ;------------------------------------------------------------
                                   3789 ;phone                     Allocated to registers r5 r6 r7 
                                   3790 ;------------------------------------------------------------
                                   3791 ;	include/gsm_serial.c:36: __bit gsm_quay_so(u8 *phone){
                                   3792 ;	-----------------------------------------
                                   3793 ;	 function gsm_quay_so
                                   3794 ;	-----------------------------------------
      000EE4                       3795 _gsm_quay_so:
      000EE4 AD 82            [24] 3796 	mov	r5,dpl
      000EE6 AE 83            [24] 3797 	mov	r6,dph
      000EE8 AF F0            [24] 3798 	mov	r7,b
                                   3799 ;	include/gsm_serial.c:37: send_gsm_cmd("ATD");
      000EEA 90r03rD8         [24] 3800 	mov	dptr,#___str_4
      000EED 75 F0 80         [24] 3801 	mov	b,#0x80
      000EF0 C0 07            [24] 3802 	push	ar7
      000EF2 C0 06            [24] 3803 	push	ar6
      000EF4 C0 05            [24] 3804 	push	ar5
      000EF6 12r00r00         [24] 3805 	lcall	_send_gsm_cmd
      000EF9 D0 05            [24] 3806 	pop	ar5
      000EFB D0 06            [24] 3807 	pop	ar6
      000EFD D0 07            [24] 3808 	pop	ar7
                                   3809 ;	include/gsm_serial.c:38: send_gsm_cmd(phone);
      000EFF 8D 82            [24] 3810 	mov	dpl,r5
      000F01 8E 83            [24] 3811 	mov	dph,r6
      000F03 8F F0            [24] 3812 	mov	b,r7
      000F05 12r00r00         [24] 3813 	lcall	_send_gsm_cmd
                                   3814 ;	include/gsm_serial.c:39: return gsm_sendandcheck(";\r",1,60,"    CALLING     ");
      000F08 75*12rDF         [24] 3815 	mov	_gsm_sendandcheck_PARM_4,#___str_6
      000F0B 75*13s03         [24] 3816 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_6 >> 8)
      000F0E 75*14 80         [24] 3817 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      000F11 75*10 01         [24] 3818 	mov	_gsm_sendandcheck_PARM_2,#0x01
      000F14 75*11 3C         [24] 3819 	mov	_gsm_sendandcheck_PARM_3,#0x3c
      000F17 90r03rDC         [24] 3820 	mov	dptr,#___str_5
      000F1A 75 F0 80         [24] 3821 	mov	b,#0x80
                                   3822 ;	include/gsm_serial.c:40: }
      000F1D 02r0Dr06         [24] 3823 	ljmp	_gsm_sendandcheck
                                   3824 ;------------------------------------------------------------
                                   3825 ;Allocation info for local variables in function 'send_sms'
                                   3826 ;------------------------------------------------------------
                                   3827 ;	include/gsm_serial.c:43: __bit send_sms(__bit chinh){
                                   3828 ;	-----------------------------------------
                                   3829 ;	 function send_sms
                                   3830 ;	-----------------------------------------
      000F20                       3831 _send_sms:
                                   3832 ;	include/gsm_serial.c:44: if(lenh_sms[0] && !lenh_sms[3]){gsm_sendandcheck("\032",3,1,"TK<1000 K BAOCAO"); return 0;}
      000F20 90r00r16         [24] 3833 	mov	dptr,#_lenh_sms
      000F23 E0               [24] 3834 	movx	a,@dptr
      000F24 60 20            [24] 3835 	jz	00102$
      000F26 90r00r19         [24] 3836 	mov	dptr,#(_lenh_sms + 0x0003)
      000F29 E0               [24] 3837 	movx	a,@dptr
      000F2A 70 1A            [24] 3838 	jnz	00102$
      000F2C 75*12rF2         [24] 3839 	mov	_gsm_sendandcheck_PARM_4,#___str_8
      000F2F 75*13s03         [24] 3840 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_8 >> 8)
      000F32 75*14 80         [24] 3841 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      000F35 75*10 03         [24] 3842 	mov	_gsm_sendandcheck_PARM_2,#0x03
      000F38 75*11 01         [24] 3843 	mov	_gsm_sendandcheck_PARM_3,#0x01
      000F3B 90r03rF0         [24] 3844 	mov	dptr,#___str_7
      000F3E 75 F0 80         [24] 3845 	mov	b,#0x80
      000F41 12r0Dr06         [24] 3846 	lcall	_gsm_sendandcheck
      000F44 C3               [12] 3847 	clr	c
      000F45 22               [24] 3848 	ret
      000F46                       3849 00102$:
                                   3850 ;	include/gsm_serial.c:45: send_gsm_cmd("AT+CMGS=\"");
      000F46 90r04r03         [24] 3851 	mov	dptr,#___str_9
      000F49 75 F0 80         [24] 3852 	mov	b,#0x80
      000F4C 12r00r00         [24] 3853 	lcall	_send_gsm_cmd
                                   3854 ;	include/gsm_serial.c:46: if(chinh) send_gsm_cmd(phone_chinh);
      000F4F 30*40 0B         [24] 3855 	jnb	_send_sms_PARM_1,00105$
      000F52 90r00r00         [24] 3856 	mov	dptr,#_phone_chinh
      000F55 75 F0 00         [24] 3857 	mov	b,#0x00
      000F58 12r00r00         [24] 3858 	lcall	_send_gsm_cmd
      000F5B 80 09            [24] 3859 	sjmp	00106$
      000F5D                       3860 00105$:
                                   3861 ;	include/gsm_serial.c:47: else send_gsm_cmd(eep_phonephu);
      000F5D 90 F0 11         [24] 3862 	mov	dptr,#_eep_phonephu
      000F60 75 F0 80         [24] 3863 	mov	b,#0x80
      000F63 12r00r00         [24] 3864 	lcall	_send_gsm_cmd
      000F66                       3865 00106$:
                                   3866 ;	include/gsm_serial.c:48: gsm_serial_cmd = CMGS;
      000F66 90r00rFD         [24] 3867 	mov	dptr,#_gsm_serial_cmd
      000F69 74 08            [12] 3868 	mov	a,#0x08
      000F6B F0               [24] 3869 	movx	@dptr,a
                                   3870 ;	include/gsm_serial.c:49: return gsm_sendandcheck("\"\r",5,61,"   SENDING   ");
      000F6C 75*12r10         [24] 3871 	mov	_gsm_sendandcheck_PARM_4,#___str_11
      000F6F 75*13s04         [24] 3872 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_11 >> 8)
      000F72 75*14 80         [24] 3873 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      000F75 75*10 05         [24] 3874 	mov	_gsm_sendandcheck_PARM_2,#0x05
      000F78 75*11 3D         [24] 3875 	mov	_gsm_sendandcheck_PARM_3,#0x3d
      000F7B 90r04r0D         [24] 3876 	mov	dptr,#___str_10
      000F7E 75 F0 80         [24] 3877 	mov	b,#0x80
                                   3878 ;	include/gsm_serial.c:50: }
      000F81 02r0Dr06         [24] 3879 	ljmp	_gsm_sendandcheck
                                   3880 ;------------------------------------------------------------
                                   3881 ;Allocation info for local variables in function 'kiemtrataikhoan'
                                   3882 ;------------------------------------------------------------
                                   3883 ;	include/gsm_serial.c:52: __bit kiemtrataikhoan(){
                                   3884 ;	-----------------------------------------
                                   3885 ;	 function kiemtrataikhoan
                                   3886 ;	-----------------------------------------
      000F84                       3887 _kiemtrataikhoan:
                                   3888 ;	include/gsm_serial.c:53: lenh_sms[0] = 0;
      000F84 90r00r16         [24] 3889 	mov	dptr,#_lenh_sms
      000F87 E4               [12] 3890 	clr	a
      000F88 F0               [24] 3891 	movx	@dptr,a
                                   3892 ;	include/gsm_serial.c:54: have_cusd = 0;
                                   3893 ;	assignBit
      000F89 C2*0D            [12] 3894 	clr	_have_cusd
                                   3895 ;	include/gsm_serial.c:55: gsm_serial_cmd = CUSD;
      000F8B 90r00rFD         [24] 3896 	mov	dptr,#_gsm_serial_cmd
      000F8E 74 07            [12] 3897 	mov	a,#0x07
      000F90 F0               [24] 3898 	movx	@dptr,a
                                   3899 ;	include/gsm_serial.c:56: gsm_sendandcheck("AT+CUSD=1,\"*101#\",\r",3,30,"  KIEM TRA TK   ");
      000F91 75*12r32         [24] 3900 	mov	_gsm_sendandcheck_PARM_4,#___str_13
      000F94 75*13s04         [24] 3901 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_13 >> 8)
      000F97 75*14 80         [24] 3902 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      000F9A 75*10 03         [24] 3903 	mov	_gsm_sendandcheck_PARM_2,#0x03
      000F9D 75*11 1E         [24] 3904 	mov	_gsm_sendandcheck_PARM_3,#0x1e
      000FA0 90r04r1E         [24] 3905 	mov	dptr,#___str_12
      000FA3 75 F0 80         [24] 3906 	mov	b,#0x80
      000FA6 12r0Dr06         [24] 3907 	lcall	_gsm_sendandcheck
                                   3908 ;	include/gsm_serial.c:57: gsm_serial_cmd = NORMAL;
      000FA9 90r00rFD         [24] 3909 	mov	dptr,#_gsm_serial_cmd
      000FAC E4               [12] 3910 	clr	a
      000FAD F0               [24] 3911 	movx	@dptr,a
                                   3912 ;	include/gsm_serial.c:58: return lenh_sms[0];
      000FAE 90r00r16         [24] 3913 	mov	dptr,#_lenh_sms
      000FB1 E0               [24] 3914 	movx	a,@dptr
                                   3915 ;	assignBit
      000FB2 24 FF            [12] 3916 	add	a,#0xff
                                   3917 ;	include/gsm_serial.c:59: }
      000FB4 22               [24] 3918 	ret
                                   3919 ;------------------------------------------------------------
                                   3920 ;Allocation info for local variables in function 'kiemtrasodienthoai'
                                   3921 ;------------------------------------------------------------
                                   3922 ;	include/gsm_serial.c:61: __bit kiemtrasodienthoai(){
                                   3923 ;	-----------------------------------------
                                   3924 ;	 function kiemtrasodienthoai
                                   3925 ;	-----------------------------------------
      000FB5                       3926 _kiemtrasodienthoai:
                                   3927 ;	include/gsm_serial.c:63: have_cusd = 0;
                                   3928 ;	assignBit
      000FB5 C2*0D            [12] 3929 	clr	_have_cusd
                                   3930 ;	include/gsm_serial.c:64: gsm_serial_cmd = SDT;
      000FB7 90r00rFD         [24] 3931 	mov	dptr,#_gsm_serial_cmd
      000FBA 74 0D            [12] 3932 	mov	a,#0x0d
      000FBC F0               [24] 3933 	movx	@dptr,a
                                   3934 ;	include/gsm_serial.c:65: switch(nha_mang){
      000FBD 90r00rF8         [24] 3935 	mov	dptr,#_nha_mang
      000FC0 E0               [24] 3936 	movx	a,@dptr
      000FC1 FF               [12] 3937 	mov	r7,a
      000FC2 BF 50 02         [24] 3938 	cjne	r7,#0x50,00124$
      000FC5 80 25            [24] 3939 	sjmp	00102$
      000FC7                       3940 00124$:
      000FC7 BF 66 02         [24] 3941 	cjne	r7,#0x66,00125$
      000FCA 80 38            [24] 3942 	sjmp	00103$
      000FCC                       3943 00125$:
      000FCC BF 6E 02         [24] 3944 	cjne	r7,#0x6e,00126$
      000FCF 80 4B            [24] 3945 	sjmp	00104$
      000FD1                       3946 00126$:
      000FD1 BF 74 60         [24] 3947 	cjne	r7,#0x74,00105$
                                   3948 ;	include/gsm_serial.c:67: return gsm_sendandcheck("AT+CUSD=1,\"*101#\",\r",3,30,"  KIEM TRA SDT   ");
      000FD4 75*12r43         [24] 3949 	mov	_gsm_sendandcheck_PARM_4,#___str_14
      000FD7 75*13s04         [24] 3950 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_14 >> 8)
      000FDA 75*14 80         [24] 3951 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      000FDD 75*10 03         [24] 3952 	mov	_gsm_sendandcheck_PARM_2,#0x03
      000FE0 75*11 1E         [24] 3953 	mov	_gsm_sendandcheck_PARM_3,#0x1e
      000FE3 90r04r1E         [24] 3954 	mov	dptr,#___str_12
      000FE6 75 F0 80         [24] 3955 	mov	b,#0x80
                                   3956 ;	include/gsm_serial.c:68: case VINAPHONE:
      000FE9 02r0Dr06         [24] 3957 	ljmp	_gsm_sendandcheck
      000FEC                       3958 00102$:
                                   3959 ;	include/gsm_serial.c:69: return gsm_sendandcheck("AT+CUSD=1,\"*110#\",\r",3,30,"  KIEM TRA SDT   ");
      000FEC 75*12r43         [24] 3960 	mov	_gsm_sendandcheck_PARM_4,#___str_14
      000FEF 75*13s04         [24] 3961 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_14 >> 8)
      000FF2 75*14 80         [24] 3962 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      000FF5 75*10 03         [24] 3963 	mov	_gsm_sendandcheck_PARM_2,#0x03
      000FF8 75*11 1E         [24] 3964 	mov	_gsm_sendandcheck_PARM_3,#0x1e
      000FFB 90r04r55         [24] 3965 	mov	dptr,#___str_15
      000FFE 75 F0 80         [24] 3966 	mov	b,#0x80
                                   3967 ;	include/gsm_serial.c:70: case MOBIFONE:
      001001 02r0Dr06         [24] 3968 	ljmp	_gsm_sendandcheck
      001004                       3969 00103$:
                                   3970 ;	include/gsm_serial.c:71: return gsm_sendandcheck("AT+CUSD=1,\"*0#\",\r",3,30,"  KIEM TRA SDT   ");
      001004 75*12r43         [24] 3971 	mov	_gsm_sendandcheck_PARM_4,#___str_14
      001007 75*13s04         [24] 3972 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_14 >> 8)
      00100A 75*14 80         [24] 3973 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      00100D 75*10 03         [24] 3974 	mov	_gsm_sendandcheck_PARM_2,#0x03
      001010 75*11 1E         [24] 3975 	mov	_gsm_sendandcheck_PARM_3,#0x1e
      001013 90r04r69         [24] 3976 	mov	dptr,#___str_16
      001016 75 F0 80         [24] 3977 	mov	b,#0x80
                                   3978 ;	include/gsm_serial.c:72: case VIETNAM:
      001019 02r0Dr06         [24] 3979 	ljmp	_gsm_sendandcheck
      00101C                       3980 00104$:
                                   3981 ;	include/gsm_serial.c:73: return gsm_sendandcheck("AT+CUSD=1,\"*101#\",\r",3,30,"  KIEM TRA SDT   ");
      00101C 75*12r43         [24] 3982 	mov	_gsm_sendandcheck_PARM_4,#___str_14
      00101F 75*13s04         [24] 3983 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_14 >> 8)
      001022 75*14 80         [24] 3984 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      001025 75*10 03         [24] 3985 	mov	_gsm_sendandcheck_PARM_2,#0x03
      001028 75*11 1E         [24] 3986 	mov	_gsm_sendandcheck_PARM_3,#0x1e
      00102B 90r04r1E         [24] 3987 	mov	dptr,#___str_12
      00102E 75 F0 80         [24] 3988 	mov	b,#0x80
                                   3989 ;	include/gsm_serial.c:74: }
      001031 02r0Dr06         [24] 3990 	ljmp	_gsm_sendandcheck
      001034                       3991 00105$:
                                   3992 ;	include/gsm_serial.c:77: return 0;
      001034 C3               [12] 3993 	clr	c
                                   3994 ;	include/gsm_serial.c:78: }
      001035 22               [24] 3995 	ret
                                   3996 ;------------------------------------------------------------
                                   3997 ;Allocation info for local variables in function 'kiemtratinhieu'
                                   3998 ;------------------------------------------------------------
                                   3999 ;i                         Allocated to registers r7 
                                   4000 ;------------------------------------------------------------
                                   4001 ;	include/gsm_serial.c:80: void kiemtratinhieu(){
                                   4002 ;	-----------------------------------------
                                   4003 ;	 function kiemtratinhieu
                                   4004 ;	-----------------------------------------
      001036                       4005 _kiemtratinhieu:
                                   4006 ;	include/gsm_serial.c:81: gsm_serial_cmd = CSQ;
      001036 90r00rFD         [24] 4007 	mov	dptr,#_gsm_serial_cmd
      001039 74 0E            [12] 4008 	mov	a,#0x0e
      00103B F0               [24] 4009 	movx	@dptr,a
                                   4010 ;	include/gsm_serial.c:82: clear_sms_buffer(0);
      00103C 75 82 00         [24] 4011 	mov	dpl,#0x00
      00103F 12r0CrEA         [24] 4012 	lcall	_clear_sms_buffer
                                   4013 ;	include/gsm_serial.c:83: sms_index  = 0;
      001042 90r00rBA         [24] 4014 	mov	dptr,#_sms_index
      001045 E4               [12] 4015 	clr	a
      001046 F0               [24] 4016 	movx	@dptr,a
                                   4017 ;	include/gsm_serial.c:84: if(gsm_sendandcheck("AT+CSQ\r",15,1," SONG ")){
      001047 75*12r83         [24] 4018 	mov	_gsm_sendandcheck_PARM_4,#___str_18
      00104A 75*13s04         [24] 4019 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_18 >> 8)
      00104D 75*14 80         [24] 4020 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      001050 75*10 0F         [24] 4021 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      001053 75*11 01         [24] 4022 	mov	_gsm_sendandcheck_PARM_3,#0x01
      001056 90r04r7B         [24] 4023 	mov	dptr,#___str_17
      001059 75 F0 80         [24] 4024 	mov	b,#0x80
      00105C 12r0Dr06         [24] 4025 	lcall	_gsm_sendandcheck
      00105F 50 33            [24] 4026 	jnc	00106$
                                   4027 ;	include/gsm_serial.c:86: signal = 0;
      001061 90r00rF9         [24] 4028 	mov	dptr,#_signal
      001064 E4               [12] 4029 	clr	a
      001065 F0               [24] 4030 	movx	@dptr,a
                                   4031 ;	include/gsm_serial.c:87: while(lenh_sms[i]!=',')signal = lenh_sms[i++]-48 + signal*10;    
      001066 7F 00            [12] 4032 	mov	r7,#0x00
      001068                       4033 00101$:
      001068 EF               [12] 4034 	mov	a,r7
      001069 24r16            [12] 4035 	add	a,#_lenh_sms
      00106B F5 82            [12] 4036 	mov	dpl,a
      00106D E4               [12] 4037 	clr	a
      00106E 34s00            [12] 4038 	addc	a,#(_lenh_sms >> 8)
      001070 F5 83            [12] 4039 	mov	dph,a
      001072 E0               [24] 4040 	movx	a,@dptr
      001073 FE               [12] 4041 	mov	r6,a
      001074 BE 2C 01         [24] 4042 	cjne	r6,#0x2c,00122$
      001077 22               [24] 4043 	ret
      001078                       4044 00122$:
      001078 EF               [12] 4045 	mov	a,r7
      001079 24r16            [12] 4046 	add	a,#_lenh_sms
      00107B F5 82            [12] 4047 	mov	dpl,a
      00107D E4               [12] 4048 	clr	a
      00107E 34s00            [12] 4049 	addc	a,#(_lenh_sms >> 8)
      001080 F5 83            [12] 4050 	mov	dph,a
      001082 0F               [12] 4051 	inc	r7
      001083 E0               [24] 4052 	movx	a,@dptr
      001084 24 D0            [12] 4053 	add	a,#0xd0
      001086 FE               [12] 4054 	mov	r6,a
      001087 90r00rF9         [24] 4055 	mov	dptr,#_signal
      00108A E0               [24] 4056 	movx	a,@dptr
      00108B FD               [12] 4057 	mov	r5,a
      00108C 75 F0 0A         [24] 4058 	mov	b,#0x0a
      00108F A4               [48] 4059 	mul	ab
      001090 2E               [12] 4060 	add	a,r6
      001091 F0               [24] 4061 	movx	@dptr,a
      001092 80 D4            [24] 4062 	sjmp	00101$
      001094                       4063 00106$:
                                   4064 ;	include/gsm_serial.c:89: }
      001094 22               [24] 4065 	ret
                                   4066 ;------------------------------------------------------------
                                   4067 ;Allocation info for local variables in function 'send_thong_so_rut_gon'
                                   4068 ;------------------------------------------------------------
                                   4069 ;i                         Allocated to registers r7 
                                   4070 ;dien_ap                   Allocated to registers r6 
                                   4071 ;------------------------------------------------------------
                                   4072 ;	include/gsm_serial.c:92: void send_thong_so_rut_gon(__bit chinh){
                                   4073 ;	-----------------------------------------
                                   4074 ;	 function send_thong_so_rut_gon
                                   4075 ;	-----------------------------------------
      001095                       4076 _send_thong_so_rut_gon:
                                   4077 ;	include/gsm_serial.c:94: u8 dien_ap = dien_ap_nguon*28/256;
      001095 78r00            [12] 4078 	mov	r0,#_dien_ap_nguon
      001097 86*00            [24] 4079 	mov	__mulint_PARM_2,@r0
      001099 75*01 00         [24] 4080 	mov	(__mulint_PARM_2 + 1),#0x00
      00109C 90 00 1C         [24] 4081 	mov	dptr,#0x001c
      00109F 12r00r00         [24] 4082 	lcall	__mulint
      0010A2 75*00 00         [24] 4083 	mov	__divsint_PARM_2,#0x00
      0010A5 75*01 01         [24] 4084 	mov	(__divsint_PARM_2 + 1),#0x01
      0010A8 12r00r00         [24] 4085 	lcall	__divsint
      0010AB AE 82            [24] 4086 	mov	r6,dpl
                                   4087 ;	include/gsm_serial.c:95: send_gsm_byte(atmel_phat?'8':'S');
      0010AD 30*33 06         [24] 4088 	jnb	_atmel_phat,00115$
      0010B0 7D 38            [12] 4089 	mov	r5,#0x38
      0010B2 7F 00            [12] 4090 	mov	r7,#0x00
      0010B4 80 04            [24] 4091 	sjmp	00116$
      0010B6                       4092 00115$:
      0010B6 7D 53            [12] 4093 	mov	r5,#0x53
      0010B8 7F 00            [12] 4094 	mov	r7,#0x00
      0010BA                       4095 00116$:
      0010BA 8D 82            [24] 4096 	mov	dpl,r5
      0010BC C0 06            [24] 4097 	push	ar6
      0010BE 12r00r00         [24] 4098 	lcall	_send_gsm_byte
      0010C1 D0 06            [24] 4099 	pop	ar6
                                   4100 ;	include/gsm_serial.c:96: send_gsm_byte((may_dc?'D':'S'));
      0010C3 30*32 06         [24] 4101 	jnb	_may_dc,00117$
      0010C6 7D 44            [12] 4102 	mov	r5,#0x44
      0010C8 7F 00            [12] 4103 	mov	r7,#0x00
      0010CA 80 04            [24] 4104 	sjmp	00118$
      0010CC                       4105 00117$:
      0010CC 7D 53            [12] 4106 	mov	r5,#0x53
      0010CE 7F 00            [12] 4107 	mov	r7,#0x00
      0010D0                       4108 00118$:
      0010D0 8D 82            [24] 4109 	mov	dpl,r5
      0010D2 C0 06            [24] 4110 	push	ar6
      0010D4 12r00r00         [24] 4111 	lcall	_send_gsm_byte
      0010D7 D0 06            [24] 4112 	pop	ar6
                                   4113 ;	include/gsm_serial.c:97: do{
      0010D9 7F 00            [12] 4114 	mov	r7,#0x00
      0010DB                       4115 00103$:
                                   4116 ;	include/gsm_serial.c:98: if(!thoi_gian_doi_doc_cam[i])send_gsm_byte('E');
      0010DB EF               [12] 4117 	mov	a,r7
      0010DC 24rE7            [12] 4118 	add	a,#_thoi_gian_doi_doc_cam
      0010DE FC               [12] 4119 	mov	r4,a
      0010DF E4               [12] 4120 	clr	a
      0010E0 34s00            [12] 4121 	addc	a,#(_thoi_gian_doi_doc_cam >> 8)
      0010E2 FD               [12] 4122 	mov	r5,a
      0010E3 8C 82            [24] 4123 	mov	dpl,r4
      0010E5 8D 83            [24] 4124 	mov	dph,r5
      0010E7 E0               [24] 4125 	movx	a,@dptr
      0010E8 70 0E            [24] 4126 	jnz	00102$
      0010EA 75 82 45         [24] 4127 	mov	dpl,#0x45
      0010ED C0 07            [24] 4128 	push	ar7
      0010EF C0 06            [24] 4129 	push	ar6
      0010F1 12r00r00         [24] 4130 	lcall	_send_gsm_byte
      0010F4 D0 06            [24] 4131 	pop	ar6
      0010F6 D0 07            [24] 4132 	pop	ar7
      0010F8                       4133 00102$:
                                   4134 ;	include/gsm_serial.c:99: send_gsm_byte(gio[i]/10+'0');
      0010F8 EF               [12] 4135 	mov	a,r7
      0010F9 24r04            [12] 4136 	add	a,#_gio
      0010FB F9               [12] 4137 	mov	r1,a
      0010FC 87 05            [24] 4138 	mov	ar5,@r1
      0010FE 7C 00            [12] 4139 	mov	r4,#0x00
      001100 75*00 0A         [24] 4140 	mov	__divsint_PARM_2,#0x0a
                                   4141 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      001103 8C*01            [24] 4142 	mov	(__divsint_PARM_2 + 1),r4
      001105 8D 82            [24] 4143 	mov	dpl,r5
      001107 8C 83            [24] 4144 	mov	dph,r4
      001109 C0 07            [24] 4145 	push	ar7
      00110B C0 06            [24] 4146 	push	ar6
      00110D C0 01            [24] 4147 	push	ar1
      00110F 12r00r00         [24] 4148 	lcall	__divsint
      001112 AC 82            [24] 4149 	mov	r4,dpl
      001114 74 30            [12] 4150 	mov	a,#0x30
      001116 2C               [12] 4151 	add	a,r4
      001117 F5 82            [12] 4152 	mov	dpl,a
      001119 12r00r00         [24] 4153 	lcall	_send_gsm_byte
      00111C D0 01            [24] 4154 	pop	ar1
                                   4155 ;	include/gsm_serial.c:100: send_gsm_byte(gio[i]%10+'0');
      00111E 87 05            [24] 4156 	mov	ar5,@r1
      001120 7C 00            [12] 4157 	mov	r4,#0x00
      001122 75*00 0A         [24] 4158 	mov	__modsint_PARM_2,#0x0a
                                   4159 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      001125 8C*01            [24] 4160 	mov	(__modsint_PARM_2 + 1),r4
      001127 8D 82            [24] 4161 	mov	dpl,r5
      001129 8C 83            [24] 4162 	mov	dph,r4
      00112B 12r00r00         [24] 4163 	lcall	__modsint
      00112E AC 82            [24] 4164 	mov	r4,dpl
      001130 74 30            [12] 4165 	mov	a,#0x30
      001132 2C               [12] 4166 	add	a,r4
      001133 F5 82            [12] 4167 	mov	dpl,a
      001135 12r00r00         [24] 4168 	lcall	_send_gsm_byte
      001138 D0 06            [24] 4169 	pop	ar6
      00113A D0 07            [24] 4170 	pop	ar7
                                   4171 ;	include/gsm_serial.c:101: send_gsm_byte(phut[i]/10+'0');
      00113C EF               [12] 4172 	mov	a,r7
      00113D 24r08            [12] 4173 	add	a,#_phut
      00113F F9               [12] 4174 	mov	r1,a
      001140 87 05            [24] 4175 	mov	ar5,@r1
      001142 7C 00            [12] 4176 	mov	r4,#0x00
      001144 75*00 0A         [24] 4177 	mov	__divsint_PARM_2,#0x0a
                                   4178 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      001147 8C*01            [24] 4179 	mov	(__divsint_PARM_2 + 1),r4
      001149 8D 82            [24] 4180 	mov	dpl,r5
      00114B 8C 83            [24] 4181 	mov	dph,r4
      00114D C0 07            [24] 4182 	push	ar7
      00114F C0 06            [24] 4183 	push	ar6
      001151 C0 01            [24] 4184 	push	ar1
      001153 12r00r00         [24] 4185 	lcall	__divsint
      001156 AC 82            [24] 4186 	mov	r4,dpl
      001158 74 30            [12] 4187 	mov	a,#0x30
      00115A 2C               [12] 4188 	add	a,r4
      00115B F5 82            [12] 4189 	mov	dpl,a
      00115D 12r00r00         [24] 4190 	lcall	_send_gsm_byte
      001160 D0 01            [24] 4191 	pop	ar1
                                   4192 ;	include/gsm_serial.c:102: send_gsm_byte(phut[i]%10+'0');
      001162 87 05            [24] 4193 	mov	ar5,@r1
      001164 7C 00            [12] 4194 	mov	r4,#0x00
      001166 75*00 0A         [24] 4195 	mov	__modsint_PARM_2,#0x0a
                                   4196 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      001169 8C*01            [24] 4197 	mov	(__modsint_PARM_2 + 1),r4
      00116B 8D 82            [24] 4198 	mov	dpl,r5
      00116D 8C 83            [24] 4199 	mov	dph,r4
      00116F 12r00r00         [24] 4200 	lcall	__modsint
      001172 AC 82            [24] 4201 	mov	r4,dpl
      001174 74 30            [12] 4202 	mov	a,#0x30
      001176 2C               [12] 4203 	add	a,r4
      001177 F5 82            [12] 4204 	mov	dpl,a
      001179 12r00r00         [24] 4205 	lcall	_send_gsm_byte
      00117C D0 06            [24] 4206 	pop	ar6
      00117E D0 07            [24] 4207 	pop	ar7
                                   4208 ;	include/gsm_serial.c:103: }while(++i!=so_motor);
      001180 0F               [12] 4209 	inc	r7
      001181 90r01r2E         [24] 4210 	mov	dptr,#_so_motor
      001184 E0               [24] 4211 	movx	a,@dptr
      001185 FD               [12] 4212 	mov	r5,a
      001186 EF               [12] 4213 	mov	a,r7
      001187 B5 05 02         [24] 4214 	cjne	a,ar5,00191$
      00118A 80 03            [24] 4215 	sjmp	00192$
      00118C                       4216 00191$:
      00118C 02r10rDB         [24] 4217 	ljmp	00103$
      00118F                       4218 00192$:
                                   4219 ;	include/gsm_serial.c:104: if(chinh){
      00118F 30*41 23         [24] 4220 	jnb	_send_thong_so_rut_gon_PARM_1,00107$
                                   4221 ;	include/gsm_serial.c:105: send_gsm_byte((GPS_time?(eep_gpson?'G':'D'):'d'));
      001192 30*1B 13         [24] 4222 	jnb	_GPS_time,00119$
      001195 90 F0 02         [24] 4223 	mov	dptr,#_eep_gpson
      001198 E4               [12] 4224 	clr	a
      001199 93               [24] 4225 	movc	a,@a+dptr
      00119A 60 06            [24] 4226 	jz	00121$
      00119C 7D 47            [12] 4227 	mov	r5,#0x47
      00119E 7F 00            [12] 4228 	mov	r7,#0x00
      0011A0 80 0A            [24] 4229 	sjmp	00120$
      0011A2                       4230 00121$:
      0011A2 7D 44            [12] 4231 	mov	r5,#0x44
      0011A4 7F 00            [12] 4232 	mov	r7,#0x00
      0011A6 80 04            [24] 4233 	sjmp	00120$
      0011A8                       4234 00119$:
      0011A8 7D 64            [12] 4235 	mov	r5,#0x64
      0011AA 7F 00            [12] 4236 	mov	r7,#0x00
      0011AC                       4237 00120$:
      0011AC 8D 82            [24] 4238 	mov	dpl,r5
      0011AE C0 06            [24] 4239 	push	ar6
      0011B0 12r00r00         [24] 4240 	lcall	_send_gsm_byte
      0011B3 D0 06            [24] 4241 	pop	ar6
      0011B5                       4242 00107$:
                                   4243 ;	include/gsm_serial.c:107: send_gsm_byte(hour/10+'0');
      0011B5 AD*02            [24] 4244 	mov	r5,_hour
      0011B7 7F 00            [12] 4245 	mov	r7,#0x00
      0011B9 75*00 0A         [24] 4246 	mov	__divsint_PARM_2,#0x0a
                                   4247 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      0011BC 8F*01            [24] 4248 	mov	(__divsint_PARM_2 + 1),r7
      0011BE 8D 82            [24] 4249 	mov	dpl,r5
      0011C0 8F 83            [24] 4250 	mov	dph,r7
      0011C2 C0 06            [24] 4251 	push	ar6
      0011C4 12r00r00         [24] 4252 	lcall	__divsint
      0011C7 AD 82            [24] 4253 	mov	r5,dpl
      0011C9 74 30            [12] 4254 	mov	a,#0x30
      0011CB 2D               [12] 4255 	add	a,r5
      0011CC F5 82            [12] 4256 	mov	dpl,a
      0011CE 12r00r00         [24] 4257 	lcall	_send_gsm_byte
                                   4258 ;	include/gsm_serial.c:108: send_gsm_byte(hour%10+'0');
      0011D1 AD*02            [24] 4259 	mov	r5,_hour
      0011D3 7F 00            [12] 4260 	mov	r7,#0x00
      0011D5 75*00 0A         [24] 4261 	mov	__modsint_PARM_2,#0x0a
                                   4262 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0011D8 8F*01            [24] 4263 	mov	(__modsint_PARM_2 + 1),r7
      0011DA 8D 82            [24] 4264 	mov	dpl,r5
      0011DC 8F 83            [24] 4265 	mov	dph,r7
      0011DE 12r00r00         [24] 4266 	lcall	__modsint
      0011E1 AD 82            [24] 4267 	mov	r5,dpl
      0011E3 74 30            [12] 4268 	mov	a,#0x30
      0011E5 2D               [12] 4269 	add	a,r5
      0011E6 F5 82            [12] 4270 	mov	dpl,a
      0011E8 12r00r00         [24] 4271 	lcall	_send_gsm_byte
                                   4272 ;	include/gsm_serial.c:109: send_gsm_byte(minute/10+'0');
      0011EB AD*01            [24] 4273 	mov	r5,_minute
      0011ED 7F 00            [12] 4274 	mov	r7,#0x00
      0011EF 75*00 0A         [24] 4275 	mov	__divsint_PARM_2,#0x0a
                                   4276 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      0011F2 8F*01            [24] 4277 	mov	(__divsint_PARM_2 + 1),r7
      0011F4 8D 82            [24] 4278 	mov	dpl,r5
      0011F6 8F 83            [24] 4279 	mov	dph,r7
      0011F8 12r00r00         [24] 4280 	lcall	__divsint
      0011FB AD 82            [24] 4281 	mov	r5,dpl
      0011FD 74 30            [12] 4282 	mov	a,#0x30
      0011FF 2D               [12] 4283 	add	a,r5
      001200 F5 82            [12] 4284 	mov	dpl,a
      001202 12r00r00         [24] 4285 	lcall	_send_gsm_byte
                                   4286 ;	include/gsm_serial.c:110: send_gsm_byte(minute%10+'0');
      001205 AD*01            [24] 4287 	mov	r5,_minute
      001207 7F 00            [12] 4288 	mov	r7,#0x00
      001209 75*00 0A         [24] 4289 	mov	__modsint_PARM_2,#0x0a
                                   4290 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      00120C 8F*01            [24] 4291 	mov	(__modsint_PARM_2 + 1),r7
      00120E 8D 82            [24] 4292 	mov	dpl,r5
      001210 8F 83            [24] 4293 	mov	dph,r7
      001212 12r00r00         [24] 4294 	lcall	__modsint
      001215 AD 82            [24] 4295 	mov	r5,dpl
      001217 74 30            [12] 4296 	mov	a,#0x30
      001219 2D               [12] 4297 	add	a,r5
      00121A F5 82            [12] 4298 	mov	dpl,a
      00121C 12r00r00         [24] 4299 	lcall	_send_gsm_byte
                                   4300 ;	include/gsm_serial.c:111: send_gsm_byte(date+'0');
      00121F 90r00rDC         [24] 4301 	mov	dptr,#_date
      001222 E0               [24] 4302 	movx	a,@dptr
      001223 24 30            [12] 4303 	add	a,#0x30
      001225 F5 82            [12] 4304 	mov	dpl,a
      001227 12r00r00         [24] 4305 	lcall	_send_gsm_byte
                                   4306 ;	include/gsm_serial.c:112: send_gsm_byte(' ');
      00122A 75 82 20         [24] 4307 	mov	dpl,#0x20
      00122D 12r00r00         [24] 4308 	lcall	_send_gsm_byte
      001230 D0 06            [24] 4309 	pop	ar6
                                   4310 ;	include/gsm_serial.c:113: send_gsm_byte(motor_dung?'0':'1');
      001232 30*34 06         [24] 4311 	jnb	_motor_dung,00123$
      001235 7D 30            [12] 4312 	mov	r5,#0x30
      001237 7F 00            [12] 4313 	mov	r7,#0x00
      001239 80 04            [24] 4314 	sjmp	00124$
      00123B                       4315 00123$:
      00123B 7D 31            [12] 4316 	mov	r5,#0x31
      00123D 7F 00            [12] 4317 	mov	r7,#0x00
      00123F                       4318 00124$:
      00123F 8D 82            [24] 4319 	mov	dpl,r5
      001241 C0 06            [24] 4320 	push	ar6
      001243 12r00r00         [24] 4321 	lcall	_send_gsm_byte
      001246 D0 06            [24] 4322 	pop	ar6
                                   4323 ;	include/gsm_serial.c:114: send_gsm_byte(xung_giay_check?'1':'0');
      001248 90r00rE6         [24] 4324 	mov	dptr,#_xung_giay_check
      00124B E0               [24] 4325 	movx	a,@dptr
      00124C 60 06            [24] 4326 	jz	00125$
      00124E 7D 31            [12] 4327 	mov	r5,#0x31
      001250 7F 00            [12] 4328 	mov	r7,#0x00
      001252 80 04            [24] 4329 	sjmp	00126$
      001254                       4330 00125$:
      001254 7D 30            [12] 4331 	mov	r5,#0x30
      001256 7F 00            [12] 4332 	mov	r7,#0x00
      001258                       4333 00126$:
      001258 8D 82            [24] 4334 	mov	dpl,r5
      00125A C0 06            [24] 4335 	push	ar6
      00125C 12r00r00         [24] 4336 	lcall	_send_gsm_byte
      00125F D0 06            [24] 4337 	pop	ar6
                                   4338 ;	include/gsm_serial.c:115: send_gsm_byte(DenRelay?'1':'0');
      001261 30 A1 06         [24] 4339 	jnb	_P21,00127$
      001264 7D 31            [12] 4340 	mov	r5,#0x31
      001266 7F 00            [12] 4341 	mov	r7,#0x00
      001268 80 04            [24] 4342 	sjmp	00128$
      00126A                       4343 00127$:
      00126A 7D 30            [12] 4344 	mov	r5,#0x30
      00126C 7F 00            [12] 4345 	mov	r7,#0x00
      00126E                       4346 00128$:
      00126E 8D 82            [24] 4347 	mov	dpl,r5
      001270 C0 06            [24] 4348 	push	ar6
      001272 12r00r00         [24] 4349 	lcall	_send_gsm_byte
      001275 D0 06            [24] 4350 	pop	ar6
                                   4351 ;	include/gsm_serial.c:116: if((eep_mp3%4) || chinh){
      001277 90 F0 10         [24] 4352 	mov	dptr,#_eep_mp3
      00127A E4               [12] 4353 	clr	a
      00127B 93               [24] 4354 	movc	a,@a+dptr
      00127C 54 03            [12] 4355 	anl	a,#0x03
      00127E 70 03            [24] 4356 	jnz	00108$
      001280 30*41 1C         [24] 4357 	jnb	_send_thong_so_rut_gon_PARM_1,00109$
      001283                       4358 00108$:
                                   4359 ;	include/gsm_serial.c:117: send_gsm_byte(eep_mp3+(mp3_playing?'0':47));
      001283 30 92 06         [24] 4360 	jnb	_P12,00129$
      001286 7D 30            [12] 4361 	mov	r5,#0x30
      001288 7F 00            [12] 4362 	mov	r7,#0x00
      00128A 80 04            [24] 4363 	sjmp	00130$
      00128C                       4364 00129$:
      00128C 7D 2F            [12] 4365 	mov	r5,#0x2f
      00128E 7F 00            [12] 4366 	mov	r7,#0x00
      001290                       4367 00130$:
      001290 90 F0 10         [24] 4368 	mov	dptr,#_eep_mp3
      001293 E4               [12] 4369 	clr	a
      001294 93               [24] 4370 	movc	a,@a+dptr
      001295 2D               [12] 4371 	add	a,r5
      001296 F5 82            [12] 4372 	mov	dpl,a
      001298 C0 06            [24] 4373 	push	ar6
      00129A 12r00r00         [24] 4374 	lcall	_send_gsm_byte
      00129D D0 06            [24] 4375 	pop	ar6
      00129F                       4376 00109$:
                                   4377 ;	include/gsm_serial.c:119: send_gsm_byte(' ');
      00129F 75 82 20         [24] 4378 	mov	dpl,#0x20
      0012A2 C0 06            [24] 4379 	push	ar6
      0012A4 12r00r00         [24] 4380 	lcall	_send_gsm_byte
      0012A7 D0 06            [24] 4381 	pop	ar6
                                   4382 ;	include/gsm_serial.c:120: send_gsm_byte(dien_ap/10+'0');
      0012A9 7F 00            [12] 4383 	mov	r7,#0x00
      0012AB 75*00 0A         [24] 4384 	mov	__divsint_PARM_2,#0x0a
                                   4385 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      0012AE 8F*01            [24] 4386 	mov	(__divsint_PARM_2 + 1),r7
      0012B0 8E 82            [24] 4387 	mov	dpl,r6
      0012B2 8F 83            [24] 4388 	mov	dph,r7
      0012B4 C0 07            [24] 4389 	push	ar7
      0012B6 C0 06            [24] 4390 	push	ar6
      0012B8 12r00r00         [24] 4391 	lcall	__divsint
      0012BB AC 82            [24] 4392 	mov	r4,dpl
      0012BD 74 30            [12] 4393 	mov	a,#0x30
      0012BF 2C               [12] 4394 	add	a,r4
      0012C0 F5 82            [12] 4395 	mov	dpl,a
      0012C2 12r00r00         [24] 4396 	lcall	_send_gsm_byte
      0012C5 D0 06            [24] 4397 	pop	ar6
      0012C7 D0 07            [24] 4398 	pop	ar7
                                   4399 ;	include/gsm_serial.c:121: send_gsm_byte(dien_ap%10+'0');
      0012C9 75*00 0A         [24] 4400 	mov	__modsint_PARM_2,#0x0a
      0012CC 75*01 00         [24] 4401 	mov	(__modsint_PARM_2 + 1),#0x00
      0012CF 8E 82            [24] 4402 	mov	dpl,r6
      0012D1 8F 83            [24] 4403 	mov	dph,r7
      0012D3 12r00r00         [24] 4404 	lcall	__modsint
      0012D6 AE 82            [24] 4405 	mov	r6,dpl
      0012D8 74 30            [12] 4406 	mov	a,#0x30
      0012DA 2E               [12] 4407 	add	a,r6
      0012DB F5 82            [12] 4408 	mov	dpl,a
      0012DD 12r00r00         [24] 4409 	lcall	_send_gsm_byte
                                   4410 ;	include/gsm_serial.c:122: if(!chinh) return;
      0012E0 20*41 01         [24] 4411 	jb	_send_thong_so_rut_gon_PARM_1,00112$
      0012E3 22               [24] 4412 	ret
      0012E4                       4413 00112$:
                                   4414 ;	include/gsm_serial.c:124: send_gsm_byte(signal/10+'0');
      0012E4 90r00rF9         [24] 4415 	mov	dptr,#_signal
      0012E7 E0               [24] 4416 	movx	a,@dptr
      0012E8 FF               [12] 4417 	mov	r7,a
      0012E9 7E 00            [12] 4418 	mov	r6,#0x00
      0012EB 75*00 0A         [24] 4419 	mov	__divsint_PARM_2,#0x0a
                                   4420 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      0012EE 8E*01            [24] 4421 	mov	(__divsint_PARM_2 + 1),r6
      0012F0 8F 82            [24] 4422 	mov	dpl,r7
      0012F2 8E 83            [24] 4423 	mov	dph,r6
      0012F4 12r00r00         [24] 4424 	lcall	__divsint
      0012F7 AE 82            [24] 4425 	mov	r6,dpl
      0012F9 74 30            [12] 4426 	mov	a,#0x30
      0012FB 2E               [12] 4427 	add	a,r6
      0012FC F5 82            [12] 4428 	mov	dpl,a
      0012FE 12r00r00         [24] 4429 	lcall	_send_gsm_byte
                                   4430 ;	include/gsm_serial.c:125: send_gsm_byte(signal%10+'0');
      001301 90r00rF9         [24] 4431 	mov	dptr,#_signal
      001304 E0               [24] 4432 	movx	a,@dptr
      001305 FF               [12] 4433 	mov	r7,a
      001306 7E 00            [12] 4434 	mov	r6,#0x00
      001308 75*00 0A         [24] 4435 	mov	__modsint_PARM_2,#0x0a
                                   4436 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      00130B 8E*01            [24] 4437 	mov	(__modsint_PARM_2 + 1),r6
      00130D 8F 82            [24] 4438 	mov	dpl,r7
      00130F 8E 83            [24] 4439 	mov	dph,r6
      001311 12r00r00         [24] 4440 	lcall	__modsint
      001314 AE 82            [24] 4441 	mov	r6,dpl
      001316 74 30            [12] 4442 	mov	a,#0x30
      001318 2E               [12] 4443 	add	a,r6
      001319 F5 82            [12] 4444 	mov	dpl,a
                                   4445 ;	include/gsm_serial.c:126: }
      00131B 02r00r00         [24] 4446 	ljmp	_send_gsm_byte
                                   4447 ;------------------------------------------------------------
                                   4448 ;Allocation info for local variables in function 'send_gio_kim'
                                   4449 ;------------------------------------------------------------
                                   4450 ;i                         Allocated to registers r7 
                                   4451 ;------------------------------------------------------------
                                   4452 ;	include/gsm_serial.c:128: void send_gio_kim(){
                                   4453 ;	-----------------------------------------
                                   4454 ;	 function send_gio_kim
                                   4455 ;	-----------------------------------------
      00131E                       4456 _send_gio_kim:
                                   4457 ;	include/gsm_serial.c:130: send_gsm_cmd(atmel_phat?"\r89C55":"\rSTC15");
      00131E 30*33 06         [24] 4458 	jnb	_atmel_phat,00108$
      001321 7Er8A            [12] 4459 	mov	r6,#___str_19
      001323 7Fs04            [12] 4460 	mov	r7,#(___str_19 >> 8)
      001325 80 04            [24] 4461 	sjmp	00109$
      001327                       4462 00108$:
      001327 7Er91            [12] 4463 	mov	r6,#___str_20
      001329 7Fs04            [12] 4464 	mov	r7,#(___str_20 >> 8)
      00132B                       4465 00109$:
      00132B 7D 80            [12] 4466 	mov	r5,#0x80
      00132D 8E 82            [24] 4467 	mov	dpl,r6
      00132F 8F 83            [24] 4468 	mov	dph,r7
      001331 8D F0            [24] 4469 	mov	b,r5
      001333 12r00r00         [24] 4470 	lcall	_send_gsm_cmd
                                   4471 ;	include/gsm_serial.c:131: do{
      001336 7F 00            [12] 4472 	mov	r7,#0x00
      001338                       4473 00103$:
                                   4474 ;	include/gsm_serial.c:132: send_gsm_cmd(may_dc?" DC":" ST");
      001338 30*32 06         [24] 4475 	jnb	_may_dc,00110$
      00133B 7Dr98            [12] 4476 	mov	r5,#___str_21
      00133D 7Es04            [12] 4477 	mov	r6,#(___str_21 >> 8)
      00133F 80 04            [24] 4478 	sjmp	00111$
      001341                       4479 00110$:
      001341 7Dr9C            [12] 4480 	mov	r5,#___str_22
      001343 7Es04            [12] 4481 	mov	r6,#(___str_22 >> 8)
      001345                       4482 00111$:
      001345 7C 80            [12] 4483 	mov	r4,#0x80
      001347 8D 82            [24] 4484 	mov	dpl,r5
      001349 8E 83            [24] 4485 	mov	dph,r6
      00134B 8C F0            [24] 4486 	mov	b,r4
      00134D C0 07            [24] 4487 	push	ar7
      00134F 12r00r00         [24] 4488 	lcall	_send_gsm_cmd
      001352 D0 07            [24] 4489 	pop	ar7
                                   4490 ;	include/gsm_serial.c:133: send_gsm_byte(i+'1');
      001354 8F 06            [24] 4491 	mov	ar6,r7
      001356 74 31            [12] 4492 	mov	a,#0x31
      001358 2E               [12] 4493 	add	a,r6
      001359 F5 82            [12] 4494 	mov	dpl,a
      00135B C0 07            [24] 4495 	push	ar7
      00135D 12r00r00         [24] 4496 	lcall	_send_gsm_byte
                                   4497 ;	include/gsm_serial.c:134: send_gsm_byte('=');
      001360 75 82 3D         [24] 4498 	mov	dpl,#0x3d
      001363 12r00r00         [24] 4499 	lcall	_send_gsm_byte
      001366 D0 07            [24] 4500 	pop	ar7
                                   4501 ;	include/gsm_serial.c:135: if(!thoi_gian_doi_doc_cam[i])send_gsm_byte('E');
      001368 EF               [12] 4502 	mov	a,r7
      001369 24rE7            [12] 4503 	add	a,#_thoi_gian_doi_doc_cam
      00136B FD               [12] 4504 	mov	r5,a
      00136C E4               [12] 4505 	clr	a
      00136D 34s00            [12] 4506 	addc	a,#(_thoi_gian_doi_doc_cam >> 8)
      00136F FE               [12] 4507 	mov	r6,a
      001370 8D 82            [24] 4508 	mov	dpl,r5
      001372 8E 83            [24] 4509 	mov	dph,r6
      001374 E0               [24] 4510 	movx	a,@dptr
      001375 70 0A            [24] 4511 	jnz	00102$
      001377 75 82 45         [24] 4512 	mov	dpl,#0x45
      00137A C0 07            [24] 4513 	push	ar7
      00137C 12r00r00         [24] 4514 	lcall	_send_gsm_byte
      00137F D0 07            [24] 4515 	pop	ar7
      001381                       4516 00102$:
                                   4517 ;	include/gsm_serial.c:136: send_gsm_byte(gio[i]/10+'0');
      001381 EF               [12] 4518 	mov	a,r7
      001382 24r04            [12] 4519 	add	a,#_gio
      001384 F9               [12] 4520 	mov	r1,a
      001385 87 06            [24] 4521 	mov	ar6,@r1
      001387 7D 00            [12] 4522 	mov	r5,#0x00
      001389 75*00 0A         [24] 4523 	mov	__divsint_PARM_2,#0x0a
                                   4524 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      00138C 8D*01            [24] 4525 	mov	(__divsint_PARM_2 + 1),r5
      00138E 8E 82            [24] 4526 	mov	dpl,r6
      001390 8D 83            [24] 4527 	mov	dph,r5
      001392 C0 07            [24] 4528 	push	ar7
      001394 C0 01            [24] 4529 	push	ar1
      001396 12r00r00         [24] 4530 	lcall	__divsint
      001399 AD 82            [24] 4531 	mov	r5,dpl
      00139B 74 30            [12] 4532 	mov	a,#0x30
      00139D 2D               [12] 4533 	add	a,r5
      00139E F5 82            [12] 4534 	mov	dpl,a
      0013A0 12r00r00         [24] 4535 	lcall	_send_gsm_byte
      0013A3 D0 01            [24] 4536 	pop	ar1
                                   4537 ;	include/gsm_serial.c:137: send_gsm_byte(gio[i]%10+'0');
      0013A5 87 06            [24] 4538 	mov	ar6,@r1
      0013A7 7D 00            [12] 4539 	mov	r5,#0x00
      0013A9 75*00 0A         [24] 4540 	mov	__modsint_PARM_2,#0x0a
                                   4541 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0013AC 8D*01            [24] 4542 	mov	(__modsint_PARM_2 + 1),r5
      0013AE 8E 82            [24] 4543 	mov	dpl,r6
      0013B0 8D 83            [24] 4544 	mov	dph,r5
      0013B2 12r00r00         [24] 4545 	lcall	__modsint
      0013B5 AD 82            [24] 4546 	mov	r5,dpl
      0013B7 74 30            [12] 4547 	mov	a,#0x30
      0013B9 2D               [12] 4548 	add	a,r5
      0013BA F5 82            [12] 4549 	mov	dpl,a
      0013BC 12r00r00         [24] 4550 	lcall	_send_gsm_byte
                                   4551 ;	include/gsm_serial.c:138: send_gsm_byte(':');
      0013BF 75 82 3A         [24] 4552 	mov	dpl,#0x3a
      0013C2 12r00r00         [24] 4553 	lcall	_send_gsm_byte
      0013C5 D0 07            [24] 4554 	pop	ar7
                                   4555 ;	include/gsm_serial.c:139: send_gsm_byte(phut[i]/10+'0');
      0013C7 EF               [12] 4556 	mov	a,r7
      0013C8 24r08            [12] 4557 	add	a,#_phut
      0013CA F9               [12] 4558 	mov	r1,a
      0013CB 87 06            [24] 4559 	mov	ar6,@r1
      0013CD 7D 00            [12] 4560 	mov	r5,#0x00
      0013CF 75*00 0A         [24] 4561 	mov	__divsint_PARM_2,#0x0a
                                   4562 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      0013D2 8D*01            [24] 4563 	mov	(__divsint_PARM_2 + 1),r5
      0013D4 8E 82            [24] 4564 	mov	dpl,r6
      0013D6 8D 83            [24] 4565 	mov	dph,r5
      0013D8 C0 07            [24] 4566 	push	ar7
      0013DA C0 01            [24] 4567 	push	ar1
      0013DC 12r00r00         [24] 4568 	lcall	__divsint
      0013DF AD 82            [24] 4569 	mov	r5,dpl
      0013E1 74 30            [12] 4570 	mov	a,#0x30
      0013E3 2D               [12] 4571 	add	a,r5
      0013E4 F5 82            [12] 4572 	mov	dpl,a
      0013E6 12r00r00         [24] 4573 	lcall	_send_gsm_byte
      0013E9 D0 01            [24] 4574 	pop	ar1
                                   4575 ;	include/gsm_serial.c:140: send_gsm_byte(phut[i]%10+'0');
      0013EB 87 06            [24] 4576 	mov	ar6,@r1
      0013ED 7D 00            [12] 4577 	mov	r5,#0x00
      0013EF 75*00 0A         [24] 4578 	mov	__modsint_PARM_2,#0x0a
                                   4579 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0013F2 8D*01            [24] 4580 	mov	(__modsint_PARM_2 + 1),r5
      0013F4 8E 82            [24] 4581 	mov	dpl,r6
      0013F6 8D 83            [24] 4582 	mov	dph,r5
      0013F8 12r00r00         [24] 4583 	lcall	__modsint
      0013FB AD 82            [24] 4584 	mov	r5,dpl
      0013FD 74 30            [12] 4585 	mov	a,#0x30
      0013FF 2D               [12] 4586 	add	a,r5
      001400 F5 82            [12] 4587 	mov	dpl,a
      001402 12r00r00         [24] 4588 	lcall	_send_gsm_byte
      001405 D0 07            [24] 4589 	pop	ar7
                                   4590 ;	include/gsm_serial.c:141: }while(++i!=so_motor);
      001407 0F               [12] 4591 	inc	r7
      001408 90r01r2E         [24] 4592 	mov	dptr,#_so_motor
      00140B E0               [24] 4593 	movx	a,@dptr
      00140C FE               [12] 4594 	mov	r6,a
      00140D EF               [12] 4595 	mov	a,r7
      00140E B5 06 01         [24] 4596 	cjne	a,ar6,00132$
      001411 22               [24] 4597 	ret
      001412                       4598 00132$:
      001412 02r13r38         [24] 4599 	ljmp	00103$
                                   4600 ;	include/gsm_serial.c:142: }
      001415 22               [24] 4601 	ret
                                   4602 ;------------------------------------------------------------
                                   4603 ;Allocation info for local variables in function 'send_gio_thuc'
                                   4604 ;------------------------------------------------------------
                                   4605 ;	include/gsm_serial.c:144: void send_gio_thuc(__bit chinh){
                                   4606 ;	-----------------------------------------
                                   4607 ;	 function send_gio_thuc
                                   4608 ;	-----------------------------------------
      001416                       4609 _send_gio_thuc:
                                   4610 ;	include/gsm_serial.c:145: send_gsm_cmd(" T=");
      001416 90r04rA0         [24] 4611 	mov	dptr,#___str_23
      001419 75 F0 80         [24] 4612 	mov	b,#0x80
      00141C 12r00r00         [24] 4613 	lcall	_send_gsm_cmd
                                   4614 ;	include/gsm_serial.c:146: send_gsm_byte(hour/10+'0');
      00141F AE*02            [24] 4615 	mov	r6,_hour
      001421 7F 00            [12] 4616 	mov	r7,#0x00
      001423 75*00 0A         [24] 4617 	mov	__divsint_PARM_2,#0x0a
                                   4618 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      001426 8F*01            [24] 4619 	mov	(__divsint_PARM_2 + 1),r7
      001428 8E 82            [24] 4620 	mov	dpl,r6
      00142A 8F 83            [24] 4621 	mov	dph,r7
      00142C 12r00r00         [24] 4622 	lcall	__divsint
      00142F AE 82            [24] 4623 	mov	r6,dpl
      001431 74 30            [12] 4624 	mov	a,#0x30
      001433 2E               [12] 4625 	add	a,r6
      001434 F5 82            [12] 4626 	mov	dpl,a
      001436 12r00r00         [24] 4627 	lcall	_send_gsm_byte
                                   4628 ;	include/gsm_serial.c:147: send_gsm_byte(hour%10+'0');
      001439 AE*02            [24] 4629 	mov	r6,_hour
      00143B 7F 00            [12] 4630 	mov	r7,#0x00
      00143D 75*00 0A         [24] 4631 	mov	__modsint_PARM_2,#0x0a
                                   4632 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      001440 8F*01            [24] 4633 	mov	(__modsint_PARM_2 + 1),r7
      001442 8E 82            [24] 4634 	mov	dpl,r6
      001444 8F 83            [24] 4635 	mov	dph,r7
      001446 12r00r00         [24] 4636 	lcall	__modsint
      001449 AE 82            [24] 4637 	mov	r6,dpl
      00144B 74 30            [12] 4638 	mov	a,#0x30
      00144D 2E               [12] 4639 	add	a,r6
      00144E F5 82            [12] 4640 	mov	dpl,a
      001450 12r00r00         [24] 4641 	lcall	_send_gsm_byte
                                   4642 ;	include/gsm_serial.c:148: send_gsm_byte(':');
      001453 75 82 3A         [24] 4643 	mov	dpl,#0x3a
      001456 12r00r00         [24] 4644 	lcall	_send_gsm_byte
                                   4645 ;	include/gsm_serial.c:149: send_gsm_byte(minute/10+'0');
      001459 AE*01            [24] 4646 	mov	r6,_minute
      00145B 7F 00            [12] 4647 	mov	r7,#0x00
      00145D 75*00 0A         [24] 4648 	mov	__divsint_PARM_2,#0x0a
                                   4649 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      001460 8F*01            [24] 4650 	mov	(__divsint_PARM_2 + 1),r7
      001462 8E 82            [24] 4651 	mov	dpl,r6
      001464 8F 83            [24] 4652 	mov	dph,r7
      001466 12r00r00         [24] 4653 	lcall	__divsint
      001469 AE 82            [24] 4654 	mov	r6,dpl
      00146B 74 30            [12] 4655 	mov	a,#0x30
      00146D 2E               [12] 4656 	add	a,r6
      00146E F5 82            [12] 4657 	mov	dpl,a
      001470 12r00r00         [24] 4658 	lcall	_send_gsm_byte
                                   4659 ;	include/gsm_serial.c:150: send_gsm_byte(minute%10+'0');
      001473 AE*01            [24] 4660 	mov	r6,_minute
      001475 7F 00            [12] 4661 	mov	r7,#0x00
      001477 75*00 0A         [24] 4662 	mov	__modsint_PARM_2,#0x0a
                                   4663 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      00147A 8F*01            [24] 4664 	mov	(__modsint_PARM_2 + 1),r7
      00147C 8E 82            [24] 4665 	mov	dpl,r6
      00147E 8F 83            [24] 4666 	mov	dph,r7
      001480 12r00r00         [24] 4667 	lcall	__modsint
      001483 AE 82            [24] 4668 	mov	r6,dpl
      001485 74 30            [12] 4669 	mov	a,#0x30
      001487 2E               [12] 4670 	add	a,r6
      001488 F5 82            [12] 4671 	mov	dpl,a
      00148A 12r00r00         [24] 4672 	lcall	_send_gsm_byte
                                   4673 ;	include/gsm_serial.c:151: if(date == 1) send_gsm_cmd(" CN,");
      00148D 90r00rDC         [24] 4674 	mov	dptr,#_date
      001490 E0               [24] 4675 	movx	a,@dptr
      001491 FF               [12] 4676 	mov	r7,a
      001492 BF 01 0B         [24] 4677 	cjne	r7,#0x01,00102$
      001495 90r04rA4         [24] 4678 	mov	dptr,#___str_24
      001498 75 F0 80         [24] 4679 	mov	b,#0x80
      00149B 12r00r00         [24] 4680 	lcall	_send_gsm_cmd
      00149E 80 1A            [24] 4681 	sjmp	00103$
      0014A0                       4682 00102$:
                                   4683 ;	include/gsm_serial.c:153: send_gsm_cmd(" T");
      0014A0 90r04rA9         [24] 4684 	mov	dptr,#___str_25
      0014A3 75 F0 80         [24] 4685 	mov	b,#0x80
      0014A6 12r00r00         [24] 4686 	lcall	_send_gsm_cmd
                                   4687 ;	include/gsm_serial.c:154: send_gsm_byte(date+'0');
      0014A9 90r00rDC         [24] 4688 	mov	dptr,#_date
      0014AC E0               [24] 4689 	movx	a,@dptr
      0014AD 24 30            [12] 4690 	add	a,#0x30
      0014AF F5 82            [12] 4691 	mov	dpl,a
      0014B1 12r00r00         [24] 4692 	lcall	_send_gsm_byte
                                   4693 ;	include/gsm_serial.c:155: send_gsm_byte(',');
      0014B4 75 82 2C         [24] 4694 	mov	dpl,#0x2c
      0014B7 12r00r00         [24] 4695 	lcall	_send_gsm_byte
      0014BA                       4696 00103$:
                                   4697 ;	include/gsm_serial.c:157: send_gsm_byte(day/10+'0');
      0014BA 90r00rDD         [24] 4698 	mov	dptr,#_day
      0014BD E0               [24] 4699 	movx	a,@dptr
      0014BE FF               [12] 4700 	mov	r7,a
      0014BF 7E 00            [12] 4701 	mov	r6,#0x00
      0014C1 75*00 0A         [24] 4702 	mov	__divsint_PARM_2,#0x0a
                                   4703 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      0014C4 8E*01            [24] 4704 	mov	(__divsint_PARM_2 + 1),r6
      0014C6 8F 82            [24] 4705 	mov	dpl,r7
      0014C8 8E 83            [24] 4706 	mov	dph,r6
      0014CA 12r00r00         [24] 4707 	lcall	__divsint
      0014CD AE 82            [24] 4708 	mov	r6,dpl
      0014CF 74 30            [12] 4709 	mov	a,#0x30
      0014D1 2E               [12] 4710 	add	a,r6
      0014D2 F5 82            [12] 4711 	mov	dpl,a
      0014D4 12r00r00         [24] 4712 	lcall	_send_gsm_byte
                                   4713 ;	include/gsm_serial.c:158: send_gsm_byte(day%10+'0');
      0014D7 90r00rDD         [24] 4714 	mov	dptr,#_day
      0014DA E0               [24] 4715 	movx	a,@dptr
      0014DB FF               [12] 4716 	mov	r7,a
      0014DC 7E 00            [12] 4717 	mov	r6,#0x00
      0014DE 75*00 0A         [24] 4718 	mov	__modsint_PARM_2,#0x0a
                                   4719 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0014E1 8E*01            [24] 4720 	mov	(__modsint_PARM_2 + 1),r6
      0014E3 8F 82            [24] 4721 	mov	dpl,r7
      0014E5 8E 83            [24] 4722 	mov	dph,r6
      0014E7 12r00r00         [24] 4723 	lcall	__modsint
      0014EA AE 82            [24] 4724 	mov	r6,dpl
      0014EC 74 30            [12] 4725 	mov	a,#0x30
      0014EE 2E               [12] 4726 	add	a,r6
      0014EF F5 82            [12] 4727 	mov	dpl,a
      0014F1 12r00r00         [24] 4728 	lcall	_send_gsm_byte
                                   4729 ;	include/gsm_serial.c:159: send_gsm_byte('/');
      0014F4 75 82 2F         [24] 4730 	mov	dpl,#0x2f
      0014F7 12r00r00         [24] 4731 	lcall	_send_gsm_byte
                                   4732 ;	include/gsm_serial.c:160: send_gsm_byte(month/10+'0');
      0014FA 90r00rDE         [24] 4733 	mov	dptr,#_month
      0014FD E0               [24] 4734 	movx	a,@dptr
      0014FE FF               [12] 4735 	mov	r7,a
      0014FF 7E 00            [12] 4736 	mov	r6,#0x00
      001501 75*00 0A         [24] 4737 	mov	__divsint_PARM_2,#0x0a
                                   4738 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      001504 8E*01            [24] 4739 	mov	(__divsint_PARM_2 + 1),r6
      001506 8F 82            [24] 4740 	mov	dpl,r7
      001508 8E 83            [24] 4741 	mov	dph,r6
      00150A 12r00r00         [24] 4742 	lcall	__divsint
      00150D AE 82            [24] 4743 	mov	r6,dpl
      00150F 74 30            [12] 4744 	mov	a,#0x30
      001511 2E               [12] 4745 	add	a,r6
      001512 F5 82            [12] 4746 	mov	dpl,a
      001514 12r00r00         [24] 4747 	lcall	_send_gsm_byte
                                   4748 ;	include/gsm_serial.c:161: send_gsm_byte(month%10+'0');
      001517 90r00rDE         [24] 4749 	mov	dptr,#_month
      00151A E0               [24] 4750 	movx	a,@dptr
      00151B FF               [12] 4751 	mov	r7,a
      00151C 7E 00            [12] 4752 	mov	r6,#0x00
      00151E 75*00 0A         [24] 4753 	mov	__modsint_PARM_2,#0x0a
                                   4754 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      001521 8E*01            [24] 4755 	mov	(__modsint_PARM_2 + 1),r6
      001523 8F 82            [24] 4756 	mov	dpl,r7
      001525 8E 83            [24] 4757 	mov	dph,r6
      001527 12r00r00         [24] 4758 	lcall	__modsint
      00152A AE 82            [24] 4759 	mov	r6,dpl
      00152C 74 30            [12] 4760 	mov	a,#0x30
      00152E 2E               [12] 4761 	add	a,r6
      00152F F5 82            [12] 4762 	mov	dpl,a
      001531 12r00r00         [24] 4763 	lcall	_send_gsm_byte
                                   4764 ;	include/gsm_serial.c:162: send_gsm_byte('/');
      001534 75 82 2F         [24] 4765 	mov	dpl,#0x2f
      001537 12r00r00         [24] 4766 	lcall	_send_gsm_byte
                                   4767 ;	include/gsm_serial.c:163: send_gsm_byte(year/10+'0');
      00153A 90r00rDF         [24] 4768 	mov	dptr,#_year
      00153D E0               [24] 4769 	movx	a,@dptr
      00153E FF               [12] 4770 	mov	r7,a
      00153F 7E 00            [12] 4771 	mov	r6,#0x00
      001541 75*00 0A         [24] 4772 	mov	__divsint_PARM_2,#0x0a
                                   4773 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      001544 8E*01            [24] 4774 	mov	(__divsint_PARM_2 + 1),r6
      001546 8F 82            [24] 4775 	mov	dpl,r7
      001548 8E 83            [24] 4776 	mov	dph,r6
      00154A 12r00r00         [24] 4777 	lcall	__divsint
      00154D AE 82            [24] 4778 	mov	r6,dpl
      00154F 74 30            [12] 4779 	mov	a,#0x30
      001551 2E               [12] 4780 	add	a,r6
      001552 F5 82            [12] 4781 	mov	dpl,a
      001554 12r00r00         [24] 4782 	lcall	_send_gsm_byte
                                   4783 ;	include/gsm_serial.c:164: send_gsm_byte(year%10+'0');
      001557 90r00rDF         [24] 4784 	mov	dptr,#_year
      00155A E0               [24] 4785 	movx	a,@dptr
      00155B FF               [12] 4786 	mov	r7,a
      00155C 7E 00            [12] 4787 	mov	r6,#0x00
      00155E 75*00 0A         [24] 4788 	mov	__modsint_PARM_2,#0x0a
                                   4789 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      001561 8E*01            [24] 4790 	mov	(__modsint_PARM_2 + 1),r6
      001563 8F 82            [24] 4791 	mov	dpl,r7
      001565 8E 83            [24] 4792 	mov	dph,r6
      001567 12r00r00         [24] 4793 	lcall	__modsint
      00156A AE 82            [24] 4794 	mov	r6,dpl
      00156C 74 30            [12] 4795 	mov	a,#0x30
      00156E 2E               [12] 4796 	add	a,r6
      00156F F5 82            [12] 4797 	mov	dpl,a
      001571 12r00r00         [24] 4798 	lcall	_send_gsm_byte
                                   4799 ;	include/gsm_serial.c:166: if(chinh){
      001574 30*42 21         [24] 4800 	jnb	_send_gio_thuc_PARM_1,00106$
                                   4801 ;	include/gsm_serial.c:167: send_gsm_cmd(" GPS=");
      001577 90r04rAC         [24] 4802 	mov	dptr,#___str_26
      00157A 75 F0 80         [24] 4803 	mov	b,#0x80
      00157D 12r00r00         [24] 4804 	lcall	_send_gsm_cmd
                                   4805 ;	include/gsm_serial.c:168: send_gsm_byte((GPS_time?'1':'0')+eep_gpson);
      001580 30*1B 06         [24] 4806 	jnb	_GPS_time,00108$
      001583 7E 31            [12] 4807 	mov	r6,#0x31
      001585 7F 00            [12] 4808 	mov	r7,#0x00
      001587 80 04            [24] 4809 	sjmp	00109$
      001589                       4810 00108$:
      001589 7E 30            [12] 4811 	mov	r6,#0x30
      00158B 7F 00            [12] 4812 	mov	r7,#0x00
      00158D                       4813 00109$:
      00158D 90 F0 02         [24] 4814 	mov	dptr,#_eep_gpson
      001590 E4               [12] 4815 	clr	a
      001591 93               [24] 4816 	movc	a,@a+dptr
      001592 2E               [12] 4817 	add	a,r6
      001593 F5 82            [12] 4818 	mov	dpl,a
                                   4819 ;	include/gsm_serial.c:170: }
      001595 02r00r00         [24] 4820 	ljmp	_send_gsm_byte
      001598                       4821 00106$:
      001598 22               [24] 4822 	ret
                                   4823 ;------------------------------------------------------------
                                   4824 ;Allocation info for local variables in function 'send_thong_so'
                                   4825 ;------------------------------------------------------------
                                   4826 ;dien_ap                   Allocated to registers r6 
                                   4827 ;------------------------------------------------------------
                                   4828 ;	include/gsm_serial.c:172: void send_thong_so(__bit chinh){
                                   4829 ;	-----------------------------------------
                                   4830 ;	 function send_thong_so
                                   4831 ;	-----------------------------------------
      001599                       4832 _send_thong_so:
                                   4833 ;	include/gsm_serial.c:173: u8 dien_ap = dien_ap_nguon*28/256;
      001599 78r00            [12] 4834 	mov	r0,#_dien_ap_nguon
      00159B 86*00            [24] 4835 	mov	__mulint_PARM_2,@r0
      00159D 75*01 00         [24] 4836 	mov	(__mulint_PARM_2 + 1),#0x00
      0015A0 90 00 1C         [24] 4837 	mov	dptr,#0x001c
      0015A3 12r00r00         [24] 4838 	lcall	__mulint
      0015A6 75*00 00         [24] 4839 	mov	__divsint_PARM_2,#0x00
      0015A9 75*01 01         [24] 4840 	mov	(__divsint_PARM_2 + 1),#0x01
      0015AC 12r00r00         [24] 4841 	lcall	__divsint
      0015AF AE 82            [24] 4842 	mov	r6,dpl
      0015B1 AF 83            [24] 4843 	mov	r7,dph
                                   4844 ;	include/gsm_serial.c:174: if(chinh){
      0015B3 20*43 03         [24] 4845 	jb	_send_thong_so_PARM_1,00152$
      0015B6 02r16r87         [24] 4846 	ljmp	00102$
      0015B9                       4847 00152$:
                                   4848 ;	include/gsm_serial.c:175: send_gsm_cmd(" DH=");
      0015B9 90r04rB2         [24] 4849 	mov	dptr,#___str_27
      0015BC 75 F0 80         [24] 4850 	mov	b,#0x80
      0015BF C0 06            [24] 4851 	push	ar6
      0015C1 12r00r00         [24] 4852 	lcall	_send_gsm_cmd
      0015C4 D0 06            [24] 4853 	pop	ar6
                                   4854 ;	include/gsm_serial.c:176: send_gsm_byte(motor_dung?'0':'1');
      0015C6 30*34 06         [24] 4855 	jnb	_motor_dung,00112$
      0015C9 7D 30            [12] 4856 	mov	r5,#0x30
      0015CB 7F 00            [12] 4857 	mov	r7,#0x00
      0015CD 80 04            [24] 4858 	sjmp	00113$
      0015CF                       4859 00112$:
      0015CF 7D 31            [12] 4860 	mov	r5,#0x31
      0015D1 7F 00            [12] 4861 	mov	r7,#0x00
      0015D3                       4862 00113$:
      0015D3 8D 82            [24] 4863 	mov	dpl,r5
      0015D5 C0 06            [24] 4864 	push	ar6
      0015D7 12r00r00         [24] 4865 	lcall	_send_gsm_byte
                                   4866 ;	include/gsm_serial.c:177: send_gsm_cmd(" BC=");
      0015DA 90r04rB7         [24] 4867 	mov	dptr,#___str_28
      0015DD 75 F0 80         [24] 4868 	mov	b,#0x80
      0015E0 12r00r00         [24] 4869 	lcall	_send_gsm_cmd
                                   4870 ;	include/gsm_serial.c:178: send_gsm_byte(eep_baocao+'0');
      0015E3 90 F0 01         [24] 4871 	mov	dptr,#_eep_baocao
      0015E6 E4               [12] 4872 	clr	a
      0015E7 93               [24] 4873 	movc	a,@a+dptr
      0015E8 24 30            [12] 4874 	add	a,#0x30
      0015EA F5 82            [12] 4875 	mov	dpl,a
      0015EC 12r00r00         [24] 4876 	lcall	_send_gsm_byte
                                   4877 ;	include/gsm_serial.c:179: send_gsm_cmd(" XG=");
      0015EF 90r04rBC         [24] 4878 	mov	dptr,#___str_29
      0015F2 75 F0 80         [24] 4879 	mov	b,#0x80
      0015F5 12r00r00         [24] 4880 	lcall	_send_gsm_cmd
      0015F8 D0 06            [24] 4881 	pop	ar6
                                   4882 ;	include/gsm_serial.c:180: send_gsm_byte(xung_giay_check?'1':'0');
      0015FA 90r00rE6         [24] 4883 	mov	dptr,#_xung_giay_check
      0015FD E0               [24] 4884 	movx	a,@dptr
      0015FE 60 06            [24] 4885 	jz	00114$
      001600 7D 31            [12] 4886 	mov	r5,#0x31
      001602 7F 00            [12] 4887 	mov	r7,#0x00
      001604 80 04            [24] 4888 	sjmp	00115$
      001606                       4889 00114$:
      001606 7D 30            [12] 4890 	mov	r5,#0x30
      001608 7F 00            [12] 4891 	mov	r7,#0x00
      00160A                       4892 00115$:
      00160A 8D 82            [24] 4893 	mov	dpl,r5
      00160C C0 06            [24] 4894 	push	ar6
      00160E 12r00r00         [24] 4895 	lcall	_send_gsm_byte
                                   4896 ;	include/gsm_serial.c:181: send_gsm_cmd(" RS=");
      001611 90r04rC1         [24] 4897 	mov	dptr,#___str_30
      001614 75 F0 80         [24] 4898 	mov	b,#0x80
      001617 12r00r00         [24] 4899 	lcall	_send_gsm_cmd
                                   4900 ;	include/gsm_serial.c:182: send_gsm_byte(ngay_reset_con_lai+'0');
      00161A 90r00rE5         [24] 4901 	mov	dptr,#_ngay_reset_con_lai
      00161D E0               [24] 4902 	movx	a,@dptr
      00161E 24 30            [12] 4903 	add	a,#0x30
      001620 F5 82            [12] 4904 	mov	dpl,a
      001622 12r00r00         [24] 4905 	lcall	_send_gsm_byte
                                   4906 ;	include/gsm_serial.c:183: send_gsm_byte('/');
      001625 75 82 2F         [24] 4907 	mov	dpl,#0x2f
      001628 12r00r00         [24] 4908 	lcall	_send_gsm_byte
                                   4909 ;	include/gsm_serial.c:184: send_gsm_byte(eep_ngayreset+'0');
      00162B 90 F0 03         [24] 4910 	mov	dptr,#_eep_ngayreset
      00162E E4               [12] 4911 	clr	a
      00162F 93               [24] 4912 	movc	a,@a+dptr
      001630 24 30            [12] 4913 	add	a,#0x30
      001632 F5 82            [12] 4914 	mov	dpl,a
      001634 12r00r00         [24] 4915 	lcall	_send_gsm_byte
                                   4916 ;	include/gsm_serial.c:185: send_gsm_cmd(" TR=");
      001637 90r04rC6         [24] 4917 	mov	dptr,#___str_31
      00163A 75 F0 80         [24] 4918 	mov	b,#0x80
      00163D 12r00r00         [24] 4919 	lcall	_send_gsm_cmd
                                   4920 ;	include/gsm_serial.c:186: send_gsm_byte(eep_gioreset/10+'0');
      001640 90 F0 04         [24] 4921 	mov	dptr,#_eep_gioreset
      001643 E4               [12] 4922 	clr	a
      001644 93               [24] 4923 	movc	a,@a+dptr
      001645 FF               [12] 4924 	mov	r7,a
      001646 7D 00            [12] 4925 	mov	r5,#0x00
      001648 75*00 0A         [24] 4926 	mov	__divsint_PARM_2,#0x0a
                                   4927 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      00164B 8D*01            [24] 4928 	mov	(__divsint_PARM_2 + 1),r5
      00164D 8F 82            [24] 4929 	mov	dpl,r7
      00164F 8D 83            [24] 4930 	mov	dph,r5
      001651 12r00r00         [24] 4931 	lcall	__divsint
      001654 AD 82            [24] 4932 	mov	r5,dpl
      001656 74 30            [12] 4933 	mov	a,#0x30
      001658 2D               [12] 4934 	add	a,r5
      001659 F5 82            [12] 4935 	mov	dpl,a
      00165B 12r00r00         [24] 4936 	lcall	_send_gsm_byte
                                   4937 ;	include/gsm_serial.c:187: send_gsm_byte(eep_gioreset%10+'0');
      00165E 90 F0 04         [24] 4938 	mov	dptr,#_eep_gioreset
      001661 E4               [12] 4939 	clr	a
      001662 93               [24] 4940 	movc	a,@a+dptr
      001663 FF               [12] 4941 	mov	r7,a
      001664 7D 00            [12] 4942 	mov	r5,#0x00
      001666 75*00 0A         [24] 4943 	mov	__modsint_PARM_2,#0x0a
                                   4944 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      001669 8D*01            [24] 4945 	mov	(__modsint_PARM_2 + 1),r5
      00166B 8F 82            [24] 4946 	mov	dpl,r7
      00166D 8D 83            [24] 4947 	mov	dph,r5
      00166F 12r00r00         [24] 4948 	lcall	__modsint
      001672 AD 82            [24] 4949 	mov	r5,dpl
      001674 74 30            [12] 4950 	mov	a,#0x30
      001676 2D               [12] 4951 	add	a,r5
      001677 F5 82            [12] 4952 	mov	dpl,a
      001679 12r00r00         [24] 4953 	lcall	_send_gsm_byte
                                   4954 ;	include/gsm_serial.c:188: send_gsm_cmd(":06");
      00167C 90r04rCB         [24] 4955 	mov	dptr,#___str_32
      00167F 75 F0 80         [24] 4956 	mov	b,#0x80
      001682 12r00r00         [24] 4957 	lcall	_send_gsm_cmd
      001685 D0 06            [24] 4958 	pop	ar6
      001687                       4959 00102$:
                                   4960 ;	include/gsm_serial.c:190: send_gsm_cmd(" DEN=");
      001687 90r04rCF         [24] 4961 	mov	dptr,#___str_33
      00168A 75 F0 80         [24] 4962 	mov	b,#0x80
      00168D C0 06            [24] 4963 	push	ar6
      00168F 12r00r00         [24] 4964 	lcall	_send_gsm_cmd
      001692 D0 06            [24] 4965 	pop	ar6
                                   4966 ;	include/gsm_serial.c:191: send_gsm_byte(DenRelay?'1':'0');
      001694 30 A1 06         [24] 4967 	jnb	_P21,00116$
      001697 7D 31            [12] 4968 	mov	r5,#0x31
      001699 7F 00            [12] 4969 	mov	r7,#0x00
      00169B 80 04            [24] 4970 	sjmp	00117$
      00169D                       4971 00116$:
      00169D 7D 30            [12] 4972 	mov	r5,#0x30
      00169F 7F 00            [12] 4973 	mov	r7,#0x00
      0016A1                       4974 00117$:
      0016A1 8D 82            [24] 4975 	mov	dpl,r5
      0016A3 C0 06            [24] 4976 	push	ar6
      0016A5 12r00r00         [24] 4977 	lcall	_send_gsm_byte
                                   4978 ;	include/gsm_serial.c:192: send_gsm_cmd(" VOL=");
      0016A8 90r04rD5         [24] 4979 	mov	dptr,#___str_34
      0016AB 75 F0 80         [24] 4980 	mov	b,#0x80
      0016AE 12r00r00         [24] 4981 	lcall	_send_gsm_cmd
      0016B1 D0 06            [24] 4982 	pop	ar6
                                   4983 ;	include/gsm_serial.c:193: send_gsm_byte(dien_ap/10+'0');
      0016B3 7F 00            [12] 4984 	mov	r7,#0x00
      0016B5 75*00 0A         [24] 4985 	mov	__divsint_PARM_2,#0x0a
                                   4986 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      0016B8 8F*01            [24] 4987 	mov	(__divsint_PARM_2 + 1),r7
      0016BA 8E 82            [24] 4988 	mov	dpl,r6
      0016BC 8F 83            [24] 4989 	mov	dph,r7
      0016BE C0 07            [24] 4990 	push	ar7
      0016C0 C0 06            [24] 4991 	push	ar6
      0016C2 12r00r00         [24] 4992 	lcall	__divsint
      0016C5 AC 82            [24] 4993 	mov	r4,dpl
      0016C7 74 30            [12] 4994 	mov	a,#0x30
      0016C9 2C               [12] 4995 	add	a,r4
      0016CA F5 82            [12] 4996 	mov	dpl,a
      0016CC 12r00r00         [24] 4997 	lcall	_send_gsm_byte
      0016CF D0 06            [24] 4998 	pop	ar6
      0016D1 D0 07            [24] 4999 	pop	ar7
                                   5000 ;	include/gsm_serial.c:194: send_gsm_byte(dien_ap%10+'0');
      0016D3 75*00 0A         [24] 5001 	mov	__modsint_PARM_2,#0x0a
      0016D6 75*01 00         [24] 5002 	mov	(__modsint_PARM_2 + 1),#0x00
      0016D9 8E 82            [24] 5003 	mov	dpl,r6
      0016DB 8F 83            [24] 5004 	mov	dph,r7
      0016DD 12r00r00         [24] 5005 	lcall	__modsint
      0016E0 AE 82            [24] 5006 	mov	r6,dpl
      0016E2 74 30            [12] 5007 	mov	a,#0x30
      0016E4 2E               [12] 5008 	add	a,r6
      0016E5 F5 82            [12] 5009 	mov	dpl,a
      0016E7 12r00r00         [24] 5010 	lcall	_send_gsm_byte
                                   5011 ;	include/gsm_serial.c:195: if((eep_mp3%4) || chinh){
      0016EA 90 F0 10         [24] 5012 	mov	dptr,#_eep_mp3
      0016ED E4               [12] 5013 	clr	a
      0016EE 93               [24] 5014 	movc	a,@a+dptr
      0016EF 54 03            [12] 5015 	anl	a,#0x03
      0016F1 70 03            [24] 5016 	jnz	00103$
      0016F3 30*43 21         [24] 5017 	jnb	_send_thong_so_PARM_1,00104$
      0016F6                       5018 00103$:
                                   5019 ;	include/gsm_serial.c:196: send_gsm_cmd(" MP3=");
      0016F6 90r04rDB         [24] 5020 	mov	dptr,#___str_35
      0016F9 75 F0 80         [24] 5021 	mov	b,#0x80
      0016FC 12r00r00         [24] 5022 	lcall	_send_gsm_cmd
                                   5023 ;	include/gsm_serial.c:197: send_gsm_byte(eep_mp3+(mp3_playing?'0':47));
      0016FF 30 92 06         [24] 5024 	jnb	_P12,00118$
      001702 7E 30            [12] 5025 	mov	r6,#0x30
      001704 7F 00            [12] 5026 	mov	r7,#0x00
      001706 80 04            [24] 5027 	sjmp	00119$
      001708                       5028 00118$:
      001708 7E 2F            [12] 5029 	mov	r6,#0x2f
      00170A 7F 00            [12] 5030 	mov	r7,#0x00
      00170C                       5031 00119$:
      00170C 90 F0 10         [24] 5032 	mov	dptr,#_eep_mp3
      00170F E4               [12] 5033 	clr	a
      001710 93               [24] 5034 	movc	a,@a+dptr
      001711 2E               [12] 5035 	add	a,r6
      001712 F5 82            [12] 5036 	mov	dpl,a
      001714 12r00r00         [24] 5037 	lcall	_send_gsm_byte
      001717                       5038 00104$:
                                   5039 ;	include/gsm_serial.c:199: if(!chinh) return;
      001717 20*43 01         [24] 5040 	jb	_send_thong_so_PARM_1,00107$
      00171A 22               [24] 5041 	ret
      00171B                       5042 00107$:
                                   5043 ;	include/gsm_serial.c:201: send_gsm_cmd(" SIG=");
      00171B 90r04rE1         [24] 5044 	mov	dptr,#___str_36
      00171E 75 F0 80         [24] 5045 	mov	b,#0x80
      001721 12r00r00         [24] 5046 	lcall	_send_gsm_cmd
                                   5047 ;	include/gsm_serial.c:202: send_gsm_byte(signal/10+'0');
      001724 90r00rF9         [24] 5048 	mov	dptr,#_signal
      001727 E0               [24] 5049 	movx	a,@dptr
      001728 FF               [12] 5050 	mov	r7,a
      001729 7E 00            [12] 5051 	mov	r6,#0x00
      00172B 75*00 0A         [24] 5052 	mov	__divsint_PARM_2,#0x0a
                                   5053 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      00172E 8E*01            [24] 5054 	mov	(__divsint_PARM_2 + 1),r6
      001730 8F 82            [24] 5055 	mov	dpl,r7
      001732 8E 83            [24] 5056 	mov	dph,r6
      001734 12r00r00         [24] 5057 	lcall	__divsint
      001737 AE 82            [24] 5058 	mov	r6,dpl
      001739 74 30            [12] 5059 	mov	a,#0x30
      00173B 2E               [12] 5060 	add	a,r6
      00173C F5 82            [12] 5061 	mov	dpl,a
      00173E 12r00r00         [24] 5062 	lcall	_send_gsm_byte
                                   5063 ;	include/gsm_serial.c:203: send_gsm_byte(signal%10+'0');
      001741 90r00rF9         [24] 5064 	mov	dptr,#_signal
      001744 E0               [24] 5065 	movx	a,@dptr
      001745 FF               [12] 5066 	mov	r7,a
      001746 7E 00            [12] 5067 	mov	r6,#0x00
      001748 75*00 0A         [24] 5068 	mov	__modsint_PARM_2,#0x0a
                                   5069 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      00174B 8E*01            [24] 5070 	mov	(__modsint_PARM_2 + 1),r6
      00174D 8F 82            [24] 5071 	mov	dpl,r7
      00174F 8E 83            [24] 5072 	mov	dph,r6
      001751 12r00r00         [24] 5073 	lcall	__modsint
      001754 AE 82            [24] 5074 	mov	r6,dpl
      001756 74 30            [12] 5075 	mov	a,#0x30
      001758 2E               [12] 5076 	add	a,r6
      001759 F5 82            [12] 5077 	mov	dpl,a
      00175B 12r00r00         [24] 5078 	lcall	_send_gsm_byte
                                   5079 ;	include/gsm_serial.c:204: send_gsm_cmd(" DT=");
      00175E 90r04rE7         [24] 5080 	mov	dptr,#___str_37
      001761 75 F0 80         [24] 5081 	mov	b,#0x80
      001764 12r00r00         [24] 5082 	lcall	_send_gsm_cmd
                                   5083 ;	include/gsm_serial.c:205: send_gsm_byte(eep_phonephu[11]+'0');
      001767 90 F0 1C         [24] 5084 	mov	dptr,#(_eep_phonephu + 0x000b)
      00176A E4               [12] 5085 	clr	a
      00176B 93               [24] 5086 	movc	a,@a+dptr
      00176C 24 30            [12] 5087 	add	a,#0x30
      00176E F5 82            [12] 5088 	mov	dpl,a
      001770 12r00r00         [24] 5089 	lcall	_send_gsm_byte
                                   5090 ;	include/gsm_serial.c:206: if(eep_phonephu[11]==2) return;
      001773 90 F0 1C         [24] 5091 	mov	dptr,#(_eep_phonephu + 0x000b)
      001776 E4               [12] 5092 	clr	a
      001777 93               [24] 5093 	movc	a,@a+dptr
      001778 FF               [12] 5094 	mov	r7,a
      001779 BF 02 01         [24] 5095 	cjne	r7,#0x02,00109$
      00177C 22               [24] 5096 	ret
      00177D                       5097 00109$:
                                   5098 ;	include/gsm_serial.c:207: send_gsm_byte(',');
      00177D 75 82 2C         [24] 5099 	mov	dpl,#0x2c
      001780 12r00r00         [24] 5100 	lcall	_send_gsm_byte
                                   5101 ;	include/gsm_serial.c:208: send_gsm_cmd(eep_phonephu);
      001783 90 F0 11         [24] 5102 	mov	dptr,#_eep_phonephu
      001786 75 F0 80         [24] 5103 	mov	b,#0x80
                                   5104 ;	include/gsm_serial.c:210: }
      001789 02r00r00         [24] 5105 	ljmp	_send_gsm_cmd
                                   5106 ;------------------------------------------------------------
                                   5107 ;Allocation info for local variables in function 'baocaosms'
                                   5108 ;------------------------------------------------------------
                                   5109 ;noidung                   Allocated to registers r5 r6 r7 
                                   5110 ;------------------------------------------------------------
                                   5111 ;	include/gsm_serial.c:214: void baocaosms(__bit chinh, u8  *noidung){
                                   5112 ;	-----------------------------------------
                                   5113 ;	 function baocaosms
                                   5114 ;	-----------------------------------------
      00178C                       5115 _baocaosms:
      00178C AD 82            [24] 5116 	mov	r5,dpl
      00178E AE 83            [24] 5117 	mov	r6,dph
      001790 AF F0            [24] 5118 	mov	r7,b
                                   5119 ;	include/gsm_serial.c:215: if(!sms_on) return;
      001792 90r01r31         [24] 5120 	mov	dptr,#_sms_on
      001795 E0               [24] 5121 	movx	a,@dptr
      001796 70 01            [24] 5122 	jnz	00102$
      001798 22               [24] 5123 	ret
      001799                       5124 00102$:
                                   5125 ;	include/gsm_serial.c:216: gsm_sendandcheck("AT\r", 15, 1,"BAT DAU BAO CAO ");
      001799 75*12rF0         [24] 5126 	mov	_gsm_sendandcheck_PARM_4,#___str_39
      00179C 75*13s04         [24] 5127 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_39 >> 8)
      00179F 75*14 80         [24] 5128 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      0017A2 75*10 0F         [24] 5129 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      0017A5 75*11 01         [24] 5130 	mov	_gsm_sendandcheck_PARM_3,#0x01
      0017A8 90r04rEC         [24] 5131 	mov	dptr,#___str_38
      0017AB 75 F0 80         [24] 5132 	mov	b,#0x80
      0017AE C0 07            [24] 5133 	push	ar7
      0017B0 C0 06            [24] 5134 	push	ar6
      0017B2 C0 05            [24] 5135 	push	ar5
      0017B4 12r0Dr06         [24] 5136 	lcall	_gsm_sendandcheck
                                   5137 ;	include/gsm_serial.c:217: kiemtratinhieu();    
      0017B7 12r10r36         [24] 5138 	lcall	_kiemtratinhieu
      0017BA D0 05            [24] 5139 	pop	ar5
      0017BC D0 06            [24] 5140 	pop	ar6
      0017BE D0 07            [24] 5141 	pop	ar7
                                   5142 ;	include/gsm_serial.c:218: if(*(noidung+1)!='*') kiemtrataikhoan();
      0017C0 74 01            [12] 5143 	mov	a,#0x01
      0017C2 2D               [12] 5144 	add	a,r5
      0017C3 FA               [12] 5145 	mov	r2,a
      0017C4 E4               [12] 5146 	clr	a
      0017C5 3E               [12] 5147 	addc	a,r6
      0017C6 FB               [12] 5148 	mov	r3,a
      0017C7 8F 04            [24] 5149 	mov	ar4,r7
      0017C9 8A 82            [24] 5150 	mov	dpl,r2
      0017CB 8B 83            [24] 5151 	mov	dph,r3
      0017CD 8C F0            [24] 5152 	mov	b,r4
      0017CF 12r00r00         [24] 5153 	lcall	__gptrget
      0017D2 F9               [12] 5154 	mov	r1,a
      0017D3 B9 2A 02         [24] 5155 	cjne	r1,#0x2a,00159$
      0017D6 80 1D            [24] 5156 	sjmp	00104$
      0017D8                       5157 00159$:
      0017D8 C0 07            [24] 5158 	push	ar7
      0017DA C0 06            [24] 5159 	push	ar6
      0017DC C0 05            [24] 5160 	push	ar5
      0017DE C0 04            [24] 5161 	push	ar4
      0017E0 C0 03            [24] 5162 	push	ar3
      0017E2 C0 02            [24] 5163 	push	ar2
      0017E4 12r0Fr84         [24] 5164 	lcall	_kiemtrataikhoan
      0017E7 D0 02            [24] 5165 	pop	ar2
      0017E9 D0 03            [24] 5166 	pop	ar3
      0017EB D0 04            [24] 5167 	pop	ar4
      0017ED D0 05            [24] 5168 	pop	ar5
      0017EF D0 06            [24] 5169 	pop	ar6
      0017F1 D0 07            [24] 5170 	pop	ar7
      0017F3 80 05            [24] 5171 	sjmp	00105$
      0017F5                       5172 00104$:
                                   5173 ;	include/gsm_serial.c:219: else lenh_sms[0]=0;
      0017F5 90r00r16         [24] 5174 	mov	dptr,#_lenh_sms
      0017F8 E4               [12] 5175 	clr	a
      0017F9 F0               [24] 5176 	movx	@dptr,a
      0017FA                       5177 00105$:
                                   5178 ;	include/gsm_serial.c:220: if(!send_sms(chinh)) return;
                                   5179 ;	assignBit
      0017FA A2*44            [12] 5180 	mov	c,_baocaosms_PARM_1
      0017FC 92*40            [24] 5181 	mov	_send_sms_PARM_1,c
      0017FE C0 07            [24] 5182 	push	ar7
      001800 C0 06            [24] 5183 	push	ar6
      001802 C0 05            [24] 5184 	push	ar5
      001804 C0 04            [24] 5185 	push	ar4
      001806 C0 03            [24] 5186 	push	ar3
      001808 C0 02            [24] 5187 	push	ar2
      00180A 12r0Fr20         [24] 5188 	lcall	_send_sms
      00180D D0 02            [24] 5189 	pop	ar2
      00180F D0 03            [24] 5190 	pop	ar3
      001811 D0 04            [24] 5191 	pop	ar4
      001813 D0 05            [24] 5192 	pop	ar5
      001815 D0 06            [24] 5193 	pop	ar6
      001817 D0 07            [24] 5194 	pop	ar7
      001819 40 01            [24] 5195 	jc	00107$
      00181B 22               [24] 5196 	ret
      00181C                       5197 00107$:
                                   5198 ;	include/gsm_serial.c:222: if(sms_on>2){
      00181C 90r01r31         [24] 5199 	mov	dptr,#_sms_on
      00181F E0               [24] 5200 	movx	a,@dptr
      001820 24 FD            [12] 5201 	add	a,#0xff - 0x02
      001822 50 16            [24] 5202 	jnc	00115$
                                   5203 ;	include/gsm_serial.c:223: send_thong_so_rut_gon(chinh);
                                   5204 ;	assignBit
      001824 A2*44            [12] 5205 	mov	c,_baocaosms_PARM_1
      001826 92*41            [24] 5206 	mov	_send_thong_so_rut_gon_PARM_1,c
      001828 C0 07            [24] 5207 	push	ar7
      00182A C0 06            [24] 5208 	push	ar6
      00182C C0 05            [24] 5209 	push	ar5
      00182E 12r10r95         [24] 5210 	lcall	_send_thong_so_rut_gon
      001831 D0 05            [24] 5211 	pop	ar5
      001833 D0 06            [24] 5212 	pop	ar6
      001835 D0 07            [24] 5213 	pop	ar7
      001837 02r18rE3         [24] 5214 	ljmp	00116$
      00183A                       5215 00115$:
                                   5216 ;	include/gsm_serial.c:225: send_gsm_cmd(ver);
      00183A 90r00r95         [24] 5217 	mov	dptr,#_ver
      00183D 75 F0 80         [24] 5218 	mov	b,#0x80
      001840 C0 07            [24] 5219 	push	ar7
      001842 C0 06            [24] 5220 	push	ar6
      001844 C0 05            [24] 5221 	push	ar5
      001846 C0 04            [24] 5222 	push	ar4
      001848 C0 03            [24] 5223 	push	ar3
      00184A C0 02            [24] 5224 	push	ar2
      00184C 12r00r00         [24] 5225 	lcall	_send_gsm_cmd
                                   5226 ;	include/gsm_serial.c:227: send_gio_kim();
      00184F 12r13r1E         [24] 5227 	lcall	_send_gio_kim
                                   5228 ;	include/gsm_serial.c:228: send_gio_thuc(chinh);
                                   5229 ;	assignBit
      001852 A2*44            [12] 5230 	mov	c,_baocaosms_PARM_1
      001854 92*42            [24] 5231 	mov	_send_gio_thuc_PARM_1,c
      001856 12r14r16         [24] 5232 	lcall	_send_gio_thuc
                                   5233 ;	include/gsm_serial.c:229: send_thong_so(chinh);
                                   5234 ;	assignBit
      001859 A2*44            [12] 5235 	mov	c,_baocaosms_PARM_1
      00185B 92*43            [24] 5236 	mov	_send_thong_so_PARM_1,c
      00185D 12r15r99         [24] 5237 	lcall	_send_thong_so
      001860 D0 02            [24] 5238 	pop	ar2
      001862 D0 03            [24] 5239 	pop	ar3
      001864 D0 04            [24] 5240 	pop	ar4
      001866 D0 05            [24] 5241 	pop	ar5
      001868 D0 06            [24] 5242 	pop	ar6
      00186A D0 07            [24] 5243 	pop	ar7
                                   5244 ;	include/gsm_serial.c:232: if(*(noidung+1)!='*' && lenh_sms[0]){
      00186C 8A 82            [24] 5245 	mov	dpl,r2
      00186E 8B 83            [24] 5246 	mov	dph,r3
      001870 8C F0            [24] 5247 	mov	b,r4
      001872 12r00r00         [24] 5248 	lcall	__gptrget
      001875 FA               [12] 5249 	mov	r2,a
      001876 BA 2A 02         [24] 5250 	cjne	r2,#0x2a,00162$
      001879 80 53            [24] 5251 	sjmp	00112$
      00187B                       5252 00162$:
      00187B 90r00r16         [24] 5253 	mov	dptr,#_lenh_sms
      00187E E0               [24] 5254 	movx	a,@dptr
      00187F 60 4D            [24] 5255 	jz	00112$
                                   5256 ;	include/gsm_serial.c:233: send_gsm_cmd("\rTK Chinh=");
      001881 90r05r01         [24] 5257 	mov	dptr,#___str_40
      001884 75 F0 80         [24] 5258 	mov	b,#0x80
      001887 C0 07            [24] 5259 	push	ar7
      001889 C0 06            [24] 5260 	push	ar6
      00188B C0 05            [24] 5261 	push	ar5
      00188D 12r00r00         [24] 5262 	lcall	_send_gsm_cmd
                                   5263 ;	include/gsm_serial.c:234: send_gsm_cmd(lenh_sms);
      001890 90r00r16         [24] 5264 	mov	dptr,#_lenh_sms
      001893 75 F0 00         [24] 5265 	mov	b,#0x00
      001896 12r00r00         [24] 5266 	lcall	_send_gsm_cmd
      001899 D0 05            [24] 5267 	pop	ar5
      00189B D0 06            [24] 5268 	pop	ar6
      00189D D0 07            [24] 5269 	pop	ar7
                                   5270 ;	include/gsm_serial.c:235: if(chinh && !lenh_sms[4]) send_gsm_cmd("\rTai khoan con duoi 10000");
      00189F 30*44 1B         [24] 5271 	jnb	_baocaosms_PARM_1,00109$
      0018A2 90r00r1A         [24] 5272 	mov	dptr,#(_lenh_sms + 0x0004)
      0018A5 E0               [24] 5273 	movx	a,@dptr
      0018A6 70 15            [24] 5274 	jnz	00109$
      0018A8 90r05r0C         [24] 5275 	mov	dptr,#___str_41
      0018AB 75 F0 80         [24] 5276 	mov	b,#0x80
      0018AE C0 07            [24] 5277 	push	ar7
      0018B0 C0 06            [24] 5278 	push	ar6
      0018B2 C0 05            [24] 5279 	push	ar5
      0018B4 12r00r00         [24] 5280 	lcall	_send_gsm_cmd
      0018B7 D0 05            [24] 5281 	pop	ar5
      0018B9 D0 06            [24] 5282 	pop	ar6
      0018BB D0 07            [24] 5283 	pop	ar7
      0018BD                       5284 00109$:
                                   5285 ;	include/gsm_serial.c:236: lenh_sms[1] = lenh_sms[2] = lenh_sms[3] = lenh_sms[4] = 0;
      0018BD 90r00r1A         [24] 5286 	mov	dptr,#(_lenh_sms + 0x0004)
      0018C0 E4               [12] 5287 	clr	a
      0018C1 F0               [24] 5288 	movx	@dptr,a
      0018C2 90r00r19         [24] 5289 	mov	dptr,#(_lenh_sms + 0x0003)
      0018C5 F0               [24] 5290 	movx	@dptr,a
      0018C6 90r00r18         [24] 5291 	mov	dptr,#(_lenh_sms + 0x0002)
      0018C9 F0               [24] 5292 	movx	@dptr,a
      0018CA 90r00r17         [24] 5293 	mov	dptr,#(_lenh_sms + 0x0001)
      0018CD F0               [24] 5294 	movx	@dptr,a
      0018CE                       5295 00112$:
                                   5296 ;	include/gsm_serial.c:238: send_gsm_cmd(noidung);
      0018CE 8D 82            [24] 5297 	mov	dpl,r5
      0018D0 8E 83            [24] 5298 	mov	dph,r6
      0018D2 8F F0            [24] 5299 	mov	b,r7
      0018D4 C0 07            [24] 5300 	push	ar7
      0018D6 C0 06            [24] 5301 	push	ar6
      0018D8 C0 05            [24] 5302 	push	ar5
      0018DA 12r00r00         [24] 5303 	lcall	_send_gsm_cmd
      0018DD D0 05            [24] 5304 	pop	ar5
      0018DF D0 06            [24] 5305 	pop	ar6
      0018E1 D0 07            [24] 5306 	pop	ar7
      0018E3                       5307 00116$:
                                   5308 ;	include/gsm_serial.c:241: if(*(noidung+1)=='*') send_gsm_cmd("\032");
      0018E3 0D               [12] 5309 	inc	r5
      0018E4 BD 00 01         [24] 5310 	cjne	r5,#0x00,00166$
      0018E7 0E               [12] 5311 	inc	r6
      0018E8                       5312 00166$:
      0018E8 8D 82            [24] 5313 	mov	dpl,r5
      0018EA 8E 83            [24] 5314 	mov	dph,r6
      0018EC 8F F0            [24] 5315 	mov	b,r7
      0018EE 12r00r00         [24] 5316 	lcall	__gptrget
      0018F1 FD               [12] 5317 	mov	r5,a
      0018F2 BD 2A 09         [24] 5318 	cjne	r5,#0x2a,00118$
      0018F5 90r03rF0         [24] 5319 	mov	dptr,#___str_7
      0018F8 75 F0 80         [24] 5320 	mov	b,#0x80
      0018FB 02r00r00         [24] 5321 	ljmp	_send_gsm_cmd
      0018FE                       5322 00118$:
                                   5323 ;	include/gsm_serial.c:242: else gsm_sendandcheck("\032",50,1,"DANG GUI BAO CAO");
      0018FE 75*12r26         [24] 5324 	mov	_gsm_sendandcheck_PARM_4,#___str_42
      001901 75*13s05         [24] 5325 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_42 >> 8)
      001904 75*14 80         [24] 5326 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      001907 75*10 32         [24] 5327 	mov	_gsm_sendandcheck_PARM_2,#0x32
      00190A 75*11 01         [24] 5328 	mov	_gsm_sendandcheck_PARM_3,#0x01
      00190D 90r03rF0         [24] 5329 	mov	dptr,#___str_7
      001910 75 F0 80         [24] 5330 	mov	b,#0x80
                                   5331 ;	include/gsm_serial.c:245: }
      001913 02r0Dr06         [24] 5332 	ljmp	_gsm_sendandcheck
                                   5333 ;------------------------------------------------------------
                                   5334 ;Allocation info for local variables in function 'send_thong_so_den'
                                   5335 ;------------------------------------------------------------
                                   5336 ;i                         Allocated to registers r7 
                                   5337 ;------------------------------------------------------------
                                   5338 ;	include/gsm_serial.c:247: void send_thong_so_den(){
                                   5339 ;	-----------------------------------------
                                   5340 ;	 function send_thong_so_den
                                   5341 ;	-----------------------------------------
      001916                       5342 _send_thong_so_den:
                                   5343 ;	include/gsm_serial.c:249: send_gsm_cmd(" DEN=");
      001916 90r04rCF         [24] 5344 	mov	dptr,#___str_33
      001919 75 F0 80         [24] 5345 	mov	b,#0x80
      00191C 12r00r00         [24] 5346 	lcall	_send_gsm_cmd
                                   5347 ;	include/gsm_serial.c:250: send_gsm_byte(DenRelay?'1':'0');
      00191F 30 A1 06         [24] 5348 	jnb	_P21,00109$
      001922 7E 31            [12] 5349 	mov	r6,#0x31
      001924 7F 00            [12] 5350 	mov	r7,#0x00
      001926 80 04            [24] 5351 	sjmp	00110$
      001928                       5352 00109$:
      001928 7E 30            [12] 5353 	mov	r6,#0x30
      00192A 7F 00            [12] 5354 	mov	r7,#0x00
      00192C                       5355 00110$:
      00192C 8E 82            [24] 5356 	mov	dpl,r6
      00192E 12r00r00         [24] 5357 	lcall	_send_gsm_byte
                                   5358 ;	include/gsm_serial.c:251: send_gsm_cmd("\rMODEN=");
      001931 90r05r37         [24] 5359 	mov	dptr,#___str_43
      001934 75 F0 80         [24] 5360 	mov	b,#0x80
      001937 12r00r00         [24] 5361 	lcall	_send_gsm_cmd
                                   5362 ;	include/gsm_serial.c:252: send_gsm_byte(eep_tatmoden[0]+'0');
      00193A 90 F0 07         [24] 5363 	mov	dptr,#_eep_tatmoden
      00193D E4               [12] 5364 	clr	a
      00193E 93               [24] 5365 	movc	a,@a+dptr
      00193F 24 30            [12] 5366 	add	a,#0x30
      001941 F5 82            [12] 5367 	mov	dpl,a
      001943 12r00r00         [24] 5368 	lcall	_send_gsm_byte
                                   5369 ;	include/gsm_serial.c:253: if(!eep_tatmoden[0]){send_gsm_cmd("\rKhong co gio mo den"); return;}
      001946 90 F0 07         [24] 5370 	mov	dptr,#_eep_tatmoden
      001949 E4               [12] 5371 	clr	a
      00194A 93               [24] 5372 	movc	a,@a+dptr
      00194B 70 09            [24] 5373 	jnz	00102$
      00194D 90r05r3F         [24] 5374 	mov	dptr,#___str_44
      001950 75 F0 80         [24] 5375 	mov	b,#0x80
      001953 02r00r00         [24] 5376 	ljmp	_send_gsm_cmd
      001956                       5377 00102$:
                                   5378 ;	include/gsm_serial.c:254: send_gsm_cmd("\rGio Mo Den:");
      001956 90r05r54         [24] 5379 	mov	dptr,#___str_45
      001959 75 F0 80         [24] 5380 	mov	b,#0x80
      00195C 12r00r00         [24] 5381 	lcall	_send_gsm_cmd
                                   5382 ;	include/gsm_serial.c:255: i = eep_tatmoden[0];
      00195F 90 F0 07         [24] 5383 	mov	dptr,#_eep_tatmoden
      001962 E4               [12] 5384 	clr	a
      001963 93               [24] 5385 	movc	a,@a+dptr
      001964 FF               [12] 5386 	mov	r7,a
                                   5387 ;	include/gsm_serial.c:256: send_gsm_byte('\r');
      001965 75 82 0D         [24] 5388 	mov	dpl,#0x0d
      001968 C0 07            [24] 5389 	push	ar7
      00196A 12r00r00         [24] 5390 	lcall	_send_gsm_byte
      00196D D0 07            [24] 5391 	pop	ar7
                                   5392 ;	include/gsm_serial.c:257: send_gsm_byte(eep_tatmoden[i]/60 +'0');
      00196F EF               [12] 5393 	mov	a,r7
      001970 90 F0 07         [24] 5394 	mov	dptr,#_eep_tatmoden
      001973 93               [24] 5395 	movc	a,@a+dptr
      001974 FE               [12] 5396 	mov	r6,a
      001975 7D 00            [12] 5397 	mov	r5,#0x00
      001977 75*00 3C         [24] 5398 	mov	__divsint_PARM_2,#0x3c
                                   5399 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      00197A 8D*01            [24] 5400 	mov	(__divsint_PARM_2 + 1),r5
      00197C 8E 82            [24] 5401 	mov	dpl,r6
      00197E 8D 83            [24] 5402 	mov	dph,r5
      001980 C0 07            [24] 5403 	push	ar7
      001982 12r00r00         [24] 5404 	lcall	__divsint
      001985 AD 82            [24] 5405 	mov	r5,dpl
      001987 74 30            [12] 5406 	mov	a,#0x30
      001989 2D               [12] 5407 	add	a,r5
      00198A F5 82            [12] 5408 	mov	dpl,a
      00198C 12r00r00         [24] 5409 	lcall	_send_gsm_byte
      00198F D0 07            [24] 5410 	pop	ar7
                                   5411 ;	include/gsm_serial.c:258: send_gsm_byte(eep_tatmoden[i]/6%10 +'0');
      001991 EF               [12] 5412 	mov	a,r7
      001992 90 F0 07         [24] 5413 	mov	dptr,#_eep_tatmoden
      001995 93               [24] 5414 	movc	a,@a+dptr
      001996 FE               [12] 5415 	mov	r6,a
      001997 7D 00            [12] 5416 	mov	r5,#0x00
      001999 75*00 06         [24] 5417 	mov	__divsint_PARM_2,#0x06
                                   5418 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      00199C 8D*01            [24] 5419 	mov	(__divsint_PARM_2 + 1),r5
      00199E 8E 82            [24] 5420 	mov	dpl,r6
      0019A0 8D 83            [24] 5421 	mov	dph,r5
      0019A2 C0 07            [24] 5422 	push	ar7
      0019A4 12r00r00         [24] 5423 	lcall	__divsint
      0019A7 75*00 0A         [24] 5424 	mov	__modsint_PARM_2,#0x0a
      0019AA 75*01 00         [24] 5425 	mov	(__modsint_PARM_2 + 1),#0x00
      0019AD 12r00r00         [24] 5426 	lcall	__modsint
      0019B0 AD 82            [24] 5427 	mov	r5,dpl
      0019B2 74 30            [12] 5428 	mov	a,#0x30
      0019B4 2D               [12] 5429 	add	a,r5
      0019B5 F5 82            [12] 5430 	mov	dpl,a
      0019B7 12r00r00         [24] 5431 	lcall	_send_gsm_byte
                                   5432 ;	include/gsm_serial.c:259: send_gsm_byte(':');
      0019BA 75 82 3A         [24] 5433 	mov	dpl,#0x3a
      0019BD 12r00r00         [24] 5434 	lcall	_send_gsm_byte
      0019C0 D0 07            [24] 5435 	pop	ar7
                                   5436 ;	include/gsm_serial.c:260: send_gsm_byte(eep_tatmoden[i]%6 +'0');
      0019C2 EF               [12] 5437 	mov	a,r7
      0019C3 90 F0 07         [24] 5438 	mov	dptr,#_eep_tatmoden
      0019C6 93               [24] 5439 	movc	a,@a+dptr
      0019C7 FF               [12] 5440 	mov	r7,a
      0019C8 7E 00            [12] 5441 	mov	r6,#0x00
      0019CA 75*00 06         [24] 5442 	mov	__modsint_PARM_2,#0x06
                                   5443 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0019CD 8E*01            [24] 5444 	mov	(__modsint_PARM_2 + 1),r6
      0019CF 8F 82            [24] 5445 	mov	dpl,r7
      0019D1 8E 83            [24] 5446 	mov	dph,r6
      0019D3 12r00r00         [24] 5447 	lcall	__modsint
      0019D6 AE 82            [24] 5448 	mov	r6,dpl
      0019D8 74 30            [12] 5449 	mov	a,#0x30
      0019DA 2E               [12] 5450 	add	a,r6
      0019DB F5 82            [12] 5451 	mov	dpl,a
      0019DD 12r00r00         [24] 5452 	lcall	_send_gsm_byte
                                   5453 ;	include/gsm_serial.c:261: send_gsm_cmd("0 - ");
      0019E0 90r05r61         [24] 5454 	mov	dptr,#___str_46
      0019E3 75 F0 80         [24] 5455 	mov	b,#0x80
      0019E6 12r00r00         [24] 5456 	lcall	_send_gsm_cmd
                                   5457 ;	include/gsm_serial.c:262: send_gsm_byte(eep_tatmoden[1]/60 +'0');
      0019E9 90 F0 08         [24] 5458 	mov	dptr,#(_eep_tatmoden + 0x0001)
      0019EC E4               [12] 5459 	clr	a
      0019ED 93               [24] 5460 	movc	a,@a+dptr
      0019EE FF               [12] 5461 	mov	r7,a
      0019EF 7E 00            [12] 5462 	mov	r6,#0x00
      0019F1 75*00 3C         [24] 5463 	mov	__divsint_PARM_2,#0x3c
                                   5464 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      0019F4 8E*01            [24] 5465 	mov	(__divsint_PARM_2 + 1),r6
      0019F6 8F 82            [24] 5466 	mov	dpl,r7
      0019F8 8E 83            [24] 5467 	mov	dph,r6
      0019FA 12r00r00         [24] 5468 	lcall	__divsint
      0019FD AE 82            [24] 5469 	mov	r6,dpl
      0019FF 74 30            [12] 5470 	mov	a,#0x30
      001A01 2E               [12] 5471 	add	a,r6
      001A02 F5 82            [12] 5472 	mov	dpl,a
      001A04 12r00r00         [24] 5473 	lcall	_send_gsm_byte
                                   5474 ;	include/gsm_serial.c:263: send_gsm_byte(eep_tatmoden[1]/6%10 +'0');
      001A07 90 F0 08         [24] 5475 	mov	dptr,#(_eep_tatmoden + 0x0001)
      001A0A E4               [12] 5476 	clr	a
      001A0B 93               [24] 5477 	movc	a,@a+dptr
      001A0C FF               [12] 5478 	mov	r7,a
      001A0D 7E 00            [12] 5479 	mov	r6,#0x00
      001A0F 75*00 06         [24] 5480 	mov	__divsint_PARM_2,#0x06
                                   5481 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      001A12 8E*01            [24] 5482 	mov	(__divsint_PARM_2 + 1),r6
      001A14 8F 82            [24] 5483 	mov	dpl,r7
      001A16 8E 83            [24] 5484 	mov	dph,r6
      001A18 12r00r00         [24] 5485 	lcall	__divsint
      001A1B 75*00 0A         [24] 5486 	mov	__modsint_PARM_2,#0x0a
      001A1E 75*01 00         [24] 5487 	mov	(__modsint_PARM_2 + 1),#0x00
      001A21 12r00r00         [24] 5488 	lcall	__modsint
      001A24 AE 82            [24] 5489 	mov	r6,dpl
      001A26 74 30            [12] 5490 	mov	a,#0x30
      001A28 2E               [12] 5491 	add	a,r6
      001A29 F5 82            [12] 5492 	mov	dpl,a
      001A2B 12r00r00         [24] 5493 	lcall	_send_gsm_byte
                                   5494 ;	include/gsm_serial.c:264: send_gsm_byte(':');
      001A2E 75 82 3A         [24] 5495 	mov	dpl,#0x3a
      001A31 12r00r00         [24] 5496 	lcall	_send_gsm_byte
                                   5497 ;	include/gsm_serial.c:265: send_gsm_byte(eep_tatmoden[1]%6 +'0');
      001A34 90 F0 08         [24] 5498 	mov	dptr,#(_eep_tatmoden + 0x0001)
      001A37 E4               [12] 5499 	clr	a
      001A38 93               [24] 5500 	movc	a,@a+dptr
      001A39 FF               [12] 5501 	mov	r7,a
      001A3A 7E 00            [12] 5502 	mov	r6,#0x00
      001A3C 75*00 06         [24] 5503 	mov	__modsint_PARM_2,#0x06
                                   5504 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      001A3F 8E*01            [24] 5505 	mov	(__modsint_PARM_2 + 1),r6
      001A41 8F 82            [24] 5506 	mov	dpl,r7
      001A43 8E 83            [24] 5507 	mov	dph,r6
      001A45 12r00r00         [24] 5508 	lcall	__modsint
      001A48 AE 82            [24] 5509 	mov	r6,dpl
      001A4A 74 30            [12] 5510 	mov	a,#0x30
      001A4C 2E               [12] 5511 	add	a,r6
      001A4D F5 82            [12] 5512 	mov	dpl,a
      001A4F 12r00r00         [24] 5513 	lcall	_send_gsm_byte
                                   5514 ;	include/gsm_serial.c:266: send_gsm_byte('0');
      001A52 75 82 30         [24] 5515 	mov	dpl,#0x30
      001A55 12r00r00         [24] 5516 	lcall	_send_gsm_byte
                                   5517 ;	include/gsm_serial.c:267: for(i=2;i<eep_tatmoden[0];i+=2){
      001A58 7F 02            [12] 5518 	mov	r7,#0x02
      001A5A                       5519 00105$:
      001A5A 90 F0 07         [24] 5520 	mov	dptr,#_eep_tatmoden
      001A5D E4               [12] 5521 	clr	a
      001A5E 93               [24] 5522 	movc	a,@a+dptr
      001A5F FE               [12] 5523 	mov	r6,a
      001A60 C3               [12] 5524 	clr	c
      001A61 EF               [12] 5525 	mov	a,r7
      001A62 9E               [12] 5526 	subb	a,r6
      001A63 40 01            [24] 5527 	jc	00133$
      001A65 22               [24] 5528 	ret
      001A66                       5529 00133$:
                                   5530 ;	include/gsm_serial.c:268: send_gsm_byte('\r');
      001A66 75 82 0D         [24] 5531 	mov	dpl,#0x0d
      001A69 C0 07            [24] 5532 	push	ar7
      001A6B 12r00r00         [24] 5533 	lcall	_send_gsm_byte
      001A6E D0 07            [24] 5534 	pop	ar7
                                   5535 ;	include/gsm_serial.c:269: send_gsm_byte(eep_tatmoden[i]/60 +'0');
      001A70 EF               [12] 5536 	mov	a,r7
      001A71 90 F0 07         [24] 5537 	mov	dptr,#_eep_tatmoden
      001A74 93               [24] 5538 	movc	a,@a+dptr
      001A75 FE               [12] 5539 	mov	r6,a
      001A76 7D 00            [12] 5540 	mov	r5,#0x00
      001A78 75*00 3C         [24] 5541 	mov	__divsint_PARM_2,#0x3c
                                   5542 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      001A7B 8D*01            [24] 5543 	mov	(__divsint_PARM_2 + 1),r5
      001A7D 8E 82            [24] 5544 	mov	dpl,r6
      001A7F 8D 83            [24] 5545 	mov	dph,r5
      001A81 C0 07            [24] 5546 	push	ar7
      001A83 12r00r00         [24] 5547 	lcall	__divsint
      001A86 AD 82            [24] 5548 	mov	r5,dpl
      001A88 74 30            [12] 5549 	mov	a,#0x30
      001A8A 2D               [12] 5550 	add	a,r5
      001A8B F5 82            [12] 5551 	mov	dpl,a
      001A8D 12r00r00         [24] 5552 	lcall	_send_gsm_byte
      001A90 D0 07            [24] 5553 	pop	ar7
                                   5554 ;	include/gsm_serial.c:270: send_gsm_byte(eep_tatmoden[i]/6%10 +'0');
      001A92 EF               [12] 5555 	mov	a,r7
      001A93 90 F0 07         [24] 5556 	mov	dptr,#_eep_tatmoden
      001A96 93               [24] 5557 	movc	a,@a+dptr
      001A97 FE               [12] 5558 	mov	r6,a
      001A98 7D 00            [12] 5559 	mov	r5,#0x00
      001A9A 75*00 06         [24] 5560 	mov	__divsint_PARM_2,#0x06
                                   5561 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      001A9D 8D*01            [24] 5562 	mov	(__divsint_PARM_2 + 1),r5
      001A9F 8E 82            [24] 5563 	mov	dpl,r6
      001AA1 8D 83            [24] 5564 	mov	dph,r5
      001AA3 C0 07            [24] 5565 	push	ar7
      001AA5 12r00r00         [24] 5566 	lcall	__divsint
      001AA8 75*00 0A         [24] 5567 	mov	__modsint_PARM_2,#0x0a
      001AAB 75*01 00         [24] 5568 	mov	(__modsint_PARM_2 + 1),#0x00
      001AAE 12r00r00         [24] 5569 	lcall	__modsint
      001AB1 AD 82            [24] 5570 	mov	r5,dpl
      001AB3 74 30            [12] 5571 	mov	a,#0x30
      001AB5 2D               [12] 5572 	add	a,r5
      001AB6 F5 82            [12] 5573 	mov	dpl,a
      001AB8 12r00r00         [24] 5574 	lcall	_send_gsm_byte
                                   5575 ;	include/gsm_serial.c:271: send_gsm_byte(':');
      001ABB 75 82 3A         [24] 5576 	mov	dpl,#0x3a
      001ABE 12r00r00         [24] 5577 	lcall	_send_gsm_byte
      001AC1 D0 07            [24] 5578 	pop	ar7
                                   5579 ;	include/gsm_serial.c:272: send_gsm_byte(eep_tatmoden[i]%6 +'0');
      001AC3 EF               [12] 5580 	mov	a,r7
      001AC4 90 F0 07         [24] 5581 	mov	dptr,#_eep_tatmoden
      001AC7 93               [24] 5582 	movc	a,@a+dptr
      001AC8 FE               [12] 5583 	mov	r6,a
      001AC9 7D 00            [12] 5584 	mov	r5,#0x00
      001ACB 75*00 06         [24] 5585 	mov	__modsint_PARM_2,#0x06
                                   5586 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      001ACE 8D*01            [24] 5587 	mov	(__modsint_PARM_2 + 1),r5
      001AD0 8E 82            [24] 5588 	mov	dpl,r6
      001AD2 8D 83            [24] 5589 	mov	dph,r5
      001AD4 C0 07            [24] 5590 	push	ar7
      001AD6 12r00r00         [24] 5591 	lcall	__modsint
      001AD9 AD 82            [24] 5592 	mov	r5,dpl
      001ADB 74 30            [12] 5593 	mov	a,#0x30
      001ADD 2D               [12] 5594 	add	a,r5
      001ADE F5 82            [12] 5595 	mov	dpl,a
      001AE0 12r00r00         [24] 5596 	lcall	_send_gsm_byte
                                   5597 ;	include/gsm_serial.c:273: send_gsm_cmd("0 - ");
      001AE3 90r05r61         [24] 5598 	mov	dptr,#___str_46
      001AE6 75 F0 80         [24] 5599 	mov	b,#0x80
      001AE9 12r00r00         [24] 5600 	lcall	_send_gsm_cmd
      001AEC D0 07            [24] 5601 	pop	ar7
                                   5602 ;	include/gsm_serial.c:274: send_gsm_byte(eep_tatmoden[i+1]/60 +'0');
      001AEE 8F 06            [24] 5603 	mov	ar6,r7
      001AF0 EE               [12] 5604 	mov	a,r6
      001AF1 04               [12] 5605 	inc	a
      001AF2 FD               [12] 5606 	mov	r5,a
      001AF3 33               [12] 5607 	rlc	a
      001AF4 95 E0            [12] 5608 	subb	a,acc
      001AF6 FC               [12] 5609 	mov	r4,a
      001AF7 ED               [12] 5610 	mov	a,r5
      001AF8 24 07            [12] 5611 	add	a,#_eep_tatmoden
      001AFA F5 82            [12] 5612 	mov	dpl,a
      001AFC EC               [12] 5613 	mov	a,r4
      001AFD 34 F0            [12] 5614 	addc	a,#(_eep_tatmoden >> 8)
      001AFF F5 83            [12] 5615 	mov	dph,a
      001B01 E4               [12] 5616 	clr	a
      001B02 93               [24] 5617 	movc	a,@a+dptr
      001B03 FB               [12] 5618 	mov	r3,a
      001B04 7A 00            [12] 5619 	mov	r2,#0x00
      001B06 75*00 3C         [24] 5620 	mov	__divsint_PARM_2,#0x3c
                                   5621 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      001B09 8A*01            [24] 5622 	mov	(__divsint_PARM_2 + 1),r2
      001B0B 8B 82            [24] 5623 	mov	dpl,r3
      001B0D 8A 83            [24] 5624 	mov	dph,r2
      001B0F C0 06            [24] 5625 	push	ar6
      001B11 C0 05            [24] 5626 	push	ar5
      001B13 C0 04            [24] 5627 	push	ar4
      001B15 12r00r00         [24] 5628 	lcall	__divsint
      001B18 AA 82            [24] 5629 	mov	r2,dpl
      001B1A 74 30            [12] 5630 	mov	a,#0x30
      001B1C 2A               [12] 5631 	add	a,r2
      001B1D F5 82            [12] 5632 	mov	dpl,a
      001B1F 12r00r00         [24] 5633 	lcall	_send_gsm_byte
      001B22 D0 04            [24] 5634 	pop	ar4
      001B24 D0 05            [24] 5635 	pop	ar5
                                   5636 ;	include/gsm_serial.c:275: send_gsm_byte(eep_tatmoden[i+1]/6%10 +'0');
      001B26 ED               [12] 5637 	mov	a,r5
      001B27 24 07            [12] 5638 	add	a,#_eep_tatmoden
      001B29 F5 82            [12] 5639 	mov	dpl,a
      001B2B EC               [12] 5640 	mov	a,r4
      001B2C 34 F0            [12] 5641 	addc	a,#(_eep_tatmoden >> 8)
      001B2E F5 83            [12] 5642 	mov	dph,a
      001B30 E4               [12] 5643 	clr	a
      001B31 93               [24] 5644 	movc	a,@a+dptr
      001B32 FB               [12] 5645 	mov	r3,a
      001B33 7A 00            [12] 5646 	mov	r2,#0x00
      001B35 75*00 06         [24] 5647 	mov	__divsint_PARM_2,#0x06
                                   5648 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      001B38 8A*01            [24] 5649 	mov	(__divsint_PARM_2 + 1),r2
      001B3A 8B 82            [24] 5650 	mov	dpl,r3
      001B3C 8A 83            [24] 5651 	mov	dph,r2
      001B3E C0 05            [24] 5652 	push	ar5
      001B40 C0 04            [24] 5653 	push	ar4
      001B42 12r00r00         [24] 5654 	lcall	__divsint
      001B45 75*00 0A         [24] 5655 	mov	__modsint_PARM_2,#0x0a
      001B48 75*01 00         [24] 5656 	mov	(__modsint_PARM_2 + 1),#0x00
      001B4B 12r00r00         [24] 5657 	lcall	__modsint
      001B4E AA 82            [24] 5658 	mov	r2,dpl
      001B50 74 30            [12] 5659 	mov	a,#0x30
      001B52 2A               [12] 5660 	add	a,r2
      001B53 F5 82            [12] 5661 	mov	dpl,a
      001B55 12r00r00         [24] 5662 	lcall	_send_gsm_byte
                                   5663 ;	include/gsm_serial.c:276: send_gsm_byte(':');
      001B58 75 82 3A         [24] 5664 	mov	dpl,#0x3a
      001B5B 12r00r00         [24] 5665 	lcall	_send_gsm_byte
      001B5E D0 04            [24] 5666 	pop	ar4
      001B60 D0 05            [24] 5667 	pop	ar5
                                   5668 ;	include/gsm_serial.c:277: send_gsm_byte(eep_tatmoden[i+1]%6 +'0');
      001B62 ED               [12] 5669 	mov	a,r5
      001B63 24 07            [12] 5670 	add	a,#_eep_tatmoden
      001B65 F5 82            [12] 5671 	mov	dpl,a
      001B67 EC               [12] 5672 	mov	a,r4
      001B68 34 F0            [12] 5673 	addc	a,#(_eep_tatmoden >> 8)
      001B6A F5 83            [12] 5674 	mov	dph,a
      001B6C E4               [12] 5675 	clr	a
      001B6D 93               [24] 5676 	movc	a,@a+dptr
      001B6E FD               [12] 5677 	mov	r5,a
      001B6F 7C 00            [12] 5678 	mov	r4,#0x00
      001B71 75*00 06         [24] 5679 	mov	__modsint_PARM_2,#0x06
                                   5680 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      001B74 8C*01            [24] 5681 	mov	(__modsint_PARM_2 + 1),r4
      001B76 8D 82            [24] 5682 	mov	dpl,r5
      001B78 8C 83            [24] 5683 	mov	dph,r4
      001B7A 12r00r00         [24] 5684 	lcall	__modsint
      001B7D AC 82            [24] 5685 	mov	r4,dpl
      001B7F 74 30            [12] 5686 	mov	a,#0x30
      001B81 2C               [12] 5687 	add	a,r4
      001B82 F5 82            [12] 5688 	mov	dpl,a
      001B84 12r00r00         [24] 5689 	lcall	_send_gsm_byte
                                   5690 ;	include/gsm_serial.c:278: send_gsm_byte('0');
      001B87 75 82 30         [24] 5691 	mov	dpl,#0x30
      001B8A 12r00r00         [24] 5692 	lcall	_send_gsm_byte
      001B8D D0 06            [24] 5693 	pop	ar6
                                   5694 ;	include/gsm_serial.c:267: for(i=2;i<eep_tatmoden[0];i+=2){
      001B8F 74 02            [12] 5695 	mov	a,#0x02
      001B91 2E               [12] 5696 	add	a,r6
      001B92 FF               [12] 5697 	mov	r7,a
                                   5698 ;	include/gsm_serial.c:280: }
      001B93 02r1Ar5A         [24] 5699 	ljmp	00105$
                                   5700 ;------------------------------------------------------------
                                   5701 ;Allocation info for local variables in function 'baocaoden'
                                   5702 ;------------------------------------------------------------
                                   5703 ;noidung                   Allocated to registers r5 r6 r7 
                                   5704 ;------------------------------------------------------------
                                   5705 ;	include/gsm_serial.c:282: void baocaoden(__bit chinh, u8 *noidung){
                                   5706 ;	-----------------------------------------
                                   5707 ;	 function baocaoden
                                   5708 ;	-----------------------------------------
      001B96                       5709 _baocaoden:
      001B96 AD 82            [24] 5710 	mov	r5,dpl
      001B98 AE 83            [24] 5711 	mov	r6,dph
      001B9A AF F0            [24] 5712 	mov	r7,b
                                   5713 ;	include/gsm_serial.c:283: if(!sms_on) return;
      001B9C 90r01r31         [24] 5714 	mov	dptr,#_sms_on
      001B9F E0               [24] 5715 	movx	a,@dptr
      001BA0 70 01            [24] 5716 	jnz	00102$
      001BA2 22               [24] 5717 	ret
      001BA3                       5718 00102$:
                                   5719 ;	include/gsm_serial.c:284: gsm_sendandcheck("AT\r", 15, 1,"BAT DAU BAO CAO ");
      001BA3 75*12rF0         [24] 5720 	mov	_gsm_sendandcheck_PARM_4,#___str_39
      001BA6 75*13s04         [24] 5721 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_39 >> 8)
      001BA9 75*14 80         [24] 5722 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      001BAC 75*10 0F         [24] 5723 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      001BAF 75*11 01         [24] 5724 	mov	_gsm_sendandcheck_PARM_3,#0x01
      001BB2 90r04rEC         [24] 5725 	mov	dptr,#___str_38
      001BB5 75 F0 80         [24] 5726 	mov	b,#0x80
      001BB8 C0 07            [24] 5727 	push	ar7
      001BBA C0 06            [24] 5728 	push	ar6
      001BBC C0 05            [24] 5729 	push	ar5
      001BBE 12r0Dr06         [24] 5730 	lcall	_gsm_sendandcheck
                                   5731 ;	include/gsm_serial.c:285: if(!send_sms(chinh)) return;
                                   5732 ;	assignBit
      001BC1 A2*45            [12] 5733 	mov	c,_baocaoden_PARM_1
      001BC3 92*40            [24] 5734 	mov	_send_sms_PARM_1,c
      001BC5 12r0Fr20         [24] 5735 	lcall	_send_sms
      001BC8 D0 05            [24] 5736 	pop	ar5
      001BCA D0 06            [24] 5737 	pop	ar6
      001BCC D0 07            [24] 5738 	pop	ar7
      001BCE 40 01            [24] 5739 	jc	00104$
      001BD0 22               [24] 5740 	ret
      001BD1                       5741 00104$:
                                   5742 ;	include/gsm_serial.c:286: send_gio_thuc(chinh);
                                   5743 ;	assignBit
      001BD1 A2*45            [12] 5744 	mov	c,_baocaoden_PARM_1
      001BD3 92*42            [24] 5745 	mov	_send_gio_thuc_PARM_1,c
      001BD5 C0 07            [24] 5746 	push	ar7
      001BD7 C0 06            [24] 5747 	push	ar6
      001BD9 C0 05            [24] 5748 	push	ar5
      001BDB 12r14r16         [24] 5749 	lcall	_send_gio_thuc
                                   5750 ;	include/gsm_serial.c:287: send_thong_so(chinh);
                                   5751 ;	assignBit
      001BDE A2*45            [12] 5752 	mov	c,_baocaoden_PARM_1
      001BE0 92*43            [24] 5753 	mov	_send_thong_so_PARM_1,c
      001BE2 12r15r99         [24] 5754 	lcall	_send_thong_so
                                   5755 ;	include/gsm_serial.c:288: send_thong_so_den();
      001BE5 12r19r16         [24] 5756 	lcall	_send_thong_so_den
      001BE8 D0 05            [24] 5757 	pop	ar5
      001BEA D0 06            [24] 5758 	pop	ar6
      001BEC D0 07            [24] 5759 	pop	ar7
                                   5760 ;	include/gsm_serial.c:289: send_gsm_cmd(noidung);
      001BEE 8D 82            [24] 5761 	mov	dpl,r5
      001BF0 8E 83            [24] 5762 	mov	dph,r6
      001BF2 8F F0            [24] 5763 	mov	b,r7
      001BF4 12r00r00         [24] 5764 	lcall	_send_gsm_cmd
                                   5765 ;	include/gsm_serial.c:290: gsm_sendandcheck("\032",50,1,"GUI BAO CAO DEN ");
      001BF7 75*12r66         [24] 5766 	mov	_gsm_sendandcheck_PARM_4,#___str_47
      001BFA 75*13s05         [24] 5767 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_47 >> 8)
      001BFD 75*14 80         [24] 5768 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      001C00 75*10 32         [24] 5769 	mov	_gsm_sendandcheck_PARM_2,#0x32
      001C03 75*11 01         [24] 5770 	mov	_gsm_sendandcheck_PARM_3,#0x01
      001C06 90r03rF0         [24] 5771 	mov	dptr,#___str_7
      001C09 75 F0 80         [24] 5772 	mov	b,#0x80
                                   5773 ;	include/gsm_serial.c:291: }
      001C0C 02r0Dr06         [24] 5774 	ljmp	_gsm_sendandcheck
                                   5775 ;------------------------------------------------------------
                                   5776 ;Allocation info for local variables in function 'gui_huong_dan'
                                   5777 ;------------------------------------------------------------
                                   5778 ;	include/gsm_serial.c:293: void gui_huong_dan(){
                                   5779 ;	-----------------------------------------
                                   5780 ;	 function gui_huong_dan
                                   5781 ;	-----------------------------------------
      001C0F                       5782 _gui_huong_dan:
                                   5783 ;	include/gsm_serial.c:294: lenh_sms[0]=0;
      001C0F 90r00r16         [24] 5784 	mov	dptr,#_lenh_sms
      001C12 E4               [12] 5785 	clr	a
      001C13 F0               [24] 5786 	movx	@dptr,a
                                   5787 ;	include/gsm_serial.c:295: if(!send_sms(CHINH)) return;
                                   5788 ;	assignBit
      001C14 D2*40            [12] 5789 	setb	_send_sms_PARM_1
      001C16 12r0Fr20         [24] 5790 	lcall	_send_sms
      001C19 40 01            [24] 5791 	jc	00102$
      001C1B 22               [24] 5792 	ret
      001C1C                       5793 00102$:
                                   5794 ;	include/gsm_serial.c:296: send_gsm_cmd(huongdan);
      001C1C 90r00rA6         [24] 5795 	mov	dptr,#_huongdan
      001C1F 75 F0 80         [24] 5796 	mov	b,#0x80
      001C22 12r00r00         [24] 5797 	lcall	_send_gsm_cmd
                                   5798 ;	include/gsm_serial.c:297: gsm_sendandcheck("\032",50,1," GUI HUONG DAN  ");
      001C25 75*12r77         [24] 5799 	mov	_gsm_sendandcheck_PARM_4,#___str_48
      001C28 75*13s05         [24] 5800 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_48 >> 8)
      001C2B 75*14 80         [24] 5801 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      001C2E 75*10 32         [24] 5802 	mov	_gsm_sendandcheck_PARM_2,#0x32
      001C31 75*11 01         [24] 5803 	mov	_gsm_sendandcheck_PARM_3,#0x01
      001C34 90r03rF0         [24] 5804 	mov	dptr,#___str_7
      001C37 75 F0 80         [24] 5805 	mov	b,#0x80
                                   5806 ;	include/gsm_serial.c:298: }
      001C3A 02r0Dr06         [24] 5807 	ljmp	_gsm_sendandcheck
                                   5808 ;------------------------------------------------------------
                                   5809 ;Allocation info for local variables in function 'gsm_thietlapsim800'
                                   5810 ;------------------------------------------------------------
                                   5811 ;	include/gsm_serial.c:300: __bit gsm_thietlapsim800(){
                                   5812 ;	-----------------------------------------
                                   5813 ;	 function gsm_thietlapsim800
                                   5814 ;	-----------------------------------------
      001C3D                       5815 _gsm_thietlapsim800:
                                   5816 ;	include/gsm_serial.c:301: if(gsm_sendandcheck("AT\r", 15, 1,"THIET LAP SIM800")){      
      001C3D 75*12r88         [24] 5817 	mov	_gsm_sendandcheck_PARM_4,#___str_49
      001C40 75*13s05         [24] 5818 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_49 >> 8)
      001C43 75*14 80         [24] 5819 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      001C46 75*10 0F         [24] 5820 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      001C49 75*11 01         [24] 5821 	mov	_gsm_sendandcheck_PARM_3,#0x01
      001C4C 90r04rEC         [24] 5822 	mov	dptr,#___str_38
      001C4F 75 F0 80         [24] 5823 	mov	b,#0x80
      001C52 12r0Dr06         [24] 5824 	lcall	_gsm_sendandcheck
      001C55 50 36            [24] 5825 	jnc	00104$
                                   5826 ;	include/gsm_serial.c:302: clear_sms_buffer(0);
      001C57 75 82 00         [24] 5827 	mov	dpl,#0x00
      001C5A 12r0CrEA         [24] 5828 	lcall	_clear_sms_buffer
                                   5829 ;	include/gsm_serial.c:303: sms_index = 0;
      001C5D 90r00rBA         [24] 5830 	mov	dptr,#_sms_index
      001C60 E4               [12] 5831 	clr	a
      001C61 F0               [24] 5832 	movx	@dptr,a
                                   5833 ;	include/gsm_serial.c:304: gsm_serial_cmd = CSPN;
      001C62 90r00rFD         [24] 5834 	mov	dptr,#_gsm_serial_cmd
      001C65 74 0A            [12] 5835 	mov	a,#0x0a
      001C67 F0               [24] 5836 	movx	@dptr,a
                                   5837 ;	include/gsm_serial.c:305: if(gsm_sendandcheck("AT+CSPN?\r",15,1," TEN TONG DAI  ")){
      001C68 75*12rA3         [24] 5838 	mov	_gsm_sendandcheck_PARM_4,#___str_51
      001C6B 75*13s05         [24] 5839 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_51 >> 8)
      001C6E 75*14 80         [24] 5840 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      001C71 75*10 0F         [24] 5841 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      001C74 75*11 01         [24] 5842 	mov	_gsm_sendandcheck_PARM_3,#0x01
      001C77 90r05r99         [24] 5843 	mov	dptr,#___str_50
      001C7A 75 F0 80         [24] 5844 	mov	b,#0x80
      001C7D 12r0Dr06         [24] 5845 	lcall	_gsm_sendandcheck
      001C80 50 09            [24] 5846 	jnc	00102$
                                   5847 ;	include/gsm_serial.c:306: nha_mang = lenh_sms[4];
      001C82 90r00r1A         [24] 5848 	mov	dptr,#(_lenh_sms + 0x0004)
      001C85 E0               [24] 5849 	movx	a,@dptr
      001C86 FF               [12] 5850 	mov	r7,a
      001C87 90r00rF8         [24] 5851 	mov	dptr,#_nha_mang
      001C8A F0               [24] 5852 	movx	@dptr,a
      001C8B                       5853 00102$:
                                   5854 ;	include/gsm_serial.c:308: return 1;
      001C8B D3               [12] 5855 	setb	c
      001C8C 22               [24] 5856 	ret
      001C8D                       5857 00104$:
                                   5858 ;	include/gsm_serial.c:310: return 0;
      001C8D C3               [12] 5859 	clr	c
                                   5860 ;	include/gsm_serial.c:311: }
      001C8E 22               [24] 5861 	ret
                                   5862 ;------------------------------------------------------------
                                   5863 ;Allocation info for local variables in function 'gsm_thietlapngaygiothuc'
                                   5864 ;------------------------------------------------------------
                                   5865 ;check                     Allocated to registers 
                                   5866 ;------------------------------------------------------------
                                   5867 ;	include/gsm_serial.c:313: void gsm_thietlapngaygiothuc(){
                                   5868 ;	-----------------------------------------
                                   5869 ;	 function gsm_thietlapngaygiothuc
                                   5870 ;	-----------------------------------------
      001C8F                       5871 _gsm_thietlapngaygiothuc:
                                   5872 ;	include/gsm_serial.c:314: __bit GPS_time_temp = 0;
                                   5873 ;	assignBit
      001C8F C2*46            [12] 5874 	clr	_gsm_thietlapngaygiothuc_GPS_time_temp_65536_124
                                   5875 ;	include/gsm_serial.c:315: if(sim_test_sec==61) return;
      001C91 90r01r30         [24] 5876 	mov	dptr,#_sim_test_sec
      001C94 E0               [24] 5877 	movx	a,@dptr
      001C95 FF               [12] 5878 	mov	r7,a
      001C96 BF 3D 01         [24] 5879 	cjne	r7,#0x3d,00102$
      001C99 22               [24] 5880 	ret
      001C9A                       5881 00102$:
                                   5882 ;	include/gsm_serial.c:316: if(gsm_sendandcheck("AT+CLTS=1\r",15,1,"BAT CHE DO GPS ")){
      001C9A 75*12rBE         [24] 5883 	mov	_gsm_sendandcheck_PARM_4,#___str_53
      001C9D 75*13s05         [24] 5884 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_53 >> 8)
      001CA0 75*14 80         [24] 5885 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      001CA3 75*10 0F         [24] 5886 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      001CA6 75*11 01         [24] 5887 	mov	_gsm_sendandcheck_PARM_3,#0x01
      001CA9 90r05rB3         [24] 5888 	mov	dptr,#___str_52
      001CAC 75 F0 80         [24] 5889 	mov	b,#0x80
      001CAF 12r0Dr06         [24] 5890 	lcall	_gsm_sendandcheck
      001CB2 40 03            [24] 5891 	jc	00141$
      001CB4 02r1Er5C         [24] 5892 	ljmp	00110$
      001CB7                       5893 00141$:
                                   5894 ;	include/gsm_serial.c:317: if(gsm_sendandcheck("AT+COPS=2\r",15,1," KHOI DONG GPS ")){
      001CB7 75*12rD9         [24] 5895 	mov	_gsm_sendandcheck_PARM_4,#___str_55
      001CBA 75*13s05         [24] 5896 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_55 >> 8)
      001CBD 75*14 80         [24] 5897 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      001CC0 75*10 0F         [24] 5898 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      001CC3 75*11 01         [24] 5899 	mov	_gsm_sendandcheck_PARM_3,#0x01
      001CC6 90r05rCE         [24] 5900 	mov	dptr,#___str_54
      001CC9 75 F0 80         [24] 5901 	mov	b,#0x80
      001CCC 12r0Dr06         [24] 5902 	lcall	_gsm_sendandcheck
      001CCF 40 03            [24] 5903 	jc	00142$
      001CD1 02r1Er5C         [24] 5904 	ljmp	00110$
      001CD4                       5905 00142$:
                                   5906 ;	include/gsm_serial.c:318: gsm_serial_cmd = COPS;
      001CD4 90r00rFD         [24] 5907 	mov	dptr,#_gsm_serial_cmd
      001CD7 74 0C            [12] 5908 	mov	a,#0x0c
      001CD9 F0               [24] 5909 	movx	@dptr,a
                                   5910 ;	include/gsm_serial.c:319: if(gsm_sendandcheck("AT+COPS=0\r",10,60,"  KET NOI GPS  ")){
      001CDA 75*12rF4         [24] 5911 	mov	_gsm_sendandcheck_PARM_4,#___str_57
      001CDD 75*13s05         [24] 5912 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_57 >> 8)
      001CE0 75*14 80         [24] 5913 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      001CE3 75*10 0A         [24] 5914 	mov	_gsm_sendandcheck_PARM_2,#0x0a
      001CE6 75*11 3C         [24] 5915 	mov	_gsm_sendandcheck_PARM_3,#0x3c
      001CE9 90r05rE9         [24] 5916 	mov	dptr,#___str_56
      001CEC 75 F0 80         [24] 5917 	mov	b,#0x80
      001CEF 12r0Dr06         [24] 5918 	lcall	_gsm_sendandcheck
      001CF2 40 03            [24] 5919 	jc	00143$
      001CF4 02r1Er5C         [24] 5920 	ljmp	00110$
      001CF7                       5921 00143$:
                                   5922 ;	include/gsm_serial.c:320: clear_sms_buffer(0);
      001CF7 75 82 00         [24] 5923 	mov	dpl,#0x00
      001CFA 12r0CrEA         [24] 5924 	lcall	_clear_sms_buffer
                                   5925 ;	include/gsm_serial.c:321: sms_index = 0;
      001CFD 90r00rBA         [24] 5926 	mov	dptr,#_sms_index
      001D00 E4               [12] 5927 	clr	a
      001D01 F0               [24] 5928 	movx	@dptr,a
                                   5929 ;	include/gsm_serial.c:322: gsm_serial_cmd = CLK;
      001D02 90r00rFD         [24] 5930 	mov	dptr,#_gsm_serial_cmd
      001D05 74 02            [12] 5931 	mov	a,#0x02
      001D07 F0               [24] 5932 	movx	@dptr,a
                                   5933 ;	include/gsm_serial.c:323: if(gsm_sendandcheck("AT+CCLK?\r",15,1," LAY TIME GPS  ")){
      001D08 75*12r0E         [24] 5934 	mov	_gsm_sendandcheck_PARM_4,#___str_59
      001D0B 75*13s06         [24] 5935 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_59 >> 8)
      001D0E 75*14 80         [24] 5936 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      001D11 75*10 0F         [24] 5937 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      001D14 75*11 01         [24] 5938 	mov	_gsm_sendandcheck_PARM_3,#0x01
      001D17 90r06r04         [24] 5939 	mov	dptr,#___str_58
      001D1A 75 F0 80         [24] 5940 	mov	b,#0x80
      001D1D 12r0Dr06         [24] 5941 	lcall	_gsm_sendandcheck
      001D20 40 03            [24] 5942 	jc	00144$
      001D22 02r1Er5C         [24] 5943 	ljmp	00110$
      001D25                       5944 00144$:
                                   5945 ;	include/gsm_serial.c:324: year   = (lenh_sms[3] -48)*10 + lenh_sms[4]  - 48;
      001D25 90r00r19         [24] 5946 	mov	dptr,#(_lenh_sms + 0x0003)
      001D28 E0               [24] 5947 	movx	a,@dptr
      001D29 24 D0            [12] 5948 	add	a,#0xd0
      001D2B 75 F0 0A         [24] 5949 	mov	b,#0x0a
      001D2E A4               [48] 5950 	mul	ab
      001D2F FF               [12] 5951 	mov	r7,a
      001D30 90r00r1A         [24] 5952 	mov	dptr,#(_lenh_sms + 0x0004)
      001D33 E0               [24] 5953 	movx	a,@dptr
      001D34 2F               [12] 5954 	add	a,r7
      001D35 24 D0            [12] 5955 	add	a,#0xd0
      001D37 90r00rDF         [24] 5956 	mov	dptr,#_year
      001D3A F0               [24] 5957 	movx	@dptr,a
                                   5958 ;	include/gsm_serial.c:325: month  = (lenh_sms[6] -48)*10 + lenh_sms[7]  - 48;
      001D3B 90r00r1C         [24] 5959 	mov	dptr,#(_lenh_sms + 0x0006)
      001D3E E0               [24] 5960 	movx	a,@dptr
      001D3F 24 D0            [12] 5961 	add	a,#0xd0
      001D41 75 F0 0A         [24] 5962 	mov	b,#0x0a
      001D44 A4               [48] 5963 	mul	ab
      001D45 FF               [12] 5964 	mov	r7,a
      001D46 90r00r1D         [24] 5965 	mov	dptr,#(_lenh_sms + 0x0007)
      001D49 E0               [24] 5966 	movx	a,@dptr
      001D4A 2F               [12] 5967 	add	a,r7
      001D4B 24 D0            [12] 5968 	add	a,#0xd0
      001D4D 90r00rDE         [24] 5969 	mov	dptr,#_month
      001D50 F0               [24] 5970 	movx	@dptr,a
                                   5971 ;	include/gsm_serial.c:326: day    = (lenh_sms[9] -48)*10 + lenh_sms[10] - 48;
      001D51 90r00r1F         [24] 5972 	mov	dptr,#(_lenh_sms + 0x0009)
      001D54 E0               [24] 5973 	movx	a,@dptr
      001D55 24 D0            [12] 5974 	add	a,#0xd0
      001D57 75 F0 0A         [24] 5975 	mov	b,#0x0a
      001D5A A4               [48] 5976 	mul	ab
      001D5B FF               [12] 5977 	mov	r7,a
      001D5C 90r00r20         [24] 5978 	mov	dptr,#(_lenh_sms + 0x000a)
      001D5F E0               [24] 5979 	movx	a,@dptr
      001D60 2F               [12] 5980 	add	a,r7
      001D61 24 D0            [12] 5981 	add	a,#0xd0
      001D63 90r00rDD         [24] 5982 	mov	dptr,#_day
      001D66 F0               [24] 5983 	movx	@dptr,a
                                   5984 ;	include/gsm_serial.c:327: hour   = (lenh_sms[12]-48)*10 + lenh_sms[13] - 48;
      001D67 90r00r22         [24] 5985 	mov	dptr,#(_lenh_sms + 0x000c)
      001D6A E0               [24] 5986 	movx	a,@dptr
      001D6B 24 D0            [12] 5987 	add	a,#0xd0
      001D6D 75 F0 0A         [24] 5988 	mov	b,#0x0a
      001D70 A4               [48] 5989 	mul	ab
      001D71 FF               [12] 5990 	mov	r7,a
      001D72 90r00r23         [24] 5991 	mov	dptr,#(_lenh_sms + 0x000d)
      001D75 E0               [24] 5992 	movx	a,@dptr
      001D76 2F               [12] 5993 	add	a,r7
      001D77 24 D0            [12] 5994 	add	a,#0xd0
      001D79 F5*02            [12] 5995 	mov	_hour,a
                                   5996 ;	include/gsm_serial.c:328: minute = (lenh_sms[15]-48)*10 + lenh_sms[16] - 48;
      001D7B 90r00r25         [24] 5997 	mov	dptr,#(_lenh_sms + 0x000f)
      001D7E E0               [24] 5998 	movx	a,@dptr
      001D7F 24 D0            [12] 5999 	add	a,#0xd0
      001D81 75 F0 0A         [24] 6000 	mov	b,#0x0a
      001D84 A4               [48] 6001 	mul	ab
      001D85 FF               [12] 6002 	mov	r7,a
      001D86 90r00r26         [24] 6003 	mov	dptr,#(_lenh_sms + 0x0010)
      001D89 E0               [24] 6004 	movx	a,@dptr
      001D8A 2F               [12] 6005 	add	a,r7
      001D8B 24 D0            [12] 6006 	add	a,#0xd0
      001D8D F5*01            [12] 6007 	mov	_minute,a
                                   6008 ;	include/gsm_serial.c:329: second = (lenh_sms[18]-48)*10 + lenh_sms[19] - 48;
      001D8F 90r00r28         [24] 6009 	mov	dptr,#(_lenh_sms + 0x0012)
      001D92 E0               [24] 6010 	movx	a,@dptr
      001D93 24 D0            [12] 6011 	add	a,#0xd0
      001D95 75 F0 0A         [24] 6012 	mov	b,#0x0a
      001D98 A4               [48] 6013 	mul	ab
      001D99 FF               [12] 6014 	mov	r7,a
      001D9A 90r00r29         [24] 6015 	mov	dptr,#(_lenh_sms + 0x0013)
      001D9D E0               [24] 6016 	movx	a,@dptr
      001D9E 2F               [12] 6017 	add	a,r7
      001D9F 24 D0            [12] 6018 	add	a,#0xd0
      001DA1 F5*00            [12] 6019 	mov	_second,a
                                   6020 ;	include/gsm_serial.c:330: rtc_settime(hour,minute,second);
      001DA3 85*01*00         [24] 6021 	mov	_rtc_settime_PARM_2,_minute
      001DA6 85*00*00         [24] 6022 	mov	_rtc_settime_PARM_3,_second
      001DA9 85*02 82         [24] 6023 	mov	dpl,_hour
      001DAC 12r00r00         [24] 6024 	lcall	_rtc_settime
                                   6025 ;	include/gsm_serial.c:331: u16 check = (23*month/9 + day + (month>2?!(year%4):2) + year + (year+3)/4 + 1) ;
      001DAF 90r00rDE         [24] 6026 	mov	dptr,#_month
      001DB2 E0               [24] 6027 	movx	a,@dptr
      001DB3 FF               [12] 6028 	mov	r7,a
      001DB4 8F*00            [24] 6029 	mov	__mulint_PARM_2,r7
      001DB6 75*01 00         [24] 6030 	mov	(__mulint_PARM_2 + 1),#0x00
      001DB9 90 00 17         [24] 6031 	mov	dptr,#0x0017
      001DBC C0 07            [24] 6032 	push	ar7
      001DBE 12r00r00         [24] 6033 	lcall	__mulint
      001DC1 75*00 09         [24] 6034 	mov	__divsint_PARM_2,#0x09
      001DC4 75*01 00         [24] 6035 	mov	(__divsint_PARM_2 + 1),#0x00
      001DC7 12r00r00         [24] 6036 	lcall	__divsint
      001DCA AD 82            [24] 6037 	mov	r5,dpl
      001DCC AE 83            [24] 6038 	mov	r6,dph
      001DCE D0 07            [24] 6039 	pop	ar7
      001DD0 90r00rDD         [24] 6040 	mov	dptr,#_day
      001DD3 E0               [24] 6041 	movx	a,@dptr
      001DD4 7B 00            [12] 6042 	mov	r3,#0x00
      001DD6 2D               [12] 6043 	add	a,r5
      001DD7 FD               [12] 6044 	mov	r5,a
      001DD8 EB               [12] 6045 	mov	a,r3
      001DD9 3E               [12] 6046 	addc	a,r6
      001DDA FE               [12] 6047 	mov	r6,a
      001DDB EF               [12] 6048 	mov	a,r7
      001DDC 24 FD            [12] 6049 	add	a,#0xff - 0x02
      001DDE 50 15            [24] 6050 	jnc	00113$
      001DE0 90r00rDF         [24] 6051 	mov	dptr,#_year
      001DE3 E0               [24] 6052 	movx	a,@dptr
      001DE4 54 03            [12] 6053 	anl	a,#0x03
      001DE6 7F 00            [12] 6054 	mov	r7,#0x00
      001DE8 4F               [12] 6055 	orl	a,r7
      001DE9 B4 01 00         [24] 6056 	cjne	a,#0x01,00146$
      001DEC                       6057 00146$:
      001DEC 92*47            [24] 6058 	mov  _gsm_thietlapngaygiothuc_sloc0_1_0,c
      001DEE E4               [12] 6059 	clr	a
      001DEF 33               [12] 6060 	rlc	a
      001DF0 FC               [12] 6061 	mov	r4,a
      001DF1 7F 00            [12] 6062 	mov	r7,#0x00
      001DF3 80 04            [24] 6063 	sjmp	00114$
      001DF5                       6064 00113$:
      001DF5 7C 02            [12] 6065 	mov	r4,#0x02
      001DF7 7F 00            [12] 6066 	mov	r7,#0x00
      001DF9                       6067 00114$:
      001DF9 EC               [12] 6068 	mov	a,r4
      001DFA 2D               [12] 6069 	add	a,r5
      001DFB FD               [12] 6070 	mov	r5,a
      001DFC EF               [12] 6071 	mov	a,r7
      001DFD 3E               [12] 6072 	addc	a,r6
      001DFE FE               [12] 6073 	mov	r6,a
      001DFF 90r00rDF         [24] 6074 	mov	dptr,#_year
      001E02 E0               [24] 6075 	movx	a,@dptr
      001E03 FF               [12] 6076 	mov	r7,a
      001E04 FB               [12] 6077 	mov	r3,a
      001E05 7C 00            [12] 6078 	mov	r4,#0x00
      001E07 2D               [12] 6079 	add	a,r5
      001E08 FD               [12] 6080 	mov	r5,a
      001E09 EC               [12] 6081 	mov	a,r4
      001E0A 3E               [12] 6082 	addc	a,r6
      001E0B FE               [12] 6083 	mov	r6,a
      001E0C 8B 82            [24] 6084 	mov	dpl,r3
      001E0E 8C 83            [24] 6085 	mov	dph,r4
      001E10 A3               [24] 6086 	inc	dptr
      001E11 A3               [24] 6087 	inc	dptr
      001E12 A3               [24] 6088 	inc	dptr
      001E13 75*00 04         [24] 6089 	mov	__divsint_PARM_2,#0x04
                                   6090 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      001E16 8C*01            [24] 6091 	mov	(__divsint_PARM_2 + 1),r4
      001E18 C0 07            [24] 6092 	push	ar7
      001E1A C0 06            [24] 6093 	push	ar6
      001E1C C0 05            [24] 6094 	push	ar5
      001E1E 12r00r00         [24] 6095 	lcall	__divsint
      001E21 AB 82            [24] 6096 	mov	r3,dpl
      001E23 AC 83            [24] 6097 	mov	r4,dph
      001E25 D0 05            [24] 6098 	pop	ar5
      001E27 D0 06            [24] 6099 	pop	ar6
      001E29 EB               [12] 6100 	mov	a,r3
      001E2A 2D               [12] 6101 	add	a,r5
      001E2B FD               [12] 6102 	mov	r5,a
      001E2C EC               [12] 6103 	mov	a,r4
      001E2D 3E               [12] 6104 	addc	a,r6
      001E2E FE               [12] 6105 	mov	r6,a
      001E2F 8D 82            [24] 6106 	mov	dpl,r5
      001E31 8E 83            [24] 6107 	mov	dph,r6
      001E33 A3               [24] 6108 	inc	dptr
                                   6109 ;	include/gsm_serial.c:332: date = check%7+1;
      001E34 75*00 07         [24] 6110 	mov	__moduint_PARM_2,#0x07
      001E37 75*01 00         [24] 6111 	mov	(__moduint_PARM_2 + 1),#0x00
      001E3A 12r00r00         [24] 6112 	lcall	__moduint
      001E3D AD 82            [24] 6113 	mov	r5,dpl
      001E3F D0 07            [24] 6114 	pop	ar7
      001E41 0D               [12] 6115 	inc	r5
      001E42 90r00rDC         [24] 6116 	mov	dptr,#_date
      001E45 ED               [12] 6117 	mov	a,r5
      001E46 F0               [24] 6118 	movx	@dptr,a
                                   6119 ;	include/gsm_serial.c:333: rtc_setdate(date,day,month,year);
      001E47 90r00rDD         [24] 6120 	mov	dptr,#_day
      001E4A E0               [24] 6121 	movx	a,@dptr
      001E4B F5*00            [12] 6122 	mov	_rtc_setdate_PARM_2,a
      001E4D 90r00rDE         [24] 6123 	mov	dptr,#_month
      001E50 E0               [24] 6124 	movx	a,@dptr
      001E51 F5*00            [12] 6125 	mov	_rtc_setdate_PARM_3,a
      001E53 8F*00            [24] 6126 	mov	_rtc_setdate_PARM_4,r7
      001E55 8D 82            [24] 6127 	mov	dpl,r5
      001E57 12r00r00         [24] 6128 	lcall	_rtc_setdate
                                   6129 ;	include/gsm_serial.c:334: GPS_time_temp = 1;
                                   6130 ;	assignBit
      001E5A D2*46            [12] 6131 	setb	_gsm_thietlapngaygiothuc_GPS_time_temp_65536_124
      001E5C                       6132 00110$:
                                   6133 ;	include/gsm_serial.c:339: GPS_time = GPS_time_temp;
                                   6134 ;	assignBit
      001E5C A2*46            [12] 6135 	mov	c,_gsm_thietlapngaygiothuc_GPS_time_temp_65536_124
      001E5E 92*1B            [24] 6136 	mov	_GPS_time,c
                                   6137 ;	include/gsm_serial.c:340: gsm_serial_cmd = NORMAL;
      001E60 90r00rFD         [24] 6138 	mov	dptr,#_gsm_serial_cmd
      001E63 E4               [12] 6139 	clr	a
      001E64 F0               [24] 6140 	movx	@dptr,a
                                   6141 ;	include/gsm_serial.c:341: }
      001E65 22               [24] 6142 	ret
                                   6143 ;------------------------------------------------------------
                                   6144 ;Allocation info for local variables in function 'gsm_thietlapgoidien'
                                   6145 ;------------------------------------------------------------
                                   6146 ;	include/gsm_serial.c:343: __bit gsm_thietlapgoidien(){
                                   6147 ;	-----------------------------------------
                                   6148 ;	 function gsm_thietlapgoidien
                                   6149 ;	-----------------------------------------
      001E66                       6150 _gsm_thietlapgoidien:
                                   6151 ;	include/gsm_serial.c:345: if(gsm_sendandcheck("AT+CLIP=1\r", 15, 1,"  SENDING CLIP  ")){
      001E66 75*12r29         [24] 6152 	mov	_gsm_sendandcheck_PARM_4,#___str_61
      001E69 75*13s06         [24] 6153 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_61 >> 8)
      001E6C 75*14 80         [24] 6154 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      001E6F 75*10 0F         [24] 6155 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      001E72 75*11 01         [24] 6156 	mov	_gsm_sendandcheck_PARM_3,#0x01
      001E75 90r06r1E         [24] 6157 	mov	dptr,#___str_60
      001E78 75 F0 80         [24] 6158 	mov	b,#0x80
      001E7B 12r0Dr06         [24] 6159 	lcall	_gsm_sendandcheck
      001E7E 50 2D            [24] 6160 	jnc	00104$
                                   6161 ;	include/gsm_serial.c:346: clear_sms_buffer(0);
      001E80 75 82 00         [24] 6162 	mov	dpl,#0x00
      001E83 12r0CrEA         [24] 6163 	lcall	_clear_sms_buffer
                                   6164 ;	include/gsm_serial.c:347: sms_index = 0;
      001E86 90r00rBA         [24] 6165 	mov	dptr,#_sms_index
      001E89 E4               [12] 6166 	clr	a
      001E8A F0               [24] 6167 	movx	@dptr,a
                                   6168 ;	include/gsm_serial.c:348: gsm_serial_cmd = CALR;
      001E8B 90r00rFD         [24] 6169 	mov	dptr,#_gsm_serial_cmd
      001E8E 74 0B            [12] 6170 	mov	a,#0x0b
      001E90 F0               [24] 6171 	movx	@dptr,a
                                   6172 ;	include/gsm_serial.c:349: if(gsm_sendandcheck("AT+CCALR?\r",15,1," THIET LAP GOI ")){
      001E91 75*12r45         [24] 6173 	mov	_gsm_sendandcheck_PARM_4,#___str_63
      001E94 75*13s06         [24] 6174 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_63 >> 8)
      001E97 75*14 80         [24] 6175 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      001E9A 75*10 0F         [24] 6176 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      001E9D 75*11 01         [24] 6177 	mov	_gsm_sendandcheck_PARM_3,#0x01
      001EA0 90r06r3A         [24] 6178 	mov	dptr,#___str_62
      001EA3 75 F0 80         [24] 6179 	mov	b,#0x80
      001EA6 12r0Dr06         [24] 6180 	lcall	_gsm_sendandcheck
      001EA9 50 02            [24] 6181 	jnc	00104$
                                   6182 ;	include/gsm_serial.c:350: return 1;
      001EAB D3               [12] 6183 	setb	c
      001EAC 22               [24] 6184 	ret
      001EAD                       6185 00104$:
                                   6186 ;	include/gsm_serial.c:353: return 0;
      001EAD C3               [12] 6187 	clr	c
                                   6188 ;	include/gsm_serial.c:355: }
      001EAE 22               [24] 6189 	ret
                                   6190 ;------------------------------------------------------------
                                   6191 ;Allocation info for local variables in function 'gsm_thietlapnhantin'
                                   6192 ;------------------------------------------------------------
                                   6193 ;	include/gsm_serial.c:357: __bit gsm_thietlapnhantin(){
                                   6194 ;	-----------------------------------------
                                   6195 ;	 function gsm_thietlapnhantin
                                   6196 ;	-----------------------------------------
      001EAF                       6197 _gsm_thietlapnhantin:
                                   6198 ;	include/gsm_serial.c:358: if(!gsm_pw || !sms_on) return 0;
      001EAF 30 A0 06         [24] 6199 	jnb	_P20,00101$
      001EB2 90r01r31         [24] 6200 	mov	dptr,#_sms_on
      001EB5 E0               [24] 6201 	movx	a,@dptr
      001EB6 70 02            [24] 6202 	jnz	00102$
      001EB8                       6203 00101$:
      001EB8 C3               [12] 6204 	clr	c
      001EB9 22               [24] 6205 	ret
      001EBA                       6206 00102$:
                                   6207 ;	include/gsm_serial.c:359: if(gsm_sendandcheck("AT+CMGF=1\r", 15, 1,"  SENDING CMGF  ")){
      001EBA 75*12r60         [24] 6208 	mov	_gsm_sendandcheck_PARM_4,#___str_65
      001EBD 75*13s06         [24] 6209 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_65 >> 8)
      001EC0 75*14 80         [24] 6210 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      001EC3 75*10 0F         [24] 6211 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      001EC6 75*11 01         [24] 6212 	mov	_gsm_sendandcheck_PARM_3,#0x01
      001EC9 90r06r55         [24] 6213 	mov	dptr,#___str_64
      001ECC 75 F0 80         [24] 6214 	mov	b,#0x80
      001ECF 12r0Dr06         [24] 6215 	lcall	_gsm_sendandcheck
      001ED2 50 39            [24] 6216 	jnc	00109$
                                   6217 ;	include/gsm_serial.c:360: if(gsm_sendandcheck("AT+CNMI=1,1,0,0,1\r", 15, 1,"  SENDING CNMI  ")){
      001ED4 75*12r84         [24] 6218 	mov	_gsm_sendandcheck_PARM_4,#___str_67
      001ED7 75*13s06         [24] 6219 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_67 >> 8)
      001EDA 75*14 80         [24] 6220 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      001EDD 75*10 0F         [24] 6221 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      001EE0 75*11 01         [24] 6222 	mov	_gsm_sendandcheck_PARM_3,#0x01
      001EE3 90r06r71         [24] 6223 	mov	dptr,#___str_66
      001EE6 75 F0 80         [24] 6224 	mov	b,#0x80
      001EE9 12r0Dr06         [24] 6225 	lcall	_gsm_sendandcheck
      001EEC 50 1F            [24] 6226 	jnc	00109$
                                   6227 ;	include/gsm_serial.c:361: if(gsm_sendandcheck("AT+CMGDA=\"DEL ALL\"\r", 15, 1,"  THIET LAP TN  ")){
      001EEE 75*12rA9         [24] 6228 	mov	_gsm_sendandcheck_PARM_4,#___str_69
      001EF1 75*13s06         [24] 6229 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_69 >> 8)
      001EF4 75*14 80         [24] 6230 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      001EF7 75*10 0F         [24] 6231 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      001EFA 75*11 01         [24] 6232 	mov	_gsm_sendandcheck_PARM_3,#0x01
      001EFD 90r06r95         [24] 6233 	mov	dptr,#___str_68
      001F00 75 F0 80         [24] 6234 	mov	b,#0x80
      001F03 12r0Dr06         [24] 6235 	lcall	_gsm_sendandcheck
      001F06 50 05            [24] 6236 	jnc	00109$
                                   6237 ;	include/gsm_serial.c:362: kiemtratinhieu();
      001F08 12r10r36         [24] 6238 	lcall	_kiemtratinhieu
                                   6239 ;	include/gsm_serial.c:363: return 1;
      001F0B D3               [12] 6240 	setb	c
      001F0C 22               [24] 6241 	ret
      001F0D                       6242 00109$:
                                   6243 ;	include/gsm_serial.c:367: return 0;
      001F0D C3               [12] 6244 	clr	c
                                   6245 ;	include/gsm_serial.c:368: }
      001F0E 22               [24] 6246 	ret
                                   6247 ;------------------------------------------------------------
                                   6248 ;Allocation info for local variables in function 'gsm_thietlapnhantin1'
                                   6249 ;------------------------------------------------------------
                                   6250 ;	include/gsm_serial.c:370: __bit gsm_thietlapnhantin1(){
                                   6251 ;	-----------------------------------------
                                   6252 ;	 function gsm_thietlapnhantin1
                                   6253 ;	-----------------------------------------
      001F0F                       6254 _gsm_thietlapnhantin1:
                                   6255 ;	include/gsm_serial.c:371: if(!gsm_pw || !sms_on) return 0;
      001F0F 30 A0 06         [24] 6256 	jnb	_P20,00101$
      001F12 90r01r31         [24] 6257 	mov	dptr,#_sms_on
      001F15 E0               [24] 6258 	movx	a,@dptr
      001F16 70 02            [24] 6259 	jnz	00102$
      001F18                       6260 00101$:
      001F18 C3               [12] 6261 	clr	c
      001F19 22               [24] 6262 	ret
      001F1A                       6263 00102$:
                                   6264 ;	include/gsm_serial.c:372: if(!gsm_sendandcheck("AT\r", 15, 1,"THIET LAP TNHAN ")) return 0;
      001F1A 75*12rBA         [24] 6265 	mov	_gsm_sendandcheck_PARM_4,#___str_70
      001F1D 75*13s06         [24] 6266 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_70 >> 8)
      001F20 75*14 80         [24] 6267 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      001F23 75*10 0F         [24] 6268 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      001F26 75*11 01         [24] 6269 	mov	_gsm_sendandcheck_PARM_3,#0x01
      001F29 90r04rEC         [24] 6270 	mov	dptr,#___str_38
      001F2C 75 F0 80         [24] 6271 	mov	b,#0x80
      001F2F 12r0Dr06         [24] 6272 	lcall	_gsm_sendandcheck
      001F32 40 01            [24] 6273 	jc	00105$
      001F34 22               [24] 6274 	ret
      001F35                       6275 00105$:
                                   6276 ;	include/gsm_serial.c:373: if(gsm_sendandcheck("AT+CMGF=1\r", 15, 2,"  SENDING CMGF  ")){
      001F35 75*12r60         [24] 6277 	mov	_gsm_sendandcheck_PARM_4,#___str_65
      001F38 75*13s06         [24] 6278 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_65 >> 8)
      001F3B 75*14 80         [24] 6279 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      001F3E 75*10 0F         [24] 6280 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      001F41 75*11 02         [24] 6281 	mov	_gsm_sendandcheck_PARM_3,#0x02
      001F44 90r06r55         [24] 6282 	mov	dptr,#___str_64
      001F47 75 F0 80         [24] 6283 	mov	b,#0x80
      001F4A 12r0Dr06         [24] 6284 	lcall	_gsm_sendandcheck
      001F4D 50 36            [24] 6285 	jnc	00111$
                                   6286 ;	include/gsm_serial.c:374: if(gsm_sendandcheck("AT+CNMI=1,1,0,0,1\r", 15, 1,"  SENDING CNMI  ")){
      001F4F 75*12r84         [24] 6287 	mov	_gsm_sendandcheck_PARM_4,#___str_67
      001F52 75*13s06         [24] 6288 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_67 >> 8)
      001F55 75*14 80         [24] 6289 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      001F58 75*10 0F         [24] 6290 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      001F5B 75*11 01         [24] 6291 	mov	_gsm_sendandcheck_PARM_3,#0x01
      001F5E 90r06r71         [24] 6292 	mov	dptr,#___str_66
      001F61 75 F0 80         [24] 6293 	mov	b,#0x80
      001F64 12r0Dr06         [24] 6294 	lcall	_gsm_sendandcheck
      001F67 50 1C            [24] 6295 	jnc	00111$
                                   6296 ;	include/gsm_serial.c:375: if(gsm_sendandcheck("AT+CMGDA=\"DEL ALL\"\r", 20, 3,"  SENDING CMGDA  ")){
      001F69 75*12rCB         [24] 6297 	mov	_gsm_sendandcheck_PARM_4,#___str_71
      001F6C 75*13s06         [24] 6298 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_71 >> 8)
      001F6F 75*14 80         [24] 6299 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      001F72 75*10 14         [24] 6300 	mov	_gsm_sendandcheck_PARM_2,#0x14
      001F75 75*11 03         [24] 6301 	mov	_gsm_sendandcheck_PARM_3,#0x03
      001F78 90r06r95         [24] 6302 	mov	dptr,#___str_68
      001F7B 75 F0 80         [24] 6303 	mov	b,#0x80
      001F7E 12r0Dr06         [24] 6304 	lcall	_gsm_sendandcheck
      001F81 50 02            [24] 6305 	jnc	00111$
                                   6306 ;	include/gsm_serial.c:376: return 1;
      001F83 D3               [12] 6307 	setb	c
      001F84 22               [24] 6308 	ret
      001F85                       6309 00111$:
                                   6310 ;	include/gsm_serial.c:380: return 0;
      001F85 C3               [12] 6311 	clr	c
                                   6312 ;	include/gsm_serial.c:381: }
      001F86 22               [24] 6313 	ret
                                   6314 ;------------------------------------------------------------
                                   6315 ;Allocation info for local variables in function 'gsm_laygio_gps'
                                   6316 ;------------------------------------------------------------
                                   6317 ;phay                      Allocated to registers r7 
                                   6318 ;i                         Allocated to registers r5 
                                   6319 ;------------------------------------------------------------
                                   6320 ;	include/gsm_serial.c:384: void gsm_laygio_gps(){
                                   6321 ;	-----------------------------------------
                                   6322 ;	 function gsm_laygio_gps
                                   6323 ;	-----------------------------------------
      001F87                       6324 _gsm_laygio_gps:
                                   6325 ;	include/gsm_serial.c:385: __bit GPS_time_temp = 0;
                                   6326 ;	assignBit
      001F87 C2*48            [12] 6327 	clr	_gsm_laygio_gps_GPS_time_temp_65536_141
                                   6328 ;	include/gsm_serial.c:386: if(sim_test_sec==61) return;
      001F89 90r01r30         [24] 6329 	mov	dptr,#_sim_test_sec
      001F8C E0               [24] 6330 	movx	a,@dptr
      001F8D FF               [12] 6331 	mov	r7,a
      001F8E BF 3D 01         [24] 6332 	cjne	r7,#0x3d,00102$
      001F91 22               [24] 6333 	ret
      001F92                       6334 00102$:
                                   6335 ;	include/gsm_serial.c:387: if(gsm_sendandcheck("AT\r", 15, 1,"LAY GIO VE TINH ")){
      001F92 75*12rDD         [24] 6336 	mov	_gsm_sendandcheck_PARM_4,#___str_72
      001F95 75*13s06         [24] 6337 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_72 >> 8)
      001F98 75*14 80         [24] 6338 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      001F9B 75*10 0F         [24] 6339 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      001F9E 75*11 01         [24] 6340 	mov	_gsm_sendandcheck_PARM_3,#0x01
      001FA1 90r04rEC         [24] 6341 	mov	dptr,#___str_38
      001FA4 75 F0 80         [24] 6342 	mov	b,#0x80
      001FA7 12r0Dr06         [24] 6343 	lcall	_gsm_sendandcheck
      001FAA 40 03            [24] 6344 	jc	00220$
      001FAC 02r21rB7         [24] 6345 	ljmp	00132$
      001FAF                       6346 00220$:
                                   6347 ;	include/gsm_serial.c:388: if(gsm_sendandcheck("AT+IPR=0\r", 15, 1,"  SENDING IPR   ")){
      001FAF 75*12rF8         [24] 6348 	mov	_gsm_sendandcheck_PARM_4,#___str_74
      001FB2 75*13s06         [24] 6349 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_74 >> 8)
      001FB5 75*14 80         [24] 6350 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      001FB8 75*10 0F         [24] 6351 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      001FBB 75*11 01         [24] 6352 	mov	_gsm_sendandcheck_PARM_3,#0x01
      001FBE 90r06rEE         [24] 6353 	mov	dptr,#___str_73
      001FC1 75 F0 80         [24] 6354 	mov	b,#0x80
      001FC4 12r0Dr06         [24] 6355 	lcall	_gsm_sendandcheck
      001FC7 40 03            [24] 6356 	jc	00221$
      001FC9 02r21rB7         [24] 6357 	ljmp	00132$
      001FCC                       6358 00221$:
                                   6359 ;	include/gsm_serial.c:389: gsm_sendandcheck("AT+CLIP=1\r", 15, 1,"  SENDING CLIP  ");
      001FCC 75*12r29         [24] 6360 	mov	_gsm_sendandcheck_PARM_4,#___str_61
      001FCF 75*13s06         [24] 6361 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_61 >> 8)
      001FD2 75*14 80         [24] 6362 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      001FD5 75*10 0F         [24] 6363 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      001FD8 75*11 01         [24] 6364 	mov	_gsm_sendandcheck_PARM_3,#0x01
      001FDB 90r06r1E         [24] 6365 	mov	dptr,#___str_60
      001FDE 75 F0 80         [24] 6366 	mov	b,#0x80
      001FE1 12r0Dr06         [24] 6367 	lcall	_gsm_sendandcheck
                                   6368 ;	include/gsm_serial.c:390: if(eep_gpson){
      001FE4 90 F0 02         [24] 6369 	mov	dptr,#_eep_gpson
      001FE7 E4               [12] 6370 	clr	a
      001FE8 93               [24] 6371 	movc	a,@a+dptr
      001FE9 70 03            [24] 6372 	jnz	00222$
      001FEB 02r21rB7         [24] 6373 	ljmp	00132$
      001FEE                       6374 00222$:
                                   6375 ;	include/gsm_serial.c:391: if(gsm_sendandcheck("AT+CLTS=1\r", 15, 1,"  SENDING CLTS  ")){
      001FEE 75*12r09         [24] 6376 	mov	_gsm_sendandcheck_PARM_4,#___str_75
      001FF1 75*13s07         [24] 6377 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_75 >> 8)
      001FF4 75*14 80         [24] 6378 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      001FF7 75*10 0F         [24] 6379 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      001FFA 75*11 01         [24] 6380 	mov	_gsm_sendandcheck_PARM_3,#0x01
      001FFD 90r05rB3         [24] 6381 	mov	dptr,#___str_52
      002000 75 F0 80         [24] 6382 	mov	b,#0x80
      002003 12r0Dr06         [24] 6383 	lcall	_gsm_sendandcheck
      002006 40 03            [24] 6384 	jc	00223$
      002008 02r21rB7         [24] 6385 	ljmp	00132$
      00200B                       6386 00223$:
                                   6387 ;	include/gsm_serial.c:392: if(gsm_sendandcheck("AT+CFUN=0\r", 15, 1,"  SENDING CFUN0  ")){
      00200B 75*12r25         [24] 6388 	mov	_gsm_sendandcheck_PARM_4,#___str_77
      00200E 75*13s07         [24] 6389 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_77 >> 8)
      002011 75*14 80         [24] 6390 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      002014 75*10 0F         [24] 6391 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      002017 75*11 01         [24] 6392 	mov	_gsm_sendandcheck_PARM_3,#0x01
      00201A 90r07r1A         [24] 6393 	mov	dptr,#___str_76
      00201D 75 F0 80         [24] 6394 	mov	b,#0x80
      002020 12r0Dr06         [24] 6395 	lcall	_gsm_sendandcheck
      002023 40 03            [24] 6396 	jc	00224$
      002025 02r21rB7         [24] 6397 	ljmp	00132$
      002028                       6398 00224$:
                                   6399 ;	include/gsm_serial.c:393: gsm_serial_cmd = CFUN1;
      002028 90r00rFD         [24] 6400 	mov	dptr,#_gsm_serial_cmd
      00202B 74 06            [12] 6401 	mov	a,#0x06
      00202D F0               [24] 6402 	movx	@dptr,a
                                   6403 ;	include/gsm_serial.c:394: if(gsm_sendandcheck("AT+CFUN=1\r", 15, 2,"  SENDING CFUN1  ")){
      00202E 75*12r42         [24] 6404 	mov	_gsm_sendandcheck_PARM_4,#___str_79
      002031 75*13s07         [24] 6405 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_79 >> 8)
      002034 75*14 80         [24] 6406 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      002037 75*10 0F         [24] 6407 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      00203A 75*11 02         [24] 6408 	mov	_gsm_sendandcheck_PARM_3,#0x02
      00203D 90r07r37         [24] 6409 	mov	dptr,#___str_78
      002040 75 F0 80         [24] 6410 	mov	b,#0x80
      002043 12r0Dr06         [24] 6411 	lcall	_gsm_sendandcheck
      002046 40 03            [24] 6412 	jc	00225$
      002048 02r21rB7         [24] 6413 	ljmp	00132$
      00204B                       6414 00225$:
                                   6415 ;	include/gsm_serial.c:395: if(have_time == CFUN){
      00204B 90r00rFE         [24] 6416 	mov	dptr,#_have_time
      00204E E0               [24] 6417 	movx	a,@dptr
      00204F FF               [12] 6418 	mov	r7,a
      002050 BF 01 02         [24] 6419 	cjne	r7,#0x01,00226$
      002053 80 03            [24] 6420 	sjmp	00227$
      002055                       6421 00226$:
      002055 02r21rB7         [24] 6422 	ljmp	00132$
      002058                       6423 00227$:
                                   6424 ;	include/gsm_serial.c:397: while((date_str[i++]!=',' || ++phay<3) && i<11)WATCHDOG;
      002058 7F 00            [12] 6425 	mov	r7,#0x00
      00205A 7E 00            [12] 6426 	mov	r6,#0x00
      00205C                       6427 00105$:
      00205C EE               [12] 6428 	mov	a,r6
      00205D 24r10            [12] 6429 	add	a,#_date_str
      00205F F5 82            [12] 6430 	mov	dpl,a
      002061 E4               [12] 6431 	clr	a
      002062 34s01            [12] 6432 	addc	a,#(_date_str >> 8)
      002064 F5 83            [12] 6433 	mov	dph,a
      002066 0E               [12] 6434 	inc	r6
      002067 E0               [24] 6435 	movx	a,@dptr
      002068 FD               [12] 6436 	mov	r5,a
      002069 BD 2C 06         [24] 6437 	cjne	r5,#0x2c,00104$
      00206C 0F               [12] 6438 	inc	r7
      00206D BF 03 00         [24] 6439 	cjne	r7,#0x03,00230$
      002070                       6440 00230$:
      002070 50 0A            [24] 6441 	jnc	00107$
      002072                       6442 00104$:
      002072 BE 0B 00         [24] 6443 	cjne	r6,#0x0b,00232$
      002075                       6444 00232$:
      002075 50 05            [24] 6445 	jnc	00107$
      002077 43 C1 10         [24] 6446 	orl	_WDT_CONTR,#0x10
      00207A 80 E0            [24] 6447 	sjmp	00105$
      00207C                       6448 00107$:
                                   6449 ;	include/gsm_serial.c:398: if(phay>2){
      00207C EF               [12] 6450 	mov	a,r7
      00207D 24 FD            [12] 6451 	add	a,#0xff - 0x02
      00207F 40 03            [24] 6452 	jc	00234$
      002081 02r21rB7         [24] 6453 	ljmp	00132$
      002084                       6454 00234$:
                                   6455 ;	include/gsm_serial.c:399: if(date_str[i+1]==',') hour = (date_str[i++]-'0');
      002084 8E 07            [24] 6456 	mov	ar7,r6
      002086 0F               [12] 6457 	inc	r7
      002087 EF               [12] 6458 	mov	a,r7
      002088 33               [12] 6459 	rlc	a
      002089 95 E0            [12] 6460 	subb	a,acc
      00208B FD               [12] 6461 	mov	r5,a
      00208C EF               [12] 6462 	mov	a,r7
      00208D 24r10            [12] 6463 	add	a,#_date_str
      00208F F5 82            [12] 6464 	mov	dpl,a
      002091 ED               [12] 6465 	mov	a,r5
      002092 34s01            [12] 6466 	addc	a,#(_date_str >> 8)
      002094 F5 83            [12] 6467 	mov	dph,a
      002096 E0               [24] 6468 	movx	a,@dptr
      002097 FF               [12] 6469 	mov	r7,a
      002098 BF 2C 15         [24] 6470 	cjne	r7,#0x2c,00109$
      00209B EE               [12] 6471 	mov	a,r6
      00209C 04               [12] 6472 	inc	a
      00209D FF               [12] 6473 	mov	r7,a
      00209E EE               [12] 6474 	mov	a,r6
      00209F 24r10            [12] 6475 	add	a,#_date_str
      0020A1 F5 82            [12] 6476 	mov	dpl,a
      0020A3 E4               [12] 6477 	clr	a
      0020A4 34s01            [12] 6478 	addc	a,#(_date_str >> 8)
      0020A6 F5 83            [12] 6479 	mov	dph,a
      0020A8 E0               [24] 6480 	movx	a,@dptr
      0020A9 FD               [12] 6481 	mov	r5,a
      0020AA 24 D0            [12] 6482 	add	a,#0xd0
      0020AC F5*02            [12] 6483 	mov	_hour,a
      0020AE 80 29            [24] 6484 	sjmp	00110$
      0020B0                       6485 00109$:
                                   6486 ;	include/gsm_serial.c:400: else hour = (date_str[i++]-'0')*10 + (date_str[i++]-'0');
      0020B0 EE               [12] 6487 	mov	a,r6
      0020B1 04               [12] 6488 	inc	a
      0020B2 FD               [12] 6489 	mov	r5,a
      0020B3 EE               [12] 6490 	mov	a,r6
      0020B4 24r10            [12] 6491 	add	a,#_date_str
      0020B6 F5 82            [12] 6492 	mov	dpl,a
      0020B8 E4               [12] 6493 	clr	a
      0020B9 34s01            [12] 6494 	addc	a,#(_date_str >> 8)
      0020BB F5 83            [12] 6495 	mov	dph,a
      0020BD E0               [24] 6496 	movx	a,@dptr
      0020BE 24 D0            [12] 6497 	add	a,#0xd0
      0020C0 75 F0 0A         [24] 6498 	mov	b,#0x0a
      0020C3 A4               [48] 6499 	mul	ab
      0020C4 FE               [12] 6500 	mov	r6,a
      0020C5 ED               [12] 6501 	mov	a,r5
      0020C6 04               [12] 6502 	inc	a
      0020C7 FF               [12] 6503 	mov	r7,a
      0020C8 ED               [12] 6504 	mov	a,r5
      0020C9 24r10            [12] 6505 	add	a,#_date_str
      0020CB F5 82            [12] 6506 	mov	dpl,a
      0020CD E4               [12] 6507 	clr	a
      0020CE 34s01            [12] 6508 	addc	a,#(_date_str >> 8)
      0020D0 F5 83            [12] 6509 	mov	dph,a
      0020D2 E0               [24] 6510 	movx	a,@dptr
      0020D3 FD               [12] 6511 	mov	r5,a
      0020D4 24 D0            [12] 6512 	add	a,#0xd0
      0020D6 2E               [12] 6513 	add	a,r6
      0020D7 F5*02            [12] 6514 	mov	_hour,a
      0020D9                       6515 00110$:
                                   6516 ;	include/gsm_serial.c:401: if(date_str[++i+1]==',') minute = (date_str[i++]-'0');
      0020D9 0F               [12] 6517 	inc	r7
      0020DA 8F 06            [24] 6518 	mov	ar6,r7
      0020DC 0E               [12] 6519 	inc	r6
      0020DD EE               [12] 6520 	mov	a,r6
      0020DE 33               [12] 6521 	rlc	a
      0020DF 95 E0            [12] 6522 	subb	a,acc
      0020E1 FD               [12] 6523 	mov	r5,a
      0020E2 EE               [12] 6524 	mov	a,r6
      0020E3 24r10            [12] 6525 	add	a,#_date_str
      0020E5 F5 82            [12] 6526 	mov	dpl,a
      0020E7 ED               [12] 6527 	mov	a,r5
      0020E8 34s01            [12] 6528 	addc	a,#(_date_str >> 8)
      0020EA F5 83            [12] 6529 	mov	dph,a
      0020EC E0               [24] 6530 	movx	a,@dptr
      0020ED FE               [12] 6531 	mov	r6,a
      0020EE BE 2C 15         [24] 6532 	cjne	r6,#0x2c,00112$
      0020F1 EF               [12] 6533 	mov	a,r7
      0020F2 04               [12] 6534 	inc	a
      0020F3 FE               [12] 6535 	mov	r6,a
      0020F4 EF               [12] 6536 	mov	a,r7
      0020F5 24r10            [12] 6537 	add	a,#_date_str
      0020F7 F5 82            [12] 6538 	mov	dpl,a
      0020F9 E4               [12] 6539 	clr	a
      0020FA 34s01            [12] 6540 	addc	a,#(_date_str >> 8)
      0020FC F5 83            [12] 6541 	mov	dph,a
      0020FE E0               [24] 6542 	movx	a,@dptr
      0020FF FD               [12] 6543 	mov	r5,a
      002100 24 D0            [12] 6544 	add	a,#0xd0
      002102 F5*01            [12] 6545 	mov	_minute,a
      002104 80 29            [24] 6546 	sjmp	00113$
      002106                       6547 00112$:
                                   6548 ;	include/gsm_serial.c:402: else minute = (date_str[i++]-'0')*10 + (date_str[i++]-'0');
      002106 EF               [12] 6549 	mov	a,r7
      002107 04               [12] 6550 	inc	a
      002108 FD               [12] 6551 	mov	r5,a
      002109 EF               [12] 6552 	mov	a,r7
      00210A 24r10            [12] 6553 	add	a,#_date_str
      00210C F5 82            [12] 6554 	mov	dpl,a
      00210E E4               [12] 6555 	clr	a
      00210F 34s01            [12] 6556 	addc	a,#(_date_str >> 8)
      002111 F5 83            [12] 6557 	mov	dph,a
      002113 E0               [24] 6558 	movx	a,@dptr
      002114 24 D0            [12] 6559 	add	a,#0xd0
      002116 75 F0 0A         [24] 6560 	mov	b,#0x0a
      002119 A4               [48] 6561 	mul	ab
      00211A FF               [12] 6562 	mov	r7,a
      00211B ED               [12] 6563 	mov	a,r5
      00211C 04               [12] 6564 	inc	a
      00211D FE               [12] 6565 	mov	r6,a
      00211E ED               [12] 6566 	mov	a,r5
      00211F 24r10            [12] 6567 	add	a,#_date_str
      002121 F5 82            [12] 6568 	mov	dpl,a
      002123 E4               [12] 6569 	clr	a
      002124 34s01            [12] 6570 	addc	a,#(_date_str >> 8)
      002126 F5 83            [12] 6571 	mov	dph,a
      002128 E0               [24] 6572 	movx	a,@dptr
      002129 FD               [12] 6573 	mov	r5,a
      00212A 24 D0            [12] 6574 	add	a,#0xd0
      00212C 2F               [12] 6575 	add	a,r7
      00212D F5*01            [12] 6576 	mov	_minute,a
      00212F                       6577 00113$:
                                   6578 ;	include/gsm_serial.c:403: if(date_str[++i+1]==',') second = (date_str[i++]-'0');
      00212F EE               [12] 6579 	mov	a,r6
      002130 04               [12] 6580 	inc	a
      002131 FF               [12] 6581 	mov	r7,a
      002132 FE               [12] 6582 	mov	r6,a
      002133 0E               [12] 6583 	inc	r6
      002134 EE               [12] 6584 	mov	a,r6
      002135 33               [12] 6585 	rlc	a
      002136 95 E0            [12] 6586 	subb	a,acc
      002138 FD               [12] 6587 	mov	r5,a
      002139 EE               [12] 6588 	mov	a,r6
      00213A 24r10            [12] 6589 	add	a,#_date_str
      00213C F5 82            [12] 6590 	mov	dpl,a
      00213E ED               [12] 6591 	mov	a,r5
      00213F 34s01            [12] 6592 	addc	a,#(_date_str >> 8)
      002141 F5 83            [12] 6593 	mov	dph,a
      002143 E0               [24] 6594 	movx	a,@dptr
      002144 FE               [12] 6595 	mov	r6,a
      002145 BE 2C 12         [24] 6596 	cjne	r6,#0x2c,00115$
      002148 EF               [12] 6597 	mov	a,r7
      002149 24r10            [12] 6598 	add	a,#_date_str
      00214B F5 82            [12] 6599 	mov	dpl,a
      00214D E4               [12] 6600 	clr	a
      00214E 34s01            [12] 6601 	addc	a,#(_date_str >> 8)
      002150 F5 83            [12] 6602 	mov	dph,a
      002152 E0               [24] 6603 	movx	a,@dptr
      002153 FE               [12] 6604 	mov	r6,a
      002154 24 D0            [12] 6605 	add	a,#0xd0
      002156 F5*00            [12] 6606 	mov	_second,a
      002158 80 26            [24] 6607 	sjmp	00116$
      00215A                       6608 00115$:
                                   6609 ;	include/gsm_serial.c:404: else second = (date_str[i++]-'0')*10 + (date_str[i++]-'0');
      00215A EF               [12] 6610 	mov	a,r7
      00215B 04               [12] 6611 	inc	a
      00215C FE               [12] 6612 	mov	r6,a
      00215D EF               [12] 6613 	mov	a,r7
      00215E 24r10            [12] 6614 	add	a,#_date_str
      002160 F5 82            [12] 6615 	mov	dpl,a
      002162 E4               [12] 6616 	clr	a
      002163 34s01            [12] 6617 	addc	a,#(_date_str >> 8)
      002165 F5 83            [12] 6618 	mov	dph,a
      002167 E0               [24] 6619 	movx	a,@dptr
      002168 24 D0            [12] 6620 	add	a,#0xd0
      00216A 75 F0 0A         [24] 6621 	mov	b,#0x0a
      00216D A4               [48] 6622 	mul	ab
      00216E FF               [12] 6623 	mov	r7,a
      00216F EE               [12] 6624 	mov	a,r6
      002170 24r10            [12] 6625 	add	a,#_date_str
      002172 F5 82            [12] 6626 	mov	dpl,a
      002174 E4               [12] 6627 	clr	a
      002175 34s01            [12] 6628 	addc	a,#(_date_str >> 8)
      002177 F5 83            [12] 6629 	mov	dph,a
      002179 E0               [24] 6630 	movx	a,@dptr
      00217A FE               [12] 6631 	mov	r6,a
      00217B 24 D0            [12] 6632 	add	a,#0xd0
      00217D 2F               [12] 6633 	add	a,r7
      00217E F5*00            [12] 6634 	mov	_second,a
      002180                       6635 00116$:
                                   6636 ;	include/gsm_serial.c:405: hour = (hour+7>23) ? hour-17 : hour+7;
      002180 AE*02            [24] 6637 	mov	r6,_hour
      002182 7F 00            [12] 6638 	mov	r7,#0x00
      002184 74 07            [12] 6639 	mov	a,#0x07
      002186 2E               [12] 6640 	add	a,r6
      002187 FE               [12] 6641 	mov	r6,a
      002188 E4               [12] 6642 	clr	a
      002189 3F               [12] 6643 	addc	a,r7
      00218A FF               [12] 6644 	mov	r7,a
      00218B C3               [12] 6645 	clr	c
      00218C 74 17            [12] 6646 	mov	a,#0x17
      00218E 9E               [12] 6647 	subb	a,r6
      00218F 74 80            [12] 6648 	mov	a,#(0x00 ^ 0x80)
      002191 8F F0            [24] 6649 	mov	b,r7
      002193 63 F0 80         [24] 6650 	xrl	b,#0x80
      002196 95 F0            [12] 6651 	subb	a,b
      002198 50 07            [24] 6652 	jnc	00135$
      00219A E5*02            [12] 6653 	mov	a,_hour
      00219C 24 EF            [12] 6654 	add	a,#0xef
      00219E FF               [12] 6655 	mov	r7,a
      00219F 80 06            [24] 6656 	sjmp	00136$
      0021A1                       6657 00135$:
      0021A1 AE*02            [24] 6658 	mov	r6,_hour
      0021A3 74 07            [12] 6659 	mov	a,#0x07
      0021A5 2E               [12] 6660 	add	a,r6
      0021A6 FF               [12] 6661 	mov	r7,a
      0021A7                       6662 00136$:
      0021A7 8F*02            [24] 6663 	mov	_hour,r7
                                   6664 ;	include/gsm_serial.c:406: rtc_settime(hour,minute,second);
      0021A9 85*01*00         [24] 6665 	mov	_rtc_settime_PARM_2,_minute
      0021AC 85*00*00         [24] 6666 	mov	_rtc_settime_PARM_3,_second
      0021AF 85*02 82         [24] 6667 	mov	dpl,_hour
      0021B2 12r00r00         [24] 6668 	lcall	_rtc_settime
                                   6669 ;	include/gsm_serial.c:407: GPS_time_temp = 1;
                                   6670 ;	assignBit
      0021B5 D2*48            [12] 6671 	setb	_gsm_laygio_gps_GPS_time_temp_65536_141
      0021B7                       6672 00132$:
                                   6673 ;	include/gsm_serial.c:416: GPS_time = GPS_time_temp;
                                   6674 ;	assignBit
      0021B7 A2*48            [12] 6675 	mov	c,_gsm_laygio_gps_GPS_time_temp_65536_141
      0021B9 92*1B            [24] 6676 	mov	_GPS_time,c
                                   6677 ;	include/gsm_serial.c:417: gsm_serial_cmd = NORMAL;
      0021BB 90r00rFD         [24] 6678 	mov	dptr,#_gsm_serial_cmd
      0021BE E4               [12] 6679 	clr	a
      0021BF F0               [24] 6680 	movx	@dptr,a
                                   6681 ;	include/gsm_serial.c:418: }
      0021C0 22               [24] 6682 	ret
                                   6683 ;------------------------------------------------------------
                                   6684 ;Allocation info for local variables in function 'gsm_serial_interrupt'
                                   6685 ;------------------------------------------------------------
                                   6686 ;	include/gsm_serial.c:424: void gsm_serial_interrupt() __interrupt gsm_SERIAL_INT __using SERIAL_MEM{
                                   6687 ;	-----------------------------------------
                                   6688 ;	 function gsm_serial_interrupt
                                   6689 ;	-----------------------------------------
      0021C1                       6690 _gsm_serial_interrupt:
                           000017  6691 	ar7 = 0x17
                           000016  6692 	ar6 = 0x16
                           000015  6693 	ar5 = 0x15
                           000014  6694 	ar4 = 0x14
                           000013  6695 	ar3 = 0x13
                           000012  6696 	ar2 = 0x12
                           000011  6697 	ar1 = 0x11
                           000010  6698 	ar0 = 0x10
      0021C1 C0*00            [24] 6699 	push	bits
      0021C3 C0 E0            [24] 6700 	push	acc
      0021C5 C0 F0            [24] 6701 	push	b
      0021C7 C0 82            [24] 6702 	push	dpl
      0021C9 C0 83            [24] 6703 	push	dph
      0021CB C0 07            [24] 6704 	push	(0+7)
      0021CD C0 06            [24] 6705 	push	(0+6)
      0021CF C0 05            [24] 6706 	push	(0+5)
      0021D1 C0 04            [24] 6707 	push	(0+4)
      0021D3 C0 03            [24] 6708 	push	(0+3)
      0021D5 C0 02            [24] 6709 	push	(0+2)
      0021D7 C0 01            [24] 6710 	push	(0+1)
      0021D9 C0 00            [24] 6711 	push	(0+0)
      0021DB C0 D0            [24] 6712 	push	psw
      0021DD 75 D0 10         [24] 6713 	mov	psw,#0x10
                                   6714 ;	include/gsm_serial.c:425: if(gsm_RI){
      0021E0 20 98 03         [24] 6715 	jb	_RI,00955$
      0021E3 02r3Ar7D         [24] 6716 	ljmp	00350$
      0021E6                       6717 00955$:
                                   6718 ;	include/gsm_serial.c:426: WATCHDOG;
      0021E6 43 C1 10         [24] 6719 	orl	_WDT_CONTR,#0x10
                                   6720 ;	include/gsm_serial.c:427: connect = connect_time_out;
      0021E9 90r00rFB         [24] 6721 	mov	dptr,#_connect_time_out
      0021EC E0               [24] 6722 	movx	a,@dptr
      0021ED 90r00rFA         [24] 6723 	mov	dptr,#_connect
      0021F0 F0               [24] 6724 	movx	@dptr,a
                                   6725 ;	include/gsm_serial.c:428: gsm_receive_buf[gsm_receive_pointer] = SBUF;
      0021F1 90r00rFF         [24] 6726 	mov	dptr,#_gsm_receive_pointer
      0021F4 E0               [24] 6727 	movx	a,@dptr
      0021F5 24r01            [12] 6728 	add	a,#_gsm_receive_buf
      0021F7 F5 82            [12] 6729 	mov	dpl,a
      0021F9 E4               [12] 6730 	clr	a
      0021FA 34s01            [12] 6731 	addc	a,#(_gsm_receive_buf >> 8)
      0021FC F5 83            [12] 6732 	mov	dph,a
      0021FE E5 99            [12] 6733 	mov	a,_SBUF
      002200 F0               [24] 6734 	movx	@dptr,a
                                   6735 ;	include/gsm_serial.c:430: if((gsm_receive_buf[gsm_receive_pointer]=='N' && gsm_receive_buf[(gsm_receive_pointer+12)%13] =='I' &&
      002201 90r00rFF         [24] 6736 	mov	dptr,#_gsm_receive_pointer
      002204 E0               [24] 6737 	movx	a,@dptr
      002205 FF               [12] 6738 	mov	r7,a
      002206 24r01            [12] 6739 	add	a,#_gsm_receive_buf
      002208 F5 82            [12] 6740 	mov	dpl,a
      00220A E4               [12] 6741 	clr	a
      00220B 34s01            [12] 6742 	addc	a,#(_gsm_receive_buf >> 8)
      00220D F5 83            [12] 6743 	mov	dph,a
      00220F E0               [24] 6744 	movx	a,@dptr
      002210 FE               [12] 6745 	mov	r6,a
      002211 BE 4E 02         [24] 6746 	cjne	r6,#0x4e,00956$
      002214 80 03            [24] 6747 	sjmp	00957$
      002216                       6748 00956$:
      002216 02r23r47         [24] 6749 	ljmp	00102$
      002219                       6750 00957$:
      002219 8F 14            [24] 6751 	mov	ar4,r7
      00221B 7D 00            [12] 6752 	mov	r5,#0x00
      00221D 74 0C            [12] 6753 	mov	a,#0x0c
      00221F 2C               [12] 6754 	add	a,r4
      002220 F5 82            [12] 6755 	mov	dpl,a
      002222 E4               [12] 6756 	clr	a
      002223 3D               [12] 6757 	addc	a,r5
      002224 F5 83            [12] 6758 	mov	dph,a
      002226 75*00 0D         [24] 6759 	mov	__modsint_PARM_2,#0x0d
                                   6760 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      002229 8D*01            [24] 6761 	mov	(__modsint_PARM_2 + 1),r5
      00222B C0 17            [24] 6762 	push	ar7
      00222D C0 16            [24] 6763 	push	ar6
      00222F C0 15            [24] 6764 	push	ar5
      002231 C0 14            [24] 6765 	push	ar4
      002233 75 D0 00         [24] 6766 	mov	psw,#0x00
      002236 12r00r00         [24] 6767 	lcall	__modsint
      002239 75 D0 10         [24] 6768 	mov	psw,#0x10
      00223C AA 82            [24] 6769 	mov	r2,dpl
      00223E AB 83            [24] 6770 	mov	r3,dph
      002240 D0 14            [24] 6771 	pop	ar4
      002242 D0 15            [24] 6772 	pop	ar5
      002244 D0 16            [24] 6773 	pop	ar6
      002246 D0 17            [24] 6774 	pop	ar7
      002248 EA               [12] 6775 	mov	a,r2
      002249 24r01            [12] 6776 	add	a,#_gsm_receive_buf
      00224B F5 82            [12] 6777 	mov	dpl,a
      00224D EB               [12] 6778 	mov	a,r3
      00224E 34s01            [12] 6779 	addc	a,#(_gsm_receive_buf >> 8)
      002250 F5 83            [12] 6780 	mov	dph,a
      002252 E0               [24] 6781 	movx	a,@dptr
      002253 FB               [12] 6782 	mov	r3,a
      002254 BB 49 02         [24] 6783 	cjne	r3,#0x49,00958$
      002257 80 03            [24] 6784 	sjmp	00959$
      002259                       6785 00958$:
      002259 02r23r47         [24] 6786 	ljmp	00102$
      00225C                       6787 00959$:
                                   6788 ;	include/gsm_serial.c:431: gsm_receive_buf[(gsm_receive_pointer+11)%13] ==' ' && gsm_receive_buf[(gsm_receive_pointer+10)%13] =='T' &&
      00225C 74 0B            [12] 6789 	mov	a,#0x0b
      00225E 2C               [12] 6790 	add	a,r4
      00225F F5 82            [12] 6791 	mov	dpl,a
      002261 E4               [12] 6792 	clr	a
      002262 3D               [12] 6793 	addc	a,r5
      002263 F5 83            [12] 6794 	mov	dph,a
      002265 75*00 0D         [24] 6795 	mov	__modsint_PARM_2,#0x0d
      002268 75*01 00         [24] 6796 	mov	(__modsint_PARM_2 + 1),#0x00
      00226B C0 17            [24] 6797 	push	ar7
      00226D C0 16            [24] 6798 	push	ar6
      00226F C0 15            [24] 6799 	push	ar5
      002271 C0 14            [24] 6800 	push	ar4
      002273 75 D0 00         [24] 6801 	mov	psw,#0x00
      002276 12r00r00         [24] 6802 	lcall	__modsint
      002279 75 D0 10         [24] 6803 	mov	psw,#0x10
      00227C AA 82            [24] 6804 	mov	r2,dpl
      00227E AB 83            [24] 6805 	mov	r3,dph
      002280 D0 14            [24] 6806 	pop	ar4
      002282 D0 15            [24] 6807 	pop	ar5
      002284 D0 16            [24] 6808 	pop	ar6
      002286 D0 17            [24] 6809 	pop	ar7
      002288 EA               [12] 6810 	mov	a,r2
      002289 24r01            [12] 6811 	add	a,#_gsm_receive_buf
      00228B F5 82            [12] 6812 	mov	dpl,a
      00228D EB               [12] 6813 	mov	a,r3
      00228E 34s01            [12] 6814 	addc	a,#(_gsm_receive_buf >> 8)
      002290 F5 83            [12] 6815 	mov	dph,a
      002292 E0               [24] 6816 	movx	a,@dptr
      002293 FB               [12] 6817 	mov	r3,a
      002294 BB 20 02         [24] 6818 	cjne	r3,#0x20,00960$
      002297 80 03            [24] 6819 	sjmp	00961$
      002299                       6820 00960$:
      002299 02r23r47         [24] 6821 	ljmp	00102$
      00229C                       6822 00961$:
      00229C 74 0A            [12] 6823 	mov	a,#0x0a
      00229E 2C               [12] 6824 	add	a,r4
      00229F F5 82            [12] 6825 	mov	dpl,a
      0022A1 E4               [12] 6826 	clr	a
      0022A2 3D               [12] 6827 	addc	a,r5
      0022A3 F5 83            [12] 6828 	mov	dph,a
      0022A5 75*00 0D         [24] 6829 	mov	__modsint_PARM_2,#0x0d
      0022A8 75*01 00         [24] 6830 	mov	(__modsint_PARM_2 + 1),#0x00
      0022AB C0 17            [24] 6831 	push	ar7
      0022AD C0 16            [24] 6832 	push	ar6
      0022AF C0 15            [24] 6833 	push	ar5
      0022B1 C0 14            [24] 6834 	push	ar4
      0022B3 75 D0 00         [24] 6835 	mov	psw,#0x00
      0022B6 12r00r00         [24] 6836 	lcall	__modsint
      0022B9 75 D0 10         [24] 6837 	mov	psw,#0x10
      0022BC AA 82            [24] 6838 	mov	r2,dpl
      0022BE AB 83            [24] 6839 	mov	r3,dph
      0022C0 D0 14            [24] 6840 	pop	ar4
      0022C2 D0 15            [24] 6841 	pop	ar5
      0022C4 D0 16            [24] 6842 	pop	ar6
      0022C6 D0 17            [24] 6843 	pop	ar7
      0022C8 EA               [12] 6844 	mov	a,r2
      0022C9 24r01            [12] 6845 	add	a,#_gsm_receive_buf
      0022CB F5 82            [12] 6846 	mov	dpl,a
      0022CD EB               [12] 6847 	mov	a,r3
      0022CE 34s01            [12] 6848 	addc	a,#(_gsm_receive_buf >> 8)
      0022D0 F5 83            [12] 6849 	mov	dph,a
      0022D2 E0               [24] 6850 	movx	a,@dptr
      0022D3 FB               [12] 6851 	mov	r3,a
      0022D4 BB 54 70         [24] 6852 	cjne	r3,#0x54,00102$
                                   6853 ;	include/gsm_serial.c:432: gsm_receive_buf[(gsm_receive_pointer+9)%13] =='O' && gsm_receive_buf[(gsm_receive_pointer+8)%13] =='N')){
      0022D7 74 09            [12] 6854 	mov	a,#0x09
      0022D9 2C               [12] 6855 	add	a,r4
      0022DA F5 82            [12] 6856 	mov	dpl,a
      0022DC E4               [12] 6857 	clr	a
      0022DD 3D               [12] 6858 	addc	a,r5
      0022DE F5 83            [12] 6859 	mov	dph,a
      0022E0 75*00 0D         [24] 6860 	mov	__modsint_PARM_2,#0x0d
      0022E3 75*01 00         [24] 6861 	mov	(__modsint_PARM_2 + 1),#0x00
      0022E6 C0 17            [24] 6862 	push	ar7
      0022E8 C0 16            [24] 6863 	push	ar6
      0022EA C0 15            [24] 6864 	push	ar5
      0022EC C0 14            [24] 6865 	push	ar4
      0022EE 75 D0 00         [24] 6866 	mov	psw,#0x00
      0022F1 12r00r00         [24] 6867 	lcall	__modsint
      0022F4 75 D0 10         [24] 6868 	mov	psw,#0x10
      0022F7 AA 82            [24] 6869 	mov	r2,dpl
      0022F9 AB 83            [24] 6870 	mov	r3,dph
      0022FB D0 14            [24] 6871 	pop	ar4
      0022FD D0 15            [24] 6872 	pop	ar5
      0022FF D0 16            [24] 6873 	pop	ar6
      002301 D0 17            [24] 6874 	pop	ar7
      002303 EA               [12] 6875 	mov	a,r2
      002304 24r01            [12] 6876 	add	a,#_gsm_receive_buf
      002306 F5 82            [12] 6877 	mov	dpl,a
      002308 EB               [12] 6878 	mov	a,r3
      002309 34s01            [12] 6879 	addc	a,#(_gsm_receive_buf >> 8)
      00230B F5 83            [12] 6880 	mov	dph,a
      00230D E0               [24] 6881 	movx	a,@dptr
      00230E FB               [12] 6882 	mov	r3,a
      00230F BB 4F 35         [24] 6883 	cjne	r3,#0x4f,00102$
      002312 74 08            [12] 6884 	mov	a,#0x08
      002314 2C               [12] 6885 	add	a,r4
      002315 F5 82            [12] 6886 	mov	dpl,a
      002317 E4               [12] 6887 	clr	a
      002318 3D               [12] 6888 	addc	a,r5
      002319 F5 83            [12] 6889 	mov	dph,a
      00231B 75*00 0D         [24] 6890 	mov	__modsint_PARM_2,#0x0d
      00231E 75*01 00         [24] 6891 	mov	(__modsint_PARM_2 + 1),#0x00
      002321 C0 17            [24] 6892 	push	ar7
      002323 C0 16            [24] 6893 	push	ar6
      002325 75 D0 00         [24] 6894 	mov	psw,#0x00
      002328 12r00r00         [24] 6895 	lcall	__modsint
      00232B 75 D0 10         [24] 6896 	mov	psw,#0x10
      00232E AC 82            [24] 6897 	mov	r4,dpl
      002330 AD 83            [24] 6898 	mov	r5,dph
      002332 D0 16            [24] 6899 	pop	ar6
      002334 D0 17            [24] 6900 	pop	ar7
      002336 EC               [12] 6901 	mov	a,r4
      002337 24r01            [12] 6902 	add	a,#_gsm_receive_buf
      002339 F5 82            [12] 6903 	mov	dpl,a
      00233B ED               [12] 6904 	mov	a,r5
      00233C 34s01            [12] 6905 	addc	a,#(_gsm_receive_buf >> 8)
      00233E F5 83            [12] 6906 	mov	dph,a
      002340 E0               [24] 6907 	movx	a,@dptr
      002341 FD               [12] 6908 	mov	r5,a
      002342 BD 4E 02         [24] 6909 	cjne	r5,#0x4e,00102$
                                   6910 ;	include/gsm_serial.c:434: nosim = 1;
                                   6911 ;	assignBit
      002345 D2*2E            [12] 6912 	setb	_nosim
      002347                       6913 00102$:
                                   6914 ;	include/gsm_serial.c:439: switch(gsm_serial_cmd){
      002347 90r00rFD         [24] 6915 	mov	dptr,#_gsm_serial_cmd
      00234A E0               [24] 6916 	movx	a,@dptr
      00234B FD               [12] 6917 	mov  r5,a
      00234C 24 F1            [12] 6918 	add	a,#0xff - 0x0e
      00234E 50 03            [24] 6919 	jnc	00968$
      002350 02r3Ar69         [24] 6920 	ljmp	00345$
      002353                       6921 00968$:
      002353 ED               [12] 6922 	mov	a,r5
      002354 24 0A            [12] 6923 	add	a,#(00969$-3-.)
      002356 83               [24] 6924 	movc	a,@a+pc
      002357 F5 82            [12] 6925 	mov	dpl,a
      002359 ED               [12] 6926 	mov	a,r5
      00235A 24 13            [12] 6927 	add	a,#(00970$-3-.)
      00235C 83               [24] 6928 	movc	a,@a+pc
      00235D F5 83            [12] 6929 	mov	dph,a
      00235F E4               [12] 6930 	clr	a
      002360 73               [24] 6931 	jmp	@a+dptr
      002361                       6932 00969$:
      002361r4C                    6933 	.db	00142$
      002362rCE                    6934 	.db	00202$
      002363r7E                    6935 	.db	00134$
      002364r1E                    6936 	.db	00207$
      002365r69                    6937 	.db	00345$
      002366r96                    6938 	.db	00242$
      002367rFE                    6939 	.db	00191$
      002368r92                    6940 	.db	00261$
      002369r08                    6941 	.db	00253$
      00236Ar69                    6942 	.db	00345$
      00236BrD4                    6943 	.db	00124$
      00236Cr6F                    6944 	.db	00131$
      00236DrE4                    6945 	.db	00114$
      00236ErF8                    6946 	.db	00304$
      00236Fr7F                    6947 	.db	00108$
      002370                       6948 00970$:
      002370s26                    6949 	.db	00142$>>8
      002371s2E                    6950 	.db	00202$>>8
      002372s25                    6951 	.db	00134$>>8
      002373s2F                    6952 	.db	00207$>>8
      002374s3A                    6953 	.db	00345$>>8
      002375s30                    6954 	.db	00242$>>8
      002376s2C                    6955 	.db	00191$>>8
      002377s32                    6956 	.db	00261$>>8
      002378s32                    6957 	.db	00253$>>8
      002379s3A                    6958 	.db	00345$>>8
      00237As24                    6959 	.db	00124$>>8
      00237Bs25                    6960 	.db	00131$>>8
      00237Cs23                    6961 	.db	00114$>>8
      00237Ds37                    6962 	.db	00304$>>8
      00237Es23                    6963 	.db	00108$>>8
                                   6964 ;	include/gsm_serial.c:440: case CSQ:
      00237F                       6965 00108$:
                                   6966 ;	include/gsm_serial.c:441: lenh_sms[sms_index++] = SBUF;
      00237F 90r00rBA         [24] 6967 	mov	dptr,#_sms_index
      002382 E0               [24] 6968 	movx	a,@dptr
      002383 FC               [12] 6969 	mov	r4,a
      002384 04               [12] 6970 	inc	a
      002385 F0               [24] 6971 	movx	@dptr,a
      002386 EC               [12] 6972 	mov	a,r4
      002387 24r16            [12] 6973 	add	a,#_lenh_sms
      002389 F5 82            [12] 6974 	mov	dpl,a
      00238B E4               [12] 6975 	clr	a
      00238C 34s00            [12] 6976 	addc	a,#(_lenh_sms >> 8)
      00238E F5 83            [12] 6977 	mov	dph,a
      002390 E5 99            [12] 6978 	mov	a,_SBUF
      002392 F0               [24] 6979 	movx	@dptr,a
                                   6980 ;	include/gsm_serial.c:442: if(SBUF==' ' &&  gsm_receive_buf[(gsm_receive_pointer+12)%13] ==':')sms_index = 0;
      002393 74 20            [12] 6981 	mov	a,#0x20
      002395 B5 99 36         [24] 6982 	cjne	a,_SBUF,00110$
      002398 90r00rFF         [24] 6983 	mov	dptr,#_gsm_receive_pointer
      00239B E0               [24] 6984 	movx	a,@dptr
      00239C FC               [12] 6985 	mov	r4,a
      00239D 7B 00            [12] 6986 	mov	r3,#0x00
      00239F 74 0C            [12] 6987 	mov	a,#0x0c
      0023A1 2C               [12] 6988 	add	a,r4
      0023A2 F5 82            [12] 6989 	mov	dpl,a
      0023A4 E4               [12] 6990 	clr	a
      0023A5 3B               [12] 6991 	addc	a,r3
      0023A6 F5 83            [12] 6992 	mov	dph,a
      0023A8 75*00 0D         [24] 6993 	mov	__modsint_PARM_2,#0x0d
                                   6994 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0023AB 8B*01            [24] 6995 	mov	(__modsint_PARM_2 + 1),r3
      0023AD 75 D0 00         [24] 6996 	mov	psw,#0x00
      0023B0 12r00r00         [24] 6997 	lcall	__modsint
      0023B3 75 D0 10         [24] 6998 	mov	psw,#0x10
      0023B6 AB 82            [24] 6999 	mov	r3,dpl
      0023B8 AC 83            [24] 7000 	mov	r4,dph
      0023BA EB               [12] 7001 	mov	a,r3
      0023BB 24r01            [12] 7002 	add	a,#_gsm_receive_buf
      0023BD F5 82            [12] 7003 	mov	dpl,a
      0023BF EC               [12] 7004 	mov	a,r4
      0023C0 34s01            [12] 7005 	addc	a,#(_gsm_receive_buf >> 8)
      0023C2 F5 83            [12] 7006 	mov	dph,a
      0023C4 E0               [24] 7007 	movx	a,@dptr
      0023C5 FC               [12] 7008 	mov	r4,a
      0023C6 BC 3A 05         [24] 7009 	cjne	r4,#0x3a,00110$
      0023C9 90r00rBA         [24] 7010 	mov	dptr,#_sms_index
      0023CC E4               [12] 7011 	clr	a
      0023CD F0               [24] 7012 	movx	@dptr,a
      0023CE                       7013 00110$:
                                   7014 ;	include/gsm_serial.c:443: if(SBUF==',')sms_index = gsm_serial_cmd = NORMAL;
      0023CE 74 2C            [12] 7015 	mov	a,#0x2c
      0023D0 B5 99 02         [24] 7016 	cjne	a,_SBUF,00975$
      0023D3 80 03            [24] 7017 	sjmp	00976$
      0023D5                       7018 00975$:
      0023D5 02r3Ar69         [24] 7019 	ljmp	00345$
      0023D8                       7020 00976$:
      0023D8 90r00rFD         [24] 7021 	mov	dptr,#_gsm_serial_cmd
      0023DB E4               [12] 7022 	clr	a
      0023DC F0               [24] 7023 	movx	@dptr,a
      0023DD 90r00rBA         [24] 7024 	mov	dptr,#_sms_index
      0023E0 F0               [24] 7025 	movx	@dptr,a
                                   7026 ;	include/gsm_serial.c:444: break;
      0023E1 02r3Ar69         [24] 7027 	ljmp	00345$
                                   7028 ;	include/gsm_serial.c:445: case COPS:
      0023E4                       7029 00114$:
                                   7030 ;	include/gsm_serial.c:446: if(SBUF=='T' &&  gsm_receive_buf[(gsm_receive_pointer+12)%13] =='S' &&  gsm_receive_buf[(gsm_receive_pointer+11)%13] =='D')
      0023E4 74 54            [12] 7031 	mov	a,#0x54
      0023E6 B5 99 6E         [24] 7032 	cjne	a,_SBUF,00120$
      0023E9 8F 13            [24] 7033 	mov	ar3,r7
      0023EB 7C 00            [12] 7034 	mov	r4,#0x00
      0023ED 74 0C            [12] 7035 	mov	a,#0x0c
      0023EF 2B               [12] 7036 	add	a,r3
      0023F0 F5 82            [12] 7037 	mov	dpl,a
      0023F2 E4               [12] 7038 	clr	a
      0023F3 3C               [12] 7039 	addc	a,r4
      0023F4 F5 83            [12] 7040 	mov	dph,a
      0023F6 75*00 0D         [24] 7041 	mov	__modsint_PARM_2,#0x0d
                                   7042 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0023F9 8C*01            [24] 7043 	mov	(__modsint_PARM_2 + 1),r4
      0023FB C0 17            [24] 7044 	push	ar7
      0023FD C0 14            [24] 7045 	push	ar4
      0023FF C0 13            [24] 7046 	push	ar3
      002401 75 D0 00         [24] 7047 	mov	psw,#0x00
      002404 12r00r00         [24] 7048 	lcall	__modsint
      002407 75 D0 10         [24] 7049 	mov	psw,#0x10
      00240A A9 82            [24] 7050 	mov	r1,dpl
      00240C AA 83            [24] 7051 	mov	r2,dph
      00240E D0 13            [24] 7052 	pop	ar3
      002410 D0 14            [24] 7053 	pop	ar4
      002412 D0 17            [24] 7054 	pop	ar7
      002414 E9               [12] 7055 	mov	a,r1
      002415 24r01            [12] 7056 	add	a,#_gsm_receive_buf
      002417 F5 82            [12] 7057 	mov	dpl,a
      002419 EA               [12] 7058 	mov	a,r2
      00241A 34s01            [12] 7059 	addc	a,#(_gsm_receive_buf >> 8)
      00241C F5 83            [12] 7060 	mov	dph,a
      00241E E0               [24] 7061 	movx	a,@dptr
      00241F FA               [12] 7062 	mov	r2,a
      002420 BA 53 34         [24] 7063 	cjne	r2,#0x53,00120$
      002423 74 0B            [12] 7064 	mov	a,#0x0b
      002425 2B               [12] 7065 	add	a,r3
      002426 F5 82            [12] 7066 	mov	dpl,a
      002428 E4               [12] 7067 	clr	a
      002429 3C               [12] 7068 	addc	a,r4
      00242A F5 83            [12] 7069 	mov	dph,a
      00242C 75*00 0D         [24] 7070 	mov	__modsint_PARM_2,#0x0d
      00242F 75*01 00         [24] 7071 	mov	(__modsint_PARM_2 + 1),#0x00
      002432 C0 17            [24] 7072 	push	ar7
      002434 75 D0 00         [24] 7073 	mov	psw,#0x00
      002437 12r00r00         [24] 7074 	lcall	__modsint
      00243A 75 D0 10         [24] 7075 	mov	psw,#0x10
      00243D AB 82            [24] 7076 	mov	r3,dpl
      00243F AC 83            [24] 7077 	mov	r4,dph
      002441 D0 17            [24] 7078 	pop	ar7
      002443 EB               [12] 7079 	mov	a,r3
      002444 24r01            [12] 7080 	add	a,#_gsm_receive_buf
      002446 F5 82            [12] 7081 	mov	dpl,a
      002448 EC               [12] 7082 	mov	a,r4
      002449 34s01            [12] 7083 	addc	a,#(_gsm_receive_buf >> 8)
      00244B F5 83            [12] 7084 	mov	dph,a
      00244D E0               [24] 7085 	movx	a,@dptr
      00244E FC               [12] 7086 	mov	r4,a
      00244F BC 44 05         [24] 7087 	cjne	r4,#0x44,00120$
                                   7088 ;	include/gsm_serial.c:447: gui_lenh_thanh_cong = 1;
                                   7089 ;	assignBit
      002452 D2*2C            [12] 7090 	setb	_gui_lenh_thanh_cong
      002454 02r3Ar69         [24] 7091 	ljmp	00345$
      002457                       7092 00120$:
                                   7093 ;	include/gsm_serial.c:448: else if(SBUF=='R' &&  gsm_receive_buf[(gsm_receive_pointer+12)%13] =='O' &&  gsm_receive_buf[(gsm_receive_pointer+11)%13] =='R')
      002457 74 52            [12] 7094 	mov	a,#0x52
      002459 B5 99 02         [24] 7095 	cjne	a,_SBUF,00983$
      00245C 80 03            [24] 7096 	sjmp	00984$
      00245E                       7097 00983$:
      00245E 02r3Ar69         [24] 7098 	ljmp	00345$
      002461                       7099 00984$:
      002461 8F 13            [24] 7100 	mov	ar3,r7
      002463 7C 00            [12] 7101 	mov	r4,#0x00
      002465 74 0C            [12] 7102 	mov	a,#0x0c
      002467 2B               [12] 7103 	add	a,r3
      002468 F5 82            [12] 7104 	mov	dpl,a
      00246A E4               [12] 7105 	clr	a
      00246B 3C               [12] 7106 	addc	a,r4
      00246C F5 83            [12] 7107 	mov	dph,a
      00246E 75*00 0D         [24] 7108 	mov	__modsint_PARM_2,#0x0d
                                   7109 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      002471 8C*01            [24] 7110 	mov	(__modsint_PARM_2 + 1),r4
      002473 C0 14            [24] 7111 	push	ar4
      002475 C0 13            [24] 7112 	push	ar3
      002477 75 D0 00         [24] 7113 	mov	psw,#0x00
      00247A 12r00r00         [24] 7114 	lcall	__modsint
      00247D 75 D0 10         [24] 7115 	mov	psw,#0x10
      002480 A9 82            [24] 7116 	mov	r1,dpl
      002482 AA 83            [24] 7117 	mov	r2,dph
      002484 D0 13            [24] 7118 	pop	ar3
      002486 D0 14            [24] 7119 	pop	ar4
      002488 E9               [12] 7120 	mov	a,r1
      002489 24r01            [12] 7121 	add	a,#_gsm_receive_buf
      00248B F5 82            [12] 7122 	mov	dpl,a
      00248D EA               [12] 7123 	mov	a,r2
      00248E 34s01            [12] 7124 	addc	a,#(_gsm_receive_buf >> 8)
      002490 F5 83            [12] 7125 	mov	dph,a
      002492 E0               [24] 7126 	movx	a,@dptr
      002493 FA               [12] 7127 	mov	r2,a
      002494 BA 4F 02         [24] 7128 	cjne	r2,#0x4f,00985$
      002497 80 03            [24] 7129 	sjmp	00986$
      002499                       7130 00985$:
      002499 02r3Ar69         [24] 7131 	ljmp	00345$
      00249C                       7132 00986$:
      00249C 74 0B            [12] 7133 	mov	a,#0x0b
      00249E 2B               [12] 7134 	add	a,r3
      00249F F5 82            [12] 7135 	mov	dpl,a
      0024A1 E4               [12] 7136 	clr	a
      0024A2 3C               [12] 7137 	addc	a,r4
      0024A3 F5 83            [12] 7138 	mov	dph,a
      0024A5 75*00 0D         [24] 7139 	mov	__modsint_PARM_2,#0x0d
      0024A8 75*01 00         [24] 7140 	mov	(__modsint_PARM_2 + 1),#0x00
      0024AB 75 D0 00         [24] 7141 	mov	psw,#0x00
      0024AE 12r00r00         [24] 7142 	lcall	__modsint
      0024B1 75 D0 10         [24] 7143 	mov	psw,#0x10
      0024B4 AB 82            [24] 7144 	mov	r3,dpl
      0024B6 AC 83            [24] 7145 	mov	r4,dph
      0024B8 EB               [12] 7146 	mov	a,r3
      0024B9 24r01            [12] 7147 	add	a,#_gsm_receive_buf
      0024BB F5 82            [12] 7148 	mov	dpl,a
      0024BD EC               [12] 7149 	mov	a,r4
      0024BE 34s01            [12] 7150 	addc	a,#(_gsm_receive_buf >> 8)
      0024C0 F5 83            [12] 7151 	mov	dph,a
      0024C2 E0               [24] 7152 	movx	a,@dptr
      0024C3 FC               [12] 7153 	mov	r4,a
      0024C4 BC 52 02         [24] 7154 	cjne	r4,#0x52,00987$
      0024C7 80 03            [24] 7155 	sjmp	00988$
      0024C9                       7156 00987$:
      0024C9 02r3Ar69         [24] 7157 	ljmp	00345$
      0024CC                       7158 00988$:
                                   7159 ;	include/gsm_serial.c:449: connect = 0;
      0024CC 90r00rFA         [24] 7160 	mov	dptr,#_connect
      0024CF E4               [12] 7161 	clr	a
      0024D0 F0               [24] 7162 	movx	@dptr,a
                                   7163 ;	include/gsm_serial.c:450: break;
      0024D1 02r3Ar69         [24] 7164 	ljmp	00345$
                                   7165 ;	include/gsm_serial.c:451: case CSPN:
      0024D4                       7166 00124$:
                                   7167 ;	include/gsm_serial.c:452: lenh_sms[sms_index++] = SBUF;
      0024D4 90r00rBA         [24] 7168 	mov	dptr,#_sms_index
      0024D7 E0               [24] 7169 	movx	a,@dptr
      0024D8 FC               [12] 7170 	mov	r4,a
      0024D9 04               [12] 7171 	inc	a
      0024DA F0               [24] 7172 	movx	@dptr,a
      0024DB EC               [12] 7173 	mov	a,r4
      0024DC 24r16            [12] 7174 	add	a,#_lenh_sms
      0024DE F5 82            [12] 7175 	mov	dpl,a
      0024E0 E4               [12] 7176 	clr	a
      0024E1 34s00            [12] 7177 	addc	a,#(_lenh_sms >> 8)
      0024E3 F5 83            [12] 7178 	mov	dph,a
      0024E5 E5 99            [12] 7179 	mov	a,_SBUF
      0024E7 F0               [24] 7180 	movx	@dptr,a
                                   7181 ;	include/gsm_serial.c:453: if(SBUF=='"' &&  gsm_receive_buf[(gsm_receive_pointer+12)%13] ==' ')sms_index = 0;
      0024E8 74 22            [12] 7182 	mov	a,#0x22
      0024EA B5 99 36         [24] 7183 	cjne	a,_SBUF,00126$
      0024ED 90r00rFF         [24] 7184 	mov	dptr,#_gsm_receive_pointer
      0024F0 E0               [24] 7185 	movx	a,@dptr
      0024F1 FC               [12] 7186 	mov	r4,a
      0024F2 7B 00            [12] 7187 	mov	r3,#0x00
      0024F4 74 0C            [12] 7188 	mov	a,#0x0c
      0024F6 2C               [12] 7189 	add	a,r4
      0024F7 F5 82            [12] 7190 	mov	dpl,a
      0024F9 E4               [12] 7191 	clr	a
      0024FA 3B               [12] 7192 	addc	a,r3
      0024FB F5 83            [12] 7193 	mov	dph,a
      0024FD 75*00 0D         [24] 7194 	mov	__modsint_PARM_2,#0x0d
                                   7195 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      002500 8B*01            [24] 7196 	mov	(__modsint_PARM_2 + 1),r3
      002502 75 D0 00         [24] 7197 	mov	psw,#0x00
      002505 12r00r00         [24] 7198 	lcall	__modsint
      002508 75 D0 10         [24] 7199 	mov	psw,#0x10
      00250B AB 82            [24] 7200 	mov	r3,dpl
      00250D AC 83            [24] 7201 	mov	r4,dph
      00250F EB               [12] 7202 	mov	a,r3
      002510 24r01            [12] 7203 	add	a,#_gsm_receive_buf
      002512 F5 82            [12] 7204 	mov	dpl,a
      002514 EC               [12] 7205 	mov	a,r4
      002515 34s01            [12] 7206 	addc	a,#(_gsm_receive_buf >> 8)
      002517 F5 83            [12] 7207 	mov	dph,a
      002519 E0               [24] 7208 	movx	a,@dptr
      00251A FC               [12] 7209 	mov	r4,a
      00251B BC 20 05         [24] 7210 	cjne	r4,#0x20,00126$
      00251E 90r00rBA         [24] 7211 	mov	dptr,#_sms_index
      002521 E4               [12] 7212 	clr	a
      002522 F0               [24] 7213 	movx	@dptr,a
      002523                       7214 00126$:
                                   7215 ;	include/gsm_serial.c:454: if(SBUF==',' &&  gsm_receive_buf[(gsm_receive_pointer+12)%13] =='"')sms_index = gsm_serial_cmd = 0;
      002523 74 2C            [12] 7216 	mov	a,#0x2c
      002525 B5 99 02         [24] 7217 	cjne	a,_SBUF,00993$
      002528 80 03            [24] 7218 	sjmp	00994$
      00252A                       7219 00993$:
      00252A 02r3Ar69         [24] 7220 	ljmp	00345$
      00252D                       7221 00994$:
      00252D 90r00rFF         [24] 7222 	mov	dptr,#_gsm_receive_pointer
      002530 E0               [24] 7223 	movx	a,@dptr
      002531 FC               [12] 7224 	mov	r4,a
      002532 7B 00            [12] 7225 	mov	r3,#0x00
      002534 74 0C            [12] 7226 	mov	a,#0x0c
      002536 2C               [12] 7227 	add	a,r4
      002537 F5 82            [12] 7228 	mov	dpl,a
      002539 E4               [12] 7229 	clr	a
      00253A 3B               [12] 7230 	addc	a,r3
      00253B F5 83            [12] 7231 	mov	dph,a
      00253D 75*00 0D         [24] 7232 	mov	__modsint_PARM_2,#0x0d
                                   7233 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      002540 8B*01            [24] 7234 	mov	(__modsint_PARM_2 + 1),r3
      002542 75 D0 00         [24] 7235 	mov	psw,#0x00
      002545 12r00r00         [24] 7236 	lcall	__modsint
      002548 75 D0 10         [24] 7237 	mov	psw,#0x10
      00254B AB 82            [24] 7238 	mov	r3,dpl
      00254D AC 83            [24] 7239 	mov	r4,dph
      00254F EB               [12] 7240 	mov	a,r3
      002550 24r01            [12] 7241 	add	a,#_gsm_receive_buf
      002552 F5 82            [12] 7242 	mov	dpl,a
      002554 EC               [12] 7243 	mov	a,r4
      002555 34s01            [12] 7244 	addc	a,#(_gsm_receive_buf >> 8)
      002557 F5 83            [12] 7245 	mov	dph,a
      002559 E0               [24] 7246 	movx	a,@dptr
      00255A FC               [12] 7247 	mov	r4,a
      00255B BC 22 02         [24] 7248 	cjne	r4,#0x22,00995$
      00255E 80 03            [24] 7249 	sjmp	00996$
      002560                       7250 00995$:
      002560 02r3Ar69         [24] 7251 	ljmp	00345$
      002563                       7252 00996$:
      002563 90r00rFD         [24] 7253 	mov	dptr,#_gsm_serial_cmd
      002566 E4               [12] 7254 	clr	a
      002567 F0               [24] 7255 	movx	@dptr,a
      002568 90r00rBA         [24] 7256 	mov	dptr,#_sms_index
      00256B F0               [24] 7257 	movx	@dptr,a
                                   7258 ;	include/gsm_serial.c:455: break;
      00256C 02r3Ar69         [24] 7259 	ljmp	00345$
                                   7260 ;	include/gsm_serial.c:456: case CALR:
      00256F                       7261 00131$:
                                   7262 ;	include/gsm_serial.c:457: if(SBUF=='1')gui_lenh_thanh_cong = 1;
      00256F 74 31            [12] 7263 	mov	a,#0x31
      002571 B5 99 02         [24] 7264 	cjne	a,_SBUF,00997$
      002574 80 03            [24] 7265 	sjmp	00998$
      002576                       7266 00997$:
      002576 02r3Ar69         [24] 7267 	ljmp	00345$
      002579                       7268 00998$:
                                   7269 ;	assignBit
      002579 D2*2C            [12] 7270 	setb	_gui_lenh_thanh_cong
                                   7271 ;	include/gsm_serial.c:459: break;
      00257B 02r3Ar69         [24] 7272 	ljmp	00345$
                                   7273 ;	include/gsm_serial.c:460: case CLK:
      00257E                       7274 00134$:
                                   7275 ;	include/gsm_serial.c:461: lenh_sms[sms_index++] = SBUF;
      00257E 90r00rBA         [24] 7276 	mov	dptr,#_sms_index
      002581 E0               [24] 7277 	movx	a,@dptr
      002582 FC               [12] 7278 	mov	r4,a
      002583 04               [12] 7279 	inc	a
      002584 F0               [24] 7280 	movx	@dptr,a
      002585 EC               [12] 7281 	mov	a,r4
      002586 24r16            [12] 7282 	add	a,#_lenh_sms
      002588 F5 82            [12] 7283 	mov	dpl,a
      00258A E4               [12] 7284 	clr	a
      00258B 34s00            [12] 7285 	addc	a,#(_lenh_sms >> 8)
      00258D F5 83            [12] 7286 	mov	dph,a
      00258F E5 99            [12] 7287 	mov	a,_SBUF
      002591 F0               [24] 7288 	movx	@dptr,a
                                   7289 ;	include/gsm_serial.c:462: if(SBUF=='K' &&  gsm_receive_buf[(gsm_receive_pointer+12)%13] =='L' &&  gsm_receive_buf[(gsm_receive_pointer+11)%13] =='C')sms_index = 0;
      002592 74 4B            [12] 7290 	mov	a,#0x4b
      002594 B5 99 69         [24] 7291 	cjne	a,_SBUF,00136$
      002597 90r00rFF         [24] 7292 	mov	dptr,#_gsm_receive_pointer
      00259A E0               [24] 7293 	movx	a,@dptr
      00259B FB               [12] 7294 	mov	r3,a
      00259C 7C 00            [12] 7295 	mov	r4,#0x00
      00259E 74 0C            [12] 7296 	mov	a,#0x0c
      0025A0 2B               [12] 7297 	add	a,r3
      0025A1 F5 82            [12] 7298 	mov	dpl,a
      0025A3 E4               [12] 7299 	clr	a
      0025A4 3C               [12] 7300 	addc	a,r4
      0025A5 F5 83            [12] 7301 	mov	dph,a
      0025A7 75*00 0D         [24] 7302 	mov	__modsint_PARM_2,#0x0d
                                   7303 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0025AA 8C*01            [24] 7304 	mov	(__modsint_PARM_2 + 1),r4
      0025AC C0 14            [24] 7305 	push	ar4
      0025AE C0 13            [24] 7306 	push	ar3
      0025B0 75 D0 00         [24] 7307 	mov	psw,#0x00
      0025B3 12r00r00         [24] 7308 	lcall	__modsint
      0025B6 75 D0 10         [24] 7309 	mov	psw,#0x10
      0025B9 A9 82            [24] 7310 	mov	r1,dpl
      0025BB AA 83            [24] 7311 	mov	r2,dph
      0025BD D0 13            [24] 7312 	pop	ar3
      0025BF D0 14            [24] 7313 	pop	ar4
      0025C1 E9               [12] 7314 	mov	a,r1
      0025C2 24r01            [12] 7315 	add	a,#_gsm_receive_buf
      0025C4 F5 82            [12] 7316 	mov	dpl,a
      0025C6 EA               [12] 7317 	mov	a,r2
      0025C7 34s01            [12] 7318 	addc	a,#(_gsm_receive_buf >> 8)
      0025C9 F5 83            [12] 7319 	mov	dph,a
      0025CB E0               [24] 7320 	movx	a,@dptr
      0025CC FA               [12] 7321 	mov	r2,a
      0025CD BA 4C 30         [24] 7322 	cjne	r2,#0x4c,00136$
      0025D0 74 0B            [12] 7323 	mov	a,#0x0b
      0025D2 2B               [12] 7324 	add	a,r3
      0025D3 F5 82            [12] 7325 	mov	dpl,a
      0025D5 E4               [12] 7326 	clr	a
      0025D6 3C               [12] 7327 	addc	a,r4
      0025D7 F5 83            [12] 7328 	mov	dph,a
      0025D9 75*00 0D         [24] 7329 	mov	__modsint_PARM_2,#0x0d
      0025DC 75*01 00         [24] 7330 	mov	(__modsint_PARM_2 + 1),#0x00
      0025DF 75 D0 00         [24] 7331 	mov	psw,#0x00
      0025E2 12r00r00         [24] 7332 	lcall	__modsint
      0025E5 75 D0 10         [24] 7333 	mov	psw,#0x10
      0025E8 AB 82            [24] 7334 	mov	r3,dpl
      0025EA AC 83            [24] 7335 	mov	r4,dph
      0025EC EB               [12] 7336 	mov	a,r3
      0025ED 24r01            [12] 7337 	add	a,#_gsm_receive_buf
      0025EF F5 82            [12] 7338 	mov	dpl,a
      0025F1 EC               [12] 7339 	mov	a,r4
      0025F2 34s01            [12] 7340 	addc	a,#(_gsm_receive_buf >> 8)
      0025F4 F5 83            [12] 7341 	mov	dph,a
      0025F6 E0               [24] 7342 	movx	a,@dptr
      0025F7 FC               [12] 7343 	mov	r4,a
      0025F8 BC 43 05         [24] 7344 	cjne	r4,#0x43,00136$
      0025FB 90r00rBA         [24] 7345 	mov	dptr,#_sms_index
      0025FE E4               [12] 7346 	clr	a
      0025FF F0               [24] 7347 	movx	@dptr,a
      002600                       7348 00136$:
                                   7349 ;	include/gsm_serial.c:463: if(SBUF=='\r' &&  gsm_receive_buf[(gsm_receive_pointer+12)%13] =='"')sms_index = gsm_serial_cmd = 0;
      002600 74 0D            [12] 7350 	mov	a,#0x0d
      002602 B5 99 02         [24] 7351 	cjne	a,_SBUF,01005$
      002605 80 03            [24] 7352 	sjmp	01006$
      002607                       7353 01005$:
      002607 02r3Ar69         [24] 7354 	ljmp	00345$
      00260A                       7355 01006$:
      00260A 90r00rFF         [24] 7356 	mov	dptr,#_gsm_receive_pointer
      00260D E0               [24] 7357 	movx	a,@dptr
      00260E FC               [12] 7358 	mov	r4,a
      00260F 7B 00            [12] 7359 	mov	r3,#0x00
      002611 74 0C            [12] 7360 	mov	a,#0x0c
      002613 2C               [12] 7361 	add	a,r4
      002614 F5 82            [12] 7362 	mov	dpl,a
      002616 E4               [12] 7363 	clr	a
      002617 3B               [12] 7364 	addc	a,r3
      002618 F5 83            [12] 7365 	mov	dph,a
      00261A 75*00 0D         [24] 7366 	mov	__modsint_PARM_2,#0x0d
                                   7367 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      00261D 8B*01            [24] 7368 	mov	(__modsint_PARM_2 + 1),r3
      00261F 75 D0 00         [24] 7369 	mov	psw,#0x00
      002622 12r00r00         [24] 7370 	lcall	__modsint
      002625 75 D0 10         [24] 7371 	mov	psw,#0x10
      002628 AB 82            [24] 7372 	mov	r3,dpl
      00262A AC 83            [24] 7373 	mov	r4,dph
      00262C EB               [12] 7374 	mov	a,r3
      00262D 24r01            [12] 7375 	add	a,#_gsm_receive_buf
      00262F F5 82            [12] 7376 	mov	dpl,a
      002631 EC               [12] 7377 	mov	a,r4
      002632 34s01            [12] 7378 	addc	a,#(_gsm_receive_buf >> 8)
      002634 F5 83            [12] 7379 	mov	dph,a
      002636 E0               [24] 7380 	movx	a,@dptr
      002637 FC               [12] 7381 	mov	r4,a
      002638 BC 22 02         [24] 7382 	cjne	r4,#0x22,01007$
      00263B 80 03            [24] 7383 	sjmp	01008$
      00263D                       7384 01007$:
      00263D 02r3Ar69         [24] 7385 	ljmp	00345$
      002640                       7386 01008$:
      002640 90r00rFD         [24] 7387 	mov	dptr,#_gsm_serial_cmd
      002643 E4               [12] 7388 	clr	a
      002644 F0               [24] 7389 	movx	@dptr,a
      002645 90r00rBA         [24] 7390 	mov	dptr,#_sms_index
      002648 F0               [24] 7391 	movx	@dptr,a
                                   7392 ;	include/gsm_serial.c:464: break;
      002649 02r3Ar69         [24] 7393 	ljmp	00345$
                                   7394 ;	include/gsm_serial.c:465: case NORMAL:
      00264C                       7395 00142$:
                                   7396 ;	include/gsm_serial.c:466: if(SBUF=='>'){
      00264C 74 3E            [12] 7397 	mov	a,#0x3e
      00264E B5 99 12         [24] 7398 	cjne	a,_SBUF,00189$
                                   7399 ;	include/gsm_serial.c:467: send_gsm_cmd("\032");
      002651 90r03rF0         [24] 7400 	mov	dptr,#___str_7
      002654 75 F0 80         [24] 7401 	mov	b,#0x80
      002657 75 D0 00         [24] 7402 	mov	psw,#0x00
      00265A 12r00r00         [24] 7403 	lcall	_send_gsm_cmd
      00265D 75 D0 10         [24] 7404 	mov	psw,#0x10
      002660 02r3Ar69         [24] 7405 	ljmp	00345$
      002663                       7406 00189$:
                                   7407 ;	include/gsm_serial.c:469: }else if((gsm_receive_buf[gsm_receive_pointer]=='G' && gsm_receive_buf[(gsm_receive_pointer+12)%13] =='N' &&
      002663 BE 47 02         [24] 7408 	cjne	r6,#0x47,01011$
      002666 80 03            [24] 7409 	sjmp	01012$
      002668                       7410 01011$:
      002668 02r27r3A         [24] 7411 	ljmp	00183$
      00266B                       7412 01012$:
      00266B 8F 13            [24] 7413 	mov	ar3,r7
      00266D 7C 00            [12] 7414 	mov	r4,#0x00
      00266F 74 0C            [12] 7415 	mov	a,#0x0c
      002671 2B               [12] 7416 	add	a,r3
      002672 F5 82            [12] 7417 	mov	dpl,a
      002674 E4               [12] 7418 	clr	a
      002675 3C               [12] 7419 	addc	a,r4
      002676 F5 83            [12] 7420 	mov	dph,a
      002678 75*00 0D         [24] 7421 	mov	__modsint_PARM_2,#0x0d
                                   7422 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      00267B 8C*01            [24] 7423 	mov	(__modsint_PARM_2 + 1),r4
      00267D C0 17            [24] 7424 	push	ar7
      00267F C0 16            [24] 7425 	push	ar6
      002681 C0 15            [24] 7426 	push	ar5
      002683 C0 14            [24] 7427 	push	ar4
      002685 C0 13            [24] 7428 	push	ar3
      002687 75 D0 00         [24] 7429 	mov	psw,#0x00
      00268A 12r00r00         [24] 7430 	lcall	__modsint
      00268D 75 D0 10         [24] 7431 	mov	psw,#0x10
      002690 A9 82            [24] 7432 	mov	r1,dpl
      002692 AA 83            [24] 7433 	mov	r2,dph
      002694 D0 13            [24] 7434 	pop	ar3
      002696 D0 14            [24] 7435 	pop	ar4
      002698 D0 15            [24] 7436 	pop	ar5
      00269A D0 16            [24] 7437 	pop	ar6
      00269C D0 17            [24] 7438 	pop	ar7
      00269E E9               [12] 7439 	mov	a,r1
      00269F 24r01            [12] 7440 	add	a,#_gsm_receive_buf
      0026A1 F5 82            [12] 7441 	mov	dpl,a
      0026A3 EA               [12] 7442 	mov	a,r2
      0026A4 34s01            [12] 7443 	addc	a,#(_gsm_receive_buf >> 8)
      0026A6 F5 83            [12] 7444 	mov	dph,a
      0026A8 E0               [24] 7445 	movx	a,@dptr
      0026A9 FA               [12] 7446 	mov	r2,a
      0026AA BA 4E 02         [24] 7447 	cjne	r2,#0x4e,01013$
      0026AD 80 03            [24] 7448 	sjmp	01014$
      0026AF                       7449 01013$:
      0026AF 02r27r3A         [24] 7450 	ljmp	00183$
      0026B2                       7451 01014$:
                                   7452 ;	include/gsm_serial.c:470: gsm_receive_buf[(gsm_receive_pointer+11)%13] =='I' && gsm_receive_buf[(gsm_receive_pointer+10)%13] =='R')){
      0026B2 74 0B            [12] 7453 	mov	a,#0x0b
      0026B4 2B               [12] 7454 	add	a,r3
      0026B5 F5 82            [12] 7455 	mov	dpl,a
      0026B7 E4               [12] 7456 	clr	a
      0026B8 3C               [12] 7457 	addc	a,r4
      0026B9 F5 83            [12] 7458 	mov	dph,a
      0026BB 75*00 0D         [24] 7459 	mov	__modsint_PARM_2,#0x0d
      0026BE 75*01 00         [24] 7460 	mov	(__modsint_PARM_2 + 1),#0x00
      0026C1 C0 17            [24] 7461 	push	ar7
      0026C3 C0 16            [24] 7462 	push	ar6
      0026C5 C0 15            [24] 7463 	push	ar5
      0026C7 C0 14            [24] 7464 	push	ar4
      0026C9 C0 13            [24] 7465 	push	ar3
      0026CB 75 D0 00         [24] 7466 	mov	psw,#0x00
      0026CE 12r00r00         [24] 7467 	lcall	__modsint
      0026D1 75 D0 10         [24] 7468 	mov	psw,#0x10
      0026D4 A9 82            [24] 7469 	mov	r1,dpl
      0026D6 AA 83            [24] 7470 	mov	r2,dph
      0026D8 D0 13            [24] 7471 	pop	ar3
      0026DA D0 14            [24] 7472 	pop	ar4
      0026DC D0 15            [24] 7473 	pop	ar5
      0026DE D0 16            [24] 7474 	pop	ar6
      0026E0 D0 17            [24] 7475 	pop	ar7
      0026E2 E9               [12] 7476 	mov	a,r1
      0026E3 24r01            [12] 7477 	add	a,#_gsm_receive_buf
      0026E5 F5 82            [12] 7478 	mov	dpl,a
      0026E7 EA               [12] 7479 	mov	a,r2
      0026E8 34s01            [12] 7480 	addc	a,#(_gsm_receive_buf >> 8)
      0026EA F5 83            [12] 7481 	mov	dph,a
      0026EC E0               [24] 7482 	movx	a,@dptr
      0026ED FA               [12] 7483 	mov	r2,a
      0026EE BA 49 49         [24] 7484 	cjne	r2,#0x49,00183$
      0026F1 74 0A            [12] 7485 	mov	a,#0x0a
      0026F3 2B               [12] 7486 	add	a,r3
      0026F4 F5 82            [12] 7487 	mov	dpl,a
      0026F6 E4               [12] 7488 	clr	a
      0026F7 3C               [12] 7489 	addc	a,r4
      0026F8 F5 83            [12] 7490 	mov	dph,a
      0026FA 75*00 0D         [24] 7491 	mov	__modsint_PARM_2,#0x0d
      0026FD 75*01 00         [24] 7492 	mov	(__modsint_PARM_2 + 1),#0x00
      002700 C0 17            [24] 7493 	push	ar7
      002702 C0 16            [24] 7494 	push	ar6
      002704 C0 15            [24] 7495 	push	ar5
      002706 75 D0 00         [24] 7496 	mov	psw,#0x00
      002709 12r00r00         [24] 7497 	lcall	__modsint
      00270C 75 D0 10         [24] 7498 	mov	psw,#0x10
      00270F AB 82            [24] 7499 	mov	r3,dpl
      002711 AC 83            [24] 7500 	mov	r4,dph
      002713 D0 15            [24] 7501 	pop	ar5
      002715 D0 16            [24] 7502 	pop	ar6
      002717 D0 17            [24] 7503 	pop	ar7
      002719 EB               [12] 7504 	mov	a,r3
      00271A 24r01            [12] 7505 	add	a,#_gsm_receive_buf
      00271C F5 82            [12] 7506 	mov	dpl,a
      00271E EC               [12] 7507 	mov	a,r4
      00271F 34s01            [12] 7508 	addc	a,#(_gsm_receive_buf >> 8)
      002721 F5 83            [12] 7509 	mov	dph,a
      002723 E0               [24] 7510 	movx	a,@dptr
      002724 FC               [12] 7511 	mov	r4,a
      002725 BC 52 12         [24] 7512 	cjne	r4,#0x52,00183$
                                   7513 ;	include/gsm_serial.c:472: send_gsm_cmd("ATH\r");
      002728 90r07r54         [24] 7514 	mov	dptr,#___str_80
      00272B 75 F0 80         [24] 7515 	mov	b,#0x80
      00272E 75 D0 00         [24] 7516 	mov	psw,#0x00
      002731 12r00r00         [24] 7517 	lcall	_send_gsm_cmd
      002734 75 D0 10         [24] 7518 	mov	psw,#0x10
      002737 02r3Ar69         [24] 7519 	ljmp	00345$
      00273A                       7520 00183$:
                                   7521 ;	include/gsm_serial.c:476: }else if((gsm_receive_buf[gsm_receive_pointer]==':' && gsm_receive_buf[(gsm_receive_pointer+12)%13] =='I' &&
      00273A BE 3A 02         [24] 7522 	cjne	r6,#0x3a,01019$
      00273D 80 03            [24] 7523 	sjmp	01020$
      00273F                       7524 01019$:
      00273F 02r28r8C         [24] 7525 	ljmp	00175$
      002742                       7526 01020$:
      002742 8F 13            [24] 7527 	mov	ar3,r7
      002744 7C 00            [12] 7528 	mov	r4,#0x00
      002746 74 0C            [12] 7529 	mov	a,#0x0c
      002748 2B               [12] 7530 	add	a,r3
      002749 F5 82            [12] 7531 	mov	dpl,a
      00274B E4               [12] 7532 	clr	a
      00274C 3C               [12] 7533 	addc	a,r4
      00274D F5 83            [12] 7534 	mov	dph,a
      00274F 75*00 0D         [24] 7535 	mov	__modsint_PARM_2,#0x0d
                                   7536 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      002752 8C*01            [24] 7537 	mov	(__modsint_PARM_2 + 1),r4
      002754 C0 17            [24] 7538 	push	ar7
      002756 C0 16            [24] 7539 	push	ar6
      002758 C0 15            [24] 7540 	push	ar5
      00275A C0 14            [24] 7541 	push	ar4
      00275C C0 13            [24] 7542 	push	ar3
      00275E 75 D0 00         [24] 7543 	mov	psw,#0x00
      002761 12r00r00         [24] 7544 	lcall	__modsint
      002764 75 D0 10         [24] 7545 	mov	psw,#0x10
      002767 A9 82            [24] 7546 	mov	r1,dpl
      002769 AA 83            [24] 7547 	mov	r2,dph
      00276B D0 13            [24] 7548 	pop	ar3
      00276D D0 14            [24] 7549 	pop	ar4
      00276F D0 15            [24] 7550 	pop	ar5
      002771 D0 16            [24] 7551 	pop	ar6
      002773 D0 17            [24] 7552 	pop	ar7
      002775 E9               [12] 7553 	mov	a,r1
      002776 24r01            [12] 7554 	add	a,#_gsm_receive_buf
      002778 F5 82            [12] 7555 	mov	dpl,a
      00277A EA               [12] 7556 	mov	a,r2
      00277B 34s01            [12] 7557 	addc	a,#(_gsm_receive_buf >> 8)
      00277D F5 83            [12] 7558 	mov	dph,a
      00277F E0               [24] 7559 	movx	a,@dptr
      002780 FA               [12] 7560 	mov	r2,a
      002781 BA 49 02         [24] 7561 	cjne	r2,#0x49,01021$
      002784 80 03            [24] 7562 	sjmp	01022$
      002786                       7563 01021$:
      002786 02r28r8C         [24] 7564 	ljmp	00175$
      002789                       7565 01022$:
                                   7566 ;	include/gsm_serial.c:477: gsm_receive_buf[(gsm_receive_pointer+11)%13] =='T' && gsm_receive_buf[(gsm_receive_pointer+10)%13] =='M' &&
      002789 74 0B            [12] 7567 	mov	a,#0x0b
      00278B 2B               [12] 7568 	add	a,r3
      00278C F5 82            [12] 7569 	mov	dpl,a
      00278E E4               [12] 7570 	clr	a
      00278F 3C               [12] 7571 	addc	a,r4
      002790 F5 83            [12] 7572 	mov	dph,a
      002792 75*00 0D         [24] 7573 	mov	__modsint_PARM_2,#0x0d
      002795 75*01 00         [24] 7574 	mov	(__modsint_PARM_2 + 1),#0x00
      002798 C0 17            [24] 7575 	push	ar7
      00279A C0 16            [24] 7576 	push	ar6
      00279C C0 15            [24] 7577 	push	ar5
      00279E C0 14            [24] 7578 	push	ar4
      0027A0 C0 13            [24] 7579 	push	ar3
      0027A2 75 D0 00         [24] 7580 	mov	psw,#0x00
      0027A5 12r00r00         [24] 7581 	lcall	__modsint
      0027A8 75 D0 10         [24] 7582 	mov	psw,#0x10
      0027AB A9 82            [24] 7583 	mov	r1,dpl
      0027AD AA 83            [24] 7584 	mov	r2,dph
      0027AF D0 13            [24] 7585 	pop	ar3
      0027B1 D0 14            [24] 7586 	pop	ar4
      0027B3 D0 15            [24] 7587 	pop	ar5
      0027B5 D0 16            [24] 7588 	pop	ar6
      0027B7 D0 17            [24] 7589 	pop	ar7
      0027B9 E9               [12] 7590 	mov	a,r1
      0027BA 24r01            [12] 7591 	add	a,#_gsm_receive_buf
      0027BC F5 82            [12] 7592 	mov	dpl,a
      0027BE EA               [12] 7593 	mov	a,r2
      0027BF 34s01            [12] 7594 	addc	a,#(_gsm_receive_buf >> 8)
      0027C1 F5 83            [12] 7595 	mov	dph,a
      0027C3 E0               [24] 7596 	movx	a,@dptr
      0027C4 FA               [12] 7597 	mov	r2,a
      0027C5 BA 54 02         [24] 7598 	cjne	r2,#0x54,01023$
      0027C8 80 03            [24] 7599 	sjmp	01024$
      0027CA                       7600 01023$:
      0027CA 02r28r8C         [24] 7601 	ljmp	00175$
      0027CD                       7602 01024$:
      0027CD 74 0A            [12] 7603 	mov	a,#0x0a
      0027CF 2B               [12] 7604 	add	a,r3
      0027D0 F5 82            [12] 7605 	mov	dpl,a
      0027D2 E4               [12] 7606 	clr	a
      0027D3 3C               [12] 7607 	addc	a,r4
      0027D4 F5 83            [12] 7608 	mov	dph,a
      0027D6 75*00 0D         [24] 7609 	mov	__modsint_PARM_2,#0x0d
      0027D9 75*01 00         [24] 7610 	mov	(__modsint_PARM_2 + 1),#0x00
      0027DC C0 17            [24] 7611 	push	ar7
      0027DE C0 16            [24] 7612 	push	ar6
      0027E0 C0 15            [24] 7613 	push	ar5
      0027E2 C0 14            [24] 7614 	push	ar4
      0027E4 C0 13            [24] 7615 	push	ar3
      0027E6 75 D0 00         [24] 7616 	mov	psw,#0x00
      0027E9 12r00r00         [24] 7617 	lcall	__modsint
      0027EC 75 D0 10         [24] 7618 	mov	psw,#0x10
      0027EF A9 82            [24] 7619 	mov	r1,dpl
      0027F1 AA 83            [24] 7620 	mov	r2,dph
      0027F3 D0 13            [24] 7621 	pop	ar3
      0027F5 D0 14            [24] 7622 	pop	ar4
      0027F7 D0 15            [24] 7623 	pop	ar5
      0027F9 D0 16            [24] 7624 	pop	ar6
      0027FB D0 17            [24] 7625 	pop	ar7
      0027FD E9               [12] 7626 	mov	a,r1
      0027FE 24r01            [12] 7627 	add	a,#_gsm_receive_buf
      002800 F5 82            [12] 7628 	mov	dpl,a
      002802 EA               [12] 7629 	mov	a,r2
      002803 34s01            [12] 7630 	addc	a,#(_gsm_receive_buf >> 8)
      002805 F5 83            [12] 7631 	mov	dph,a
      002807 E0               [24] 7632 	movx	a,@dptr
      002808 FA               [12] 7633 	mov	r2,a
      002809 BA 4D 02         [24] 7634 	cjne	r2,#0x4d,01025$
      00280C 80 03            [24] 7635 	sjmp	01026$
      00280E                       7636 01025$:
      00280E 02r28r8C         [24] 7637 	ljmp	00175$
      002811                       7638 01026$:
                                   7639 ;	include/gsm_serial.c:478: gsm_receive_buf[(gsm_receive_pointer+9)%13] =='C' && gsm_receive_buf[(gsm_receive_pointer+8)%13] =='+')){
      002811 74 09            [12] 7640 	mov	a,#0x09
      002813 2B               [12] 7641 	add	a,r3
      002814 F5 82            [12] 7642 	mov	dpl,a
      002816 E4               [12] 7643 	clr	a
      002817 3C               [12] 7644 	addc	a,r4
      002818 F5 83            [12] 7645 	mov	dph,a
      00281A 75*00 0D         [24] 7646 	mov	__modsint_PARM_2,#0x0d
      00281D 75*01 00         [24] 7647 	mov	(__modsint_PARM_2 + 1),#0x00
      002820 C0 17            [24] 7648 	push	ar7
      002822 C0 16            [24] 7649 	push	ar6
      002824 C0 15            [24] 7650 	push	ar5
      002826 C0 14            [24] 7651 	push	ar4
      002828 C0 13            [24] 7652 	push	ar3
      00282A 75 D0 00         [24] 7653 	mov	psw,#0x00
      00282D 12r00r00         [24] 7654 	lcall	__modsint
      002830 75 D0 10         [24] 7655 	mov	psw,#0x10
      002833 A9 82            [24] 7656 	mov	r1,dpl
      002835 AA 83            [24] 7657 	mov	r2,dph
      002837 D0 13            [24] 7658 	pop	ar3
      002839 D0 14            [24] 7659 	pop	ar4
      00283B D0 15            [24] 7660 	pop	ar5
      00283D D0 16            [24] 7661 	pop	ar6
      00283F D0 17            [24] 7662 	pop	ar7
      002841 E9               [12] 7663 	mov	a,r1
      002842 24r01            [12] 7664 	add	a,#_gsm_receive_buf
      002844 F5 82            [12] 7665 	mov	dpl,a
      002846 EA               [12] 7666 	mov	a,r2
      002847 34s01            [12] 7667 	addc	a,#(_gsm_receive_buf >> 8)
      002849 F5 83            [12] 7668 	mov	dph,a
      00284B E0               [24] 7669 	movx	a,@dptr
      00284C FA               [12] 7670 	mov	r2,a
      00284D BA 43 3C         [24] 7671 	cjne	r2,#0x43,00175$
      002850 74 08            [12] 7672 	mov	a,#0x08
      002852 2B               [12] 7673 	add	a,r3
      002853 F5 82            [12] 7674 	mov	dpl,a
      002855 E4               [12] 7675 	clr	a
      002856 3C               [12] 7676 	addc	a,r4
      002857 F5 83            [12] 7677 	mov	dph,a
      002859 75*00 0D         [24] 7678 	mov	__modsint_PARM_2,#0x0d
      00285C 75*01 00         [24] 7679 	mov	(__modsint_PARM_2 + 1),#0x00
      00285F C0 17            [24] 7680 	push	ar7
      002861 C0 16            [24] 7681 	push	ar6
      002863 C0 15            [24] 7682 	push	ar5
      002865 75 D0 00         [24] 7683 	mov	psw,#0x00
      002868 12r00r00         [24] 7684 	lcall	__modsint
      00286B 75 D0 10         [24] 7685 	mov	psw,#0x10
      00286E AB 82            [24] 7686 	mov	r3,dpl
      002870 AC 83            [24] 7687 	mov	r4,dph
      002872 D0 15            [24] 7688 	pop	ar5
      002874 D0 16            [24] 7689 	pop	ar6
      002876 D0 17            [24] 7690 	pop	ar7
      002878 EB               [12] 7691 	mov	a,r3
      002879 24r01            [12] 7692 	add	a,#_gsm_receive_buf
      00287B F5 82            [12] 7693 	mov	dpl,a
      00287D EC               [12] 7694 	mov	a,r4
      00287E 34s01            [12] 7695 	addc	a,#(_gsm_receive_buf >> 8)
      002880 F5 83            [12] 7696 	mov	dph,a
      002882 E0               [24] 7697 	movx	a,@dptr
      002883 FC               [12] 7698 	mov	r4,a
      002884 BC 2B 05         [24] 7699 	cjne	r4,#0x2b,00175$
                                   7700 ;	include/gsm_serial.c:480: co_tin_nhan_moi = 1;
                                   7701 ;	assignBit
      002887 D2*0A            [12] 7702 	setb	_co_tin_nhan_moi
      002889 02r3Ar69         [24] 7703 	ljmp	00345$
      00288C                       7704 00175$:
                                   7705 ;	include/gsm_serial.c:484: }else if((gsm_receive_buf[gsm_receive_pointer]==' ' && gsm_receive_buf[(gsm_receive_pointer+12)%13] ==':' &&
      00288C E4               [12] 7706 	clr	a
      00288D BE 20 01         [24] 7707 	cjne	r6,#0x20,01031$
      002890 04               [12] 7708 	inc	a
      002891                       7709 01031$:
      002891 FC               [12] 7710 	mov	r4,a
      002892 70 03            [24] 7711 	jnz	01033$
      002894 02r2Ar3B         [24] 7712 	ljmp	00173$
      002897                       7713 01033$:
      002897 8F 12            [24] 7714 	mov	ar2,r7
      002899 7B 00            [12] 7715 	mov	r3,#0x00
      00289B 74 0C            [12] 7716 	mov	a,#0x0c
      00289D 2A               [12] 7717 	add	a,r2
      00289E F5 82            [12] 7718 	mov	dpl,a
      0028A0 E4               [12] 7719 	clr	a
      0028A1 3B               [12] 7720 	addc	a,r3
      0028A2 F5 83            [12] 7721 	mov	dph,a
      0028A4 75*00 0D         [24] 7722 	mov	__modsint_PARM_2,#0x0d
                                   7723 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0028A7 8B*01            [24] 7724 	mov	(__modsint_PARM_2 + 1),r3
      0028A9 C0 17            [24] 7725 	push	ar7
      0028AB C0 16            [24] 7726 	push	ar6
      0028AD C0 15            [24] 7727 	push	ar5
      0028AF C0 14            [24] 7728 	push	ar4
      0028B1 C0 13            [24] 7729 	push	ar3
      0028B3 C0 12            [24] 7730 	push	ar2
      0028B5 75 D0 00         [24] 7731 	mov	psw,#0x00
      0028B8 12r00r00         [24] 7732 	lcall	__modsint
      0028BB 75 D0 10         [24] 7733 	mov	psw,#0x10
      0028BE A8 82            [24] 7734 	mov	r0,dpl
      0028C0 A9 83            [24] 7735 	mov	r1,dph
      0028C2 D0 12            [24] 7736 	pop	ar2
      0028C4 D0 13            [24] 7737 	pop	ar3
      0028C6 D0 14            [24] 7738 	pop	ar4
      0028C8 D0 15            [24] 7739 	pop	ar5
      0028CA D0 16            [24] 7740 	pop	ar6
      0028CC D0 17            [24] 7741 	pop	ar7
      0028CE E8               [12] 7742 	mov	a,r0
      0028CF 24r01            [12] 7743 	add	a,#_gsm_receive_buf
      0028D1 F5 82            [12] 7744 	mov	dpl,a
      0028D3 E9               [12] 7745 	mov	a,r1
      0028D4 34s01            [12] 7746 	addc	a,#(_gsm_receive_buf >> 8)
      0028D6 F5 83            [12] 7747 	mov	dph,a
      0028D8 E0               [24] 7748 	movx	a,@dptr
      0028D9 F9               [12] 7749 	mov	r1,a
      0028DA B9 3A 02         [24] 7750 	cjne	r1,#0x3a,01034$
      0028DD 80 03            [24] 7751 	sjmp	01035$
      0028DF                       7752 01034$:
      0028DF 02r2Ar3B         [24] 7753 	ljmp	00173$
      0028E2                       7754 01035$:
                                   7755 ;	include/gsm_serial.c:485: gsm_receive_buf[(gsm_receive_pointer+11)%13] =='L' && gsm_receive_buf[(gsm_receive_pointer+10)%13] =='G' &&
      0028E2 74 0B            [12] 7756 	mov	a,#0x0b
      0028E4 2A               [12] 7757 	add	a,r2
      0028E5 F5 82            [12] 7758 	mov	dpl,a
      0028E7 E4               [12] 7759 	clr	a
      0028E8 3B               [12] 7760 	addc	a,r3
      0028E9 F5 83            [12] 7761 	mov	dph,a
      0028EB 75*00 0D         [24] 7762 	mov	__modsint_PARM_2,#0x0d
      0028EE 75*01 00         [24] 7763 	mov	(__modsint_PARM_2 + 1),#0x00
      0028F1 C0 17            [24] 7764 	push	ar7
      0028F3 C0 16            [24] 7765 	push	ar6
      0028F5 C0 15            [24] 7766 	push	ar5
      0028F7 C0 14            [24] 7767 	push	ar4
      0028F9 C0 13            [24] 7768 	push	ar3
      0028FB C0 12            [24] 7769 	push	ar2
      0028FD 75 D0 00         [24] 7770 	mov	psw,#0x00
      002900 12r00r00         [24] 7771 	lcall	__modsint
      002903 75 D0 10         [24] 7772 	mov	psw,#0x10
      002906 A8 82            [24] 7773 	mov	r0,dpl
      002908 A9 83            [24] 7774 	mov	r1,dph
      00290A D0 12            [24] 7775 	pop	ar2
      00290C D0 13            [24] 7776 	pop	ar3
      00290E D0 14            [24] 7777 	pop	ar4
      002910 D0 15            [24] 7778 	pop	ar5
      002912 D0 16            [24] 7779 	pop	ar6
      002914 D0 17            [24] 7780 	pop	ar7
      002916 E8               [12] 7781 	mov	a,r0
      002917 24r01            [12] 7782 	add	a,#_gsm_receive_buf
      002919 F5 82            [12] 7783 	mov	dpl,a
      00291B E9               [12] 7784 	mov	a,r1
      00291C 34s01            [12] 7785 	addc	a,#(_gsm_receive_buf >> 8)
      00291E F5 83            [12] 7786 	mov	dph,a
      002920 E0               [24] 7787 	movx	a,@dptr
      002921 F9               [12] 7788 	mov	r1,a
      002922 B9 4C 02         [24] 7789 	cjne	r1,#0x4c,01036$
      002925 80 03            [24] 7790 	sjmp	01037$
      002927                       7791 01036$:
      002927 02r2Ar3B         [24] 7792 	ljmp	00173$
      00292A                       7793 01037$:
      00292A 74 0A            [12] 7794 	mov	a,#0x0a
      00292C 2A               [12] 7795 	add	a,r2
      00292D F5 82            [12] 7796 	mov	dpl,a
      00292F E4               [12] 7797 	clr	a
      002930 3B               [12] 7798 	addc	a,r3
      002931 F5 83            [12] 7799 	mov	dph,a
      002933 75*00 0D         [24] 7800 	mov	__modsint_PARM_2,#0x0d
      002936 75*01 00         [24] 7801 	mov	(__modsint_PARM_2 + 1),#0x00
      002939 C0 17            [24] 7802 	push	ar7
      00293B C0 16            [24] 7803 	push	ar6
      00293D C0 15            [24] 7804 	push	ar5
      00293F C0 14            [24] 7805 	push	ar4
      002941 C0 13            [24] 7806 	push	ar3
      002943 C0 12            [24] 7807 	push	ar2
      002945 75 D0 00         [24] 7808 	mov	psw,#0x00
      002948 12r00r00         [24] 7809 	lcall	__modsint
      00294B 75 D0 10         [24] 7810 	mov	psw,#0x10
      00294E A8 82            [24] 7811 	mov	r0,dpl
      002950 A9 83            [24] 7812 	mov	r1,dph
      002952 D0 12            [24] 7813 	pop	ar2
      002954 D0 13            [24] 7814 	pop	ar3
      002956 D0 14            [24] 7815 	pop	ar4
      002958 D0 15            [24] 7816 	pop	ar5
      00295A D0 16            [24] 7817 	pop	ar6
      00295C D0 17            [24] 7818 	pop	ar7
      00295E E8               [12] 7819 	mov	a,r0
      00295F 24r01            [12] 7820 	add	a,#_gsm_receive_buf
      002961 F5 82            [12] 7821 	mov	dpl,a
      002963 E9               [12] 7822 	mov	a,r1
      002964 34s01            [12] 7823 	addc	a,#(_gsm_receive_buf >> 8)
      002966 F5 83            [12] 7824 	mov	dph,a
      002968 E0               [24] 7825 	movx	a,@dptr
      002969 F9               [12] 7826 	mov	r1,a
      00296A B9 47 02         [24] 7827 	cjne	r1,#0x47,01038$
      00296D 80 03            [24] 7828 	sjmp	01039$
      00296F                       7829 01038$:
      00296F 02r2Ar3B         [24] 7830 	ljmp	00173$
      002972                       7831 01039$:
                                   7832 ;	include/gsm_serial.c:486: gsm_receive_buf[(gsm_receive_pointer+9)%13] =='M'  && gsm_receive_buf[(gsm_receive_pointer+8)%13] =='C' &&
      002972 74 09            [12] 7833 	mov	a,#0x09
      002974 2A               [12] 7834 	add	a,r2
      002975 F5 82            [12] 7835 	mov	dpl,a
      002977 E4               [12] 7836 	clr	a
      002978 3B               [12] 7837 	addc	a,r3
      002979 F5 83            [12] 7838 	mov	dph,a
      00297B 75*00 0D         [24] 7839 	mov	__modsint_PARM_2,#0x0d
      00297E 75*01 00         [24] 7840 	mov	(__modsint_PARM_2 + 1),#0x00
      002981 C0 17            [24] 7841 	push	ar7
      002983 C0 16            [24] 7842 	push	ar6
      002985 C0 15            [24] 7843 	push	ar5
      002987 C0 14            [24] 7844 	push	ar4
      002989 C0 13            [24] 7845 	push	ar3
      00298B C0 12            [24] 7846 	push	ar2
      00298D 75 D0 00         [24] 7847 	mov	psw,#0x00
      002990 12r00r00         [24] 7848 	lcall	__modsint
      002993 75 D0 10         [24] 7849 	mov	psw,#0x10
      002996 A8 82            [24] 7850 	mov	r0,dpl
      002998 A9 83            [24] 7851 	mov	r1,dph
      00299A D0 12            [24] 7852 	pop	ar2
      00299C D0 13            [24] 7853 	pop	ar3
      00299E D0 14            [24] 7854 	pop	ar4
      0029A0 D0 15            [24] 7855 	pop	ar5
      0029A2 D0 16            [24] 7856 	pop	ar6
      0029A4 D0 17            [24] 7857 	pop	ar7
      0029A6 E8               [12] 7858 	mov	a,r0
      0029A7 24r01            [12] 7859 	add	a,#_gsm_receive_buf
      0029A9 F5 82            [12] 7860 	mov	dpl,a
      0029AB E9               [12] 7861 	mov	a,r1
      0029AC 34s01            [12] 7862 	addc	a,#(_gsm_receive_buf >> 8)
      0029AE F5 83            [12] 7863 	mov	dph,a
      0029B0 E0               [24] 7864 	movx	a,@dptr
      0029B1 F9               [12] 7865 	mov	r1,a
      0029B2 B9 4D 02         [24] 7866 	cjne	r1,#0x4d,01040$
      0029B5 80 03            [24] 7867 	sjmp	01041$
      0029B7                       7868 01040$:
      0029B7 02r2Ar3B         [24] 7869 	ljmp	00173$
      0029BA                       7870 01041$:
      0029BA 74 08            [12] 7871 	mov	a,#0x08
      0029BC 2A               [12] 7872 	add	a,r2
      0029BD F5 82            [12] 7873 	mov	dpl,a
      0029BF E4               [12] 7874 	clr	a
      0029C0 3B               [12] 7875 	addc	a,r3
      0029C1 F5 83            [12] 7876 	mov	dph,a
      0029C3 75*00 0D         [24] 7877 	mov	__modsint_PARM_2,#0x0d
      0029C6 75*01 00         [24] 7878 	mov	(__modsint_PARM_2 + 1),#0x00
      0029C9 C0 17            [24] 7879 	push	ar7
      0029CB C0 16            [24] 7880 	push	ar6
      0029CD C0 15            [24] 7881 	push	ar5
      0029CF C0 14            [24] 7882 	push	ar4
      0029D1 C0 13            [24] 7883 	push	ar3
      0029D3 C0 12            [24] 7884 	push	ar2
      0029D5 75 D0 00         [24] 7885 	mov	psw,#0x00
      0029D8 12r00r00         [24] 7886 	lcall	__modsint
      0029DB 75 D0 10         [24] 7887 	mov	psw,#0x10
      0029DE A8 82            [24] 7888 	mov	r0,dpl
      0029E0 A9 83            [24] 7889 	mov	r1,dph
      0029E2 D0 12            [24] 7890 	pop	ar2
      0029E4 D0 13            [24] 7891 	pop	ar3
      0029E6 D0 14            [24] 7892 	pop	ar4
      0029E8 D0 15            [24] 7893 	pop	ar5
      0029EA D0 16            [24] 7894 	pop	ar6
      0029EC D0 17            [24] 7895 	pop	ar7
      0029EE E8               [12] 7896 	mov	a,r0
      0029EF 24r01            [12] 7897 	add	a,#_gsm_receive_buf
      0029F1 F5 82            [12] 7898 	mov	dpl,a
      0029F3 E9               [12] 7899 	mov	a,r1
      0029F4 34s01            [12] 7900 	addc	a,#(_gsm_receive_buf >> 8)
      0029F6 F5 83            [12] 7901 	mov	dph,a
      0029F8 E0               [24] 7902 	movx	a,@dptr
      0029F9 F9               [12] 7903 	mov	r1,a
      0029FA B9 43 3E         [24] 7904 	cjne	r1,#0x43,00173$
                                   7905 ;	include/gsm_serial.c:487: gsm_receive_buf[(gsm_receive_pointer+7)%13] =='+')||(gsm_receive_buf[gsm_receive_pointer]==' ' && gsm_receive_buf[(gsm_receive_pointer+12)%13] ==':' &&
      0029FD 74 07            [12] 7906 	mov	a,#0x07
      0029FF 2A               [12] 7907 	add	a,r2
      002A00 F5 82            [12] 7908 	mov	dpl,a
      002A02 E4               [12] 7909 	clr	a
      002A03 3B               [12] 7910 	addc	a,r3
      002A04 F5 83            [12] 7911 	mov	dph,a
      002A06 75*00 0D         [24] 7912 	mov	__modsint_PARM_2,#0x0d
      002A09 75*01 00         [24] 7913 	mov	(__modsint_PARM_2 + 1),#0x00
      002A0C C0 17            [24] 7914 	push	ar7
      002A0E C0 16            [24] 7915 	push	ar6
      002A10 C0 15            [24] 7916 	push	ar5
      002A12 C0 14            [24] 7917 	push	ar4
      002A14 75 D0 00         [24] 7918 	mov	psw,#0x00
      002A17 12r00r00         [24] 7919 	lcall	__modsint
      002A1A 75 D0 10         [24] 7920 	mov	psw,#0x10
      002A1D AA 82            [24] 7921 	mov	r2,dpl
      002A1F AB 83            [24] 7922 	mov	r3,dph
      002A21 D0 14            [24] 7923 	pop	ar4
      002A23 D0 15            [24] 7924 	pop	ar5
      002A25 D0 16            [24] 7925 	pop	ar6
      002A27 D0 17            [24] 7926 	pop	ar7
      002A29 EA               [12] 7927 	mov	a,r2
      002A2A 24r01            [12] 7928 	add	a,#_gsm_receive_buf
      002A2C F5 82            [12] 7929 	mov	dpl,a
      002A2E EB               [12] 7930 	mov	a,r3
      002A2F 34s01            [12] 7931 	addc	a,#(_gsm_receive_buf >> 8)
      002A31 F5 83            [12] 7932 	mov	dph,a
      002A33 E0               [24] 7933 	movx	a,@dptr
      002A34 FB               [12] 7934 	mov	r3,a
      002A35 BB 2B 03         [24] 7935 	cjne	r3,#0x2b,01044$
      002A38 02r2BrCF         [24] 7936 	ljmp	00158$
      002A3B                       7937 01044$:
      002A3B                       7938 00173$:
      002A3B EC               [12] 7939 	mov	a,r4
      002A3C 70 03            [24] 7940 	jnz	01045$
      002A3E 02r2Cr1A         [24] 7941 	ljmp	00159$
      002A41                       7942 01045$:
      002A41 8F 13            [24] 7943 	mov	ar3,r7
      002A43 7C 00            [12] 7944 	mov	r4,#0x00
      002A45 74 0C            [12] 7945 	mov	a,#0x0c
      002A47 2B               [12] 7946 	add	a,r3
      002A48 F5 82            [12] 7947 	mov	dpl,a
      002A4A E4               [12] 7948 	clr	a
      002A4B 3C               [12] 7949 	addc	a,r4
      002A4C F5 83            [12] 7950 	mov	dph,a
      002A4E 75*00 0D         [24] 7951 	mov	__modsint_PARM_2,#0x0d
                                   7952 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      002A51 8C*01            [24] 7953 	mov	(__modsint_PARM_2 + 1),r4
      002A53 C0 17            [24] 7954 	push	ar7
      002A55 C0 16            [24] 7955 	push	ar6
      002A57 C0 15            [24] 7956 	push	ar5
      002A59 C0 14            [24] 7957 	push	ar4
      002A5B C0 13            [24] 7958 	push	ar3
      002A5D 75 D0 00         [24] 7959 	mov	psw,#0x00
      002A60 12r00r00         [24] 7960 	lcall	__modsint
      002A63 75 D0 10         [24] 7961 	mov	psw,#0x10
      002A66 A9 82            [24] 7962 	mov	r1,dpl
      002A68 AA 83            [24] 7963 	mov	r2,dph
      002A6A D0 13            [24] 7964 	pop	ar3
      002A6C D0 14            [24] 7965 	pop	ar4
      002A6E D0 15            [24] 7966 	pop	ar5
      002A70 D0 16            [24] 7967 	pop	ar6
      002A72 D0 17            [24] 7968 	pop	ar7
      002A74 E9               [12] 7969 	mov	a,r1
      002A75 24r01            [12] 7970 	add	a,#_gsm_receive_buf
      002A77 F5 82            [12] 7971 	mov	dpl,a
      002A79 EA               [12] 7972 	mov	a,r2
      002A7A 34s01            [12] 7973 	addc	a,#(_gsm_receive_buf >> 8)
      002A7C F5 83            [12] 7974 	mov	dph,a
      002A7E E0               [24] 7975 	movx	a,@dptr
      002A7F FA               [12] 7976 	mov	r2,a
      002A80 BA 3A 02         [24] 7977 	cjne	r2,#0x3a,01046$
      002A83 80 03            [24] 7978 	sjmp	01047$
      002A85                       7979 01046$:
      002A85 02r2Cr1A         [24] 7980 	ljmp	00159$
      002A88                       7981 01047$:
                                   7982 ;	include/gsm_serial.c:488: gsm_receive_buf[(gsm_receive_pointer+11)%13] =='P' && gsm_receive_buf[(gsm_receive_pointer+10)%13] =='I' &&
      002A88 74 0B            [12] 7983 	mov	a,#0x0b
      002A8A 2B               [12] 7984 	add	a,r3
      002A8B F5 82            [12] 7985 	mov	dpl,a
      002A8D E4               [12] 7986 	clr	a
      002A8E 3C               [12] 7987 	addc	a,r4
      002A8F F5 83            [12] 7988 	mov	dph,a
      002A91 75*00 0D         [24] 7989 	mov	__modsint_PARM_2,#0x0d
      002A94 75*01 00         [24] 7990 	mov	(__modsint_PARM_2 + 1),#0x00
      002A97 C0 17            [24] 7991 	push	ar7
      002A99 C0 16            [24] 7992 	push	ar6
      002A9B C0 15            [24] 7993 	push	ar5
      002A9D C0 14            [24] 7994 	push	ar4
      002A9F C0 13            [24] 7995 	push	ar3
      002AA1 75 D0 00         [24] 7996 	mov	psw,#0x00
      002AA4 12r00r00         [24] 7997 	lcall	__modsint
      002AA7 75 D0 10         [24] 7998 	mov	psw,#0x10
      002AAA A9 82            [24] 7999 	mov	r1,dpl
      002AAC AA 83            [24] 8000 	mov	r2,dph
      002AAE D0 13            [24] 8001 	pop	ar3
      002AB0 D0 14            [24] 8002 	pop	ar4
      002AB2 D0 15            [24] 8003 	pop	ar5
      002AB4 D0 16            [24] 8004 	pop	ar6
      002AB6 D0 17            [24] 8005 	pop	ar7
      002AB8 E9               [12] 8006 	mov	a,r1
      002AB9 24r01            [12] 8007 	add	a,#_gsm_receive_buf
      002ABB F5 82            [12] 8008 	mov	dpl,a
      002ABD EA               [12] 8009 	mov	a,r2
      002ABE 34s01            [12] 8010 	addc	a,#(_gsm_receive_buf >> 8)
      002AC0 F5 83            [12] 8011 	mov	dph,a
      002AC2 E0               [24] 8012 	movx	a,@dptr
      002AC3 FA               [12] 8013 	mov	r2,a
      002AC4 BA 50 02         [24] 8014 	cjne	r2,#0x50,01048$
      002AC7 80 03            [24] 8015 	sjmp	01049$
      002AC9                       8016 01048$:
      002AC9 02r2Cr1A         [24] 8017 	ljmp	00159$
      002ACC                       8018 01049$:
      002ACC 74 0A            [12] 8019 	mov	a,#0x0a
      002ACE 2B               [12] 8020 	add	a,r3
      002ACF F5 82            [12] 8021 	mov	dpl,a
      002AD1 E4               [12] 8022 	clr	a
      002AD2 3C               [12] 8023 	addc	a,r4
      002AD3 F5 83            [12] 8024 	mov	dph,a
      002AD5 75*00 0D         [24] 8025 	mov	__modsint_PARM_2,#0x0d
      002AD8 75*01 00         [24] 8026 	mov	(__modsint_PARM_2 + 1),#0x00
      002ADB C0 17            [24] 8027 	push	ar7
      002ADD C0 16            [24] 8028 	push	ar6
      002ADF C0 15            [24] 8029 	push	ar5
      002AE1 C0 14            [24] 8030 	push	ar4
      002AE3 C0 13            [24] 8031 	push	ar3
      002AE5 75 D0 00         [24] 8032 	mov	psw,#0x00
      002AE8 12r00r00         [24] 8033 	lcall	__modsint
      002AEB 75 D0 10         [24] 8034 	mov	psw,#0x10
      002AEE A9 82            [24] 8035 	mov	r1,dpl
      002AF0 AA 83            [24] 8036 	mov	r2,dph
      002AF2 D0 13            [24] 8037 	pop	ar3
      002AF4 D0 14            [24] 8038 	pop	ar4
      002AF6 D0 15            [24] 8039 	pop	ar5
      002AF8 D0 16            [24] 8040 	pop	ar6
      002AFA D0 17            [24] 8041 	pop	ar7
      002AFC E9               [12] 8042 	mov	a,r1
      002AFD 24r01            [12] 8043 	add	a,#_gsm_receive_buf
      002AFF F5 82            [12] 8044 	mov	dpl,a
      002B01 EA               [12] 8045 	mov	a,r2
      002B02 34s01            [12] 8046 	addc	a,#(_gsm_receive_buf >> 8)
      002B04 F5 83            [12] 8047 	mov	dph,a
      002B06 E0               [24] 8048 	movx	a,@dptr
      002B07 FA               [12] 8049 	mov	r2,a
      002B08 BA 49 02         [24] 8050 	cjne	r2,#0x49,01050$
      002B0B 80 03            [24] 8051 	sjmp	01051$
      002B0D                       8052 01050$:
      002B0D 02r2Cr1A         [24] 8053 	ljmp	00159$
      002B10                       8054 01051$:
                                   8055 ;	include/gsm_serial.c:489: gsm_receive_buf[(gsm_receive_pointer+9)%13] =='L'  && gsm_receive_buf[(gsm_receive_pointer+8)%13] =='C' &&
      002B10 74 09            [12] 8056 	mov	a,#0x09
      002B12 2B               [12] 8057 	add	a,r3
      002B13 F5 82            [12] 8058 	mov	dpl,a
      002B15 E4               [12] 8059 	clr	a
      002B16 3C               [12] 8060 	addc	a,r4
      002B17 F5 83            [12] 8061 	mov	dph,a
      002B19 75*00 0D         [24] 8062 	mov	__modsint_PARM_2,#0x0d
      002B1C 75*01 00         [24] 8063 	mov	(__modsint_PARM_2 + 1),#0x00
      002B1F C0 17            [24] 8064 	push	ar7
      002B21 C0 16            [24] 8065 	push	ar6
      002B23 C0 15            [24] 8066 	push	ar5
      002B25 C0 14            [24] 8067 	push	ar4
      002B27 C0 13            [24] 8068 	push	ar3
      002B29 75 D0 00         [24] 8069 	mov	psw,#0x00
      002B2C 12r00r00         [24] 8070 	lcall	__modsint
      002B2F 75 D0 10         [24] 8071 	mov	psw,#0x10
      002B32 A9 82            [24] 8072 	mov	r1,dpl
      002B34 AA 83            [24] 8073 	mov	r2,dph
      002B36 D0 13            [24] 8074 	pop	ar3
      002B38 D0 14            [24] 8075 	pop	ar4
      002B3A D0 15            [24] 8076 	pop	ar5
      002B3C D0 16            [24] 8077 	pop	ar6
      002B3E D0 17            [24] 8078 	pop	ar7
      002B40 E9               [12] 8079 	mov	a,r1
      002B41 24r01            [12] 8080 	add	a,#_gsm_receive_buf
      002B43 F5 82            [12] 8081 	mov	dpl,a
      002B45 EA               [12] 8082 	mov	a,r2
      002B46 34s01            [12] 8083 	addc	a,#(_gsm_receive_buf >> 8)
      002B48 F5 83            [12] 8084 	mov	dph,a
      002B4A E0               [24] 8085 	movx	a,@dptr
      002B4B FA               [12] 8086 	mov	r2,a
      002B4C BA 4C 02         [24] 8087 	cjne	r2,#0x4c,01052$
      002B4F 80 03            [24] 8088 	sjmp	01053$
      002B51                       8089 01052$:
      002B51 02r2Cr1A         [24] 8090 	ljmp	00159$
      002B54                       8091 01053$:
      002B54 74 08            [12] 8092 	mov	a,#0x08
      002B56 2B               [12] 8093 	add	a,r3
      002B57 F5 82            [12] 8094 	mov	dpl,a
      002B59 E4               [12] 8095 	clr	a
      002B5A 3C               [12] 8096 	addc	a,r4
      002B5B F5 83            [12] 8097 	mov	dph,a
      002B5D 75*00 0D         [24] 8098 	mov	__modsint_PARM_2,#0x0d
      002B60 75*01 00         [24] 8099 	mov	(__modsint_PARM_2 + 1),#0x00
      002B63 C0 17            [24] 8100 	push	ar7
      002B65 C0 16            [24] 8101 	push	ar6
      002B67 C0 15            [24] 8102 	push	ar5
      002B69 C0 14            [24] 8103 	push	ar4
      002B6B C0 13            [24] 8104 	push	ar3
      002B6D 75 D0 00         [24] 8105 	mov	psw,#0x00
      002B70 12r00r00         [24] 8106 	lcall	__modsint
      002B73 75 D0 10         [24] 8107 	mov	psw,#0x10
      002B76 A9 82            [24] 8108 	mov	r1,dpl
      002B78 AA 83            [24] 8109 	mov	r2,dph
      002B7A D0 13            [24] 8110 	pop	ar3
      002B7C D0 14            [24] 8111 	pop	ar4
      002B7E D0 15            [24] 8112 	pop	ar5
      002B80 D0 16            [24] 8113 	pop	ar6
      002B82 D0 17            [24] 8114 	pop	ar7
      002B84 E9               [12] 8115 	mov	a,r1
      002B85 24r01            [12] 8116 	add	a,#_gsm_receive_buf
      002B87 F5 82            [12] 8117 	mov	dpl,a
      002B89 EA               [12] 8118 	mov	a,r2
      002B8A 34s01            [12] 8119 	addc	a,#(_gsm_receive_buf >> 8)
      002B8C F5 83            [12] 8120 	mov	dph,a
      002B8E E0               [24] 8121 	movx	a,@dptr
      002B8F FA               [12] 8122 	mov	r2,a
      002B90 BA 43 02         [24] 8123 	cjne	r2,#0x43,01054$
      002B93 80 03            [24] 8124 	sjmp	01055$
      002B95                       8125 01054$:
      002B95 02r2Cr1A         [24] 8126 	ljmp	00159$
      002B98                       8127 01055$:
                                   8128 ;	include/gsm_serial.c:490: gsm_receive_buf[(gsm_receive_pointer+7)%13] =='+')){
      002B98 74 07            [12] 8129 	mov	a,#0x07
      002B9A 2B               [12] 8130 	add	a,r3
      002B9B F5 82            [12] 8131 	mov	dpl,a
      002B9D E4               [12] 8132 	clr	a
      002B9E 3C               [12] 8133 	addc	a,r4
      002B9F F5 83            [12] 8134 	mov	dph,a
      002BA1 75*00 0D         [24] 8135 	mov	__modsint_PARM_2,#0x0d
      002BA4 75*01 00         [24] 8136 	mov	(__modsint_PARM_2 + 1),#0x00
      002BA7 C0 17            [24] 8137 	push	ar7
      002BA9 C0 16            [24] 8138 	push	ar6
      002BAB C0 15            [24] 8139 	push	ar5
      002BAD 75 D0 00         [24] 8140 	mov	psw,#0x00
      002BB0 12r00r00         [24] 8141 	lcall	__modsint
      002BB3 75 D0 10         [24] 8142 	mov	psw,#0x10
      002BB6 AB 82            [24] 8143 	mov	r3,dpl
      002BB8 AC 83            [24] 8144 	mov	r4,dph
      002BBA D0 15            [24] 8145 	pop	ar5
      002BBC D0 16            [24] 8146 	pop	ar6
      002BBE D0 17            [24] 8147 	pop	ar7
      002BC0 EB               [12] 8148 	mov	a,r3
      002BC1 24r01            [12] 8149 	add	a,#_gsm_receive_buf
      002BC3 F5 82            [12] 8150 	mov	dpl,a
      002BC5 EC               [12] 8151 	mov	a,r4
      002BC6 34s01            [12] 8152 	addc	a,#(_gsm_receive_buf >> 8)
      002BC8 F5 83            [12] 8153 	mov	dph,a
      002BCA E0               [24] 8154 	movx	a,@dptr
      002BCB FC               [12] 8155 	mov	r4,a
      002BCC BC 2B 4B         [24] 8156 	cjne	r4,#0x2b,00159$
      002BCF                       8157 00158$:
                                   8158 ;	include/gsm_serial.c:491: co_cuoc_goi_toi = gsm_receive_buf[(gsm_receive_pointer+9)%13] =='L';
      002BCF 8F 13            [24] 8159 	mov	ar3,r7
      002BD1 7C 00            [12] 8160 	mov	r4,#0x00
      002BD3 74 09            [12] 8161 	mov	a,#0x09
      002BD5 2B               [12] 8162 	add	a,r3
      002BD6 F5 82            [12] 8163 	mov	dpl,a
      002BD8 E4               [12] 8164 	clr	a
      002BD9 3C               [12] 8165 	addc	a,r4
      002BDA F5 83            [12] 8166 	mov	dph,a
      002BDC 75*00 0D         [24] 8167 	mov	__modsint_PARM_2,#0x0d
                                   8168 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      002BDF 8C*01            [24] 8169 	mov	(__modsint_PARM_2 + 1),r4
      002BE1 75 D0 00         [24] 8170 	mov	psw,#0x00
      002BE4 12r00r00         [24] 8171 	lcall	__modsint
      002BE7 75 D0 10         [24] 8172 	mov	psw,#0x10
      002BEA AB 82            [24] 8173 	mov	r3,dpl
      002BEC AC 83            [24] 8174 	mov	r4,dph
      002BEE EB               [12] 8175 	mov	a,r3
      002BEF 24r01            [12] 8176 	add	a,#_gsm_receive_buf
      002BF1 F5 82            [12] 8177 	mov	dpl,a
      002BF3 EC               [12] 8178 	mov	a,r4
      002BF4 34s01            [12] 8179 	addc	a,#(_gsm_receive_buf >> 8)
      002BF6 F5 83            [12] 8180 	mov	dph,a
      002BF8 E0               [24] 8181 	movx	a,@dptr
      002BF9 FC               [12] 8182 	mov	r4,a
      002BFA BC 4C 03         [24] 8183 	cjne	r4,#0x4c,01058$
      002BFD D3               [12] 8184 	setb	c
      002BFE 80 01            [24] 8185 	sjmp	01059$
      002C00                       8186 01058$:
      002C00 C3               [12] 8187 	clr	c
      002C01                       8188 01059$:
                                   8189 ;	include/gsm_serial.c:492: if(!co_cuoc_goi_toi && sms_dang_xu_ly) break;
      002C01 92*04            [24] 8190 	mov	_co_cuoc_goi_toi,c
      002C03 40 06            [24] 8191 	jc	00144$
      002C05 30*0C 03         [24] 8192 	jnb	_sms_dang_xu_ly,01061$
      002C08 02r3Ar69         [24] 8193 	ljmp	00345$
      002C0B                       8194 01061$:
      002C0B                       8195 00144$:
                                   8196 ;	include/gsm_serial.c:495: phone_header = 0;
                                   8197 ;	assignBit
      002C0B C2*09            [12] 8198 	clr	_phone_header
                                   8199 ;	include/gsm_serial.c:496: phone_phu_so_sanh_that_bai = 0;
                                   8200 ;	assignBit
      002C0D C2*07            [12] 8201 	clr	_phone_phu_so_sanh_that_bai
                                   8202 ;	include/gsm_serial.c:497: phone_chinh_so_sanh_that_bai = 0;
                                   8203 ;	assignBit
      002C0F C2*06            [12] 8204 	clr	_phone_chinh_so_sanh_that_bai
                                   8205 ;	include/gsm_serial.c:498: gsm_serial_cmd = PHONE;
      002C11 90r00rFD         [24] 8206 	mov	dptr,#_gsm_serial_cmd
      002C14 74 03            [12] 8207 	mov	a,#0x03
      002C16 F0               [24] 8208 	movx	@dptr,a
      002C17 02r3Ar69         [24] 8209 	ljmp	00345$
      002C1A                       8210 00159$:
                                   8211 ;	include/gsm_serial.c:500: }else if(gsm_receive_buf[gsm_receive_pointer]=='K' && gsm_receive_buf[(gsm_receive_pointer+12)%13] =='O'){
      002C1A BE 4B 69         [24] 8212 	cjne	r6,#0x4b,00155$
      002C1D 8F 13            [24] 8213 	mov	ar3,r7
      002C1F 7C 00            [12] 8214 	mov	r4,#0x00
      002C21 74 0C            [12] 8215 	mov	a,#0x0c
      002C23 2B               [12] 8216 	add	a,r3
      002C24 F5 82            [12] 8217 	mov	dpl,a
      002C26 E4               [12] 8218 	clr	a
      002C27 3C               [12] 8219 	addc	a,r4
      002C28 F5 83            [12] 8220 	mov	dph,a
      002C2A 75*00 0D         [24] 8221 	mov	__modsint_PARM_2,#0x0d
                                   8222 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      002C2D 8C*01            [24] 8223 	mov	(__modsint_PARM_2 + 1),r4
      002C2F C0 17            [24] 8224 	push	ar7
      002C31 C0 16            [24] 8225 	push	ar6
      002C33 C0 15            [24] 8226 	push	ar5
      002C35 75 D0 00         [24] 8227 	mov	psw,#0x00
      002C38 12r00r00         [24] 8228 	lcall	__modsint
      002C3B 75 D0 10         [24] 8229 	mov	psw,#0x10
      002C3E AB 82            [24] 8230 	mov	r3,dpl
      002C40 AC 83            [24] 8231 	mov	r4,dph
      002C42 D0 15            [24] 8232 	pop	ar5
      002C44 D0 16            [24] 8233 	pop	ar6
      002C46 D0 17            [24] 8234 	pop	ar7
      002C48 EB               [12] 8235 	mov	a,r3
      002C49 24r01            [12] 8236 	add	a,#_gsm_receive_buf
      002C4B F5 82            [12] 8237 	mov	dpl,a
      002C4D EC               [12] 8238 	mov	a,r4
      002C4E 34s01            [12] 8239 	addc	a,#(_gsm_receive_buf >> 8)
      002C50 F5 83            [12] 8240 	mov	dph,a
      002C52 E0               [24] 8241 	movx	a,@dptr
      002C53 FC               [12] 8242 	mov	r4,a
      002C54 BC 4F 2F         [24] 8243 	cjne	r4,#0x4f,00155$
                                   8244 ;	include/gsm_serial.c:501: if(gsm_serial_cmd==CLK) sms_index = 0;
      002C57 BD 02 05         [24] 8245 	cjne	r5,#0x02,00147$
      002C5A 90r00rBA         [24] 8246 	mov	dptr,#_sms_index
      002C5D E4               [12] 8247 	clr	a
      002C5E F0               [24] 8248 	movx	@dptr,a
      002C5F                       8249 00147$:
                                   8250 ;	include/gsm_serial.c:502: gui_lenh_thanh_cong = !have_not;
      002C5F A2*2D            [12] 8251 	mov	c,_have_not
      002C61 B3               [12] 8252 	cpl	c
      002C62 92*2C            [24] 8253 	mov	_gui_lenh_thanh_cong,c
                                   8254 ;	include/gsm_serial.c:503: have_not = 0;
                                   8255 ;	assignBit
      002C64 C2*2D            [12] 8256 	clr	_have_not
                                   8257 ;	include/gsm_serial.c:504: if(sms_index){
      002C66 90r00rBA         [24] 8258 	mov	dptr,#_sms_index
      002C69 E0               [24] 8259 	movx	a,@dptr
      002C6A 70 03            [24] 8260 	jnz	01068$
      002C6C 02r3Ar69         [24] 8261 	ljmp	00345$
      002C6F                       8262 01068$:
                                   8263 ;	include/gsm_serial.c:505: sms_index = 0;
      002C6F 90r00rBA         [24] 8264 	mov	dptr,#_sms_index
      002C72 E4               [12] 8265 	clr	a
      002C73 F0               [24] 8266 	movx	@dptr,a
                                   8267 ;	include/gsm_serial.c:506: send_gsm_cmd("AT+CMGDA=\"DEL ALL\"\r");
      002C74 90r06r95         [24] 8268 	mov	dptr,#___str_68
      002C77 75 F0 80         [24] 8269 	mov	b,#0x80
      002C7A 75 D0 00         [24] 8270 	mov	psw,#0x00
      002C7D 12r00r00         [24] 8271 	lcall	_send_gsm_cmd
      002C80 75 D0 10         [24] 8272 	mov	psw,#0x10
      002C83 02r3Ar69         [24] 8273 	ljmp	00345$
      002C86                       8274 00155$:
                                   8275 ;	include/gsm_serial.c:510: }else if(gsm_receive_buf[gsm_receive_pointer]=='T' && gsm_receive_buf[(gsm_receive_pointer+12)%13] =='O' &&
      002C86 BE 54 02         [24] 8276 	cjne	r6,#0x54,01069$
      002C89 80 03            [24] 8277 	sjmp	01070$
      002C8B                       8278 01069$:
      002C8B 02r3Ar69         [24] 8279 	ljmp	00345$
      002C8E                       8280 01070$:
      002C8E 8F 14            [24] 8281 	mov	ar4,r7
      002C90 7D 00            [12] 8282 	mov	r5,#0x00
      002C92 74 0C            [12] 8283 	mov	a,#0x0c
      002C94 2C               [12] 8284 	add	a,r4
      002C95 F5 82            [12] 8285 	mov	dpl,a
      002C97 E4               [12] 8286 	clr	a
      002C98 3D               [12] 8287 	addc	a,r5
      002C99 F5 83            [12] 8288 	mov	dph,a
      002C9B 75*00 0D         [24] 8289 	mov	__modsint_PARM_2,#0x0d
                                   8290 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      002C9E 8D*01            [24] 8291 	mov	(__modsint_PARM_2 + 1),r5
      002CA0 C0 15            [24] 8292 	push	ar5
      002CA2 C0 14            [24] 8293 	push	ar4
      002CA4 75 D0 00         [24] 8294 	mov	psw,#0x00
      002CA7 12r00r00         [24] 8295 	lcall	__modsint
      002CAA 75 D0 10         [24] 8296 	mov	psw,#0x10
      002CAD AA 82            [24] 8297 	mov	r2,dpl
      002CAF AB 83            [24] 8298 	mov	r3,dph
      002CB1 D0 14            [24] 8299 	pop	ar4
      002CB3 D0 15            [24] 8300 	pop	ar5
      002CB5 EA               [12] 8301 	mov	a,r2
      002CB6 24r01            [12] 8302 	add	a,#_gsm_receive_buf
      002CB8 F5 82            [12] 8303 	mov	dpl,a
      002CBA EB               [12] 8304 	mov	a,r3
      002CBB 34s01            [12] 8305 	addc	a,#(_gsm_receive_buf >> 8)
      002CBD F5 83            [12] 8306 	mov	dph,a
      002CBF E0               [24] 8307 	movx	a,@dptr
      002CC0 FB               [12] 8308 	mov	r3,a
      002CC1 BB 4F 02         [24] 8309 	cjne	r3,#0x4f,01071$
      002CC4 80 03            [24] 8310 	sjmp	01072$
      002CC6                       8311 01071$:
      002CC6 02r3Ar69         [24] 8312 	ljmp	00345$
      002CC9                       8313 01072$:
                                   8314 ;	include/gsm_serial.c:511: gsm_receive_buf[(gsm_receive_pointer+11)%13] =='N'){
      002CC9 74 0B            [12] 8315 	mov	a,#0x0b
      002CCB 2C               [12] 8316 	add	a,r4
      002CCC F5 82            [12] 8317 	mov	dpl,a
      002CCE E4               [12] 8318 	clr	a
      002CCF 3D               [12] 8319 	addc	a,r5
      002CD0 F5 83            [12] 8320 	mov	dph,a
      002CD2 75*00 0D         [24] 8321 	mov	__modsint_PARM_2,#0x0d
      002CD5 75*01 00         [24] 8322 	mov	(__modsint_PARM_2 + 1),#0x00
      002CD8 75 D0 00         [24] 8323 	mov	psw,#0x00
      002CDB 12r00r00         [24] 8324 	lcall	__modsint
      002CDE 75 D0 10         [24] 8325 	mov	psw,#0x10
      002CE1 AC 82            [24] 8326 	mov	r4,dpl
      002CE3 AD 83            [24] 8327 	mov	r5,dph
      002CE5 EC               [12] 8328 	mov	a,r4
      002CE6 24r01            [12] 8329 	add	a,#_gsm_receive_buf
      002CE8 F5 82            [12] 8330 	mov	dpl,a
      002CEA ED               [12] 8331 	mov	a,r5
      002CEB 34s01            [12] 8332 	addc	a,#(_gsm_receive_buf >> 8)
      002CED F5 83            [12] 8333 	mov	dph,a
      002CEF E0               [24] 8334 	movx	a,@dptr
      002CF0 FD               [12] 8335 	mov	r5,a
      002CF1 BD 4E 02         [24] 8336 	cjne	r5,#0x4e,01073$
      002CF4 80 03            [24] 8337 	sjmp	01074$
      002CF6                       8338 01073$:
      002CF6 02r3Ar69         [24] 8339 	ljmp	00345$
      002CF9                       8340 01074$:
                                   8341 ;	include/gsm_serial.c:513: have_not = 1;
                                   8342 ;	assignBit
      002CF9 D2*2D            [12] 8343 	setb	_have_not
                                   8344 ;	include/gsm_serial.c:516: break;
      002CFB 02r3Ar69         [24] 8345 	ljmp	00345$
                                   8346 ;	include/gsm_serial.c:517: case CFUN1:
      002CFE                       8347 00191$:
                                   8348 ;	include/gsm_serial.c:518: if(gsm_receive_buf[gsm_receive_pointer]==' ' && gsm_receive_buf[(gsm_receive_pointer+12)%13] ==':' &&
      002CFE BE 20 02         [24] 8349 	cjne	r6,#0x20,01075$
      002D01 80 03            [24] 8350 	sjmp	01076$
      002D03                       8351 01075$:
      002D03 02r3Ar69         [24] 8352 	ljmp	00345$
      002D06                       8353 01076$:
      002D06 8F 14            [24] 8354 	mov	ar4,r7
      002D08 7D 00            [12] 8355 	mov	r5,#0x00
      002D0A 74 0C            [12] 8356 	mov	a,#0x0c
      002D0C 2C               [12] 8357 	add	a,r4
      002D0D F5 82            [12] 8358 	mov	dpl,a
      002D0F E4               [12] 8359 	clr	a
      002D10 3D               [12] 8360 	addc	a,r5
      002D11 F5 83            [12] 8361 	mov	dph,a
      002D13 75*00 0D         [24] 8362 	mov	__modsint_PARM_2,#0x0d
                                   8363 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      002D16 8D*01            [24] 8364 	mov	(__modsint_PARM_2 + 1),r5
      002D18 C0 15            [24] 8365 	push	ar5
      002D1A C0 14            [24] 8366 	push	ar4
      002D1C 75 D0 00         [24] 8367 	mov	psw,#0x00
      002D1F 12r00r00         [24] 8368 	lcall	__modsint
      002D22 75 D0 10         [24] 8369 	mov	psw,#0x10
      002D25 AA 82            [24] 8370 	mov	r2,dpl
      002D27 AB 83            [24] 8371 	mov	r3,dph
      002D29 D0 14            [24] 8372 	pop	ar4
      002D2B D0 15            [24] 8373 	pop	ar5
      002D2D EA               [12] 8374 	mov	a,r2
      002D2E 24r01            [12] 8375 	add	a,#_gsm_receive_buf
      002D30 F5 82            [12] 8376 	mov	dpl,a
      002D32 EB               [12] 8377 	mov	a,r3
      002D33 34s01            [12] 8378 	addc	a,#(_gsm_receive_buf >> 8)
      002D35 F5 83            [12] 8379 	mov	dph,a
      002D37 E0               [24] 8380 	movx	a,@dptr
      002D38 FB               [12] 8381 	mov	r3,a
      002D39 BB 3A 02         [24] 8382 	cjne	r3,#0x3a,01077$
      002D3C 80 03            [24] 8383 	sjmp	01078$
      002D3E                       8384 01077$:
      002D3E 02r3Ar69         [24] 8385 	ljmp	00345$
      002D41                       8386 01078$:
                                   8387 ;	include/gsm_serial.c:519: gsm_receive_buf[(gsm_receive_pointer+11)%13] =='Z' && gsm_receive_buf[(gsm_receive_pointer+10)%13] =='T' &&
      002D41 74 0B            [12] 8388 	mov	a,#0x0b
      002D43 2C               [12] 8389 	add	a,r4
      002D44 F5 82            [12] 8390 	mov	dpl,a
      002D46 E4               [12] 8391 	clr	a
      002D47 3D               [12] 8392 	addc	a,r5
      002D48 F5 83            [12] 8393 	mov	dph,a
      002D4A 75*00 0D         [24] 8394 	mov	__modsint_PARM_2,#0x0d
      002D4D 75*01 00         [24] 8395 	mov	(__modsint_PARM_2 + 1),#0x00
      002D50 C0 15            [24] 8396 	push	ar5
      002D52 C0 14            [24] 8397 	push	ar4
      002D54 75 D0 00         [24] 8398 	mov	psw,#0x00
      002D57 12r00r00         [24] 8399 	lcall	__modsint
      002D5A 75 D0 10         [24] 8400 	mov	psw,#0x10
      002D5D AA 82            [24] 8401 	mov	r2,dpl
      002D5F AB 83            [24] 8402 	mov	r3,dph
      002D61 D0 14            [24] 8403 	pop	ar4
      002D63 D0 15            [24] 8404 	pop	ar5
      002D65 EA               [12] 8405 	mov	a,r2
      002D66 24r01            [12] 8406 	add	a,#_gsm_receive_buf
      002D68 F5 82            [12] 8407 	mov	dpl,a
      002D6A EB               [12] 8408 	mov	a,r3
      002D6B 34s01            [12] 8409 	addc	a,#(_gsm_receive_buf >> 8)
      002D6D F5 83            [12] 8410 	mov	dph,a
      002D6F E0               [24] 8411 	movx	a,@dptr
      002D70 FB               [12] 8412 	mov	r3,a
      002D71 BB 5A 02         [24] 8413 	cjne	r3,#0x5a,01079$
      002D74 80 03            [24] 8414 	sjmp	01080$
      002D76                       8415 01079$:
      002D76 02r3Ar69         [24] 8416 	ljmp	00345$
      002D79                       8417 01080$:
      002D79 74 0A            [12] 8418 	mov	a,#0x0a
      002D7B 2C               [12] 8419 	add	a,r4
      002D7C F5 82            [12] 8420 	mov	dpl,a
      002D7E E4               [12] 8421 	clr	a
      002D7F 3D               [12] 8422 	addc	a,r5
      002D80 F5 83            [12] 8423 	mov	dph,a
      002D82 75*00 0D         [24] 8424 	mov	__modsint_PARM_2,#0x0d
      002D85 75*01 00         [24] 8425 	mov	(__modsint_PARM_2 + 1),#0x00
      002D88 C0 15            [24] 8426 	push	ar5
      002D8A C0 14            [24] 8427 	push	ar4
      002D8C 75 D0 00         [24] 8428 	mov	psw,#0x00
      002D8F 12r00r00         [24] 8429 	lcall	__modsint
      002D92 75 D0 10         [24] 8430 	mov	psw,#0x10
      002D95 AA 82            [24] 8431 	mov	r2,dpl
      002D97 AB 83            [24] 8432 	mov	r3,dph
      002D99 D0 14            [24] 8433 	pop	ar4
      002D9B D0 15            [24] 8434 	pop	ar5
      002D9D EA               [12] 8435 	mov	a,r2
      002D9E 24r01            [12] 8436 	add	a,#_gsm_receive_buf
      002DA0 F5 82            [12] 8437 	mov	dpl,a
      002DA2 EB               [12] 8438 	mov	a,r3
      002DA3 34s01            [12] 8439 	addc	a,#(_gsm_receive_buf >> 8)
      002DA5 F5 83            [12] 8440 	mov	dph,a
      002DA7 E0               [24] 8441 	movx	a,@dptr
      002DA8 FB               [12] 8442 	mov	r3,a
      002DA9 BB 54 02         [24] 8443 	cjne	r3,#0x54,01081$
      002DAC 80 03            [24] 8444 	sjmp	01082$
      002DAE                       8445 01081$:
      002DAE 02r3Ar69         [24] 8446 	ljmp	00345$
      002DB1                       8447 01082$:
                                   8448 ;	include/gsm_serial.c:520: gsm_receive_buf[(gsm_receive_pointer+9)%13] =='T' && gsm_receive_buf[(gsm_receive_pointer+8)%13] =='U' &&
      002DB1 74 09            [12] 8449 	mov	a,#0x09
      002DB3 2C               [12] 8450 	add	a,r4
      002DB4 F5 82            [12] 8451 	mov	dpl,a
      002DB6 E4               [12] 8452 	clr	a
      002DB7 3D               [12] 8453 	addc	a,r5
      002DB8 F5 83            [12] 8454 	mov	dph,a
      002DBA 75*00 0D         [24] 8455 	mov	__modsint_PARM_2,#0x0d
      002DBD 75*01 00         [24] 8456 	mov	(__modsint_PARM_2 + 1),#0x00
      002DC0 C0 15            [24] 8457 	push	ar5
      002DC2 C0 14            [24] 8458 	push	ar4
      002DC4 75 D0 00         [24] 8459 	mov	psw,#0x00
      002DC7 12r00r00         [24] 8460 	lcall	__modsint
      002DCA 75 D0 10         [24] 8461 	mov	psw,#0x10
      002DCD AA 82            [24] 8462 	mov	r2,dpl
      002DCF AB 83            [24] 8463 	mov	r3,dph
      002DD1 D0 14            [24] 8464 	pop	ar4
      002DD3 D0 15            [24] 8465 	pop	ar5
      002DD5 EA               [12] 8466 	mov	a,r2
      002DD6 24r01            [12] 8467 	add	a,#_gsm_receive_buf
      002DD8 F5 82            [12] 8468 	mov	dpl,a
      002DDA EB               [12] 8469 	mov	a,r3
      002DDB 34s01            [12] 8470 	addc	a,#(_gsm_receive_buf >> 8)
      002DDD F5 83            [12] 8471 	mov	dph,a
      002DDF E0               [24] 8472 	movx	a,@dptr
      002DE0 FB               [12] 8473 	mov	r3,a
      002DE1 BB 54 02         [24] 8474 	cjne	r3,#0x54,01083$
      002DE4 80 03            [24] 8475 	sjmp	01084$
      002DE6                       8476 01083$:
      002DE6 02r3Ar69         [24] 8477 	ljmp	00345$
      002DE9                       8478 01084$:
      002DE9 74 08            [12] 8479 	mov	a,#0x08
      002DEB 2C               [12] 8480 	add	a,r4
      002DEC F5 82            [12] 8481 	mov	dpl,a
      002DEE E4               [12] 8482 	clr	a
      002DEF 3D               [12] 8483 	addc	a,r5
      002DF0 F5 83            [12] 8484 	mov	dph,a
      002DF2 75*00 0D         [24] 8485 	mov	__modsint_PARM_2,#0x0d
      002DF5 75*01 00         [24] 8486 	mov	(__modsint_PARM_2 + 1),#0x00
      002DF8 C0 15            [24] 8487 	push	ar5
      002DFA C0 14            [24] 8488 	push	ar4
      002DFC 75 D0 00         [24] 8489 	mov	psw,#0x00
      002DFF 12r00r00         [24] 8490 	lcall	__modsint
      002E02 75 D0 10         [24] 8491 	mov	psw,#0x10
      002E05 AA 82            [24] 8492 	mov	r2,dpl
      002E07 AB 83            [24] 8493 	mov	r3,dph
      002E09 D0 14            [24] 8494 	pop	ar4
      002E0B D0 15            [24] 8495 	pop	ar5
      002E0D EA               [12] 8496 	mov	a,r2
      002E0E 24r01            [12] 8497 	add	a,#_gsm_receive_buf
      002E10 F5 82            [12] 8498 	mov	dpl,a
      002E12 EB               [12] 8499 	mov	a,r3
      002E13 34s01            [12] 8500 	addc	a,#(_gsm_receive_buf >> 8)
      002E15 F5 83            [12] 8501 	mov	dph,a
      002E17 E0               [24] 8502 	movx	a,@dptr
      002E18 FB               [12] 8503 	mov	r3,a
      002E19 BB 55 02         [24] 8504 	cjne	r3,#0x55,01085$
      002E1C 80 03            [24] 8505 	sjmp	01086$
      002E1E                       8506 01085$:
      002E1E 02r3Ar69         [24] 8507 	ljmp	00345$
      002E21                       8508 01086$:
                                   8509 ;	include/gsm_serial.c:521: gsm_receive_buf[(gsm_receive_pointer+7)%13] =='S' && gsm_receive_buf[(gsm_receive_pointer+6)%13] =='P' &&
      002E21 74 07            [12] 8510 	mov	a,#0x07
      002E23 2C               [12] 8511 	add	a,r4
      002E24 F5 82            [12] 8512 	mov	dpl,a
      002E26 E4               [12] 8513 	clr	a
      002E27 3D               [12] 8514 	addc	a,r5
      002E28 F5 83            [12] 8515 	mov	dph,a
      002E2A 75*00 0D         [24] 8516 	mov	__modsint_PARM_2,#0x0d
      002E2D 75*01 00         [24] 8517 	mov	(__modsint_PARM_2 + 1),#0x00
      002E30 C0 15            [24] 8518 	push	ar5
      002E32 C0 14            [24] 8519 	push	ar4
      002E34 75 D0 00         [24] 8520 	mov	psw,#0x00
      002E37 12r00r00         [24] 8521 	lcall	__modsint
      002E3A 75 D0 10         [24] 8522 	mov	psw,#0x10
      002E3D AA 82            [24] 8523 	mov	r2,dpl
      002E3F AB 83            [24] 8524 	mov	r3,dph
      002E41 D0 14            [24] 8525 	pop	ar4
      002E43 D0 15            [24] 8526 	pop	ar5
      002E45 EA               [12] 8527 	mov	a,r2
      002E46 24r01            [12] 8528 	add	a,#_gsm_receive_buf
      002E48 F5 82            [12] 8529 	mov	dpl,a
      002E4A EB               [12] 8530 	mov	a,r3
      002E4B 34s01            [12] 8531 	addc	a,#(_gsm_receive_buf >> 8)
      002E4D F5 83            [12] 8532 	mov	dph,a
      002E4F E0               [24] 8533 	movx	a,@dptr
      002E50 FB               [12] 8534 	mov	r3,a
      002E51 BB 53 02         [24] 8535 	cjne	r3,#0x53,01087$
      002E54 80 03            [24] 8536 	sjmp	01088$
      002E56                       8537 01087$:
      002E56 02r3Ar69         [24] 8538 	ljmp	00345$
      002E59                       8539 01088$:
      002E59 74 06            [12] 8540 	mov	a,#0x06
      002E5B 2C               [12] 8541 	add	a,r4
      002E5C F5 82            [12] 8542 	mov	dpl,a
      002E5E E4               [12] 8543 	clr	a
      002E5F 3D               [12] 8544 	addc	a,r5
      002E60 F5 83            [12] 8545 	mov	dph,a
      002E62 75*00 0D         [24] 8546 	mov	__modsint_PARM_2,#0x0d
      002E65 75*01 00         [24] 8547 	mov	(__modsint_PARM_2 + 1),#0x00
      002E68 C0 15            [24] 8548 	push	ar5
      002E6A C0 14            [24] 8549 	push	ar4
      002E6C 75 D0 00         [24] 8550 	mov	psw,#0x00
      002E6F 12r00r00         [24] 8551 	lcall	__modsint
      002E72 75 D0 10         [24] 8552 	mov	psw,#0x10
      002E75 AA 82            [24] 8553 	mov	r2,dpl
      002E77 AB 83            [24] 8554 	mov	r3,dph
      002E79 D0 14            [24] 8555 	pop	ar4
      002E7B D0 15            [24] 8556 	pop	ar5
      002E7D EA               [12] 8557 	mov	a,r2
      002E7E 24r01            [12] 8558 	add	a,#_gsm_receive_buf
      002E80 F5 82            [12] 8559 	mov	dpl,a
      002E82 EB               [12] 8560 	mov	a,r3
      002E83 34s01            [12] 8561 	addc	a,#(_gsm_receive_buf >> 8)
      002E85 F5 83            [12] 8562 	mov	dph,a
      002E87 E0               [24] 8563 	movx	a,@dptr
      002E88 FB               [12] 8564 	mov	r3,a
      002E89 BB 50 02         [24] 8565 	cjne	r3,#0x50,01089$
      002E8C 80 03            [24] 8566 	sjmp	01090$
      002E8E                       8567 01089$:
      002E8E 02r3Ar69         [24] 8568 	ljmp	00345$
      002E91                       8569 01090$:
                                   8570 ;	include/gsm_serial.c:522: gsm_receive_buf[(gsm_receive_pointer+5)%13] =='*'){
      002E91 8C 82            [24] 8571 	mov	dpl,r4
      002E93 8D 83            [24] 8572 	mov	dph,r5
      002E95 A3               [24] 8573 	inc	dptr
      002E96 A3               [24] 8574 	inc	dptr
      002E97 A3               [24] 8575 	inc	dptr
      002E98 A3               [24] 8576 	inc	dptr
      002E99 A3               [24] 8577 	inc	dptr
      002E9A 75*00 0D         [24] 8578 	mov	__modsint_PARM_2,#0x0d
      002E9D 75*01 00         [24] 8579 	mov	(__modsint_PARM_2 + 1),#0x00
      002EA0 75 D0 00         [24] 8580 	mov	psw,#0x00
      002EA3 12r00r00         [24] 8581 	lcall	__modsint
      002EA6 75 D0 10         [24] 8582 	mov	psw,#0x10
      002EA9 AC 82            [24] 8583 	mov	r4,dpl
      002EAB AD 83            [24] 8584 	mov	r5,dph
      002EAD EC               [12] 8585 	mov	a,r4
      002EAE 24r01            [12] 8586 	add	a,#_gsm_receive_buf
      002EB0 F5 82            [12] 8587 	mov	dpl,a
      002EB2 ED               [12] 8588 	mov	a,r5
      002EB3 34s01            [12] 8589 	addc	a,#(_gsm_receive_buf >> 8)
      002EB5 F5 83            [12] 8590 	mov	dph,a
      002EB7 E0               [24] 8591 	movx	a,@dptr
      002EB8 FD               [12] 8592 	mov	r5,a
      002EB9 BD 2A 02         [24] 8593 	cjne	r5,#0x2a,01091$
      002EBC 80 03            [24] 8594 	sjmp	01092$
      002EBE                       8595 01091$:
      002EBE 02r3Ar69         [24] 8596 	ljmp	00345$
      002EC1                       8597 01092$:
                                   8598 ;	include/gsm_serial.c:524: date_pointer = 0;
      002EC1 90r01r00         [24] 8599 	mov	dptr,#_date_pointer
      002EC4 E4               [12] 8600 	clr	a
      002EC5 F0               [24] 8601 	movx	@dptr,a
                                   8602 ;	include/gsm_serial.c:525: gsm_serial_cmd = CFUN;
      002EC6 90r00rFD         [24] 8603 	mov	dptr,#_gsm_serial_cmd
      002EC9 04               [12] 8604 	inc	a
      002ECA F0               [24] 8605 	movx	@dptr,a
                                   8606 ;	include/gsm_serial.c:528: break;
      002ECB 02r3Ar69         [24] 8607 	ljmp	00345$
                                   8608 ;	include/gsm_serial.c:530: case CFUN:
      002ECE                       8609 00202$:
                                   8610 ;	include/gsm_serial.c:531: if(SBUF!='\r' && date_pointer<30)
      002ECE 74 0D            [12] 8611 	mov	a,#0x0d
      002ED0 B5 99 02         [24] 8612 	cjne	a,_SBUF,01093$
      002ED3 80 20            [24] 8613 	sjmp	00204$
      002ED5                       8614 01093$:
      002ED5 90r01r00         [24] 8615 	mov	dptr,#_date_pointer
      002ED8 E0               [24] 8616 	movx	a,@dptr
      002ED9 FD               [12] 8617 	mov	r5,a
      002EDA BD 1E 00         [24] 8618 	cjne	r5,#0x1e,01094$
      002EDD                       8619 01094$:
      002EDD 50 16            [24] 8620 	jnc	00204$
                                   8621 ;	include/gsm_serial.c:532: date_str[date_pointer++] = SBUF;
      002EDF 90r01r00         [24] 8622 	mov	dptr,#_date_pointer
      002EE2 ED               [12] 8623 	mov	a,r5
      002EE3 04               [12] 8624 	inc	a
      002EE4 F0               [24] 8625 	movx	@dptr,a
      002EE5 ED               [12] 8626 	mov	a,r5
      002EE6 24r10            [12] 8627 	add	a,#_date_str
      002EE8 F5 82            [12] 8628 	mov	dpl,a
      002EEA E4               [12] 8629 	clr	a
      002EEB 34s01            [12] 8630 	addc	a,#(_date_str >> 8)
      002EED F5 83            [12] 8631 	mov	dph,a
      002EEF E5 99            [12] 8632 	mov	a,_SBUF
      002EF1 F0               [24] 8633 	movx	@dptr,a
      002EF2 02r3Ar69         [24] 8634 	ljmp	00345$
      002EF5                       8635 00204$:
                                   8636 ;	include/gsm_serial.c:534: date_str[date_pointer-1] = 0;
      002EF5 90r01r00         [24] 8637 	mov	dptr,#_date_pointer
      002EF8 E0               [24] 8638 	movx	a,@dptr
      002EF9 FD               [12] 8639 	mov	r5,a
      002EFA 1D               [12] 8640 	dec	r5
      002EFB ED               [12] 8641 	mov	a,r5
      002EFC 33               [12] 8642 	rlc	a
      002EFD 95 E0            [12] 8643 	subb	a,acc
      002EFF FC               [12] 8644 	mov	r4,a
      002F00 ED               [12] 8645 	mov	a,r5
      002F01 24r10            [12] 8646 	add	a,#_date_str
      002F03 F5 82            [12] 8647 	mov	dpl,a
      002F05 EC               [12] 8648 	mov	a,r4
      002F06 34s01            [12] 8649 	addc	a,#(_date_str >> 8)
      002F08 F5 83            [12] 8650 	mov	dph,a
      002F0A E4               [12] 8651 	clr	a
      002F0B F0               [24] 8652 	movx	@dptr,a
                                   8653 ;	include/gsm_serial.c:535: have_time = gsm_serial_cmd;
      002F0C 90r00rFD         [24] 8654 	mov	dptr,#_gsm_serial_cmd
      002F0F E0               [24] 8655 	movx	a,@dptr
      002F10 90r00rFE         [24] 8656 	mov	dptr,#_have_time
      002F13 F0               [24] 8657 	movx	@dptr,a
                                   8658 ;	include/gsm_serial.c:536: gsm_serial_cmd = 0;
      002F14 90r00rFD         [24] 8659 	mov	dptr,#_gsm_serial_cmd
      002F17 E4               [12] 8660 	clr	a
      002F18 F0               [24] 8661 	movx	@dptr,a
                                   8662 ;	include/gsm_serial.c:537: gui_lenh_thanh_cong = 1;
                                   8663 ;	assignBit
      002F19 D2*2C            [12] 8664 	setb	_gui_lenh_thanh_cong
                                   8665 ;	include/gsm_serial.c:539: break;
      002F1B 02r3Ar69         [24] 8666 	ljmp	00345$
                                   8667 ;	include/gsm_serial.c:540: case PHONE:
      002F1E                       8668 00207$:
                                   8669 ;	include/gsm_serial.c:543: if(phone_header){
      002F1E 20*09 03         [24] 8670 	jb	_phone_header,01096$
      002F21 02r2FrA1         [24] 8671 	ljmp	00240$
      002F24                       8672 01096$:
                                   8673 ;	include/gsm_serial.c:544: if(!sms_index){
      002F24 90r00rBA         [24] 8674 	mov	dptr,#_sms_index
      002F27 E0               [24] 8675 	movx	a,@dptr
      002F28 FD               [12] 8676 	mov	r5,a
      002F29 70 23            [24] 8677 	jnz	00227$
                                   8678 ;	include/gsm_serial.c:545: if(SBUF=='\r'){
      002F2B 74 0D            [12] 8679 	mov	a,#0x0d
      002F2D B5 99 02         [24] 8680 	cjne	a,_SBUF,01098$
      002F30 80 03            [24] 8681 	sjmp	01099$
      002F32                       8682 01098$:
      002F32 02r3Ar69         [24] 8683 	ljmp	00345$
      002F35                       8684 01099$:
                                   8685 ;	include/gsm_serial.c:546: if(co_cuoc_goi_toi){
      002F35 30*04 0D         [24] 8686 	jnb	_co_cuoc_goi_toi,00209$
                                   8687 ;	include/gsm_serial.c:547: delay_cuoc_goi_ke_tiep = 2;
      002F38 90r00rB9         [24] 8688 	mov	dptr,#_delay_cuoc_goi_ke_tiep
      002F3B 74 02            [12] 8689 	mov	a,#0x02
      002F3D F0               [24] 8690 	movx	@dptr,a
                                   8691 ;	include/gsm_serial.c:548: so_lan_goi_dien++;
      002F3E 90r00rB8         [24] 8692 	mov	dptr,#_so_lan_goi_dien
      002F41 E0               [24] 8693 	movx	a,@dptr
      002F42 24 01            [12] 8694 	add	a,#0x01
      002F44 F0               [24] 8695 	movx	@dptr,a
      002F45                       8696 00209$:
                                   8697 ;	include/gsm_serial.c:550: gsm_serial_cmd = CMD;
      002F45 90r00rFD         [24] 8698 	mov	dptr,#_gsm_serial_cmd
      002F48 74 05            [12] 8699 	mov	a,#0x05
      002F4A F0               [24] 8700 	movx	@dptr,a
      002F4B 02r3Ar69         [24] 8701 	ljmp	00345$
      002F4E                       8702 00227$:
                                   8703 ;	include/gsm_serial.c:554: else if(sms_index==PHONE_LENGTH && gsm_SBUF == '"') {/*SMS buoc 5: neu tat ca chu so dt deu trung chuyen qua tim lenh */
      002F4E BD 0A 0D         [24] 8704 	cjne	r5,#0x0a,00223$
      002F51 74 22            [12] 8705 	mov	a,#0x22
      002F53 B5 99 08         [24] 8706 	cjne	a,_SBUF,00223$
                                   8707 ;	include/gsm_serial.c:555: sms_index = 0;
      002F56 90r00rBA         [24] 8708 	mov	dptr,#_sms_index
      002F59 E4               [12] 8709 	clr	a
      002F5A F0               [24] 8710 	movx	@dptr,a
      002F5B 02r3Ar69         [24] 8711 	ljmp	00345$
      002F5E                       8712 00223$:
                                   8713 ;	include/gsm_serial.c:560: if(!phone_chinh_so_sanh_that_bai && phone_chinh[sms_index] != gsm_SBUF)phone_chinh_so_sanh_that_bai = 1;
      002F5E 20*06 13         [24] 8714 	jb	_phone_chinh_so_sanh_that_bai,00213$
      002F61 ED               [12] 8715 	mov	a,r5
      002F62 24r00            [12] 8716 	add	a,#_phone_chinh
      002F64 F5 82            [12] 8717 	mov	dpl,a
      002F66 E4               [12] 8718 	clr	a
      002F67 34s00            [12] 8719 	addc	a,#(_phone_chinh >> 8)
      002F69 F5 83            [12] 8720 	mov	dph,a
      002F6B E0               [24] 8721 	movx	a,@dptr
      002F6C FC               [12] 8722 	mov	r4,a
      002F6D B5 99 02         [24] 8723 	cjne	a,_SBUF,01106$
      002F70 80 02            [24] 8724 	sjmp	00213$
      002F72                       8725 01106$:
                                   8726 ;	assignBit
      002F72 D2*06            [12] 8727 	setb	_phone_chinh_so_sanh_that_bai
      002F74                       8728 00213$:
                                   8729 ;	include/gsm_serial.c:561: if(!bat_phone_phu || (!phone_phu_so_sanh_that_bai && eep_phonephu[sms_index] != gsm_SBUF))phone_phu_so_sanh_that_bai = 1;
      002F74 30*08 0E         [24] 8730 	jnb	_bat_phone_phu,00215$
      002F77 20*07 0D         [24] 8731 	jb	_phone_phu_so_sanh_that_bai,00216$
      002F7A ED               [12] 8732 	mov	a,r5
      002F7B 90 F0 11         [24] 8733 	mov	dptr,#_eep_phonephu
      002F7E 93               [24] 8734 	movc	a,@a+dptr
      002F7F FC               [12] 8735 	mov	r4,a
      002F80 B5 99 02         [24] 8736 	cjne	a,_SBUF,01109$
      002F83 80 02            [24] 8737 	sjmp	00216$
      002F85                       8738 01109$:
      002F85                       8739 00215$:
                                   8740 ;	assignBit
      002F85 D2*07            [12] 8741 	setb	_phone_phu_so_sanh_that_bai
      002F87                       8742 00216$:
                                   8743 ;	include/gsm_serial.c:562: sms_index++;
      002F87 90r00rBA         [24] 8744 	mov	dptr,#_sms_index
      002F8A ED               [12] 8745 	mov	a,r5
      002F8B 04               [12] 8746 	inc	a
      002F8C F0               [24] 8747 	movx	@dptr,a
                                   8748 ;	include/gsm_serial.c:563: if(phone_chinh_so_sanh_that_bai && phone_phu_so_sanh_that_bai) gsm_serial_cmd = NORMAL;
      002F8D 20*06 03         [24] 8749 	jb	_phone_chinh_so_sanh_that_bai,01110$
      002F90 02r3Ar69         [24] 8750 	ljmp	00345$
      002F93                       8751 01110$:
      002F93 20*07 03         [24] 8752 	jb	_phone_phu_so_sanh_that_bai,01111$
      002F96 02r3Ar69         [24] 8753 	ljmp	00345$
      002F99                       8754 01111$:
      002F99 90r00rFD         [24] 8755 	mov	dptr,#_gsm_serial_cmd
      002F9C E4               [12] 8756 	clr	a
      002F9D F0               [24] 8757 	movx	@dptr,a
      002F9E 02r3Ar69         [24] 8758 	ljmp	00345$
      002FA1                       8759 00240$:
                                   8760 ;	include/gsm_serial.c:569: if((co_cuoc_goi_toi && gsm_receive_buf[gsm_receive_pointer]=='0' && gsm_receive_buf[(gsm_receive_pointer+12)%13] =='"') || (gsm_receive_buf[gsm_receive_pointer]=='4' && gsm_receive_buf[(gsm_receive_pointer+12)%13] =='8' &&
      002FA1 30*04 3C         [24] 8761 	jnb	_co_cuoc_goi_toi,00236$
      002FA4 BE 30 39         [24] 8762 	cjne	r6,#0x30,00236$
      002FA7 8F 14            [24] 8763 	mov	ar4,r7
      002FA9 7D 00            [12] 8764 	mov	r5,#0x00
      002FAB 74 0C            [12] 8765 	mov	a,#0x0c
      002FAD 2C               [12] 8766 	add	a,r4
      002FAE F5 82            [12] 8767 	mov	dpl,a
      002FB0 E4               [12] 8768 	clr	a
      002FB1 3D               [12] 8769 	addc	a,r5
      002FB2 F5 83            [12] 8770 	mov	dph,a
      002FB4 75*00 0D         [24] 8771 	mov	__modsint_PARM_2,#0x0d
                                   8772 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      002FB7 8D*01            [24] 8773 	mov	(__modsint_PARM_2 + 1),r5
      002FB9 C0 17            [24] 8774 	push	ar7
      002FBB C0 16            [24] 8775 	push	ar6
      002FBD 75 D0 00         [24] 8776 	mov	psw,#0x00
      002FC0 12r00r00         [24] 8777 	lcall	__modsint
      002FC3 75 D0 10         [24] 8778 	mov	psw,#0x10
      002FC6 AC 82            [24] 8779 	mov	r4,dpl
      002FC8 AD 83            [24] 8780 	mov	r5,dph
      002FCA D0 16            [24] 8781 	pop	ar6
      002FCC D0 17            [24] 8782 	pop	ar7
      002FCE EC               [12] 8783 	mov	a,r4
      002FCF 24r01            [12] 8784 	add	a,#_gsm_receive_buf
      002FD1 F5 82            [12] 8785 	mov	dpl,a
      002FD3 ED               [12] 8786 	mov	a,r5
      002FD4 34s01            [12] 8787 	addc	a,#(_gsm_receive_buf >> 8)
      002FD6 F5 83            [12] 8788 	mov	dph,a
      002FD8 E0               [24] 8789 	movx	a,@dptr
      002FD9 FD               [12] 8790 	mov	r5,a
      002FDA BD 22 03         [24] 8791 	cjne	r5,#0x22,01115$
      002FDD 02r30r7C         [24] 8792 	ljmp	00229$
      002FE0                       8793 01115$:
      002FE0                       8794 00236$:
      002FE0 BE 34 02         [24] 8795 	cjne	r6,#0x34,01116$
      002FE3 80 03            [24] 8796 	sjmp	01117$
      002FE5                       8797 01116$:
      002FE5 02r30r84         [24] 8798 	ljmp	00230$
      002FE8                       8799 01117$:
      002FE8 8F 14            [24] 8800 	mov	ar4,r7
      002FEA 7D 00            [12] 8801 	mov	r5,#0x00
      002FEC 74 0C            [12] 8802 	mov	a,#0x0c
      002FEE 2C               [12] 8803 	add	a,r4
      002FEF F5 82            [12] 8804 	mov	dpl,a
      002FF1 E4               [12] 8805 	clr	a
      002FF2 3D               [12] 8806 	addc	a,r5
      002FF3 F5 83            [12] 8807 	mov	dph,a
      002FF5 75*00 0D         [24] 8808 	mov	__modsint_PARM_2,#0x0d
                                   8809 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      002FF8 8D*01            [24] 8810 	mov	(__modsint_PARM_2 + 1),r5
      002FFA C0 15            [24] 8811 	push	ar5
      002FFC C0 14            [24] 8812 	push	ar4
      002FFE 75 D0 00         [24] 8813 	mov	psw,#0x00
      003001 12r00r00         [24] 8814 	lcall	__modsint
      003004 75 D0 10         [24] 8815 	mov	psw,#0x10
      003007 AA 82            [24] 8816 	mov	r2,dpl
      003009 AB 83            [24] 8817 	mov	r3,dph
      00300B D0 14            [24] 8818 	pop	ar4
      00300D D0 15            [24] 8819 	pop	ar5
      00300F EA               [12] 8820 	mov	a,r2
      003010 24r01            [12] 8821 	add	a,#_gsm_receive_buf
      003012 F5 82            [12] 8822 	mov	dpl,a
      003014 EB               [12] 8823 	mov	a,r3
      003015 34s01            [12] 8824 	addc	a,#(_gsm_receive_buf >> 8)
      003017 F5 83            [12] 8825 	mov	dph,a
      003019 E0               [24] 8826 	movx	a,@dptr
      00301A FB               [12] 8827 	mov	r3,a
      00301B BB 38 66         [24] 8828 	cjne	r3,#0x38,00230$
                                   8829 ;	include/gsm_serial.c:570: gsm_receive_buf[(gsm_receive_pointer+11)%13] =='+' && gsm_receive_buf[(gsm_receive_pointer+10)%13] =='"')){
      00301E 74 0B            [12] 8830 	mov	a,#0x0b
      003020 2C               [12] 8831 	add	a,r4
      003021 F5 82            [12] 8832 	mov	dpl,a
      003023 E4               [12] 8833 	clr	a
      003024 3D               [12] 8834 	addc	a,r5
      003025 F5 83            [12] 8835 	mov	dph,a
      003027 75*00 0D         [24] 8836 	mov	__modsint_PARM_2,#0x0d
      00302A 75*01 00         [24] 8837 	mov	(__modsint_PARM_2 + 1),#0x00
      00302D C0 15            [24] 8838 	push	ar5
      00302F C0 14            [24] 8839 	push	ar4
      003031 75 D0 00         [24] 8840 	mov	psw,#0x00
      003034 12r00r00         [24] 8841 	lcall	__modsint
      003037 75 D0 10         [24] 8842 	mov	psw,#0x10
      00303A AA 82            [24] 8843 	mov	r2,dpl
      00303C AB 83            [24] 8844 	mov	r3,dph
      00303E D0 14            [24] 8845 	pop	ar4
      003040 D0 15            [24] 8846 	pop	ar5
      003042 EA               [12] 8847 	mov	a,r2
      003043 24r01            [12] 8848 	add	a,#_gsm_receive_buf
      003045 F5 82            [12] 8849 	mov	dpl,a
      003047 EB               [12] 8850 	mov	a,r3
      003048 34s01            [12] 8851 	addc	a,#(_gsm_receive_buf >> 8)
      00304A F5 83            [12] 8852 	mov	dph,a
      00304C E0               [24] 8853 	movx	a,@dptr
      00304D FB               [12] 8854 	mov	r3,a
      00304E BB 2B 33         [24] 8855 	cjne	r3,#0x2b,00230$
      003051 74 0A            [12] 8856 	mov	a,#0x0a
      003053 2C               [12] 8857 	add	a,r4
      003054 F5 82            [12] 8858 	mov	dpl,a
      003056 E4               [12] 8859 	clr	a
      003057 3D               [12] 8860 	addc	a,r5
      003058 F5 83            [12] 8861 	mov	dph,a
      00305A 75*00 0D         [24] 8862 	mov	__modsint_PARM_2,#0x0d
      00305D 75*01 00         [24] 8863 	mov	(__modsint_PARM_2 + 1),#0x00
      003060 75 D0 00         [24] 8864 	mov	psw,#0x00
      003063 12r00r00         [24] 8865 	lcall	__modsint
      003066 75 D0 10         [24] 8866 	mov	psw,#0x10
      003069 AC 82            [24] 8867 	mov	r4,dpl
      00306B AD 83            [24] 8868 	mov	r5,dph
      00306D EC               [12] 8869 	mov	a,r4
      00306E 24r01            [12] 8870 	add	a,#_gsm_receive_buf
      003070 F5 82            [12] 8871 	mov	dpl,a
      003072 ED               [12] 8872 	mov	a,r5
      003073 34s01            [12] 8873 	addc	a,#(_gsm_receive_buf >> 8)
      003075 F5 83            [12] 8874 	mov	dph,a
      003077 E0               [24] 8875 	movx	a,@dptr
      003078 FD               [12] 8876 	mov	r5,a
      003079 BD 22 08         [24] 8877 	cjne	r5,#0x22,00230$
      00307C                       8878 00229$:
                                   8879 ;	include/gsm_serial.c:571: phone_header = 1;
                                   8880 ;	assignBit
      00307C D2*09            [12] 8881 	setb	_phone_header
                                   8882 ;	include/gsm_serial.c:572: sms_index = 1;
      00307E 90r00rBA         [24] 8883 	mov	dptr,#_sms_index
      003081 74 01            [12] 8884 	mov	a,#0x01
      003083 F0               [24] 8885 	movx	@dptr,a
      003084                       8886 00230$:
                                   8887 ;	include/gsm_serial.c:574: if(SBUF=='\r') gsm_serial_cmd = NORMAL;
      003084 74 0D            [12] 8888 	mov	a,#0x0d
      003086 B5 99 02         [24] 8889 	cjne	a,_SBUF,01124$
      003089 80 03            [24] 8890 	sjmp	01125$
      00308B                       8891 01124$:
      00308B 02r3Ar69         [24] 8892 	ljmp	00345$
      00308E                       8893 01125$:
      00308E 90r00rFD         [24] 8894 	mov	dptr,#_gsm_serial_cmd
      003091 E4               [12] 8895 	clr	a
      003092 F0               [24] 8896 	movx	@dptr,a
                                   8897 ;	include/gsm_serial.c:576: break;
      003093 02r3Ar69         [24] 8898 	ljmp	00345$
                                   8899 ;	include/gsm_serial.c:577: case CMD:/*SMS buoc 7: tim duoc pin chinh xac tien hanh lay lenh trong tin nhan
      003096                       8900 00242$:
                                   8901 ;	include/gsm_serial.c:580: if(pin_chinh_xac){
      003096 30*0B 3F         [24] 8902 	jnb	_pin_chinh_xac,00251$
                                   8903 ;	include/gsm_serial.c:582: if(SBUF!=';' && SBUF!='\r' && sms_index<160){
      003099 74 3B            [12] 8904 	mov	a,#0x3b
      00309B B5 99 02         [24] 8905 	cjne	a,_SBUF,01127$
      00309E 80 27            [24] 8906 	sjmp	00244$
      0030A0                       8907 01127$:
      0030A0 74 0D            [12] 8908 	mov	a,#0x0d
      0030A2 B5 99 02         [24] 8909 	cjne	a,_SBUF,01128$
      0030A5 80 20            [24] 8910 	sjmp	00244$
      0030A7                       8911 01128$:
      0030A7 90r00rBA         [24] 8912 	mov	dptr,#_sms_index
      0030AA E0               [24] 8913 	movx	a,@dptr
      0030AB FD               [12] 8914 	mov	r5,a
      0030AC BD A0 00         [24] 8915 	cjne	r5,#0xa0,01129$
      0030AF                       8916 01129$:
      0030AF 50 16            [24] 8917 	jnc	00244$
                                   8918 ;	include/gsm_serial.c:584: lenh_sms[sms_index++] = SBUF;    
      0030B1 90r00rBA         [24] 8919 	mov	dptr,#_sms_index
      0030B4 ED               [12] 8920 	mov	a,r5
      0030B5 04               [12] 8921 	inc	a
      0030B6 F0               [24] 8922 	movx	@dptr,a
      0030B7 ED               [12] 8923 	mov	a,r5
      0030B8 24r16            [12] 8924 	add	a,#_lenh_sms
      0030BA F5 82            [12] 8925 	mov	dpl,a
      0030BC E4               [12] 8926 	clr	a
      0030BD 34s00            [12] 8927 	addc	a,#(_lenh_sms >> 8)
      0030BF F5 83            [12] 8928 	mov	dph,a
      0030C1 E5 99            [12] 8929 	mov	a,_SBUF
      0030C3 F0               [24] 8930 	movx	@dptr,a
      0030C4 02r3Ar69         [24] 8931 	ljmp	00345$
      0030C7                       8932 00244$:
                                   8933 ;	include/gsm_serial.c:587: sms_index = 0;
      0030C7 90r00rBA         [24] 8934 	mov	dptr,#_sms_index
      0030CA E4               [12] 8935 	clr	a
      0030CB F0               [24] 8936 	movx	@dptr,a
                                   8937 ;	include/gsm_serial.c:588: pin_chinh_xac = 0;
                                   8938 ;	assignBit
      0030CC C2*0B            [12] 8939 	clr	_pin_chinh_xac
                                   8940 ;	include/gsm_serial.c:589: gsm_serial_cmd = NORMAL;
      0030CE 90r00rFD         [24] 8941 	mov	dptr,#_gsm_serial_cmd
      0030D1 E4               [12] 8942 	clr	a
      0030D2 F0               [24] 8943 	movx	@dptr,a
                                   8944 ;	include/gsm_serial.c:590: sms_dang_xu_ly = 1;
                                   8945 ;	assignBit
      0030D3 D2*0C            [12] 8946 	setb	_sms_dang_xu_ly
      0030D5 02r3Ar69         [24] 8947 	ljmp	00345$
      0030D8                       8948 00251$:
                                   8949 ;	include/gsm_serial.c:594: pin_chinh_xac = gsm_receive_buf[gsm_receive_pointer]==',' && gsm_receive_buf[(gsm_receive_pointer+12)%13] =='C' &&
      0030D8 BE 2C 02         [24] 8950 	cjne	r6,#0x2c,01131$
      0030DB 80 03            [24] 8951 	sjmp	01132$
      0030DD                       8952 01131$:
      0030DD 02r31rE6         [24] 8953 	ljmp	00352$
      0030E0                       8954 01132$:
      0030E0 8F 14            [24] 8955 	mov	ar4,r7
      0030E2 7D 00            [12] 8956 	mov	r5,#0x00
      0030E4 74 0C            [12] 8957 	mov	a,#0x0c
      0030E6 2C               [12] 8958 	add	a,r4
      0030E7 F5 82            [12] 8959 	mov	dpl,a
      0030E9 E4               [12] 8960 	clr	a
      0030EA 3D               [12] 8961 	addc	a,r5
      0030EB F5 83            [12] 8962 	mov	dph,a
      0030ED 75*00 0D         [24] 8963 	mov	__modsint_PARM_2,#0x0d
                                   8964 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0030F0 8D*01            [24] 8965 	mov	(__modsint_PARM_2 + 1),r5
      0030F2 C0 15            [24] 8966 	push	ar5
      0030F4 C0 14            [24] 8967 	push	ar4
      0030F6 75 D0 00         [24] 8968 	mov	psw,#0x00
      0030F9 12r00r00         [24] 8969 	lcall	__modsint
      0030FC 75 D0 10         [24] 8970 	mov	psw,#0x10
      0030FF AA 82            [24] 8971 	mov	r2,dpl
      003101 AB 83            [24] 8972 	mov	r3,dph
      003103 D0 14            [24] 8973 	pop	ar4
      003105 D0 15            [24] 8974 	pop	ar5
      003107 EA               [12] 8975 	mov	a,r2
      003108 24r01            [12] 8976 	add	a,#_gsm_receive_buf
      00310A F5 82            [12] 8977 	mov	dpl,a
      00310C EB               [12] 8978 	mov	a,r3
      00310D 34s01            [12] 8979 	addc	a,#(_gsm_receive_buf >> 8)
      00310F F5 83            [12] 8980 	mov	dph,a
      003111 E0               [24] 8981 	movx	a,@dptr
      003112 FB               [12] 8982 	mov	r3,a
      003113 BB 43 02         [24] 8983 	cjne	r3,#0x43,01133$
      003116 80 03            [24] 8984 	sjmp	01134$
      003118                       8985 01133$:
      003118 02r31rE6         [24] 8986 	ljmp	00352$
      00311B                       8987 01134$:
                                   8988 ;	include/gsm_serial.c:595: gsm_receive_buf[(gsm_receive_pointer+11)%13] =='U' && gsm_receive_buf[(gsm_receive_pointer+10)%13] =='D' &&
      00311B 74 0B            [12] 8989 	mov	a,#0x0b
      00311D 2C               [12] 8990 	add	a,r4
      00311E F5 82            [12] 8991 	mov	dpl,a
      003120 E4               [12] 8992 	clr	a
      003121 3D               [12] 8993 	addc	a,r5
      003122 F5 83            [12] 8994 	mov	dph,a
      003124 75*00 0D         [24] 8995 	mov	__modsint_PARM_2,#0x0d
      003127 75*01 00         [24] 8996 	mov	(__modsint_PARM_2 + 1),#0x00
      00312A C0 15            [24] 8997 	push	ar5
      00312C C0 14            [24] 8998 	push	ar4
      00312E 75 D0 00         [24] 8999 	mov	psw,#0x00
      003131 12r00r00         [24] 9000 	lcall	__modsint
      003134 75 D0 10         [24] 9001 	mov	psw,#0x10
      003137 AA 82            [24] 9002 	mov	r2,dpl
      003139 AB 83            [24] 9003 	mov	r3,dph
      00313B D0 14            [24] 9004 	pop	ar4
      00313D D0 15            [24] 9005 	pop	ar5
      00313F EA               [12] 9006 	mov	a,r2
      003140 24r01            [12] 9007 	add	a,#_gsm_receive_buf
      003142 F5 82            [12] 9008 	mov	dpl,a
      003144 EB               [12] 9009 	mov	a,r3
      003145 34s01            [12] 9010 	addc	a,#(_gsm_receive_buf >> 8)
      003147 F5 83            [12] 9011 	mov	dph,a
      003149 E0               [24] 9012 	movx	a,@dptr
      00314A FB               [12] 9013 	mov	r3,a
      00314B BB 55 02         [24] 9014 	cjne	r3,#0x55,01135$
      00314E 80 03            [24] 9015 	sjmp	01136$
      003150                       9016 01135$:
      003150 02r31rE6         [24] 9017 	ljmp	00352$
      003153                       9018 01136$:
      003153 74 0A            [12] 9019 	mov	a,#0x0a
      003155 2C               [12] 9020 	add	a,r4
      003156 F5 82            [12] 9021 	mov	dpl,a
      003158 E4               [12] 9022 	clr	a
      003159 3D               [12] 9023 	addc	a,r5
      00315A F5 83            [12] 9024 	mov	dph,a
      00315C 75*00 0D         [24] 9025 	mov	__modsint_PARM_2,#0x0d
      00315F 75*01 00         [24] 9026 	mov	(__modsint_PARM_2 + 1),#0x00
      003162 C0 15            [24] 9027 	push	ar5
      003164 C0 14            [24] 9028 	push	ar4
      003166 75 D0 00         [24] 9029 	mov	psw,#0x00
      003169 12r00r00         [24] 9030 	lcall	__modsint
      00316C 75 D0 10         [24] 9031 	mov	psw,#0x10
      00316F AA 82            [24] 9032 	mov	r2,dpl
      003171 AB 83            [24] 9033 	mov	r3,dph
      003173 D0 14            [24] 9034 	pop	ar4
      003175 D0 15            [24] 9035 	pop	ar5
      003177 EA               [12] 9036 	mov	a,r2
      003178 24r01            [12] 9037 	add	a,#_gsm_receive_buf
      00317A F5 82            [12] 9038 	mov	dpl,a
      00317C EB               [12] 9039 	mov	a,r3
      00317D 34s01            [12] 9040 	addc	a,#(_gsm_receive_buf >> 8)
      00317F F5 83            [12] 9041 	mov	dph,a
      003181 E0               [24] 9042 	movx	a,@dptr
      003182 FB               [12] 9043 	mov	r3,a
      003183 BB 44 60         [24] 9044 	cjne	r3,#0x44,00352$
                                   9045 ;	include/gsm_serial.c:596: gsm_receive_buf[(gsm_receive_pointer+9)%13] =='P' && gsm_receive_buf[(gsm_receive_pointer+8)%13] =='*';
      003186 74 09            [12] 9046 	mov	a,#0x09
      003188 2C               [12] 9047 	add	a,r4
      003189 F5 82            [12] 9048 	mov	dpl,a
      00318B E4               [12] 9049 	clr	a
      00318C 3D               [12] 9050 	addc	a,r5
      00318D F5 83            [12] 9051 	mov	dph,a
      00318F 75*00 0D         [24] 9052 	mov	__modsint_PARM_2,#0x0d
      003192 75*01 00         [24] 9053 	mov	(__modsint_PARM_2 + 1),#0x00
      003195 C0 15            [24] 9054 	push	ar5
      003197 C0 14            [24] 9055 	push	ar4
      003199 75 D0 00         [24] 9056 	mov	psw,#0x00
      00319C 12r00r00         [24] 9057 	lcall	__modsint
      00319F 75 D0 10         [24] 9058 	mov	psw,#0x10
      0031A2 AA 82            [24] 9059 	mov	r2,dpl
      0031A4 AB 83            [24] 9060 	mov	r3,dph
      0031A6 D0 14            [24] 9061 	pop	ar4
      0031A8 D0 15            [24] 9062 	pop	ar5
      0031AA EA               [12] 9063 	mov	a,r2
      0031AB 24r01            [12] 9064 	add	a,#_gsm_receive_buf
      0031AD F5 82            [12] 9065 	mov	dpl,a
      0031AF EB               [12] 9066 	mov	a,r3
      0031B0 34s01            [12] 9067 	addc	a,#(_gsm_receive_buf >> 8)
      0031B2 F5 83            [12] 9068 	mov	dph,a
      0031B4 E0               [24] 9069 	movx	a,@dptr
      0031B5 FB               [12] 9070 	mov	r3,a
      0031B6 BB 50 2D         [24] 9071 	cjne	r3,#0x50,00352$
      0031B9 74 08            [12] 9072 	mov	a,#0x08
      0031BB 2C               [12] 9073 	add	a,r4
      0031BC F5 82            [12] 9074 	mov	dpl,a
      0031BE E4               [12] 9075 	clr	a
      0031BF 3D               [12] 9076 	addc	a,r5
      0031C0 F5 83            [12] 9077 	mov	dph,a
      0031C2 75*00 0D         [24] 9078 	mov	__modsint_PARM_2,#0x0d
      0031C5 75*01 00         [24] 9079 	mov	(__modsint_PARM_2 + 1),#0x00
      0031C8 75 D0 00         [24] 9080 	mov	psw,#0x00
      0031CB 12r00r00         [24] 9081 	lcall	__modsint
      0031CE 75 D0 10         [24] 9082 	mov	psw,#0x10
      0031D1 AC 82            [24] 9083 	mov	r4,dpl
      0031D3 AD 83            [24] 9084 	mov	r5,dph
      0031D5 EC               [12] 9085 	mov	a,r4
      0031D6 24r01            [12] 9086 	add	a,#_gsm_receive_buf
      0031D8 F5 82            [12] 9087 	mov	dpl,a
      0031DA ED               [12] 9088 	mov	a,r5
      0031DB 34s01            [12] 9089 	addc	a,#(_gsm_receive_buf >> 8)
      0031DD F5 83            [12] 9090 	mov	dph,a
      0031DF E0               [24] 9091 	movx	a,@dptr
      0031E0 FD               [12] 9092 	mov	r5,a
      0031E1 BD 2A 02         [24] 9093 	cjne	r5,#0x2a,01141$
      0031E4 80 04            [24] 9094 	sjmp	00353$
      0031E6                       9095 01141$:
      0031E6                       9096 00352$:
                                   9097 ;	assignBit
      0031E6 C2*49            [12] 9098 	clr	_gsm_serial_interrupt_sloc0_1_0
      0031E8 80 02            [24] 9099 	sjmp	00354$
      0031EA                       9100 00353$:
                                   9101 ;	assignBit
      0031EA D2*49            [12] 9102 	setb	_gsm_serial_interrupt_sloc0_1_0
      0031EC                       9103 00354$:
                                   9104 ;	assignBit
      0031EC A2*49            [12] 9105 	mov	c,_gsm_serial_interrupt_sloc0_1_0
      0031EE 92*0B            [24] 9106 	mov	_pin_chinh_xac,c
                                   9107 ;	include/gsm_serial.c:597: if(SBUF=='\r'){sms_index =1; gsm_serial_cmd = NORMAL;}
      0031F0 74 0D            [12] 9108 	mov	a,#0x0d
      0031F2 B5 99 02         [24] 9109 	cjne	a,_SBUF,01142$
      0031F5 80 03            [24] 9110 	sjmp	01143$
      0031F7                       9111 01142$:
      0031F7 02r3Ar69         [24] 9112 	ljmp	00345$
      0031FA                       9113 01143$:
      0031FA 90r00rBA         [24] 9114 	mov	dptr,#_sms_index
      0031FD 74 01            [12] 9115 	mov	a,#0x01
      0031FF F0               [24] 9116 	movx	@dptr,a
      003200 90r00rFD         [24] 9117 	mov	dptr,#_gsm_serial_cmd
      003203 E4               [12] 9118 	clr	a
      003204 F0               [24] 9119 	movx	@dptr,a
                                   9120 ;	include/gsm_serial.c:599: break;
      003205 02r3Ar69         [24] 9121 	ljmp	00345$
                                   9122 ;	include/gsm_serial.c:600: case CMGS:
      003208                       9123 00253$:
                                   9124 ;	include/gsm_serial.c:601: if(SBUF=='>'){
      003208 74 3E            [12] 9125 	mov	a,#0x3e
      00320A B5 99 0A         [24] 9126 	cjne	a,_SBUF,00259$
                                   9127 ;	include/gsm_serial.c:602: gsm_serial_cmd = NORMAL;
      00320D 90r00rFD         [24] 9128 	mov	dptr,#_gsm_serial_cmd
      003210 E4               [12] 9129 	clr	a
      003211 F0               [24] 9130 	movx	@dptr,a
                                   9131 ;	include/gsm_serial.c:603: gui_lenh_thanh_cong = 1;
                                   9132 ;	assignBit
      003212 D2*2C            [12] 9133 	setb	_gui_lenh_thanh_cong
      003214 02r3Ar69         [24] 9134 	ljmp	00345$
      003217                       9135 00259$:
                                   9136 ;	include/gsm_serial.c:604: }else if(gsm_receive_buf[gsm_receive_pointer]=='R' && gsm_receive_buf[(gsm_receive_pointer+12)%13] =='R' && gsm_receive_buf[(gsm_receive_pointer+11)%13] =='E') connect  = 0;
      003217 BE 52 02         [24] 9137 	cjne	r6,#0x52,01146$
      00321A 80 03            [24] 9138 	sjmp	01147$
      00321C                       9139 01146$:
      00321C 02r3Ar69         [24] 9140 	ljmp	00345$
      00321F                       9141 01147$:
      00321F 8F 14            [24] 9142 	mov	ar4,r7
      003221 7D 00            [12] 9143 	mov	r5,#0x00
      003223 74 0C            [12] 9144 	mov	a,#0x0c
      003225 2C               [12] 9145 	add	a,r4
      003226 F5 82            [12] 9146 	mov	dpl,a
      003228 E4               [12] 9147 	clr	a
      003229 3D               [12] 9148 	addc	a,r5
      00322A F5 83            [12] 9149 	mov	dph,a
      00322C 75*00 0D         [24] 9150 	mov	__modsint_PARM_2,#0x0d
                                   9151 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      00322F 8D*01            [24] 9152 	mov	(__modsint_PARM_2 + 1),r5
      003231 C0 15            [24] 9153 	push	ar5
      003233 C0 14            [24] 9154 	push	ar4
      003235 75 D0 00         [24] 9155 	mov	psw,#0x00
      003238 12r00r00         [24] 9156 	lcall	__modsint
      00323B 75 D0 10         [24] 9157 	mov	psw,#0x10
      00323E AA 82            [24] 9158 	mov	r2,dpl
      003240 AB 83            [24] 9159 	mov	r3,dph
      003242 D0 14            [24] 9160 	pop	ar4
      003244 D0 15            [24] 9161 	pop	ar5
      003246 EA               [12] 9162 	mov	a,r2
      003247 24r01            [12] 9163 	add	a,#_gsm_receive_buf
      003249 F5 82            [12] 9164 	mov	dpl,a
      00324B EB               [12] 9165 	mov	a,r3
      00324C 34s01            [12] 9166 	addc	a,#(_gsm_receive_buf >> 8)
      00324E F5 83            [12] 9167 	mov	dph,a
      003250 E0               [24] 9168 	movx	a,@dptr
      003251 FB               [12] 9169 	mov	r3,a
      003252 BB 52 02         [24] 9170 	cjne	r3,#0x52,01148$
      003255 80 03            [24] 9171 	sjmp	01149$
      003257                       9172 01148$:
      003257 02r3Ar69         [24] 9173 	ljmp	00345$
      00325A                       9174 01149$:
      00325A 74 0B            [12] 9175 	mov	a,#0x0b
      00325C 2C               [12] 9176 	add	a,r4
      00325D F5 82            [12] 9177 	mov	dpl,a
      00325F E4               [12] 9178 	clr	a
      003260 3D               [12] 9179 	addc	a,r5
      003261 F5 83            [12] 9180 	mov	dph,a
      003263 75*00 0D         [24] 9181 	mov	__modsint_PARM_2,#0x0d
      003266 75*01 00         [24] 9182 	mov	(__modsint_PARM_2 + 1),#0x00
      003269 75 D0 00         [24] 9183 	mov	psw,#0x00
      00326C 12r00r00         [24] 9184 	lcall	__modsint
      00326F 75 D0 10         [24] 9185 	mov	psw,#0x10
      003272 AC 82            [24] 9186 	mov	r4,dpl
      003274 AD 83            [24] 9187 	mov	r5,dph
      003276 EC               [12] 9188 	mov	a,r4
      003277 24r01            [12] 9189 	add	a,#_gsm_receive_buf
      003279 F5 82            [12] 9190 	mov	dpl,a
      00327B ED               [12] 9191 	mov	a,r5
      00327C 34s01            [12] 9192 	addc	a,#(_gsm_receive_buf >> 8)
      00327E F5 83            [12] 9193 	mov	dph,a
      003280 E0               [24] 9194 	movx	a,@dptr
      003281 FD               [12] 9195 	mov	r5,a
      003282 BD 45 02         [24] 9196 	cjne	r5,#0x45,01150$
      003285 80 03            [24] 9197 	sjmp	01151$
      003287                       9198 01150$:
      003287 02r3Ar69         [24] 9199 	ljmp	00345$
      00328A                       9200 01151$:
      00328A 90r00rFA         [24] 9201 	mov	dptr,#_connect
      00328D E4               [12] 9202 	clr	a
      00328E F0               [24] 9203 	movx	@dptr,a
                                   9204 ;	include/gsm_serial.c:605: break;
      00328F 02r3Ar69         [24] 9205 	ljmp	00345$
                                   9206 ;	include/gsm_serial.c:606: case CUSD:
      003292                       9207 00261$:
                                   9208 ;	include/gsm_serial.c:607: if(have_cusd){
      003292 30*0D 66         [24] 9209 	jnb	_have_cusd,00302$
                                   9210 ;	include/gsm_serial.c:608: if((((nha_mang == VINAPHONE || nha_mang == MOBIFONE) && SBUF !=' ') || ((nha_mang==VIETTEL || nha_mang==VIETNAM) && SBUF!='d'))  && sms_index<160){
      003295 90r00rF8         [24] 9211 	mov	dptr,#_nha_mang
      003298 E0               [24] 9212 	movx	a,@dptr
      003299 FD               [12] 9213 	mov	r5,a
      00329A BD 50 02         [24] 9214 	cjne	r5,#0x50,01153$
      00329D 80 03            [24] 9215 	sjmp	00268$
      00329F                       9216 01153$:
      00329F BD 66 05         [24] 9217 	cjne	r5,#0x66,00271$
      0032A2                       9218 00268$:
      0032A2 74 20            [12] 9219 	mov	a,#0x20
      0032A4 B5 99 0F         [24] 9220 	cjne	a,_SBUF,00272$
      0032A7                       9221 00271$:
      0032A7 BD 74 02         [24] 9222 	cjne	r5,#0x74,01158$
      0032AA 80 03            [24] 9223 	sjmp	00270$
      0032AC                       9224 01158$:
      0032AC BD 6E 2F         [24] 9225 	cjne	r5,#0x6e,00265$
      0032AF                       9226 00270$:
      0032AF 74 64            [12] 9227 	mov	a,#0x64
      0032B1 B5 99 02         [24] 9228 	cjne	a,_SBUF,01161$
      0032B4 80 28            [24] 9229 	sjmp	00265$
      0032B6                       9230 01161$:
      0032B6                       9231 00272$:
      0032B6 90r00rBA         [24] 9232 	mov	dptr,#_sms_index
      0032B9 E0               [24] 9233 	movx	a,@dptr
      0032BA FD               [12] 9234 	mov	r5,a
      0032BB BD A0 00         [24] 9235 	cjne	r5,#0xa0,01162$
      0032BE                       9236 01162$:
      0032BE 50 1E            [24] 9237 	jnc	00265$
                                   9238 ;	include/gsm_serial.c:609: if(SBUF!='.')lenh_sms[sms_index++] = SBUF;
      0032C0 74 2E            [12] 9239 	mov	a,#0x2e
      0032C2 B5 99 03         [24] 9240 	cjne	a,_SBUF,01164$
      0032C5 02r3Ar69         [24] 9241 	ljmp	00345$
      0032C8                       9242 01164$:
      0032C8 90r00rBA         [24] 9243 	mov	dptr,#_sms_index
      0032CB ED               [12] 9244 	mov	a,r5
      0032CC 04               [12] 9245 	inc	a
      0032CD F0               [24] 9246 	movx	@dptr,a
      0032CE ED               [12] 9247 	mov	a,r5
      0032CF 24r16            [12] 9248 	add	a,#_lenh_sms
      0032D1 F5 82            [12] 9249 	mov	dpl,a
      0032D3 E4               [12] 9250 	clr	a
      0032D4 34s00            [12] 9251 	addc	a,#(_lenh_sms >> 8)
      0032D6 F5 83            [12] 9252 	mov	dph,a
      0032D8 E5 99            [12] 9253 	mov	a,_SBUF
      0032DA F0               [24] 9254 	movx	@dptr,a
      0032DB 02r3Ar69         [24] 9255 	ljmp	00345$
      0032DE                       9256 00265$:
                                   9257 ;	include/gsm_serial.c:612: have_quote = have_cusd = 0;
                                   9258 ;	assignBit
      0032DE C2*0D            [12] 9259 	clr	_have_cusd
                                   9260 ;	assignBit
      0032E0 C2*0F            [12] 9261 	clr	_have_quote
                                   9262 ;	include/gsm_serial.c:613: lenh_sms[sms_index] = 0;
      0032E2 90r00rBA         [24] 9263 	mov	dptr,#_sms_index
      0032E5 E0               [24] 9264 	movx	a,@dptr
      0032E6 FD               [12] 9265 	mov	r5,a
      0032E7 24r16            [12] 9266 	add	a,#_lenh_sms
      0032E9 F5 82            [12] 9267 	mov	dpl,a
      0032EB E4               [12] 9268 	clr	a
      0032EC 34s00            [12] 9269 	addc	a,#(_lenh_sms >> 8)
      0032EE F5 83            [12] 9270 	mov	dph,a
      0032F0 E4               [12] 9271 	clr	a
      0032F1 F0               [24] 9272 	movx	@dptr,a
                                   9273 ;	include/gsm_serial.c:614: sms_index = 0;
      0032F2 90r00rBA         [24] 9274 	mov	dptr,#_sms_index
      0032F5 F0               [24] 9275 	movx	@dptr,a
                                   9276 ;	include/gsm_serial.c:616: gui_lenh_thanh_cong = 1;
                                   9277 ;	assignBit
      0032F6 D2*2C            [12] 9278 	setb	_gui_lenh_thanh_cong
      0032F8 02r3Ar69         [24] 9279 	ljmp	00345$
      0032FB                       9280 00302$:
                                   9281 ;	include/gsm_serial.c:619: }else if((nha_mang == VINAPHONE && gsm_receive_buf[gsm_receive_pointer]=='=' && gsm_receive_buf[(gsm_receive_pointer+12)%13] =='h' &&
      0032FB 90r00rF8         [24] 9282 	mov	dptr,#_nha_mang
      0032FE E0               [24] 9283 	movx	a,@dptr
      0032FF FD               [12] 9284 	mov	r5,a
      003300 BD 50 02         [24] 9285 	cjne	r5,#0x50,01165$
      003303 80 03            [24] 9286 	sjmp	01166$
      003305                       9287 01165$:
      003305 02r34r58         [24] 9288 	ljmp	00287$
      003308                       9289 01166$:
      003308 BE 3D 02         [24] 9290 	cjne	r6,#0x3d,01167$
      00330B 80 03            [24] 9291 	sjmp	01168$
      00330D                       9292 01167$:
      00330D 02r34r58         [24] 9293 	ljmp	00287$
      003310                       9294 01168$:
      003310 8F 13            [24] 9295 	mov	ar3,r7
      003312 7C 00            [12] 9296 	mov	r4,#0x00
      003314 74 0C            [12] 9297 	mov	a,#0x0c
      003316 2B               [12] 9298 	add	a,r3
      003317 F5 82            [12] 9299 	mov	dpl,a
      003319 E4               [12] 9300 	clr	a
      00331A 3C               [12] 9301 	addc	a,r4
      00331B F5 83            [12] 9302 	mov	dph,a
      00331D 75*00 0D         [24] 9303 	mov	__modsint_PARM_2,#0x0d
                                   9304 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      003320 8C*01            [24] 9305 	mov	(__modsint_PARM_2 + 1),r4
      003322 C0 17            [24] 9306 	push	ar7
      003324 C0 16            [24] 9307 	push	ar6
      003326 C0 15            [24] 9308 	push	ar5
      003328 C0 14            [24] 9309 	push	ar4
      00332A C0 13            [24] 9310 	push	ar3
      00332C 75 D0 00         [24] 9311 	mov	psw,#0x00
      00332F 12r00r00         [24] 9312 	lcall	__modsint
      003332 75 D0 10         [24] 9313 	mov	psw,#0x10
      003335 A9 82            [24] 9314 	mov	r1,dpl
      003337 AA 83            [24] 9315 	mov	r2,dph
      003339 D0 13            [24] 9316 	pop	ar3
      00333B D0 14            [24] 9317 	pop	ar4
      00333D D0 15            [24] 9318 	pop	ar5
      00333F D0 16            [24] 9319 	pop	ar6
      003341 D0 17            [24] 9320 	pop	ar7
      003343 E9               [12] 9321 	mov	a,r1
      003344 24r01            [12] 9322 	add	a,#_gsm_receive_buf
      003346 F5 82            [12] 9323 	mov	dpl,a
      003348 EA               [12] 9324 	mov	a,r2
      003349 34s01            [12] 9325 	addc	a,#(_gsm_receive_buf >> 8)
      00334B F5 83            [12] 9326 	mov	dph,a
      00334D E0               [24] 9327 	movx	a,@dptr
      00334E FA               [12] 9328 	mov	r2,a
      00334F BA 68 02         [24] 9329 	cjne	r2,#0x68,01169$
      003352 80 03            [24] 9330 	sjmp	01170$
      003354                       9331 01169$:
      003354 02r34r58         [24] 9332 	ljmp	00287$
      003357                       9333 01170$:
                                   9334 ;	include/gsm_serial.c:620: gsm_receive_buf[(gsm_receive_pointer+11)%13] =='n' && gsm_receive_buf[(gsm_receive_pointer+10)%13] =='i' &&
      003357 74 0B            [12] 9335 	mov	a,#0x0b
      003359 2B               [12] 9336 	add	a,r3
      00335A F5 82            [12] 9337 	mov	dpl,a
      00335C E4               [12] 9338 	clr	a
      00335D 3C               [12] 9339 	addc	a,r4
      00335E F5 83            [12] 9340 	mov	dph,a
      003360 75*00 0D         [24] 9341 	mov	__modsint_PARM_2,#0x0d
      003363 75*01 00         [24] 9342 	mov	(__modsint_PARM_2 + 1),#0x00
      003366 C0 17            [24] 9343 	push	ar7
      003368 C0 16            [24] 9344 	push	ar6
      00336A C0 15            [24] 9345 	push	ar5
      00336C C0 14            [24] 9346 	push	ar4
      00336E C0 13            [24] 9347 	push	ar3
      003370 75 D0 00         [24] 9348 	mov	psw,#0x00
      003373 12r00r00         [24] 9349 	lcall	__modsint
      003376 75 D0 10         [24] 9350 	mov	psw,#0x10
      003379 A9 82            [24] 9351 	mov	r1,dpl
      00337B AA 83            [24] 9352 	mov	r2,dph
      00337D D0 13            [24] 9353 	pop	ar3
      00337F D0 14            [24] 9354 	pop	ar4
      003381 D0 15            [24] 9355 	pop	ar5
      003383 D0 16            [24] 9356 	pop	ar6
      003385 D0 17            [24] 9357 	pop	ar7
      003387 E9               [12] 9358 	mov	a,r1
      003388 24r01            [12] 9359 	add	a,#_gsm_receive_buf
      00338A F5 82            [12] 9360 	mov	dpl,a
      00338C EA               [12] 9361 	mov	a,r2
      00338D 34s01            [12] 9362 	addc	a,#(_gsm_receive_buf >> 8)
      00338F F5 83            [12] 9363 	mov	dph,a
      003391 E0               [24] 9364 	movx	a,@dptr
      003392 FA               [12] 9365 	mov	r2,a
      003393 BA 6E 02         [24] 9366 	cjne	r2,#0x6e,01171$
      003396 80 03            [24] 9367 	sjmp	01172$
      003398                       9368 01171$:
      003398 02r34r58         [24] 9369 	ljmp	00287$
      00339B                       9370 01172$:
      00339B 74 0A            [12] 9371 	mov	a,#0x0a
      00339D 2B               [12] 9372 	add	a,r3
      00339E F5 82            [12] 9373 	mov	dpl,a
      0033A0 E4               [12] 9374 	clr	a
      0033A1 3C               [12] 9375 	addc	a,r4
      0033A2 F5 83            [12] 9376 	mov	dph,a
      0033A4 75*00 0D         [24] 9377 	mov	__modsint_PARM_2,#0x0d
      0033A7 75*01 00         [24] 9378 	mov	(__modsint_PARM_2 + 1),#0x00
      0033AA C0 17            [24] 9379 	push	ar7
      0033AC C0 16            [24] 9380 	push	ar6
      0033AE C0 15            [24] 9381 	push	ar5
      0033B0 C0 14            [24] 9382 	push	ar4
      0033B2 C0 13            [24] 9383 	push	ar3
      0033B4 75 D0 00         [24] 9384 	mov	psw,#0x00
      0033B7 12r00r00         [24] 9385 	lcall	__modsint
      0033BA 75 D0 10         [24] 9386 	mov	psw,#0x10
      0033BD A9 82            [24] 9387 	mov	r1,dpl
      0033BF AA 83            [24] 9388 	mov	r2,dph
      0033C1 D0 13            [24] 9389 	pop	ar3
      0033C3 D0 14            [24] 9390 	pop	ar4
      0033C5 D0 15            [24] 9391 	pop	ar5
      0033C7 D0 16            [24] 9392 	pop	ar6
      0033C9 D0 17            [24] 9393 	pop	ar7
      0033CB E9               [12] 9394 	mov	a,r1
      0033CC 24r01            [12] 9395 	add	a,#_gsm_receive_buf
      0033CE F5 82            [12] 9396 	mov	dpl,a
      0033D0 EA               [12] 9397 	mov	a,r2
      0033D1 34s01            [12] 9398 	addc	a,#(_gsm_receive_buf >> 8)
      0033D3 F5 83            [12] 9399 	mov	dph,a
      0033D5 E0               [24] 9400 	movx	a,@dptr
      0033D6 FA               [12] 9401 	mov	r2,a
      0033D7 BA 69 02         [24] 9402 	cjne	r2,#0x69,01173$
      0033DA 80 03            [24] 9403 	sjmp	01174$
      0033DC                       9404 01173$:
      0033DC 02r34r58         [24] 9405 	ljmp	00287$
      0033DF                       9406 01174$:
                                   9407 ;	include/gsm_serial.c:621: gsm_receive_buf[(gsm_receive_pointer+9)%13] =='h' && gsm_receive_buf[(gsm_receive_pointer+8)%13] =='c') ||
      0033DF 74 09            [12] 9408 	mov	a,#0x09
      0033E1 2B               [12] 9409 	add	a,r3
      0033E2 F5 82            [12] 9410 	mov	dpl,a
      0033E4 E4               [12] 9411 	clr	a
      0033E5 3C               [12] 9412 	addc	a,r4
      0033E6 F5 83            [12] 9413 	mov	dph,a
      0033E8 75*00 0D         [24] 9414 	mov	__modsint_PARM_2,#0x0d
      0033EB 75*01 00         [24] 9415 	mov	(__modsint_PARM_2 + 1),#0x00
      0033EE C0 17            [24] 9416 	push	ar7
      0033F0 C0 16            [24] 9417 	push	ar6
      0033F2 C0 15            [24] 9418 	push	ar5
      0033F4 C0 14            [24] 9419 	push	ar4
      0033F6 C0 13            [24] 9420 	push	ar3
      0033F8 75 D0 00         [24] 9421 	mov	psw,#0x00
      0033FB 12r00r00         [24] 9422 	lcall	__modsint
      0033FE 75 D0 10         [24] 9423 	mov	psw,#0x10
      003401 A9 82            [24] 9424 	mov	r1,dpl
      003403 AA 83            [24] 9425 	mov	r2,dph
      003405 D0 13            [24] 9426 	pop	ar3
      003407 D0 14            [24] 9427 	pop	ar4
      003409 D0 15            [24] 9428 	pop	ar5
      00340B D0 16            [24] 9429 	pop	ar6
      00340D D0 17            [24] 9430 	pop	ar7
      00340F E9               [12] 9431 	mov	a,r1
      003410 24r01            [12] 9432 	add	a,#_gsm_receive_buf
      003412 F5 82            [12] 9433 	mov	dpl,a
      003414 EA               [12] 9434 	mov	a,r2
      003415 34s01            [12] 9435 	addc	a,#(_gsm_receive_buf >> 8)
      003417 F5 83            [12] 9436 	mov	dph,a
      003419 E0               [24] 9437 	movx	a,@dptr
      00341A FA               [12] 9438 	mov	r2,a
      00341B BA 68 3A         [24] 9439 	cjne	r2,#0x68,00287$
      00341E 74 08            [12] 9440 	mov	a,#0x08
      003420 2B               [12] 9441 	add	a,r3
      003421 F5 82            [12] 9442 	mov	dpl,a
      003423 E4               [12] 9443 	clr	a
      003424 3C               [12] 9444 	addc	a,r4
      003425 F5 83            [12] 9445 	mov	dph,a
      003427 75*00 0D         [24] 9446 	mov	__modsint_PARM_2,#0x0d
      00342A 75*01 00         [24] 9447 	mov	(__modsint_PARM_2 + 1),#0x00
      00342D C0 17            [24] 9448 	push	ar7
      00342F C0 16            [24] 9449 	push	ar6
      003431 C0 15            [24] 9450 	push	ar5
      003433 75 D0 00         [24] 9451 	mov	psw,#0x00
      003436 12r00r00         [24] 9452 	lcall	__modsint
      003439 75 D0 10         [24] 9453 	mov	psw,#0x10
      00343C AB 82            [24] 9454 	mov	r3,dpl
      00343E AC 83            [24] 9455 	mov	r4,dph
      003440 D0 15            [24] 9456 	pop	ar5
      003442 D0 16            [24] 9457 	pop	ar6
      003444 D0 17            [24] 9458 	pop	ar7
      003446 EB               [12] 9459 	mov	a,r3
      003447 24r01            [12] 9460 	add	a,#_gsm_receive_buf
      003449 F5 82            [12] 9461 	mov	dpl,a
      00344B EC               [12] 9462 	mov	a,r4
      00344C 34s01            [12] 9463 	addc	a,#(_gsm_receive_buf >> 8)
      00344E F5 83            [12] 9464 	mov	dph,a
      003450 E0               [24] 9465 	movx	a,@dptr
      003451 FC               [12] 9466 	mov	r4,a
      003452 BC 63 03         [24] 9467 	cjne	r4,#0x63,01177$
      003455 02r37rF3         [24] 9468 	ljmp	00273$
      003458                       9469 01177$:
      003458                       9470 00287$:
                                   9471 ;	include/gsm_serial.c:622: (nha_mang == VIETTEL && gsm_receive_buf[gsm_receive_pointer]==' ' && gsm_receive_buf[(gsm_receive_pointer+12)%13] ==':' &&
      003458 BD 74 02         [24] 9472 	cjne	r5,#0x74,01178$
      00345B 80 03            [24] 9473 	sjmp	01179$
      00345D                       9474 01178$:
      00345D 02r35rB0         [24] 9475 	ljmp	00294$
      003460                       9476 01179$:
      003460 BE 20 02         [24] 9477 	cjne	r6,#0x20,01180$
      003463 80 03            [24] 9478 	sjmp	01181$
      003465                       9479 01180$:
      003465 02r35rB0         [24] 9480 	ljmp	00294$
      003468                       9481 01181$:
      003468 8F 13            [24] 9482 	mov	ar3,r7
      00346A 7C 00            [12] 9483 	mov	r4,#0x00
      00346C 74 0C            [12] 9484 	mov	a,#0x0c
      00346E 2B               [12] 9485 	add	a,r3
      00346F F5 82            [12] 9486 	mov	dpl,a
      003471 E4               [12] 9487 	clr	a
      003472 3C               [12] 9488 	addc	a,r4
      003473 F5 83            [12] 9489 	mov	dph,a
      003475 75*00 0D         [24] 9490 	mov	__modsint_PARM_2,#0x0d
                                   9491 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      003478 8C*01            [24] 9492 	mov	(__modsint_PARM_2 + 1),r4
      00347A C0 17            [24] 9493 	push	ar7
      00347C C0 16            [24] 9494 	push	ar6
      00347E C0 15            [24] 9495 	push	ar5
      003480 C0 14            [24] 9496 	push	ar4
      003482 C0 13            [24] 9497 	push	ar3
      003484 75 D0 00         [24] 9498 	mov	psw,#0x00
      003487 12r00r00         [24] 9499 	lcall	__modsint
      00348A 75 D0 10         [24] 9500 	mov	psw,#0x10
      00348D A9 82            [24] 9501 	mov	r1,dpl
      00348F AA 83            [24] 9502 	mov	r2,dph
      003491 D0 13            [24] 9503 	pop	ar3
      003493 D0 14            [24] 9504 	pop	ar4
      003495 D0 15            [24] 9505 	pop	ar5
      003497 D0 16            [24] 9506 	pop	ar6
      003499 D0 17            [24] 9507 	pop	ar7
      00349B E9               [12] 9508 	mov	a,r1
      00349C 24r01            [12] 9509 	add	a,#_gsm_receive_buf
      00349E F5 82            [12] 9510 	mov	dpl,a
      0034A0 EA               [12] 9511 	mov	a,r2
      0034A1 34s01            [12] 9512 	addc	a,#(_gsm_receive_buf >> 8)
      0034A3 F5 83            [12] 9513 	mov	dph,a
      0034A5 E0               [24] 9514 	movx	a,@dptr
      0034A6 FA               [12] 9515 	mov	r2,a
      0034A7 BA 3A 02         [24] 9516 	cjne	r2,#0x3a,01182$
      0034AA 80 03            [24] 9517 	sjmp	01183$
      0034AC                       9518 01182$:
      0034AC 02r35rB0         [24] 9519 	ljmp	00294$
      0034AF                       9520 01183$:
                                   9521 ;	include/gsm_serial.c:623: gsm_receive_buf[(gsm_receive_pointer+11)%13] =='G' && gsm_receive_buf[(gsm_receive_pointer+10)%13] =='K' &&
      0034AF 74 0B            [12] 9522 	mov	a,#0x0b
      0034B1 2B               [12] 9523 	add	a,r3
      0034B2 F5 82            [12] 9524 	mov	dpl,a
      0034B4 E4               [12] 9525 	clr	a
      0034B5 3C               [12] 9526 	addc	a,r4
      0034B6 F5 83            [12] 9527 	mov	dph,a
      0034B8 75*00 0D         [24] 9528 	mov	__modsint_PARM_2,#0x0d
      0034BB 75*01 00         [24] 9529 	mov	(__modsint_PARM_2 + 1),#0x00
      0034BE C0 17            [24] 9530 	push	ar7
      0034C0 C0 16            [24] 9531 	push	ar6
      0034C2 C0 15            [24] 9532 	push	ar5
      0034C4 C0 14            [24] 9533 	push	ar4
      0034C6 C0 13            [24] 9534 	push	ar3
      0034C8 75 D0 00         [24] 9535 	mov	psw,#0x00
      0034CB 12r00r00         [24] 9536 	lcall	__modsint
      0034CE 75 D0 10         [24] 9537 	mov	psw,#0x10
      0034D1 A9 82            [24] 9538 	mov	r1,dpl
      0034D3 AA 83            [24] 9539 	mov	r2,dph
      0034D5 D0 13            [24] 9540 	pop	ar3
      0034D7 D0 14            [24] 9541 	pop	ar4
      0034D9 D0 15            [24] 9542 	pop	ar5
      0034DB D0 16            [24] 9543 	pop	ar6
      0034DD D0 17            [24] 9544 	pop	ar7
      0034DF E9               [12] 9545 	mov	a,r1
      0034E0 24r01            [12] 9546 	add	a,#_gsm_receive_buf
      0034E2 F5 82            [12] 9547 	mov	dpl,a
      0034E4 EA               [12] 9548 	mov	a,r2
      0034E5 34s01            [12] 9549 	addc	a,#(_gsm_receive_buf >> 8)
      0034E7 F5 83            [12] 9550 	mov	dph,a
      0034E9 E0               [24] 9551 	movx	a,@dptr
      0034EA FA               [12] 9552 	mov	r2,a
      0034EB BA 47 02         [24] 9553 	cjne	r2,#0x47,01184$
      0034EE 80 03            [24] 9554 	sjmp	01185$
      0034F0                       9555 01184$:
      0034F0 02r35rB0         [24] 9556 	ljmp	00294$
      0034F3                       9557 01185$:
      0034F3 74 0A            [12] 9558 	mov	a,#0x0a
      0034F5 2B               [12] 9559 	add	a,r3
      0034F6 F5 82            [12] 9560 	mov	dpl,a
      0034F8 E4               [12] 9561 	clr	a
      0034F9 3C               [12] 9562 	addc	a,r4
      0034FA F5 83            [12] 9563 	mov	dph,a
      0034FC 75*00 0D         [24] 9564 	mov	__modsint_PARM_2,#0x0d
      0034FF 75*01 00         [24] 9565 	mov	(__modsint_PARM_2 + 1),#0x00
      003502 C0 17            [24] 9566 	push	ar7
      003504 C0 16            [24] 9567 	push	ar6
      003506 C0 15            [24] 9568 	push	ar5
      003508 C0 14            [24] 9569 	push	ar4
      00350A C0 13            [24] 9570 	push	ar3
      00350C 75 D0 00         [24] 9571 	mov	psw,#0x00
      00350F 12r00r00         [24] 9572 	lcall	__modsint
      003512 75 D0 10         [24] 9573 	mov	psw,#0x10
      003515 A9 82            [24] 9574 	mov	r1,dpl
      003517 AA 83            [24] 9575 	mov	r2,dph
      003519 D0 13            [24] 9576 	pop	ar3
      00351B D0 14            [24] 9577 	pop	ar4
      00351D D0 15            [24] 9578 	pop	ar5
      00351F D0 16            [24] 9579 	pop	ar6
      003521 D0 17            [24] 9580 	pop	ar7
      003523 E9               [12] 9581 	mov	a,r1
      003524 24r01            [12] 9582 	add	a,#_gsm_receive_buf
      003526 F5 82            [12] 9583 	mov	dpl,a
      003528 EA               [12] 9584 	mov	a,r2
      003529 34s01            [12] 9585 	addc	a,#(_gsm_receive_buf >> 8)
      00352B F5 83            [12] 9586 	mov	dph,a
      00352D E0               [24] 9587 	movx	a,@dptr
      00352E FA               [12] 9588 	mov	r2,a
      00352F BA 4B 02         [24] 9589 	cjne	r2,#0x4b,01186$
      003532 80 03            [24] 9590 	sjmp	01187$
      003534                       9591 01186$:
      003534 02r35rB0         [24] 9592 	ljmp	00294$
      003537                       9593 01187$:
                                   9594 ;	include/gsm_serial.c:624: gsm_receive_buf[(gsm_receive_pointer+9)%13] =='T' && gsm_receive_buf[(gsm_receive_pointer+8)%13] ==' ') ||
      003537 74 09            [12] 9595 	mov	a,#0x09
      003539 2B               [12] 9596 	add	a,r3
      00353A F5 82            [12] 9597 	mov	dpl,a
      00353C E4               [12] 9598 	clr	a
      00353D 3C               [12] 9599 	addc	a,r4
      00353E F5 83            [12] 9600 	mov	dph,a
      003540 75*00 0D         [24] 9601 	mov	__modsint_PARM_2,#0x0d
      003543 75*01 00         [24] 9602 	mov	(__modsint_PARM_2 + 1),#0x00
      003546 C0 17            [24] 9603 	push	ar7
      003548 C0 16            [24] 9604 	push	ar6
      00354A C0 15            [24] 9605 	push	ar5
      00354C C0 14            [24] 9606 	push	ar4
      00354E C0 13            [24] 9607 	push	ar3
      003550 75 D0 00         [24] 9608 	mov	psw,#0x00
      003553 12r00r00         [24] 9609 	lcall	__modsint
      003556 75 D0 10         [24] 9610 	mov	psw,#0x10
      003559 A9 82            [24] 9611 	mov	r1,dpl
      00355B AA 83            [24] 9612 	mov	r2,dph
      00355D D0 13            [24] 9613 	pop	ar3
      00355F D0 14            [24] 9614 	pop	ar4
      003561 D0 15            [24] 9615 	pop	ar5
      003563 D0 16            [24] 9616 	pop	ar6
      003565 D0 17            [24] 9617 	pop	ar7
      003567 E9               [12] 9618 	mov	a,r1
      003568 24r01            [12] 9619 	add	a,#_gsm_receive_buf
      00356A F5 82            [12] 9620 	mov	dpl,a
      00356C EA               [12] 9621 	mov	a,r2
      00356D 34s01            [12] 9622 	addc	a,#(_gsm_receive_buf >> 8)
      00356F F5 83            [12] 9623 	mov	dph,a
      003571 E0               [24] 9624 	movx	a,@dptr
      003572 FA               [12] 9625 	mov	r2,a
      003573 BA 54 3A         [24] 9626 	cjne	r2,#0x54,00294$
      003576 74 08            [12] 9627 	mov	a,#0x08
      003578 2B               [12] 9628 	add	a,r3
      003579 F5 82            [12] 9629 	mov	dpl,a
      00357B E4               [12] 9630 	clr	a
      00357C 3C               [12] 9631 	addc	a,r4
      00357D F5 83            [12] 9632 	mov	dph,a
      00357F 75*00 0D         [24] 9633 	mov	__modsint_PARM_2,#0x0d
      003582 75*01 00         [24] 9634 	mov	(__modsint_PARM_2 + 1),#0x00
      003585 C0 17            [24] 9635 	push	ar7
      003587 C0 16            [24] 9636 	push	ar6
      003589 C0 15            [24] 9637 	push	ar5
      00358B 75 D0 00         [24] 9638 	mov	psw,#0x00
      00358E 12r00r00         [24] 9639 	lcall	__modsint
      003591 75 D0 10         [24] 9640 	mov	psw,#0x10
      003594 AB 82            [24] 9641 	mov	r3,dpl
      003596 AC 83            [24] 9642 	mov	r4,dph
      003598 D0 15            [24] 9643 	pop	ar5
      00359A D0 16            [24] 9644 	pop	ar6
      00359C D0 17            [24] 9645 	pop	ar7
      00359E EB               [12] 9646 	mov	a,r3
      00359F 24r01            [12] 9647 	add	a,#_gsm_receive_buf
      0035A1 F5 82            [12] 9648 	mov	dpl,a
      0035A3 EC               [12] 9649 	mov	a,r4
      0035A4 34s01            [12] 9650 	addc	a,#(_gsm_receive_buf >> 8)
      0035A6 F5 83            [12] 9651 	mov	dph,a
      0035A8 E0               [24] 9652 	movx	a,@dptr
      0035A9 FC               [12] 9653 	mov	r4,a
      0035AA BC 20 03         [24] 9654 	cjne	r4,#0x20,01190$
      0035AD 02r37rF3         [24] 9655 	ljmp	00273$
      0035B0                       9656 01190$:
      0035B0                       9657 00294$:
                                   9658 ;	include/gsm_serial.c:625: (nha_mang == MOBIFONE && gsm_receive_buf[gsm_receive_pointer]==' ' &&
      0035B0 BD 66 02         [24] 9659 	cjne	r5,#0x66,01191$
      0035B3 80 03            [24] 9660 	sjmp	01192$
      0035B5                       9661 01191$:
      0035B5 02r37r08         [24] 9662 	ljmp	00300$
      0035B8                       9663 01192$:
      0035B8 BE 20 02         [24] 9664 	cjne	r6,#0x20,01193$
      0035BB 80 03            [24] 9665 	sjmp	01194$
      0035BD                       9666 01193$:
      0035BD 02r37r08         [24] 9667 	ljmp	00300$
      0035C0                       9668 01194$:
                                   9669 ;	include/gsm_serial.c:626: gsm_receive_buf[(gsm_receive_pointer+12)%13] =='C' && gsm_receive_buf[(gsm_receive_pointer+11)%13] =='K' &&
      0035C0 8F 13            [24] 9670 	mov	ar3,r7
      0035C2 7C 00            [12] 9671 	mov	r4,#0x00
      0035C4 74 0C            [12] 9672 	mov	a,#0x0c
      0035C6 2B               [12] 9673 	add	a,r3
      0035C7 F5 82            [12] 9674 	mov	dpl,a
      0035C9 E4               [12] 9675 	clr	a
      0035CA 3C               [12] 9676 	addc	a,r4
      0035CB F5 83            [12] 9677 	mov	dph,a
      0035CD 75*00 0D         [24] 9678 	mov	__modsint_PARM_2,#0x0d
                                   9679 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0035D0 8C*01            [24] 9680 	mov	(__modsint_PARM_2 + 1),r4
      0035D2 C0 17            [24] 9681 	push	ar7
      0035D4 C0 16            [24] 9682 	push	ar6
      0035D6 C0 15            [24] 9683 	push	ar5
      0035D8 C0 14            [24] 9684 	push	ar4
      0035DA C0 13            [24] 9685 	push	ar3
      0035DC 75 D0 00         [24] 9686 	mov	psw,#0x00
      0035DF 12r00r00         [24] 9687 	lcall	__modsint
      0035E2 75 D0 10         [24] 9688 	mov	psw,#0x10
      0035E5 A9 82            [24] 9689 	mov	r1,dpl
      0035E7 AA 83            [24] 9690 	mov	r2,dph
      0035E9 D0 13            [24] 9691 	pop	ar3
      0035EB D0 14            [24] 9692 	pop	ar4
      0035ED D0 15            [24] 9693 	pop	ar5
      0035EF D0 16            [24] 9694 	pop	ar6
      0035F1 D0 17            [24] 9695 	pop	ar7
      0035F3 E9               [12] 9696 	mov	a,r1
      0035F4 24r01            [12] 9697 	add	a,#_gsm_receive_buf
      0035F6 F5 82            [12] 9698 	mov	dpl,a
      0035F8 EA               [12] 9699 	mov	a,r2
      0035F9 34s01            [12] 9700 	addc	a,#(_gsm_receive_buf >> 8)
      0035FB F5 83            [12] 9701 	mov	dph,a
      0035FD E0               [24] 9702 	movx	a,@dptr
      0035FE FA               [12] 9703 	mov	r2,a
      0035FF BA 43 02         [24] 9704 	cjne	r2,#0x43,01195$
      003602 80 03            [24] 9705 	sjmp	01196$
      003604                       9706 01195$:
      003604 02r37r08         [24] 9707 	ljmp	00300$
      003607                       9708 01196$:
      003607 74 0B            [12] 9709 	mov	a,#0x0b
      003609 2B               [12] 9710 	add	a,r3
      00360A F5 82            [12] 9711 	mov	dpl,a
      00360C E4               [12] 9712 	clr	a
      00360D 3C               [12] 9713 	addc	a,r4
      00360E F5 83            [12] 9714 	mov	dph,a
      003610 75*00 0D         [24] 9715 	mov	__modsint_PARM_2,#0x0d
      003613 75*01 00         [24] 9716 	mov	(__modsint_PARM_2 + 1),#0x00
      003616 C0 17            [24] 9717 	push	ar7
      003618 C0 16            [24] 9718 	push	ar6
      00361A C0 15            [24] 9719 	push	ar5
      00361C C0 14            [24] 9720 	push	ar4
      00361E C0 13            [24] 9721 	push	ar3
      003620 75 D0 00         [24] 9722 	mov	psw,#0x00
      003623 12r00r00         [24] 9723 	lcall	__modsint
      003626 75 D0 10         [24] 9724 	mov	psw,#0x10
      003629 A9 82            [24] 9725 	mov	r1,dpl
      00362B AA 83            [24] 9726 	mov	r2,dph
      00362D D0 13            [24] 9727 	pop	ar3
      00362F D0 14            [24] 9728 	pop	ar4
      003631 D0 15            [24] 9729 	pop	ar5
      003633 D0 16            [24] 9730 	pop	ar6
      003635 D0 17            [24] 9731 	pop	ar7
      003637 E9               [12] 9732 	mov	a,r1
      003638 24r01            [12] 9733 	add	a,#_gsm_receive_buf
      00363A F5 82            [12] 9734 	mov	dpl,a
      00363C EA               [12] 9735 	mov	a,r2
      00363D 34s01            [12] 9736 	addc	a,#(_gsm_receive_buf >> 8)
      00363F F5 83            [12] 9737 	mov	dph,a
      003641 E0               [24] 9738 	movx	a,@dptr
      003642 FA               [12] 9739 	mov	r2,a
      003643 BA 4B 02         [24] 9740 	cjne	r2,#0x4b,01197$
      003646 80 03            [24] 9741 	sjmp	01198$
      003648                       9742 01197$:
      003648 02r37r08         [24] 9743 	ljmp	00300$
      00364B                       9744 01198$:
                                   9745 ;	include/gsm_serial.c:627: gsm_receive_buf[(gsm_receive_pointer+10)%13] =='T' && gsm_receive_buf[(gsm_receive_pointer+9)%13] ==' ' &&
      00364B 74 0A            [12] 9746 	mov	a,#0x0a
      00364D 2B               [12] 9747 	add	a,r3
      00364E F5 82            [12] 9748 	mov	dpl,a
      003650 E4               [12] 9749 	clr	a
      003651 3C               [12] 9750 	addc	a,r4
      003652 F5 83            [12] 9751 	mov	dph,a
      003654 75*00 0D         [24] 9752 	mov	__modsint_PARM_2,#0x0d
      003657 75*01 00         [24] 9753 	mov	(__modsint_PARM_2 + 1),#0x00
      00365A C0 17            [24] 9754 	push	ar7
      00365C C0 16            [24] 9755 	push	ar6
      00365E C0 15            [24] 9756 	push	ar5
      003660 C0 14            [24] 9757 	push	ar4
      003662 C0 13            [24] 9758 	push	ar3
      003664 75 D0 00         [24] 9759 	mov	psw,#0x00
      003667 12r00r00         [24] 9760 	lcall	__modsint
      00366A 75 D0 10         [24] 9761 	mov	psw,#0x10
      00366D A9 82            [24] 9762 	mov	r1,dpl
      00366F AA 83            [24] 9763 	mov	r2,dph
      003671 D0 13            [24] 9764 	pop	ar3
      003673 D0 14            [24] 9765 	pop	ar4
      003675 D0 15            [24] 9766 	pop	ar5
      003677 D0 16            [24] 9767 	pop	ar6
      003679 D0 17            [24] 9768 	pop	ar7
      00367B E9               [12] 9769 	mov	a,r1
      00367C 24r01            [12] 9770 	add	a,#_gsm_receive_buf
      00367E F5 82            [12] 9771 	mov	dpl,a
      003680 EA               [12] 9772 	mov	a,r2
      003681 34s01            [12] 9773 	addc	a,#(_gsm_receive_buf >> 8)
      003683 F5 83            [12] 9774 	mov	dph,a
      003685 E0               [24] 9775 	movx	a,@dptr
      003686 FA               [12] 9776 	mov	r2,a
      003687 BA 54 02         [24] 9777 	cjne	r2,#0x54,01199$
      00368A 80 03            [24] 9778 	sjmp	01200$
      00368C                       9779 01199$:
      00368C 02r37r08         [24] 9780 	ljmp	00300$
      00368F                       9781 01200$:
      00368F 74 09            [12] 9782 	mov	a,#0x09
      003691 2B               [12] 9783 	add	a,r3
      003692 F5 82            [12] 9784 	mov	dpl,a
      003694 E4               [12] 9785 	clr	a
      003695 3C               [12] 9786 	addc	a,r4
      003696 F5 83            [12] 9787 	mov	dph,a
      003698 75*00 0D         [24] 9788 	mov	__modsint_PARM_2,#0x0d
      00369B 75*01 00         [24] 9789 	mov	(__modsint_PARM_2 + 1),#0x00
      00369E C0 17            [24] 9790 	push	ar7
      0036A0 C0 16            [24] 9791 	push	ar6
      0036A2 C0 15            [24] 9792 	push	ar5
      0036A4 C0 14            [24] 9793 	push	ar4
      0036A6 C0 13            [24] 9794 	push	ar3
      0036A8 75 D0 00         [24] 9795 	mov	psw,#0x00
      0036AB 12r00r00         [24] 9796 	lcall	__modsint
      0036AE 75 D0 10         [24] 9797 	mov	psw,#0x10
      0036B1 A9 82            [24] 9798 	mov	r1,dpl
      0036B3 AA 83            [24] 9799 	mov	r2,dph
      0036B5 D0 13            [24] 9800 	pop	ar3
      0036B7 D0 14            [24] 9801 	pop	ar4
      0036B9 D0 15            [24] 9802 	pop	ar5
      0036BB D0 16            [24] 9803 	pop	ar6
      0036BD D0 17            [24] 9804 	pop	ar7
      0036BF E9               [12] 9805 	mov	a,r1
      0036C0 24r01            [12] 9806 	add	a,#_gsm_receive_buf
      0036C2 F5 82            [12] 9807 	mov	dpl,a
      0036C4 EA               [12] 9808 	mov	a,r2
      0036C5 34s01            [12] 9809 	addc	a,#(_gsm_receive_buf >> 8)
      0036C7 F5 83            [12] 9810 	mov	dph,a
      0036C9 E0               [24] 9811 	movx	a,@dptr
      0036CA FA               [12] 9812 	mov	r2,a
      0036CB BA 20 3A         [24] 9813 	cjne	r2,#0x20,00300$
                                   9814 ;	include/gsm_serial.c:628: gsm_receive_buf[(gsm_receive_pointer+8)%13] =='.') ||
      0036CE 74 08            [12] 9815 	mov	a,#0x08
      0036D0 2B               [12] 9816 	add	a,r3
      0036D1 F5 82            [12] 9817 	mov	dpl,a
      0036D3 E4               [12] 9818 	clr	a
      0036D4 3C               [12] 9819 	addc	a,r4
      0036D5 F5 83            [12] 9820 	mov	dph,a
      0036D7 75*00 0D         [24] 9821 	mov	__modsint_PARM_2,#0x0d
      0036DA 75*01 00         [24] 9822 	mov	(__modsint_PARM_2 + 1),#0x00
      0036DD C0 17            [24] 9823 	push	ar7
      0036DF C0 16            [24] 9824 	push	ar6
      0036E1 C0 15            [24] 9825 	push	ar5
      0036E3 75 D0 00         [24] 9826 	mov	psw,#0x00
      0036E6 12r00r00         [24] 9827 	lcall	__modsint
      0036E9 75 D0 10         [24] 9828 	mov	psw,#0x10
      0036EC AB 82            [24] 9829 	mov	r3,dpl
      0036EE AC 83            [24] 9830 	mov	r4,dph
      0036F0 D0 15            [24] 9831 	pop	ar5
      0036F2 D0 16            [24] 9832 	pop	ar6
      0036F4 D0 17            [24] 9833 	pop	ar7
      0036F6 EB               [12] 9834 	mov	a,r3
      0036F7 24r01            [12] 9835 	add	a,#_gsm_receive_buf
      0036F9 F5 82            [12] 9836 	mov	dpl,a
      0036FB EC               [12] 9837 	mov	a,r4
      0036FC 34s01            [12] 9838 	addc	a,#(_gsm_receive_buf >> 8)
      0036FE F5 83            [12] 9839 	mov	dph,a
      003700 E0               [24] 9840 	movx	a,@dptr
      003701 FC               [12] 9841 	mov	r4,a
      003702 BC 2E 03         [24] 9842 	cjne	r4,#0x2e,01203$
      003705 02r37rF3         [24] 9843 	ljmp	00273$
      003708                       9844 01203$:
      003708                       9845 00300$:
                                   9846 ;	include/gsm_serial.c:633: (nha_mang == VIETNAM && gsm_receive_buf[gsm_receive_pointer]==' ' && gsm_receive_buf[(gsm_receive_pointer+12)%13] ==':' &&
      003708 BD 6E 02         [24] 9847 	cjne	r5,#0x6e,01204$
      00370B 80 03            [24] 9848 	sjmp	01205$
      00370D                       9849 01204$:
      00370D 02r3Ar69         [24] 9850 	ljmp	00345$
      003710                       9851 01205$:
      003710 BE 20 02         [24] 9852 	cjne	r6,#0x20,01206$
      003713 80 03            [24] 9853 	sjmp	01207$
      003715                       9854 01206$:
      003715 02r3Ar69         [24] 9855 	ljmp	00345$
      003718                       9856 01207$:
      003718 8F 14            [24] 9857 	mov	ar4,r7
      00371A 7D 00            [12] 9858 	mov	r5,#0x00
      00371C 74 0C            [12] 9859 	mov	a,#0x0c
      00371E 2C               [12] 9860 	add	a,r4
      00371F F5 82            [12] 9861 	mov	dpl,a
      003721 E4               [12] 9862 	clr	a
      003722 3D               [12] 9863 	addc	a,r5
      003723 F5 83            [12] 9864 	mov	dph,a
      003725 75*00 0D         [24] 9865 	mov	__modsint_PARM_2,#0x0d
                                   9866 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      003728 8D*01            [24] 9867 	mov	(__modsint_PARM_2 + 1),r5
      00372A C0 15            [24] 9868 	push	ar5
      00372C C0 14            [24] 9869 	push	ar4
      00372E 75 D0 00         [24] 9870 	mov	psw,#0x00
      003731 12r00r00         [24] 9871 	lcall	__modsint
      003734 75 D0 10         [24] 9872 	mov	psw,#0x10
      003737 AA 82            [24] 9873 	mov	r2,dpl
      003739 AB 83            [24] 9874 	mov	r3,dph
      00373B D0 14            [24] 9875 	pop	ar4
      00373D D0 15            [24] 9876 	pop	ar5
      00373F EA               [12] 9877 	mov	a,r2
      003740 24r01            [12] 9878 	add	a,#_gsm_receive_buf
      003742 F5 82            [12] 9879 	mov	dpl,a
      003744 EB               [12] 9880 	mov	a,r3
      003745 34s01            [12] 9881 	addc	a,#(_gsm_receive_buf >> 8)
      003747 F5 83            [12] 9882 	mov	dph,a
      003749 E0               [24] 9883 	movx	a,@dptr
      00374A FB               [12] 9884 	mov	r3,a
      00374B BB 3A 02         [24] 9885 	cjne	r3,#0x3a,01208$
      00374E 80 03            [24] 9886 	sjmp	01209$
      003750                       9887 01208$:
      003750 02r3Ar69         [24] 9888 	ljmp	00345$
      003753                       9889 01209$:
                                   9890 ;	include/gsm_serial.c:634: gsm_receive_buf[(gsm_receive_pointer+11)%13] =='C' && gsm_receive_buf[(gsm_receive_pointer+10)%13] =='K' &&
      003753 74 0B            [12] 9891 	mov	a,#0x0b
      003755 2C               [12] 9892 	add	a,r4
      003756 F5 82            [12] 9893 	mov	dpl,a
      003758 E4               [12] 9894 	clr	a
      003759 3D               [12] 9895 	addc	a,r5
      00375A F5 83            [12] 9896 	mov	dph,a
      00375C 75*00 0D         [24] 9897 	mov	__modsint_PARM_2,#0x0d
      00375F 75*01 00         [24] 9898 	mov	(__modsint_PARM_2 + 1),#0x00
      003762 C0 15            [24] 9899 	push	ar5
      003764 C0 14            [24] 9900 	push	ar4
      003766 75 D0 00         [24] 9901 	mov	psw,#0x00
      003769 12r00r00         [24] 9902 	lcall	__modsint
      00376C 75 D0 10         [24] 9903 	mov	psw,#0x10
      00376F AA 82            [24] 9904 	mov	r2,dpl
      003771 AB 83            [24] 9905 	mov	r3,dph
      003773 D0 14            [24] 9906 	pop	ar4
      003775 D0 15            [24] 9907 	pop	ar5
      003777 EA               [12] 9908 	mov	a,r2
      003778 24r01            [12] 9909 	add	a,#_gsm_receive_buf
      00377A F5 82            [12] 9910 	mov	dpl,a
      00377C EB               [12] 9911 	mov	a,r3
      00377D 34s01            [12] 9912 	addc	a,#(_gsm_receive_buf >> 8)
      00377F F5 83            [12] 9913 	mov	dph,a
      003781 E0               [24] 9914 	movx	a,@dptr
      003782 FB               [12] 9915 	mov	r3,a
      003783 BB 43 02         [24] 9916 	cjne	r3,#0x43,01210$
      003786 80 03            [24] 9917 	sjmp	01211$
      003788                       9918 01210$:
      003788 02r3Ar69         [24] 9919 	ljmp	00345$
      00378B                       9920 01211$:
      00378B 74 0A            [12] 9921 	mov	a,#0x0a
      00378D 2C               [12] 9922 	add	a,r4
      00378E F5 82            [12] 9923 	mov	dpl,a
      003790 E4               [12] 9924 	clr	a
      003791 3D               [12] 9925 	addc	a,r5
      003792 F5 83            [12] 9926 	mov	dph,a
      003794 75*00 0D         [24] 9927 	mov	__modsint_PARM_2,#0x0d
      003797 75*01 00         [24] 9928 	mov	(__modsint_PARM_2 + 1),#0x00
      00379A C0 15            [24] 9929 	push	ar5
      00379C C0 14            [24] 9930 	push	ar4
      00379E 75 D0 00         [24] 9931 	mov	psw,#0x00
      0037A1 12r00r00         [24] 9932 	lcall	__modsint
      0037A4 75 D0 10         [24] 9933 	mov	psw,#0x10
      0037A7 AA 82            [24] 9934 	mov	r2,dpl
      0037A9 AB 83            [24] 9935 	mov	r3,dph
      0037AB D0 14            [24] 9936 	pop	ar4
      0037AD D0 15            [24] 9937 	pop	ar5
      0037AF EA               [12] 9938 	mov	a,r2
      0037B0 24r01            [12] 9939 	add	a,#_gsm_receive_buf
      0037B2 F5 82            [12] 9940 	mov	dpl,a
      0037B4 EB               [12] 9941 	mov	a,r3
      0037B5 34s01            [12] 9942 	addc	a,#(_gsm_receive_buf >> 8)
      0037B7 F5 83            [12] 9943 	mov	dph,a
      0037B9 E0               [24] 9944 	movx	a,@dptr
      0037BA FB               [12] 9945 	mov	r3,a
      0037BB BB 4B 02         [24] 9946 	cjne	r3,#0x4b,01212$
      0037BE 80 03            [24] 9947 	sjmp	01213$
      0037C0                       9948 01212$:
      0037C0 02r3Ar69         [24] 9949 	ljmp	00345$
      0037C3                       9950 01213$:
                                   9951 ;	include/gsm_serial.c:635: gsm_receive_buf[(gsm_receive_pointer+9)%13] =='T'))
      0037C3 74 09            [12] 9952 	mov	a,#0x09
      0037C5 2C               [12] 9953 	add	a,r4
      0037C6 F5 82            [12] 9954 	mov	dpl,a
      0037C8 E4               [12] 9955 	clr	a
      0037C9 3D               [12] 9956 	addc	a,r5
      0037CA F5 83            [12] 9957 	mov	dph,a
      0037CC 75*00 0D         [24] 9958 	mov	__modsint_PARM_2,#0x0d
      0037CF 75*01 00         [24] 9959 	mov	(__modsint_PARM_2 + 1),#0x00
      0037D2 75 D0 00         [24] 9960 	mov	psw,#0x00
      0037D5 12r00r00         [24] 9961 	lcall	__modsint
      0037D8 75 D0 10         [24] 9962 	mov	psw,#0x10
      0037DB AC 82            [24] 9963 	mov	r4,dpl
      0037DD AD 83            [24] 9964 	mov	r5,dph
      0037DF EC               [12] 9965 	mov	a,r4
      0037E0 24r01            [12] 9966 	add	a,#_gsm_receive_buf
      0037E2 F5 82            [12] 9967 	mov	dpl,a
      0037E4 ED               [12] 9968 	mov	a,r5
      0037E5 34s01            [12] 9969 	addc	a,#(_gsm_receive_buf >> 8)
      0037E7 F5 83            [12] 9970 	mov	dph,a
      0037E9 E0               [24] 9971 	movx	a,@dptr
      0037EA FD               [12] 9972 	mov	r5,a
      0037EB BD 54 02         [24] 9973 	cjne	r5,#0x54,01214$
      0037EE 80 03            [24] 9974 	sjmp	01215$
      0037F0                       9975 01214$:
      0037F0 02r3Ar69         [24] 9976 	ljmp	00345$
      0037F3                       9977 01215$:
      0037F3                       9978 00273$:
                                   9979 ;	include/gsm_serial.c:636: {have_cusd = 1;}
                                   9980 ;	assignBit
      0037F3 D2*0D            [12] 9981 	setb	_have_cusd
                                   9982 ;	include/gsm_serial.c:637: break;
      0037F5 02r3Ar69         [24] 9983 	ljmp	00345$
                                   9984 ;	include/gsm_serial.c:638: case SDT:
      0037F8                       9985 00304$:
                                   9986 ;	include/gsm_serial.c:639: if(have_cusd){
      0037F8 20*0D 03         [24] 9987 	jb	_have_cusd,01216$
      0037FB 02r38r89         [24] 9988 	ljmp	00342$
      0037FE                       9989 01216$:
                                   9990 ;	include/gsm_serial.c:640: if((((nha_mang == VINAPHONE || nha_mang == VIETNAM) && SBUF !='\n') || (nha_mang == MOBIFONE && SBUF !='"') || (nha_mang == VIETTEL && SBUF !='.'))  && sms_index<10) 
      0037FE 90r00rF8         [24] 9991 	mov	dptr,#_nha_mang
      003801 E0               [24] 9992 	movx	a,@dptr
      003802 FD               [12] 9993 	mov	r5,a
      003803 BD 50 02         [24] 9994 	cjne	r5,#0x50,01217$
      003806 80 03            [24] 9995 	sjmp	00315$
      003808                       9996 01217$:
      003808 BD 6E 05         [24] 9997 	cjne	r5,#0x6e,00317$
      00380B                       9998 00315$:
      00380B 74 0A            [12] 9999 	mov	a,#0x0a
      00380D B5 99 12         [24]10000 	cjne	a,_SBUF,00320$
      003810                      10001 00317$:
      003810 BD 66 05         [24]10002 	cjne	r5,#0x66,00319$
      003813 74 22            [12]10003 	mov	a,#0x22
      003815 B5 99 0A         [24]10004 	cjne	a,_SBUF,00320$
      003818                      10005 00319$:
      003818 BD 74 3D         [24]10006 	cjne	r5,#0x74,00312$
      00381B 74 2E            [12]10007 	mov	a,#0x2e
      00381D B5 99 02         [24]10008 	cjne	a,_SBUF,01228$
      003820 80 36            [24]10009 	sjmp	00312$
      003822                      10010 01228$:
      003822                      10011 00320$:
      003822 90r00rBA         [24]10012 	mov	dptr,#_sms_index
      003825 E0               [24]10013 	movx	a,@dptr
      003826 FD               [12]10014 	mov	r5,a
      003827 BD 0A 00         [24]10015 	cjne	r5,#0x0a,01229$
      00382A                      10016 01229$:
      00382A 50 2C            [24]10017 	jnc	00312$
                                  10018 ;	include/gsm_serial.c:641: if(sms_index<9) phone[1+sms_index++] = SBUF;
      00382C BD 09 00         [24]10019 	cjne	r5,#0x09,01231$
      00382F                      10020 01231$:
      00382F 50 1E            [24]10021 	jnc	00306$
      003831 8D 14            [24]10022 	mov	ar4,r5
      003833 90r00rBA         [24]10023 	mov	dptr,#_sms_index
      003836 ED               [12]10024 	mov	a,r5
      003837 04               [12]10025 	inc	a
      003838 F0               [24]10026 	movx	@dptr,a
      003839 0C               [12]10027 	inc	r4
      00383A EC               [12]10028 	mov	a,r4
      00383B 33               [12]10029 	rlc	a
      00383C 95 E0            [12]10030 	subb	a,acc
      00383E FB               [12]10031 	mov	r3,a
      00383F EC               [12]10032 	mov	a,r4
      003840 24r0B            [12]10033 	add	a,#_phone
      003842 F5 82            [12]10034 	mov	dpl,a
      003844 EB               [12]10035 	mov	a,r3
      003845 34s00            [12]10036 	addc	a,#(_phone >> 8)
      003847 F5 83            [12]10037 	mov	dph,a
      003849 E5 99            [12]10038 	mov	a,_SBUF
      00384B F0               [24]10039 	movx	@dptr,a
      00384C 02r3Ar69         [24]10040 	ljmp	00345$
      00384F                      10041 00306$:
                                  10042 ;	include/gsm_serial.c:642: else sms_index++;
      00384F 90r00rBA         [24]10043 	mov	dptr,#_sms_index
      003852 ED               [12]10044 	mov	a,r5
      003853 04               [12]10045 	inc	a
      003854 F0               [24]10046 	movx	@dptr,a
      003855 02r3Ar69         [24]10047 	ljmp	00345$
      003858                      10048 00312$:
                                  10049 ;	include/gsm_serial.c:644: have_quote = have_cusd = 0;                            
                                  10050 ;	assignBit
      003858 C2*0D            [12]10051 	clr	_have_cusd
                                  10052 ;	assignBit
      00385A C2*0F            [12]10053 	clr	_have_quote
                                  10054 ;	include/gsm_serial.c:645: if(sms_index<10){
      00385C 90r00rBA         [24]10055 	mov	dptr,#_sms_index
      00385F E0               [24]10056 	movx	a,@dptr
      003860 FD               [12]10057 	mov	r5,a
      003861 BD 0A 00         [24]10058 	cjne	r5,#0x0a,01233$
      003864                      10059 01233$:
      003864 50 16            [24]10060 	jnc	00309$
                                  10061 ;	include/gsm_serial.c:646: gui_lenh_thanh_cong = 1;
                                  10062 ;	assignBit
      003866 D2*2C            [12]10063 	setb	_gui_lenh_thanh_cong
                                  10064 ;	include/gsm_serial.c:647: phone[sms_index+1] = 0;
      003868 0D               [12]10065 	inc	r5
      003869 ED               [12]10066 	mov	a,r5
      00386A 33               [12]10067 	rlc	a
      00386B 95 E0            [12]10068 	subb	a,acc
      00386D FC               [12]10069 	mov	r4,a
      00386E ED               [12]10070 	mov	a,r5
      00386F 24r0B            [12]10071 	add	a,#_phone
      003871 F5 82            [12]10072 	mov	dpl,a
      003873 EC               [12]10073 	mov	a,r4
      003874 34s00            [12]10074 	addc	a,#(_phone >> 8)
      003876 F5 83            [12]10075 	mov	dph,a
      003878 E4               [12]10076 	clr	a
      003879 F0               [24]10077 	movx	@dptr,a
      00387A 80 05            [24]10078 	sjmp	00310$
      00387C                      10079 00309$:
                                  10080 ;	include/gsm_serial.c:649: else connect =0;
      00387C 90r00rFA         [24]10081 	mov	dptr,#_connect
      00387F E4               [12]10082 	clr	a
      003880 F0               [24]10083 	movx	@dptr,a
      003881                      10084 00310$:
                                  10085 ;	include/gsm_serial.c:650: sms_index = 0;
      003881 90r00rBA         [24]10086 	mov	dptr,#_sms_index
      003884 E4               [12]10087 	clr	a
      003885 F0               [24]10088 	movx	@dptr,a
      003886 02r3Ar69         [24]10089 	ljmp	00345$
      003889                      10090 00342$:
                                  10091 ;	include/gsm_serial.c:653: }else if((nha_mang == VINAPHONE && gsm_receive_buf[gsm_receive_pointer]==':' && gsm_receive_buf[(gsm_receive_pointer+12)%13] ==')') ||
      003889 90r00rF8         [24]10092 	mov	dptr,#_nha_mang
      00388C E0               [24]10093 	movx	a,@dptr
      00388D FD               [12]10094 	mov	r5,a
      00388E BD 50 40         [24]10095 	cjne	r5,#0x50,00336$
      003891 BE 3A 3D         [24]10096 	cjne	r6,#0x3a,00336$
      003894 8F 13            [24]10097 	mov	ar3,r7
      003896 7C 00            [12]10098 	mov	r4,#0x00
      003898 74 0C            [12]10099 	mov	a,#0x0c
      00389A 2B               [12]10100 	add	a,r3
      00389B F5 82            [12]10101 	mov	dpl,a
      00389D E4               [12]10102 	clr	a
      00389E 3C               [12]10103 	addc	a,r4
      00389F F5 83            [12]10104 	mov	dph,a
      0038A1 75*00 0D         [24]10105 	mov	__modsint_PARM_2,#0x0d
                                  10106 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0038A4 8C*01            [24]10107 	mov	(__modsint_PARM_2 + 1),r4
      0038A6 C0 17            [24]10108 	push	ar7
      0038A8 C0 16            [24]10109 	push	ar6
      0038AA C0 15            [24]10110 	push	ar5
      0038AC 75 D0 00         [24]10111 	mov	psw,#0x00
      0038AF 12r00r00         [24]10112 	lcall	__modsint
      0038B2 75 D0 10         [24]10113 	mov	psw,#0x10
      0038B5 AB 82            [24]10114 	mov	r3,dpl
      0038B7 AC 83            [24]10115 	mov	r4,dph
      0038B9 D0 15            [24]10116 	pop	ar5
      0038BB D0 16            [24]10117 	pop	ar6
      0038BD D0 17            [24]10118 	pop	ar7
      0038BF EB               [12]10119 	mov	a,r3
      0038C0 24r01            [12]10120 	add	a,#_gsm_receive_buf
      0038C2 F5 82            [12]10121 	mov	dpl,a
      0038C4 EC               [12]10122 	mov	a,r4
      0038C5 34s01            [12]10123 	addc	a,#(_gsm_receive_buf >> 8)
      0038C7 F5 83            [12]10124 	mov	dph,a
      0038C9 E0               [24]10125 	movx	a,@dptr
      0038CA FC               [12]10126 	mov	r4,a
      0038CB BC 29 03         [24]10127 	cjne	r4,#0x29,01239$
      0038CE 02r39r50         [24]10128 	ljmp	00329$
      0038D1                      10129 01239$:
      0038D1                      10130 00336$:
                                  10131 ;	include/gsm_serial.c:654: (nha_mang == VIETNAM   && gsm_receive_buf[gsm_receive_pointer]=='0' && gsm_receive_buf[(gsm_receive_pointer+12)%13] ==' ') ||
      0038D1 BD 6E 3F         [24]10132 	cjne	r5,#0x6e,00340$
      0038D4 BE 30 3C         [24]10133 	cjne	r6,#0x30,00340$
      0038D7 8F 13            [24]10134 	mov	ar3,r7
      0038D9 7C 00            [12]10135 	mov	r4,#0x00
      0038DB 74 0C            [12]10136 	mov	a,#0x0c
      0038DD 2B               [12]10137 	add	a,r3
      0038DE F5 82            [12]10138 	mov	dpl,a
      0038E0 E4               [12]10139 	clr	a
      0038E1 3C               [12]10140 	addc	a,r4
      0038E2 F5 83            [12]10141 	mov	dph,a
      0038E4 75*00 0D         [24]10142 	mov	__modsint_PARM_2,#0x0d
                                  10143 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0038E7 8C*01            [24]10144 	mov	(__modsint_PARM_2 + 1),r4
      0038E9 C0 17            [24]10145 	push	ar7
      0038EB C0 16            [24]10146 	push	ar6
      0038ED C0 15            [24]10147 	push	ar5
      0038EF 75 D0 00         [24]10148 	mov	psw,#0x00
      0038F2 12r00r00         [24]10149 	lcall	__modsint
      0038F5 75 D0 10         [24]10150 	mov	psw,#0x10
      0038F8 AB 82            [24]10151 	mov	r3,dpl
      0038FA AC 83            [24]10152 	mov	r4,dph
      0038FC D0 15            [24]10153 	pop	ar5
      0038FE D0 16            [24]10154 	pop	ar6
      003900 D0 17            [24]10155 	pop	ar7
      003902 EB               [12]10156 	mov	a,r3
      003903 24r01            [12]10157 	add	a,#_gsm_receive_buf
      003905 F5 82            [12]10158 	mov	dpl,a
      003907 EC               [12]10159 	mov	a,r4
      003908 34s01            [12]10160 	addc	a,#(_gsm_receive_buf >> 8)
      00390A F5 83            [12]10161 	mov	dph,a
      00390C E0               [24]10162 	movx	a,@dptr
      00390D FC               [12]10163 	mov	r4,a
      00390E BC 20 02         [24]10164 	cjne	r4,#0x20,01244$
      003911 80 3D            [24]10165 	sjmp	00329$
      003913                      10166 01244$:
      003913                      10167 00340$:
                                  10168 ;	include/gsm_serial.c:655: ((nha_mang == MOBIFONE || nha_mang == VIETTEL)  && gsm_receive_buf[gsm_receive_pointer]=='4' && gsm_receive_buf[(gsm_receive_pointer+12)%13] =='8'))
      003913 BD 66 02         [24]10169 	cjne	r5,#0x66,01245$
      003916 80 03            [24]10170 	sjmp	00338$
      003918                      10171 01245$:
      003918 BD 74 3A         [24]10172 	cjne	r5,#0x74,00330$
      00391B                      10173 00338$:
      00391B BE 34 37         [24]10174 	cjne	r6,#0x34,00330$
      00391E 8F 15            [24]10175 	mov	ar5,r7
      003920 7E 00            [12]10176 	mov	r6,#0x00
      003922 74 0C            [12]10177 	mov	a,#0x0c
      003924 2D               [12]10178 	add	a,r5
      003925 F5 82            [12]10179 	mov	dpl,a
      003927 E4               [12]10180 	clr	a
      003928 3E               [12]10181 	addc	a,r6
      003929 F5 83            [12]10182 	mov	dph,a
      00392B 75*00 0D         [24]10183 	mov	__modsint_PARM_2,#0x0d
                                  10184 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      00392E 8E*01            [24]10185 	mov	(__modsint_PARM_2 + 1),r6
      003930 C0 17            [24]10186 	push	ar7
      003932 75 D0 00         [24]10187 	mov	psw,#0x00
      003935 12r00r00         [24]10188 	lcall	__modsint
      003938 75 D0 10         [24]10189 	mov	psw,#0x10
      00393B AD 82            [24]10190 	mov	r5,dpl
      00393D AE 83            [24]10191 	mov	r6,dph
      00393F D0 17            [24]10192 	pop	ar7
      003941 ED               [12]10193 	mov	a,r5
      003942 24r01            [12]10194 	add	a,#_gsm_receive_buf
      003944 F5 82            [12]10195 	mov	dpl,a
      003946 EE               [12]10196 	mov	a,r6
      003947 34s01            [12]10197 	addc	a,#(_gsm_receive_buf >> 8)
      003949 F5 83            [12]10198 	mov	dph,a
      00394B E0               [24]10199 	movx	a,@dptr
      00394C FE               [12]10200 	mov	r6,a
      00394D BE 38 05         [24]10201 	cjne	r6,#0x38,00330$
      003950                      10202 00329$:
                                  10203 ;	include/gsm_serial.c:656: have_cusd = 1;
                                  10204 ;	assignBit
      003950 D2*0D            [12]10205 	setb	_have_cusd
      003952 02r3Ar69         [24]10206 	ljmp	00345$
      003955                      10207 00330$:
                                  10208 ;	include/gsm_serial.c:657: else if((SBUF=='5' && gsm_receive_buf[(gsm_receive_pointer+12)%13] =='1' && gsm_receive_buf[(gsm_receive_pointer+11)%13] ==' ' && gsm_receive_buf[(gsm_receive_pointer+10)%13] ==',') ||
      003955 74 35            [12]10209 	mov	a,#0x35
      003957 B5 99 02         [24]10210 	cjne	a,_SBUF,01252$
      00395A 80 03            [24]10211 	sjmp	01253$
      00395C                      10212 01252$:
      00395C 02r3Ar01         [24]10213 	ljmp	00328$
      00395F                      10214 01253$:
      00395F 8F 15            [24]10215 	mov	ar5,r7
      003961 7E 00            [12]10216 	mov	r6,#0x00
      003963 74 0C            [12]10217 	mov	a,#0x0c
      003965 2D               [12]10218 	add	a,r5
      003966 F5 82            [12]10219 	mov	dpl,a
      003968 E4               [12]10220 	clr	a
      003969 3E               [12]10221 	addc	a,r6
      00396A F5 83            [12]10222 	mov	dph,a
      00396C 75*00 0D         [24]10223 	mov	__modsint_PARM_2,#0x0d
                                  10224 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      00396F 8E*01            [24]10225 	mov	(__modsint_PARM_2 + 1),r6
      003971 C0 17            [24]10226 	push	ar7
      003973 C0 16            [24]10227 	push	ar6
      003975 C0 15            [24]10228 	push	ar5
      003977 75 D0 00         [24]10229 	mov	psw,#0x00
      00397A 12r00r00         [24]10230 	lcall	__modsint
      00397D 75 D0 10         [24]10231 	mov	psw,#0x10
      003980 AB 82            [24]10232 	mov	r3,dpl
      003982 AC 83            [24]10233 	mov	r4,dph
      003984 D0 15            [24]10234 	pop	ar5
      003986 D0 16            [24]10235 	pop	ar6
      003988 D0 17            [24]10236 	pop	ar7
      00398A EB               [12]10237 	mov	a,r3
      00398B 24r01            [12]10238 	add	a,#_gsm_receive_buf
      00398D F5 82            [12]10239 	mov	dpl,a
      00398F EC               [12]10240 	mov	a,r4
      003990 34s01            [12]10241 	addc	a,#(_gsm_receive_buf >> 8)
      003992 F5 83            [12]10242 	mov	dph,a
      003994 E0               [24]10243 	movx	a,@dptr
      003995 FC               [12]10244 	mov	r4,a
      003996 BC 31 68         [24]10245 	cjne	r4,#0x31,00328$
      003999 74 0B            [12]10246 	mov	a,#0x0b
      00399B 2D               [12]10247 	add	a,r5
      00399C F5 82            [12]10248 	mov	dpl,a
      00399E E4               [12]10249 	clr	a
      00399F 3E               [12]10250 	addc	a,r6
      0039A0 F5 83            [12]10251 	mov	dph,a
      0039A2 75*00 0D         [24]10252 	mov	__modsint_PARM_2,#0x0d
      0039A5 75*01 00         [24]10253 	mov	(__modsint_PARM_2 + 1),#0x00
      0039A8 C0 17            [24]10254 	push	ar7
      0039AA C0 16            [24]10255 	push	ar6
      0039AC C0 15            [24]10256 	push	ar5
      0039AE 75 D0 00         [24]10257 	mov	psw,#0x00
      0039B1 12r00r00         [24]10258 	lcall	__modsint
      0039B4 75 D0 10         [24]10259 	mov	psw,#0x10
      0039B7 AB 82            [24]10260 	mov	r3,dpl
      0039B9 AC 83            [24]10261 	mov	r4,dph
      0039BB D0 15            [24]10262 	pop	ar5
      0039BD D0 16            [24]10263 	pop	ar6
      0039BF D0 17            [24]10264 	pop	ar7
      0039C1 EB               [12]10265 	mov	a,r3
      0039C2 24r01            [12]10266 	add	a,#_gsm_receive_buf
      0039C4 F5 82            [12]10267 	mov	dpl,a
      0039C6 EC               [12]10268 	mov	a,r4
      0039C7 34s01            [12]10269 	addc	a,#(_gsm_receive_buf >> 8)
      0039C9 F5 83            [12]10270 	mov	dph,a
      0039CB E0               [24]10271 	movx	a,@dptr
      0039CC FC               [12]10272 	mov	r4,a
      0039CD BC 20 31         [24]10273 	cjne	r4,#0x20,00328$
      0039D0 74 0A            [12]10274 	mov	a,#0x0a
      0039D2 2D               [12]10275 	add	a,r5
      0039D3 F5 82            [12]10276 	mov	dpl,a
      0039D5 E4               [12]10277 	clr	a
      0039D6 3E               [12]10278 	addc	a,r6
      0039D7 F5 83            [12]10279 	mov	dph,a
      0039D9 75*00 0D         [24]10280 	mov	__modsint_PARM_2,#0x0d
      0039DC 75*01 00         [24]10281 	mov	(__modsint_PARM_2 + 1),#0x00
      0039DF C0 17            [24]10282 	push	ar7
      0039E1 75 D0 00         [24]10283 	mov	psw,#0x00
      0039E4 12r00r00         [24]10284 	lcall	__modsint
      0039E7 75 D0 10         [24]10285 	mov	psw,#0x10
      0039EA AD 82            [24]10286 	mov	r5,dpl
      0039EC AE 83            [24]10287 	mov	r6,dph
      0039EE D0 17            [24]10288 	pop	ar7
      0039F0 ED               [12]10289 	mov	a,r5
      0039F1 24r01            [12]10290 	add	a,#_gsm_receive_buf
      0039F3 F5 82            [12]10291 	mov	dpl,a
      0039F5 EE               [12]10292 	mov	a,r6
      0039F6 34s01            [12]10293 	addc	a,#(_gsm_receive_buf >> 8)
      0039F8 F5 83            [12]10294 	mov	dph,a
      0039FA E0               [24]10295 	movx	a,@dptr
      0039FB FE               [12]10296 	mov	r6,a
      0039FC BE 2C 02         [24]10297 	cjne	r6,#0x2c,01258$
      0039FF 80 66            [24]10298 	sjmp	00321$
      003A01                      10299 01258$:
      003A01                      10300 00328$:
                                  10301 ;	include/gsm_serial.c:658: (SBUF=='R'  && gsm_receive_buf[(gsm_receive_pointer+12)%13] =='R' && gsm_receive_buf[(gsm_receive_pointer+11)%13] =='E'))
      003A01 74 52            [12]10302 	mov	a,#0x52
      003A03 B5 99 63         [24]10303 	cjne	a,_SBUF,00345$
      003A06 8F 16            [24]10304 	mov	ar6,r7
      003A08 7F 00            [12]10305 	mov	r7,#0x00
      003A0A 74 0C            [12]10306 	mov	a,#0x0c
      003A0C 2E               [12]10307 	add	a,r6
      003A0D F5 82            [12]10308 	mov	dpl,a
      003A0F E4               [12]10309 	clr	a
      003A10 3F               [12]10310 	addc	a,r7
      003A11 F5 83            [12]10311 	mov	dph,a
      003A13 75*00 0D         [24]10312 	mov	__modsint_PARM_2,#0x0d
                                  10313 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      003A16 8F*01            [24]10314 	mov	(__modsint_PARM_2 + 1),r7
      003A18 C0 17            [24]10315 	push	ar7
      003A1A C0 16            [24]10316 	push	ar6
      003A1C 75 D0 00         [24]10317 	mov	psw,#0x00
      003A1F 12r00r00         [24]10318 	lcall	__modsint
      003A22 75 D0 10         [24]10319 	mov	psw,#0x10
      003A25 AC 82            [24]10320 	mov	r4,dpl
      003A27 AD 83            [24]10321 	mov	r5,dph
      003A29 D0 16            [24]10322 	pop	ar6
      003A2B D0 17            [24]10323 	pop	ar7
      003A2D EC               [12]10324 	mov	a,r4
      003A2E 24r01            [12]10325 	add	a,#_gsm_receive_buf
      003A30 F5 82            [12]10326 	mov	dpl,a
      003A32 ED               [12]10327 	mov	a,r5
      003A33 34s01            [12]10328 	addc	a,#(_gsm_receive_buf >> 8)
      003A35 F5 83            [12]10329 	mov	dph,a
      003A37 E0               [24]10330 	movx	a,@dptr
      003A38 FD               [12]10331 	mov	r5,a
      003A39 BD 52 2D         [24]10332 	cjne	r5,#0x52,00345$
      003A3C 74 0B            [12]10333 	mov	a,#0x0b
      003A3E 2E               [12]10334 	add	a,r6
      003A3F F5 82            [12]10335 	mov	dpl,a
      003A41 E4               [12]10336 	clr	a
      003A42 3F               [12]10337 	addc	a,r7
      003A43 F5 83            [12]10338 	mov	dph,a
      003A45 75*00 0D         [24]10339 	mov	__modsint_PARM_2,#0x0d
      003A48 75*01 00         [24]10340 	mov	(__modsint_PARM_2 + 1),#0x00
      003A4B 75 D0 00         [24]10341 	mov	psw,#0x00
      003A4E 12r00r00         [24]10342 	lcall	__modsint
      003A51 75 D0 10         [24]10343 	mov	psw,#0x10
      003A54 AE 82            [24]10344 	mov	r6,dpl
      003A56 AF 83            [24]10345 	mov	r7,dph
      003A58 EE               [12]10346 	mov	a,r6
      003A59 24r01            [12]10347 	add	a,#_gsm_receive_buf
      003A5B F5 82            [12]10348 	mov	dpl,a
      003A5D EF               [12]10349 	mov	a,r7
      003A5E 34s01            [12]10350 	addc	a,#(_gsm_receive_buf >> 8)
      003A60 F5 83            [12]10351 	mov	dph,a
      003A62 E0               [24]10352 	movx	a,@dptr
      003A63 FF               [12]10353 	mov	r7,a
      003A64 BF 45 02         [24]10354 	cjne	r7,#0x45,00345$
      003A67                      10355 00321$:
                                  10356 ;	include/gsm_serial.c:659: error = 1;
                                  10357 ;	assignBit
      003A67 D2*2F            [12]10358 	setb	_error
                                  10359 ;	include/gsm_serial.c:662: }
      003A69                      10360 00345$:
                                  10361 ;	include/gsm_serial.c:663: if(++gsm_receive_pointer>12) gsm_receive_pointer = 0;
      003A69 90r00rFF         [24]10362 	mov	dptr,#_gsm_receive_pointer
      003A6C E0               [24]10363 	movx	a,@dptr
      003A6D 24 01            [12]10364 	add	a,#0x01
      003A6F F0               [24]10365 	movx	@dptr,a
      003A70 E0               [24]10366 	movx	a,@dptr
      003A71 FF               [12]10367 	mov  r7,a
      003A72 24 F3            [12]10368 	add	a,#0xff - 0x0c
      003A74 50 05            [24]10369 	jnc	00347$
      003A76 90r00rFF         [24]10370 	mov	dptr,#_gsm_receive_pointer
      003A79 E4               [12]10371 	clr	a
      003A7A F0               [24]10372 	movx	@dptr,a
      003A7B                      10373 00347$:
                                  10374 ;	include/gsm_serial.c:664: gsm_RI = 0;
                                  10375 ;	assignBit
      003A7B C2 98            [12]10376 	clr	_RI
      003A7D                      10377 00350$:
                                  10378 ;	include/gsm_serial.c:666: }
      003A7D D0 D0            [24]10379 	pop	psw
      003A7F D0 00            [24]10380 	pop	(0+0)
      003A81 D0 01            [24]10381 	pop	(0+1)
      003A83 D0 02            [24]10382 	pop	(0+2)
      003A85 D0 03            [24]10383 	pop	(0+3)
      003A87 D0 04            [24]10384 	pop	(0+4)
      003A89 D0 05            [24]10385 	pop	(0+5)
      003A8B D0 06            [24]10386 	pop	(0+6)
      003A8D D0 07            [24]10387 	pop	(0+7)
      003A8F D0 83            [24]10388 	pop	dph
      003A91 D0 82            [24]10389 	pop	dpl
      003A93 D0 F0            [24]10390 	pop	b
      003A95 D0 E0            [24]10391 	pop	acc
      003A97 D0*00            [24]10392 	pop	bits
      003A99 32               [24]10393 	reti
                                  10394 ;------------------------------------------------------------
                                  10395 ;Allocation info for local variables in function 'xu_ly_tin_nhan'
                                  10396 ;------------------------------------------------------------
                                  10397 ;giodelta                  Allocated to registers r5 
                                  10398 ;phutdelta                 Allocated with name '_xu_ly_tin_nhan_phutdelta_65537_185'
                                  10399 ;kim_index                 Allocated with name '_xu_ly_tin_nhan_kim_index_65537_185'
                                  10400 ;nam                       Allocated to registers r7 
                                  10401 ;check                     Allocated to registers r6 r7 
                                  10402 ;sloc0                     Allocated with name '_xu_ly_tin_nhan_sloc0_1_0'
                                  10403 ;sloc1                     Allocated with name '_xu_ly_tin_nhan_sloc1_1_0'
                                  10404 ;sloc2                     Allocated with name '_xu_ly_tin_nhan_sloc2_1_0'
                                  10405 ;sloc3                     Allocated with name '_xu_ly_tin_nhan_sloc3_1_0'
                                  10406 ;sloc4                     Allocated with name '_xu_ly_tin_nhan_sloc4_1_0'
                                  10407 ;sloc5                     Allocated with name '_xu_ly_tin_nhan_sloc5_1_0'
                                  10408 ;sloc6                     Allocated with name '_xu_ly_tin_nhan_sloc6_1_0'
                                  10409 ;sloc7                     Allocated with name '_xu_ly_tin_nhan_sloc7_1_0'
                                  10410 ;i                         Allocated with name '_xu_ly_tin_nhan_i_65537_185'
                                  10411 ;------------------------------------------------------------
                                  10412 ;	include/xu_ly_tin_nhan.c:1: void xu_ly_tin_nhan(){
                                  10413 ;	-----------------------------------------
                                  10414 ;	 function xu_ly_tin_nhan
                                  10415 ;	-----------------------------------------
      003A9A                      10416 _xu_ly_tin_nhan:
                           000007 10417 	ar7 = 0x07
                           000006 10418 	ar6 = 0x06
                           000005 10419 	ar5 = 0x05
                           000004 10420 	ar4 = 0x04
                           000003 10421 	ar3 = 0x03
                           000002 10422 	ar2 = 0x02
                           000001 10423 	ar1 = 0x01
                           000000 10424 	ar0 = 0x00
                                  10425 ;	include/xu_ly_tin_nhan.c:3: lenh_khong_hop_le = 0;
                                  10426 ;	assignBit
      003A9A C2*0E            [12]10427 	clr	_lenh_khong_hop_le
                                  10428 ;	include/xu_ly_tin_nhan.c:6: while(lenh_sms[i++])WATCHDOG;
      003A9C 7F 00            [12]10429 	mov	r7,#0x00
      003A9E                      10430 00101$:
      003A9E EF               [12]10431 	mov	a,r7
      003A9F 24r16            [12]10432 	add	a,#_lenh_sms
      003AA1 FD               [12]10433 	mov	r5,a
      003AA2 E4               [12]10434 	clr	a
      003AA3 34s00            [12]10435 	addc	a,#(_lenh_sms >> 8)
      003AA5 FE               [12]10436 	mov	r6,a
      003AA6 0F               [12]10437 	inc	r7
      003AA7 8D 82            [24]10438 	mov	dpl,r5
      003AA9 8E 83            [24]10439 	mov	dph,r6
      003AAB E0               [24]10440 	movx	a,@dptr
      003AAC 60 05            [24]10441 	jz	00505$
      003AAE 43 C1 10         [24]10442 	orl	_WDT_CONTR,#0x10
                                  10443 ;	include/xu_ly_tin_nhan.c:7: while(i<160)lenh_sms[i++] = 0;
      003AB1 80 EB            [24]10444 	sjmp	00101$
      003AB3                      10445 00505$:
      003AB3                      10446 00104$:
      003AB3 BF A0 00         [24]10447 	cjne	r7,#0xa0,01673$
      003AB6                      10448 01673$:
      003AB6 50 0F            [24]10449 	jnc	00106$
      003AB8 EF               [12]10450 	mov	a,r7
      003AB9 24r16            [12]10451 	add	a,#_lenh_sms
      003ABB F5 82            [12]10452 	mov	dpl,a
      003ABD E4               [12]10453 	clr	a
      003ABE 34s00            [12]10454 	addc	a,#(_lenh_sms >> 8)
      003AC0 F5 83            [12]10455 	mov	dph,a
      003AC2 0F               [12]10456 	inc	r7
      003AC3 E4               [12]10457 	clr	a
      003AC4 F0               [24]10458 	movx	@dptr,a
      003AC5 80 EC            [24]10459 	sjmp	00104$
      003AC7                      10460 00106$:
                                  10461 ;	include/xu_ly_tin_nhan.c:9: if((lenh_sms[0]=='?'||lenh_sms[1]=='?') && !phone_chinh_so_sanh_that_bai)gui_huong_dan();
      003AC7 90r00r16         [24]10462 	mov	dptr,#_lenh_sms
      003ACA E0               [24]10463 	movx	a,@dptr
      003ACB FF               [12]10464 	mov	r7,a
      003ACC BF 3F 02         [24]10465 	cjne	r7,#0x3f,01675$
      003ACF 80 08            [24]10466 	sjmp	00487$
      003AD1                      10467 01675$:
      003AD1 90r00r17         [24]10468 	mov	dptr,#(_lenh_sms + 0x0001)
      003AD4 E0               [24]10469 	movx	a,@dptr
      003AD5 FF               [12]10470 	mov	r7,a
      003AD6 BF 3F 06         [24]10471 	cjne	r7,#0x3f,00484$
      003AD9                      10472 00487$:
      003AD9 20*06 03         [24]10473 	jb	_phone_chinh_so_sanh_that_bai,00484$
      003ADC 02r1Cr0F         [24]10474 	ljmp	_gui_huong_dan
      003ADF                      10475 00484$:
                                  10476 ;	include/xu_ly_tin_nhan.c:11: switch(lenh_sms[1]){
      003ADF 90r00r17         [24]10477 	mov	dptr,#(_lenh_sms + 0x0001)
      003AE2 E0               [24]10478 	movx	a,@dptr
      003AE3 FF               [12]10479 	mov	r7,a
      003AE4 BF 43 03         [24]10480 	cjne	r7,#0x43,01679$
      003AE7 02r42r35         [24]10481 	ljmp	00230$
      003AEA                      10482 01679$:
      003AEA BF 45 03         [24]10483 	cjne	r7,#0x45,01680$
      003AED 02r43rCF         [24]10484 	ljmp	00288$
      003AF0                      10485 01680$:
      003AF0 BF 48 02         [24]10486 	cjne	r7,#0x48,01681$
      003AF3 80 44            [24]10487 	sjmp	00108$
      003AF5                      10488 01681$:
      003AF5 BF 49 03         [24]10489 	cjne	r7,#0x49,01682$
      003AF8 02r4Ar95         [24]10490 	ljmp	00377$
      003AFB                      10491 01682$:
      003AFB BF 50 03         [24]10492 	cjne	r7,#0x50,01683$
      003AFE 02r47r63         [24]10493 	ljmp	00320$
      003B01                      10494 01683$:
      003B01 BF 53 03         [24]10495 	cjne	r7,#0x53,01684$
      003B04 02r42rED         [24]10496 	ljmp	00259$
      003B07                      10497 01684$:
      003B07 BF 54 03         [24]10498 	cjne	r7,#0x54,01685$
      003B0A 02r4Br06         [24]10499 	ljmp	00392$
      003B0D                      10500 01685$:
      003B0D BF 63 03         [24]10501 	cjne	r7,#0x63,01686$
      003B10 02r42r35         [24]10502 	ljmp	00230$
      003B13                      10503 01686$:
      003B13 BF 65 03         [24]10504 	cjne	r7,#0x65,01687$
      003B16 02r43rCF         [24]10505 	ljmp	00288$
      003B19                      10506 01687$:
      003B19 BF 68 02         [24]10507 	cjne	r7,#0x68,01688$
      003B1C 80 1B            [24]10508 	sjmp	00108$
      003B1E                      10509 01688$:
      003B1E BF 69 03         [24]10510 	cjne	r7,#0x69,01689$
      003B21 02r4Ar95         [24]10511 	ljmp	00377$
      003B24                      10512 01689$:
      003B24 BF 70 03         [24]10513 	cjne	r7,#0x70,01690$
      003B27 02r47r63         [24]10514 	ljmp	00320$
      003B2A                      10515 01690$:
      003B2A BF 73 03         [24]10516 	cjne	r7,#0x73,01691$
      003B2D 02r42rED         [24]10517 	ljmp	00259$
      003B30                      10518 01691$:
      003B30 BF 74 03         [24]10519 	cjne	r7,#0x74,01692$
      003B33 02r4Br06         [24]10520 	ljmp	00392$
      003B36                      10521 01692$:
      003B36 02r4Er33         [24]10522 	ljmp	00475$
                                  10523 ;	include/xu_ly_tin_nhan.c:13: case 'H':
      003B39                      10524 00108$:
                                  10525 ;	include/xu_ly_tin_nhan.c:14: if(lenh_sms[3]>48 && lenh_sms[3]<53 && !lenh_sms[6]){
      003B39 90r00r19         [24]10526 	mov	dptr,#(_lenh_sms + 0x0003)
      003B3C E0               [24]10527 	movx	a,@dptr
      003B3D FF               [12]10528 	mov	r7,a
      003B3E C3               [12]10529 	clr	c
      003B3F 74 30            [12]10530 	mov	a,#0x30
      003B41 9F               [12]10531 	subb	a,r7
      003B42 E4               [12]10532 	clr	a
      003B43 33               [12]10533 	rlc	a
      003B44 FE               [12]10534 	mov	r6,a
      003B45 7D 00            [12]10535 	mov	r5,#0x00
      003B47 70 03            [24]10536 	jnz	01693$
      003B49 02r3BrF2         [24]10537 	ljmp	00216$
      003B4C                      10538 01693$:
      003B4C BF 35 00         [24]10539 	cjne	r7,#0x35,01694$
      003B4F                      10540 01694$:
      003B4F 40 03            [24]10541 	jc	01695$
      003B51 02r3BrF2         [24]10542 	ljmp	00216$
      003B54                      10543 01695$:
      003B54 90r00r1C         [24]10544 	mov	dptr,#(_lenh_sms + 0x0006)
      003B57 E0               [24]10545 	movx	a,@dptr
      003B58 60 03            [24]10546 	jz	01696$
      003B5A 02r3BrF2         [24]10547 	ljmp	00216$
      003B5D                      10548 01696$:
                                  10549 ;	include/xu_ly_tin_nhan.c:15: if(lenh_sms[4] =='D' || lenh_sms[4] =='d') phutdelta = 4;
      003B5D 90r00r1A         [24]10550 	mov	dptr,#(_lenh_sms + 0x0004)
      003B60 E0               [24]10551 	movx	a,@dptr
      003B61 FE               [12]10552 	mov	r6,a
      003B62 BE 44 02         [24]10553 	cjne	r6,#0x44,01697$
      003B65 80 03            [24]10554 	sjmp	00112$
      003B67                      10555 01697$:
      003B67 BE 64 04         [24]10556 	cjne	r6,#0x64,00113$
      003B6A                      10557 00112$:
      003B6A 7D 04            [12]10558 	mov	r5,#0x04
      003B6C 80 0C            [24]10559 	sjmp	00114$
      003B6E                      10560 00113$:
                                  10561 ;	include/xu_ly_tin_nhan.c:16: else if(lenh_sms[4] != 'S' && lenh_sms[4] !='s' ) lenh_khong_hop_le = 1;
      003B6E BE 53 02         [24]10562 	cjne	r6,#0x53,01700$
      003B71 80 07            [24]10563 	sjmp	00114$
      003B73                      10564 01700$:
      003B73 BE 73 02         [24]10565 	cjne	r6,#0x73,01701$
      003B76 80 02            [24]10566 	sjmp	00114$
      003B78                      10567 01701$:
                                  10568 ;	assignBit
      003B78 D2*0E            [12]10569 	setb	_lenh_khong_hop_le
      003B7A                      10570 00114$:
                                  10571 ;	include/xu_ly_tin_nhan.c:17: if(!lenh_khong_hop_le && (lenh_sms[5] == 'A' || lenh_sms[5] == 'a' || lenh_sms[3]>50)) phutdelta += 8;
      003B7A 20*0E 1C         [24]10572 	jb	_lenh_khong_hop_le,00121$
      003B7D 90r00r1B         [24]10573 	mov	dptr,#(_lenh_sms + 0x0005)
      003B80 E0               [24]10574 	movx	a,@dptr
      003B81 FE               [12]10575 	mov	r6,a
      003B82 BE 41 02         [24]10576 	cjne	r6,#0x41,01703$
      003B85 80 0A            [24]10577 	sjmp	00120$
      003B87                      10578 01703$:
      003B87 BE 61 02         [24]10579 	cjne	r6,#0x61,01704$
      003B8A 80 05            [24]10580 	sjmp	00120$
      003B8C                      10581 01704$:
      003B8C EF               [12]10582 	mov	a,r7
      003B8D 24 CD            [12]10583 	add	a,#0xff - 0x32
      003B8F 50 08            [24]10584 	jnc	00121$
      003B91                      10585 00120$:
      003B91 8D 06            [24]10586 	mov	ar6,r5
      003B93 74 08            [12]10587 	mov	a,#0x08
      003B95 2E               [12]10588 	add	a,r6
      003B96 FD               [12]10589 	mov	r5,a
      003B97 80 17            [24]10590 	sjmp	00122$
      003B99                      10591 00121$:
                                  10592 ;	include/xu_ly_tin_nhan.c:18: else if(!lenh_khong_hop_le && lenh_sms[5] != 'S' || lenh_sms[5] != 's') lenh_khong_hop_le = 1;
      003B99 20*0E 08         [24]10593 	jb	_lenh_khong_hop_le,00119$
      003B9C 90r00r1B         [24]10594 	mov	dptr,#(_lenh_sms + 0x0005)
      003B9F E0               [24]10595 	movx	a,@dptr
      003BA0 FE               [12]10596 	mov	r6,a
      003BA1 BE 53 0A         [24]10597 	cjne	r6,#0x53,00116$
      003BA4                      10598 00119$:
      003BA4 90r00r1B         [24]10599 	mov	dptr,#(_lenh_sms + 0x0005)
      003BA7 E0               [24]10600 	movx	a,@dptr
      003BA8 FE               [12]10601 	mov	r6,a
      003BA9 BE 73 02         [24]10602 	cjne	r6,#0x73,01709$
      003BAC 80 02            [24]10603 	sjmp	00122$
      003BAE                      10604 01709$:
      003BAE                      10605 00116$:
                                  10606 ;	assignBit
      003BAE D2*0E            [12]10607 	setb	_lenh_khong_hop_le
      003BB0                      10608 00122$:
                                  10609 ;	include/xu_ly_tin_nhan.c:19: phutdelta += lenh_sms[3]-48;
      003BB0 8F 06            [24]10610 	mov	ar6,r7
      003BB2 EE               [12]10611 	mov	a,r6
      003BB3 24 D0            [12]10612 	add	a,#0xd0
      003BB5 2D               [12]10613 	add	a,r5
      003BB6 FE               [12]10614 	mov	r6,a
                                  10615 ;	include/xu_ly_tin_nhan.c:20: IAP_docxoasector1();
      003BB7 C0 06            [24]10616 	push	ar6
      003BB9 12r00r00         [24]10617 	lcall	_IAP_docxoasector1
      003BBC D0 06            [24]10618 	pop	ar6
                                  10619 ;	include/xu_ly_tin_nhan.c:21: eeprom_buf[MOTOR_EEPROM] = phutdelta;
      003BBE 90r00rBC         [24]10620 	mov	dptr,#_eeprom_buf
      003BC1 EE               [12]10621 	mov	a,r6
      003BC2 F0               [24]10622 	movx	@dptr,a
                                  10623 ;	include/xu_ly_tin_nhan.c:22: IAP_ghisector1();
      003BC3 12r00r00         [24]10624 	lcall	_IAP_ghisector1
                                  10625 ;	include/xu_ly_tin_nhan.c:23: baocaosms(CHINH,"\rthay doi may va reset bo dieu khien");
                                  10626 ;	assignBit
      003BC6 D2*44            [12]10627 	setb	_baocaosms_PARM_1
      003BC8 90r07r59         [24]10628 	mov	dptr,#___str_81
      003BCB 75 F0 80         [24]10629 	mov	b,#0x80
      003BCE 12r17r8C         [24]10630 	lcall	_baocaosms
                                  10631 ;	include/xu_ly_tin_nhan.c:24: EA=0;
                                  10632 ;	assignBit
      003BD1 C2 AF            [12]10633 	clr	_EA
                                  10634 ;	include/xu_ly_tin_nhan.c:25: IAP_xoasector(SECTOR2);
      003BD3 90 02 00         [24]10635 	mov	dptr,#0x0200
      003BD6 12r00r00         [24]10636 	lcall	_IAP_xoasector
                                  10637 ;	include/xu_ly_tin_nhan.c:26: gsm_pw = 0;
                                  10638 ;	assignBit
      003BD9 C2 A0            [12]10639 	clr	_P20
                                  10640 ;	include/xu_ly_tin_nhan.c:27: IAP_ghibyte(NORRESET_EEPROM,0);
      003BDB 75*00 00         [24]10641 	mov	_IAP_ghibyte_PARM_2,#0x00
      003BDE 90 00 05         [24]10642 	mov	dptr,#0x0005
      003BE1 12r00r00         [24]10643 	lcall	_IAP_ghibyte
                                  10644 ;	include/xu_ly_tin_nhan.c:28: RingRelay = 1;
                                  10645 ;	assignBit
      003BE4 D2 A3            [12]10646 	setb	_P23
                                  10647 ;	include/xu_ly_tin_nhan.c:29: delay_ms(4000);
      003BE6 90 0F A0         [24]10648 	mov	dptr,#0x0fa0
      003BE9 12r00r00         [24]10649 	lcall	_delay_ms
                                  10650 ;	include/xu_ly_tin_nhan.c:30: IAP_CONTR = 0x60;
      003BEC 75 C7 60         [24]10651 	mov	_IAP_CONTR,#0x60
      003BEF 02r41rD2         [24]10652 	ljmp	00217$
      003BF2                      10653 00216$:
                                  10654 ;	include/xu_ly_tin_nhan.c:32: else if(lenh_sms[3]=='+'){
      003BF2 BF 2B 02         [24]10655 	cjne	r7,#0x2b,01710$
      003BF5 80 03            [24]10656 	sjmp	01711$
      003BF7                      10657 01710$:
      003BF7 02r3DrAF         [24]10658 	ljmp	00213$
      003BFA                      10659 01711$:
                                  10660 ;	include/xu_ly_tin_nhan.c:33: if (lenh_sms[4]>47 && lenh_sms[4]<51 && lenh_sms[5]>47 && lenh_sms[5]<58 &&
      003BFA 90r00r1A         [24]10661 	mov	dptr,#(_lenh_sms + 0x0004)
      003BFD E0               [24]10662 	movx	a,@dptr
      003BFE FE               [12]10663 	mov	r6,a
      003BFF C3               [12]10664 	clr	c
      003C00 74 2F            [12]10665 	mov	a,#0x2f
      003C02 9E               [12]10666 	subb	a,r6
      003C03 E4               [12]10667 	clr	a
      003C04 33               [12]10668 	rlc	a
      003C05 FD               [12]10669 	mov	r5,a
      003C06 70 03            [24]10670 	jnz	01712$
      003C08 02r3Dr3A         [24]10671 	ljmp	00133$
      003C0B                      10672 01712$:
      003C0B BE 33 00         [24]10673 	cjne	r6,#0x33,01713$
      003C0E                      10674 01713$:
      003C0E 40 03            [24]10675 	jc	01714$
      003C10 02r3Dr3A         [24]10676 	ljmp	00133$
      003C13                      10677 01714$:
      003C13 90r00r1B         [24]10678 	mov	dptr,#(_lenh_sms + 0x0005)
      003C16 E0               [24]10679 	movx	a,@dptr
      003C17 FC               [12]10680 	mov  r4,a
      003C18 24 D0            [12]10681 	add	a,#0xff - 0x2f
      003C1A 40 03            [24]10682 	jc	01715$
      003C1C 02r3Dr3A         [24]10683 	ljmp	00133$
      003C1F                      10684 01715$:
      003C1F BC 3A 00         [24]10685 	cjne	r4,#0x3a,01716$
      003C22                      10686 01716$:
      003C22 40 03            [24]10687 	jc	01717$
      003C24 02r3Dr3A         [24]10688 	ljmp	00133$
      003C27                      10689 01717$:
                                  10690 ;	include/xu_ly_tin_nhan.c:34: lenh_sms[6]>47 && lenh_sms[6]<54 && lenh_sms[7]>47 && lenh_sms[7]<58 &&
      003C27 90r00r1C         [24]10691 	mov	dptr,#(_lenh_sms + 0x0006)
      003C2A E0               [24]10692 	movx	a,@dptr
      003C2B FB               [12]10693 	mov  r3,a
      003C2C 24 D0            [12]10694 	add	a,#0xff - 0x2f
      003C2E 40 03            [24]10695 	jc	01718$
      003C30 02r3Dr3A         [24]10696 	ljmp	00133$
      003C33                      10697 01718$:
      003C33 BB 36 00         [24]10698 	cjne	r3,#0x36,01719$
      003C36                      10699 01719$:
      003C36 40 03            [24]10700 	jc	01720$
      003C38 02r3Dr3A         [24]10701 	ljmp	00133$
      003C3B                      10702 01720$:
      003C3B 90r00r1D         [24]10703 	mov	dptr,#(_lenh_sms + 0x0007)
      003C3E E0               [24]10704 	movx	a,@dptr
      003C3F F5*24            [12]10705 	mov  _xu_ly_tin_nhan_sloc4_1_0,a
      003C41 24 D0            [12]10706 	add	a,#0xff - 0x2f
      003C43 40 03            [24]10707 	jc	01721$
      003C45 02r3Dr3A         [24]10708 	ljmp	00133$
      003C48                      10709 01721$:
      003C48 74 C6            [12]10710 	mov	a,#0x100 - 0x3a
      003C4A 25*24            [12]10711 	add	a,_xu_ly_tin_nhan_sloc4_1_0
      003C4C 50 03            [24]10712 	jnc	01722$
      003C4E 02r3Dr3A         [24]10713 	ljmp	00133$
      003C51                      10714 01722$:
                                  10715 ;	include/xu_ly_tin_nhan.c:35: lenh_sms[9]>47 && lenh_sms[9]<51 && lenh_sms[10]>47 && lenh_sms[10]<58 &&
      003C51 90r00r1F         [24]10716 	mov	dptr,#(_lenh_sms + 0x0009)
      003C54 E0               [24]10717 	movx	a,@dptr
      003C55 F5*20            [12]10718 	mov  _xu_ly_tin_nhan_sloc0_1_0,a
      003C57 24 D0            [12]10719 	add	a,#0xff - 0x2f
      003C59 40 03            [24]10720 	jc	01723$
      003C5B 02r3Dr3A         [24]10721 	ljmp	00133$
      003C5E                      10722 01723$:
      003C5E 74 CD            [12]10723 	mov	a,#0x100 - 0x33
      003C60 25*20            [12]10724 	add	a,_xu_ly_tin_nhan_sloc0_1_0
      003C62 50 03            [24]10725 	jnc	01724$
      003C64 02r3Dr3A         [24]10726 	ljmp	00133$
      003C67                      10727 01724$:
      003C67 90r00r20         [24]10728 	mov	dptr,#(_lenh_sms + 0x000a)
      003C6A E0               [24]10729 	movx	a,@dptr
      003C6B F5*21            [12]10730 	mov  _xu_ly_tin_nhan_sloc1_1_0,a
      003C6D 24 D0            [12]10731 	add	a,#0xff - 0x2f
      003C6F 40 03            [24]10732 	jc	01725$
      003C71 02r3Dr3A         [24]10733 	ljmp	00133$
      003C74                      10734 01725$:
      003C74 74 C6            [12]10735 	mov	a,#0x100 - 0x3a
      003C76 25*21            [12]10736 	add	a,_xu_ly_tin_nhan_sloc1_1_0
      003C78 50 03            [24]10737 	jnc	01726$
      003C7A 02r3Dr3A         [24]10738 	ljmp	00133$
      003C7D                      10739 01726$:
                                  10740 ;	include/xu_ly_tin_nhan.c:36: lenh_sms[11]>47 && lenh_sms[11]<54 && lenh_sms[12]>47 && lenh_sms[12]<58){
      003C7D 90r00r21         [24]10741 	mov	dptr,#(_lenh_sms + 0x000b)
      003C80 E0               [24]10742 	movx	a,@dptr
      003C81 F5*22            [12]10743 	mov  _xu_ly_tin_nhan_sloc2_1_0,a
      003C83 24 D0            [12]10744 	add	a,#0xff - 0x2f
      003C85 40 03            [24]10745 	jc	01727$
      003C87 02r3Dr3A         [24]10746 	ljmp	00133$
      003C8A                      10747 01727$:
      003C8A 74 CA            [12]10748 	mov	a,#0x100 - 0x36
      003C8C 25*22            [12]10749 	add	a,_xu_ly_tin_nhan_sloc2_1_0
      003C8E 50 03            [24]10750 	jnc	01728$
      003C90 02r3Dr3A         [24]10751 	ljmp	00133$
      003C93                      10752 01728$:
      003C93 90r00r22         [24]10753 	mov	dptr,#(_lenh_sms + 0x000c)
      003C96 E0               [24]10754 	movx	a,@dptr
      003C97 F5*23            [12]10755 	mov  _xu_ly_tin_nhan_sloc3_1_0,a
      003C99 24 D0            [12]10756 	add	a,#0xff - 0x2f
      003C9B 40 03            [24]10757 	jc	01729$
      003C9D 02r3Dr3A         [24]10758 	ljmp	00133$
      003CA0                      10759 01729$:
      003CA0 74 C6            [12]10760 	mov	a,#0x100 - 0x3a
      003CA2 25*23            [12]10761 	add	a,_xu_ly_tin_nhan_sloc3_1_0
      003CA4 50 03            [24]10762 	jnc	01730$
      003CA6 02r3Dr3A         [24]10763 	ljmp	00133$
      003CA9                      10764 01730$:
                                  10765 ;	include/xu_ly_tin_nhan.c:37: giodelta = 2+lenh_sms[4]-lenh_sms[9];
      003CA9 8E 02            [24]10766 	mov	ar2,r6
      003CAB 74 02            [12]10767 	mov	a,#0x02
      003CAD 2A               [12]10768 	add	a,r2
      003CAE F5*25            [12]10769 	mov	_xu_ly_tin_nhan_sloc5_1_0,a
      003CB0 AA*20            [24]10770 	mov	r2,_xu_ly_tin_nhan_sloc0_1_0
      003CB2 C3               [12]10771 	clr	c
      003CB3 9A               [12]10772 	subb	a,r2
                                  10773 ;	include/xu_ly_tin_nhan.c:38: giodelta = giodelta*10 + 4 + hour + lenh_sms[5]-lenh_sms[10];
      003CB4 75 F0 0A         [24]10774 	mov	b,#0x0a
      003CB7 A4               [48]10775 	mul	ab
      003CB8 24 04            [12]10776 	add	a,#0x04
      003CBA F5*25            [12]10777 	mov	_xu_ly_tin_nhan_sloc5_1_0,a
      003CBC 25*02            [12]10778 	add	a,_hour
      003CBE 2C               [12]10779 	add	a,r4
      003CBF AC*21            [24]10780 	mov	r4,_xu_ly_tin_nhan_sloc1_1_0
      003CC1 C3               [12]10781 	clr	c
      003CC2 9C               [12]10782 	subb	a,r4
      003CC3 FA               [12]10783 	mov	r2,a
                                  10784 ;	include/xu_ly_tin_nhan.c:39: phutdelta = 6+lenh_sms[11]-lenh_sms[6];
      003CC4 AC*22            [24]10785 	mov	r4,_xu_ly_tin_nhan_sloc2_1_0
      003CC6 74 06            [12]10786 	mov	a,#0x06
      003CC8 2C               [12]10787 	add	a,r4
      003CC9 C3               [12]10788 	clr	c
      003CCA 9B               [12]10789 	subb	a,r3
                                  10790 ;	include/xu_ly_tin_nhan.c:40: phutdelta = phutdelta*10 + lenh_sms[12]-lenh_sms[7];
      003CCB 75 F0 0A         [24]10791 	mov	b,#0x0a
      003CCE A4               [48]10792 	mul	ab
      003CCF 25*23            [12]10793 	add	a,_xu_ly_tin_nhan_sloc3_1_0
      003CD1 AB*24            [24]10794 	mov	r3,_xu_ly_tin_nhan_sloc4_1_0
      003CD3 C3               [12]10795 	clr	c
      003CD4 9B               [12]10796 	subb	a,r3
      003CD5 F5*1E            [12]10797 	mov	_xu_ly_tin_nhan_phutdelta_65537_185,a
                                  10798 ;	include/xu_ly_tin_nhan.c:41: gio[0]  = (giodelta - (minute+60<phutdelta))%12;
      003CD7 8A*26            [24]10799 	mov	_xu_ly_tin_nhan_sloc6_1_0,r2
      003CD9 75*27 00         [24]10800 	mov	(_xu_ly_tin_nhan_sloc6_1_0 + 1),#0x00
      003CDC AB*01            [24]10801 	mov	r3,_minute
      003CDE 7C 00            [12]10802 	mov	r4,#0x00
      003CE0 74 3C            [12]10803 	mov	a,#0x3c
      003CE2 2B               [12]10804 	add	a,r3
      003CE3 F5*28            [12]10805 	mov	_xu_ly_tin_nhan_sloc7_1_0,a
      003CE5 E4               [12]10806 	clr	a
      003CE6 3C               [12]10807 	addc	a,r4
      003CE7 F5*29            [12]10808 	mov	(_xu_ly_tin_nhan_sloc7_1_0 + 1),a
      003CE9 AA*1E            [24]10809 	mov	r2,_xu_ly_tin_nhan_phutdelta_65537_185
      003CEB 7C 00            [12]10810 	mov	r4,#0x00
      003CED C3               [12]10811 	clr	c
      003CEE E5*28            [12]10812 	mov	a,_xu_ly_tin_nhan_sloc7_1_0
      003CF0 9A               [12]10813 	subb	a,r2
      003CF1 E5*29            [12]10814 	mov	a,(_xu_ly_tin_nhan_sloc7_1_0 + 1)
      003CF3 64 80            [12]10815 	xrl	a,#0x80
      003CF5 8C F0            [24]10816 	mov	b,r4
      003CF7 63 F0 80         [24]10817 	xrl	b,#0x80
      003CFA 95 F0            [12]10818 	subb	a,b
      003CFC E4               [12]10819 	clr	a
      003CFD 33               [12]10820 	rlc	a
      003CFE FA               [12]10821 	mov	r2,a
      003CFF 7C 00            [12]10822 	mov	r4,#0x00
      003D01 E5*26            [12]10823 	mov	a,_xu_ly_tin_nhan_sloc6_1_0
      003D03 C3               [12]10824 	clr	c
      003D04 9A               [12]10825 	subb	a,r2
      003D05 F5 82            [12]10826 	mov	dpl,a
      003D07 E5*27            [12]10827 	mov	a,(_xu_ly_tin_nhan_sloc6_1_0 + 1)
      003D09 9C               [12]10828 	subb	a,r4
      003D0A F5 83            [12]10829 	mov	dph,a
      003D0C 75*00 0C         [24]10830 	mov	__modsint_PARM_2,#0x0c
                                  10831 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      003D0F 8C*01            [24]10832 	mov	(__modsint_PARM_2 + 1),r4
      003D11 12r00r00         [24]10833 	lcall	__modsint
      003D14 AB 82            [24]10834 	mov	r3,dpl
      003D16 8B*04            [24]10835 	mov	_gio,r3
                                  10836 ;	include/xu_ly_tin_nhan.c:42: phutdelta = minute+120-phutdelta;
      003D18 AC*01            [24]10837 	mov	r4,_minute
      003D1A 74 78            [12]10838 	mov	a,#0x78
      003D1C 2C               [12]10839 	add	a,r4
      003D1D AB*1E            [24]10840 	mov	r3,_xu_ly_tin_nhan_phutdelta_65537_185
      003D1F C3               [12]10841 	clr	c
      003D20 9B               [12]10842 	subb	a,r3
      003D21 FC               [12]10843 	mov	r4,a
                                  10844 ;	include/xu_ly_tin_nhan.c:43: phut[0] = phutdelta%60;
      003D22 7B 00            [12]10845 	mov	r3,#0x00
      003D24 75*00 3C         [24]10846 	mov	__modsint_PARM_2,#0x3c
                                  10847 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      003D27 8B*01            [24]10848 	mov	(__modsint_PARM_2 + 1),r3
      003D29 8C 82            [24]10849 	mov	dpl,r4
      003D2B 8B 83            [24]10850 	mov	dph,r3
      003D2D 12r00r00         [24]10851 	lcall	__modsint
      003D30 AB 82            [24]10852 	mov	r3,dpl
      003D32 8B*08            [24]10853 	mov	_phut,r3
                                  10854 ;	include/xu_ly_tin_nhan.c:44: luu_gio_kim();
      003D34 12r06rDD         [24]10855 	lcall	_luu_gio_kim
      003D37 02r41rD2         [24]10856 	ljmp	00217$
      003D3A                      10857 00133$:
                                  10858 ;	include/xu_ly_tin_nhan.c:45: }else if(lenh_sms[4]>47 && lenh_sms[4]<54 && lenh_sms[5]>47 && lenh_sms[5]<58){
      003D3A ED               [12]10859 	mov	a,r5
      003D3B 60 6D            [24]10860 	jz	00127$
      003D3D BE 36 00         [24]10861 	cjne	r6,#0x36,01732$
      003D40                      10862 01732$:
      003D40 50 68            [24]10863 	jnc	00127$
      003D42 90r00r1B         [24]10864 	mov	dptr,#(_lenh_sms + 0x0005)
      003D45 E0               [24]10865 	movx	a,@dptr
      003D46 FD               [12]10866 	mov  r5,a
      003D47 24 D0            [12]10867 	add	a,#0xff - 0x2f
      003D49 50 5F            [24]10868 	jnc	00127$
      003D4B BD 3A 00         [24]10869 	cjne	r5,#0x3a,01735$
      003D4E                      10870 01735$:
      003D4E 50 5A            [24]10871 	jnc	00127$
                                  10872 ;	include/xu_ly_tin_nhan.c:46: phutdelta = (lenh_sms[4] - '0')*10 +lenh_sms[5]-'0';
      003D50 EE               [12]10873 	mov	a,r6
      003D51 24 D0            [12]10874 	add	a,#0xd0
      003D53 75 F0 0A         [24]10875 	mov	b,#0x0a
      003D56 A4               [48]10876 	mul	ab
      003D57 2D               [12]10877 	add	a,r5
      003D58 24 D0            [12]10878 	add	a,#0xd0
      003D5A FE               [12]10879 	mov	r6,a
                                  10880 ;	include/xu_ly_tin_nhan.c:47: giodelta = 12 + gio[0] - (phut[0]<phutdelta);
      003D5B AD*04            [24]10881 	mov	r5,_gio
      003D5D 74 0C            [12]10882 	mov	a,#0x0c
      003D5F 2D               [12]10883 	add	a,r5
      003D60 FD               [12]10884 	mov	r5,a
      003D61 C3               [12]10885 	clr	c
      003D62 E5*08            [12]10886 	mov	a,_phut
      003D64 9E               [12]10887 	subb	a,r6
      003D65 E4               [12]10888 	clr	a
      003D66 33               [12]10889 	rlc	a
      003D67 FC               [12]10890 	mov	r4,a
      003D68 ED               [12]10891 	mov	a,r5
      003D69 C3               [12]10892 	clr	c
      003D6A 9C               [12]10893 	subb	a,r4
      003D6B FD               [12]10894 	mov	r5,a
                                  10895 ;	include/xu_ly_tin_nhan.c:48: gio[0] = giodelta%12;
      003D6C 7C 00            [12]10896 	mov	r4,#0x00
      003D6E 75*00 0C         [24]10897 	mov	__modsint_PARM_2,#0x0c
                                  10898 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      003D71 8C*01            [24]10899 	mov	(__modsint_PARM_2 + 1),r4
      003D73 8D 82            [24]10900 	mov	dpl,r5
      003D75 8C 83            [24]10901 	mov	dph,r4
      003D77 C0 06            [24]10902 	push	ar6
      003D79 12r00r00         [24]10903 	lcall	__modsint
      003D7C AC 82            [24]10904 	mov	r4,dpl
      003D7E D0 06            [24]10905 	pop	ar6
      003D80 8C*04            [24]10906 	mov	_gio,r4
                                  10907 ;	include/xu_ly_tin_nhan.c:49: phut[0] = (60+phut[0]-phutdelta)%60;
      003D82 AC*08            [24]10908 	mov	r4,_phut
      003D84 7D 00            [12]10909 	mov	r5,#0x00
      003D86 74 3C            [12]10910 	mov	a,#0x3c
      003D88 2C               [12]10911 	add	a,r4
      003D89 FC               [12]10912 	mov	r4,a
      003D8A E4               [12]10913 	clr	a
      003D8B 3D               [12]10914 	addc	a,r5
      003D8C FD               [12]10915 	mov	r5,a
      003D8D 7B 00            [12]10916 	mov	r3,#0x00
      003D8F EC               [12]10917 	mov	a,r4
      003D90 C3               [12]10918 	clr	c
      003D91 9E               [12]10919 	subb	a,r6
      003D92 F5 82            [12]10920 	mov	dpl,a
      003D94 ED               [12]10921 	mov	a,r5
      003D95 9B               [12]10922 	subb	a,r3
      003D96 F5 83            [12]10923 	mov	dph,a
      003D98 75*00 3C         [24]10924 	mov	__modsint_PARM_2,#0x3c
                                  10925 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      003D9B 8B*01            [24]10926 	mov	(__modsint_PARM_2 + 1),r3
      003D9D 12r00r00         [24]10927 	lcall	__modsint
      003DA0 AD 82            [24]10928 	mov	r5,dpl
      003DA2 8D*08            [24]10929 	mov	_phut,r5
                                  10930 ;	include/xu_ly_tin_nhan.c:50: luu_gio_kim();
      003DA4 12r06rDD         [24]10931 	lcall	_luu_gio_kim
      003DA7 02r41rD2         [24]10932 	ljmp	00217$
      003DAA                      10933 00127$:
                                  10934 ;	include/xu_ly_tin_nhan.c:53: }else lenh_khong_hop_le=1;
                                  10935 ;	assignBit
      003DAA D2*0E            [12]10936 	setb	_lenh_khong_hop_le
      003DAC 02r41rD2         [24]10937 	ljmp	00217$
      003DAF                      10938 00213$:
                                  10939 ;	include/xu_ly_tin_nhan.c:54: }else if(lenh_sms[3]=='-'){
      003DAF BF 2D 46         [24]10940 	cjne	r7,#0x2d,00210$
                                  10941 ;	include/xu_ly_tin_nhan.c:55: if(lenh_sms[4]>47 && lenh_sms[4]<54 && lenh_sms[5]>47 && lenh_sms[5]<58){
      003DB2 90r00r1A         [24]10942 	mov	dptr,#(_lenh_sms + 0x0004)
      003DB5 E0               [24]10943 	movx	a,@dptr
      003DB6 FF               [12]10944 	mov  r7,a
      003DB7 24 D0            [12]10945 	add	a,#0xff - 0x2f
      003DB9 50 38            [24]10946 	jnc	00153$
      003DBB BF 36 00         [24]10947 	cjne	r7,#0x36,01740$
      003DBE                      10948 01740$:
      003DBE 50 33            [24]10949 	jnc	00153$
      003DC0 90r00r1B         [24]10950 	mov	dptr,#(_lenh_sms + 0x0005)
      003DC3 E0               [24]10951 	movx	a,@dptr
      003DC4 FE               [12]10952 	mov  r6,a
      003DC5 24 D0            [12]10953 	add	a,#0xff - 0x2f
      003DC7 50 2A            [24]10954 	jnc	00153$
      003DC9 BE 3A 00         [24]10955 	cjne	r6,#0x3a,01743$
      003DCC                      10956 01743$:
      003DCC 50 25            [24]10957 	jnc	00153$
                                  10958 ;	include/xu_ly_tin_nhan.c:56: phut[0] = phut[0] + (lenh_sms[4]-'0')*10 + lenh_sms[5]-'0';
      003DCE EF               [12]10959 	mov	a,r7
      003DCF 24 D0            [12]10960 	add	a,#0xd0
      003DD1 75 F0 0A         [24]10961 	mov	b,#0x0a
      003DD4 A4               [48]10962 	mul	ab
      003DD5 AD*08            [24]10963 	mov	r5,_phut
      003DD7 2D               [12]10964 	add	a,r5
      003DD8 2E               [12]10965 	add	a,r6
      003DD9 24 D0            [12]10966 	add	a,#0xd0
                                  10967 ;	include/xu_ly_tin_nhan.c:57: if(phut[0]>59){
      003DDB F5*08            [12]10968 	mov  _phut,a
      003DDD 24 C4            [12]10969 	add	a,#0xff - 0x3b
      003DDF 50 0C            [24]10970 	jnc	00151$
                                  10971 ;	include/xu_ly_tin_nhan.c:58: gio[0]++;
      003DE1 E5*04            [12]10972 	mov	a,_gio
      003DE3 04               [12]10973 	inc	a
      003DE4 F5*04            [12]10974 	mov	_gio,a
                                  10975 ;	include/xu_ly_tin_nhan.c:59: phut[0]-=60;
      003DE6 E5*08            [12]10976 	mov	a,_phut
      003DE8 FF               [12]10977 	mov	r7,a
      003DE9 24 C4            [12]10978 	add	a,#0xc4
      003DEB F5*08            [12]10979 	mov	_phut,a
      003DED                      10980 00151$:
                                  10981 ;	include/xu_ly_tin_nhan.c:61: luu_gio_kim();
      003DED 12r06rDD         [24]10982 	lcall	_luu_gio_kim
      003DF0 02r41rD2         [24]10983 	ljmp	00217$
      003DF3                      10984 00153$:
                                  10985 ;	include/xu_ly_tin_nhan.c:64: }else lenh_khong_hop_le=1;
                                  10986 ;	assignBit
      003DF3 D2*0E            [12]10987 	setb	_lenh_khong_hop_le
      003DF5 02r41rD2         [24]10988 	ljmp	00217$
      003DF8                      10989 00210$:
                                  10990 ;	include/xu_ly_tin_nhan.c:65: }else if(lenh_sms[4]=='N' || lenh_sms[4]=='n'){
      003DF8 90r00r1A         [24]10991 	mov	dptr,#(_lenh_sms + 0x0004)
      003DFB E0               [24]10992 	movx	a,@dptr
      003DFC FF               [12]10993 	mov	r7,a
      003DFD BF 4E 02         [24]10994 	cjne	r7,#0x4e,01746$
      003E00 80 03            [24]10995 	sjmp	00205$
      003E02                      10996 01746$:
      003E02 BF 6E 24         [24]10997 	cjne	r7,#0x6e,00206$
      003E05                      10998 00205$:
                                  10999 ;	include/xu_ly_tin_nhan.c:67: if(phone_chinh_so_sanh_that_bai)break;
      003E05 30*06 03         [24]11000 	jnb	_phone_chinh_so_sanh_that_bai,01749$
      003E08 02r4Er59         [24]11001 	ljmp	00479$
      003E0B                      11002 01749$:
                                  11003 ;	include/xu_ly_tin_nhan.c:68: IAP_docxoasector1();
      003E0B 12r00r00         [24]11004 	lcall	_IAP_docxoasector1
                                  11005 ;	include/xu_ly_tin_nhan.c:69: eeprom_buf[MOTOR_EEPROM] &= 0xef;
      003E0E 90r00rBC         [24]11006 	mov	dptr,#_eeprom_buf
      003E11 E0               [24]11007 	movx	a,@dptr
      003E12 54 EF            [12]11008 	anl	a,#0xef
      003E14 F0               [24]11009 	movx	@dptr,a
                                  11010 ;	include/xu_ly_tin_nhan.c:70: IAP_ghisector1();
      003E15 12r00r00         [24]11011 	lcall	_IAP_ghisector1
                                  11012 ;	include/xu_ly_tin_nhan.c:71: motor_dung = 0;
                                  11013 ;	assignBit
      003E18 C2*34            [12]11014 	clr	_motor_dung
                                  11015 ;	include/xu_ly_tin_nhan.c:72: mp3_status = mp3_IDLE;
      003E1A 78r01            [12]11016 	mov	r0,#_mp3_status
      003E1C 76 00            [12]11017 	mov	@r0,#0x00
                                  11018 ;	include/xu_ly_tin_nhan.c:73: mp3_hour= 24;
      003E1E 78r03            [12]11019 	mov	r0,#_mp3_hour
      003E20 76 18            [12]11020 	mov	@r0,#0x18
                                  11021 ;	include/xu_ly_tin_nhan.c:74: mp3_minute = 60;
      003E22 78r04            [12]11022 	mov	r0,#_mp3_minute
      003E24 76 3C            [12]11023 	mov	@r0,#0x3c
      003E26 02r41rD2         [24]11024 	ljmp	00217$
      003E29                      11025 00206$:
                                  11026 ;	include/xu_ly_tin_nhan.c:75: }else if(lenh_sms[4]=='F' || lenh_sms[4]=='f'){
      003E29 BF 46 02         [24]11027 	cjne	r7,#0x46,01750$
      003E2C 80 03            [24]11028 	sjmp	00201$
      003E2E                      11029 01750$:
      003E2E BF 66 39         [24]11030 	cjne	r7,#0x66,00202$
      003E31                      11031 00201$:
                                  11032 ;	include/xu_ly_tin_nhan.c:77: if(phone_chinh_so_sanh_that_bai)break;
      003E31 30*06 03         [24]11033 	jnb	_phone_chinh_so_sanh_that_bai,01753$
      003E34 02r4Er59         [24]11034 	ljmp	00479$
      003E37                      11035 01753$:
                                  11036 ;	include/xu_ly_tin_nhan.c:78: IAP_docxoasector1();
      003E37 12r00r00         [24]11037 	lcall	_IAP_docxoasector1
                                  11038 ;	include/xu_ly_tin_nhan.c:79: eeprom_buf[MOTOR_EEPROM] |= 0x10;
      003E3A 90r00rBC         [24]11039 	mov	dptr,#_eeprom_buf
      003E3D E0               [24]11040 	movx	a,@dptr
      003E3E 44 10            [12]11041 	orl	a,#0x10
      003E40 F0               [24]11042 	movx	@dptr,a
                                  11043 ;	include/xu_ly_tin_nhan.c:80: IAP_ghisector1();
      003E41 12r00r00         [24]11044 	lcall	_IAP_ghisector1
                                  11045 ;	include/xu_ly_tin_nhan.c:81: motor_dung = 1;
                                  11046 ;	assignBit
      003E44 D2*34            [12]11047 	setb	_motor_dung
                                  11048 ;	include/xu_ly_tin_nhan.c:82: if(eep_mp3%4==2 && mp3_playing) mp3_play(9,0,0);
      003E46 90 F0 10         [24]11049 	mov	dptr,#_eep_mp3
      003E49 E4               [12]11050 	clr	a
      003E4A 93               [24]11051 	movc	a,@a+dptr
      003E4B 54 03            [12]11052 	anl	a,#0x03
      003E4D FE               [12]11053 	mov	r6,a
      003E4E 7F 00            [12]11054 	mov	r7,#0x00
      003E50 BE 02 12         [24]11055 	cjne	r6,#0x02,00163$
      003E53 BF 00 0F         [24]11056 	cjne	r7,#0x00,00163$
      003E56 30 92 0C         [24]11057 	jnb	_P12,00163$
      003E59 75*00 00         [24]11058 	mov	_mp3_play_PARM_2,#0x00
      003E5C 75*00 00         [24]11059 	mov	_mp3_play_PARM_3,#0x00
      003E5F 75 82 09         [24]11060 	mov	dpl,#0x09
      003E62 12r00r00         [24]11061 	lcall	_mp3_play
      003E65                      11062 00163$:
                                  11063 ;	include/xu_ly_tin_nhan.c:83: AmplyRelay = 0;
                                  11064 ;	assignBit
      003E65 C2 C2            [12]11065 	clr	_P42
      003E67 02r41rD2         [24]11066 	ljmp	00217$
      003E6A                      11067 00202$:
                                  11068 ;	include/xu_ly_tin_nhan.c:86: i = 3;
      003E6A 90r01r33         [24]11069 	mov	dptr,#_xu_ly_tin_nhan_i_65537_185
      003E6D 74 03            [12]11070 	mov	a,#0x03
      003E6F F0               [24]11071 	movx	@dptr,a
                                  11072 ;	include/xu_ly_tin_nhan.c:87: kim_index = 1;
      003E70 75*1F 01         [24]11073 	mov	_xu_ly_tin_nhan_kim_index_65537_185,#0x01
                                  11074 ;	include/xu_ly_tin_nhan.c:88: do{
      003E73                      11075 00198$:
                                  11076 ;	include/xu_ly_tin_nhan.c:89: if(lenh_sms[i]==','){
      003E73 90r01r33         [24]11077 	mov	dptr,#_xu_ly_tin_nhan_i_65537_185
      003E76 E0               [24]11078 	movx	a,@dptr
      003E77 FE               [12]11079 	mov	r6,a
      003E78 24r16            [12]11080 	add	a,#_lenh_sms
      003E7A F5 82            [12]11081 	mov	dpl,a
      003E7C E4               [12]11082 	clr	a
      003E7D 34s00            [12]11083 	addc	a,#(_lenh_sms >> 8)
      003E7F F5 83            [12]11084 	mov	dph,a
      003E81 E0               [24]11085 	movx	a,@dptr
      003E82 FD               [12]11086 	mov	r5,a
      003E83 BD 2C 46         [24]11087 	cjne	r5,#0x2c,00196$
                                  11088 ;	include/xu_ly_tin_nhan.c:90: if(!kim_index)i = 101;
      003E86 E5*1F            [12]11089 	mov	a,_xu_ly_tin_nhan_kim_index_65537_185
      003E88 70 09            [24]11090 	jnz	00166$
      003E8A 90r01r33         [24]11091 	mov	dptr,#_xu_ly_tin_nhan_i_65537_185
      003E8D 74 65            [12]11092 	mov	a,#0x65
      003E8F F0               [24]11093 	movx	@dptr,a
      003E90 02r41rBC         [24]11094 	ljmp	00199$
      003E93                      11095 00166$:
                                  11096 ;	include/xu_ly_tin_nhan.c:92: kim_index = (kim_index+1)%(so_motor+1);
      003E93 AB*1F            [24]11097 	mov	r3,_xu_ly_tin_nhan_kim_index_65537_185
      003E95 7C 00            [12]11098 	mov	r4,#0x00
      003E97 74 01            [12]11099 	mov	a,#0x01
      003E99 2B               [12]11100 	add	a,r3
      003E9A F5*28            [12]11101 	mov	_xu_ly_tin_nhan_sloc7_1_0,a
      003E9C E4               [12]11102 	clr	a
      003E9D 3C               [12]11103 	addc	a,r4
      003E9E F5*29            [12]11104 	mov	(_xu_ly_tin_nhan_sloc7_1_0 + 1),a
      003EA0 90r01r2E         [24]11105 	mov	dptr,#_so_motor
      003EA3 E0               [24]11106 	movx	a,@dptr
      003EA4 FA               [12]11107 	mov	r2,a
      003EA5 7C 00            [12]11108 	mov	r4,#0x00
      003EA7 74 01            [12]11109 	mov	a,#0x01
      003EA9 2A               [12]11110 	add	a,r2
      003EAA F5*00            [12]11111 	mov	__modsint_PARM_2,a
      003EAC E4               [12]11112 	clr	a
      003EAD 3C               [12]11113 	addc	a,r4
      003EAE F5*01            [12]11114 	mov	(__modsint_PARM_2 + 1),a
      003EB0 85*28 82         [24]11115 	mov	dpl,_xu_ly_tin_nhan_sloc7_1_0
      003EB3 85*29 83         [24]11116 	mov	dph,(_xu_ly_tin_nhan_sloc7_1_0 + 1)
      003EB6 C0 06            [24]11117 	push	ar6
      003EB8 12r00r00         [24]11118 	lcall	__modsint
      003EBB AB 82            [24]11119 	mov	r3,dpl
      003EBD AC 83            [24]11120 	mov	r4,dph
      003EBF D0 06            [24]11121 	pop	ar6
      003EC1 8B*1F            [24]11122 	mov	_xu_ly_tin_nhan_kim_index_65537_185,r3
                                  11123 ;	include/xu_ly_tin_nhan.c:93: i++;
      003EC3 90r01r33         [24]11124 	mov	dptr,#_xu_ly_tin_nhan_i_65537_185
      003EC6 EE               [12]11125 	mov	a,r6
      003EC7 04               [12]11126 	inc	a
      003EC8 F0               [24]11127 	movx	@dptr,a
      003EC9 02r41rBC         [24]11128 	ljmp	00199$
      003ECC                      11129 00196$:
                                  11130 ;	include/xu_ly_tin_nhan.c:96: else if(lenh_sms[i]<48) i = !kim_index?101:202;
      003ECC BD 30 00         [24]11131 	cjne	r5,#0x30,01760$
      003ECF                      11132 01760$:
      003ECF 50 15            [24]11133 	jnc	00193$
      003ED1 E5*1F            [12]11134 	mov	a,_xu_ly_tin_nhan_kim_index_65537_185
      003ED3 70 05            [24]11135 	jnz	00496$
      003ED5 7C 65            [12]11136 	mov	r4,#0x65
      003ED7 FE               [12]11137 	mov	r6,a
      003ED8 80 04            [24]11138 	sjmp	00497$
      003EDA                      11139 00496$:
      003EDA 7C CA            [12]11140 	mov	r4,#0xca
      003EDC 7E 00            [12]11141 	mov	r6,#0x00
      003EDE                      11142 00497$:
      003EDE 90r01r33         [24]11143 	mov	dptr,#_xu_ly_tin_nhan_i_65537_185
      003EE1 EC               [12]11144 	mov	a,r4
      003EE2 F0               [24]11145 	movx	@dptr,a
      003EE3 02r41rBC         [24]11146 	ljmp	00199$
      003EE6                      11147 00193$:
                                  11148 ;	include/xu_ly_tin_nhan.c:97: else if(!kim_index && (lenh_sms[i]=='g' || lenh_sms[i]=='G' || lenh_sms[i]=='a' || lenh_sms[i]=='A')){
      003EE6 E5*1F            [12]11149 	mov	a,_xu_ly_tin_nhan_kim_index_65537_185
      003EE8 70 51            [24]11150 	jnz	00186$
      003EEA BD 67 02         [24]11151 	cjne	r5,#0x67,01764$
      003EED 80 0D            [24]11152 	sjmp	00185$
      003EEF                      11153 01764$:
      003EEF BD 47 02         [24]11154 	cjne	r5,#0x47,01765$
      003EF2 80 08            [24]11155 	sjmp	00185$
      003EF4                      11156 01765$:
      003EF4 BD 61 02         [24]11157 	cjne	r5,#0x61,01766$
      003EF7 80 03            [24]11158 	sjmp	00185$
      003EF9                      11159 01766$:
      003EF9 BD 41 3F         [24]11160 	cjne	r5,#0x41,00186$
      003EFC                      11161 00185$:
                                  11162 ;	include/xu_ly_tin_nhan.c:99: if(mp3_playing) mp3_play(9,0,0);
      003EFC 30 92 0C         [24]11163 	jnb	_P12,00169$
      003EFF 75*00 00         [24]11164 	mov	_mp3_play_PARM_2,#0x00
      003F02 75*00 00         [24]11165 	mov	_mp3_play_PARM_3,#0x00
      003F05 75 82 09         [24]11166 	mov	dpl,#0x09
      003F08 12r00r00         [24]11167 	lcall	_mp3_play
      003F0B                      11168 00169$:
                                  11169 ;	include/xu_ly_tin_nhan.c:100: AmplyRelay=0;
                                  11170 ;	assignBit
      003F0B C2 C2            [12]11171 	clr	_P42
                                  11172 ;	include/xu_ly_tin_nhan.c:101: mp3_status = mp3_IDLE;
      003F0D 78r01            [12]11173 	mov	r0,#_mp3_status
      003F0F 76 00            [12]11174 	mov	@r0,#0x00
                                  11175 ;	include/xu_ly_tin_nhan.c:103: gsm_thietlapngaygiothuc();
      003F11 12r1Cr8F         [24]11176 	lcall	_gsm_thietlapngaygiothuc
                                  11177 ;	include/xu_ly_tin_nhan.c:104: hour12 = hour%12;
      003F14 AD*02            [24]11178 	mov	r5,_hour
      003F16 7E 00            [12]11179 	mov	r6,#0x00
      003F18 75*00 0C         [24]11180 	mov	__modsint_PARM_2,#0x0c
                                  11181 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      003F1B 8E*01            [24]11182 	mov	(__modsint_PARM_2 + 1),r6
      003F1D 8D 82            [24]11183 	mov	dpl,r5
      003F1F 8E 83            [24]11184 	mov	dph,r6
      003F21 12r00r00         [24]11185 	lcall	__modsint
      003F24 AD 82            [24]11186 	mov	r5,dpl
      003F26 AE 83            [24]11187 	mov	r6,dph
      003F28 8D*03            [24]11188 	mov	_hour12,r5
                                  11189 ;	include/xu_ly_tin_nhan.c:105: mp3_hour = 24;
      003F2A 78r03            [12]11190 	mov	r0,#_mp3_hour
      003F2C 76 18            [12]11191 	mov	@r0,#0x18
                                  11192 ;	include/xu_ly_tin_nhan.c:106: mp3_minute = 60;
      003F2E 78r04            [12]11193 	mov	r0,#_mp3_minute
      003F30 76 3C            [12]11194 	mov	@r0,#0x3c
                                  11195 ;	include/xu_ly_tin_nhan.c:107: i = 101;
      003F32 90r01r33         [24]11196 	mov	dptr,#_xu_ly_tin_nhan_i_65537_185
      003F35 74 65            [12]11197 	mov	a,#0x65
      003F37 F0               [24]11198 	movx	@dptr,a
      003F38 02r41rBC         [24]11199 	ljmp	00199$
      003F3B                      11200 00186$:
                                  11201 ;	include/xu_ly_tin_nhan.c:109: else if(lenh_sms[i]>47 && lenh_sms[i]<51 && lenh_sms[i+1]>47 && lenh_sms[i+1]<58 &&
      003F3B 90r01r33         [24]11202 	mov	dptr,#_xu_ly_tin_nhan_i_65537_185
      003F3E E0               [24]11203 	movx	a,@dptr
      003F3F FE               [12]11204 	mov	r6,a
      003F40 24r16            [12]11205 	add	a,#_lenh_sms
      003F42 F5 82            [12]11206 	mov	dpl,a
      003F44 E4               [12]11207 	clr	a
      003F45 34s00            [12]11208 	addc	a,#(_lenh_sms >> 8)
      003F47 F5 83            [12]11209 	mov	dph,a
      003F49 E0               [24]11210 	movx	a,@dptr
      003F4A FD               [12]11211 	mov  r5,a
      003F4B 24 D0            [12]11212 	add	a,#0xff - 0x2f
      003F4D 40 03            [24]11213 	jc	01770$
      003F4F 02r41rB6         [24]11214 	ljmp	00176$
      003F52                      11215 01770$:
      003F52 BD 33 00         [24]11216 	cjne	r5,#0x33,01771$
      003F55                      11217 01771$:
      003F55 40 03            [24]11218 	jc	01772$
      003F57 02r41rB6         [24]11219 	ljmp	00176$
      003F5A                      11220 01772$:
      003F5A 8E 03            [24]11221 	mov	ar3,r6
      003F5C 7C 00            [12]11222 	mov	r4,#0x00
      003F5E 74 01            [12]11223 	mov	a,#0x01
      003F60 2B               [12]11224 	add	a,r3
      003F61 FA               [12]11225 	mov	r2,a
      003F62 E4               [12]11226 	clr	a
      003F63 3C               [12]11227 	addc	a,r4
      003F64 FF               [12]11228 	mov	r7,a
      003F65 EA               [12]11229 	mov	a,r2
      003F66 24r16            [12]11230 	add	a,#_lenh_sms
      003F68 F5 82            [12]11231 	mov	dpl,a
      003F6A EF               [12]11232 	mov	a,r7
      003F6B 34s00            [12]11233 	addc	a,#(_lenh_sms >> 8)
      003F6D F5 83            [12]11234 	mov	dph,a
      003F6F E0               [24]11235 	movx	a,@dptr
      003F70 FF               [12]11236 	mov  r7,a
      003F71 24 D0            [12]11237 	add	a,#0xff - 0x2f
      003F73 40 03            [24]11238 	jc	01773$
      003F75 02r41rB6         [24]11239 	ljmp	00176$
      003F78                      11240 01773$:
      003F78 74 01            [12]11241 	mov	a,#0x01
      003F7A 2B               [12]11242 	add	a,r3
      003F7B FA               [12]11243 	mov	r2,a
      003F7C E4               [12]11244 	clr	a
      003F7D 3C               [12]11245 	addc	a,r4
      003F7E FF               [12]11246 	mov	r7,a
      003F7F EA               [12]11247 	mov	a,r2
      003F80 24r16            [12]11248 	add	a,#_lenh_sms
      003F82 F5 82            [12]11249 	mov	dpl,a
      003F84 EF               [12]11250 	mov	a,r7
      003F85 34s00            [12]11251 	addc	a,#(_lenh_sms >> 8)
      003F87 F5 83            [12]11252 	mov	dph,a
      003F89 E0               [24]11253 	movx	a,@dptr
      003F8A FF               [12]11254 	mov	r7,a
      003F8B BF 3A 00         [24]11255 	cjne	r7,#0x3a,01774$
      003F8E                      11256 01774$:
      003F8E 40 03            [24]11257 	jc	01775$
      003F90 02r41rB6         [24]11258 	ljmp	00176$
      003F93                      11259 01775$:
                                  11260 ;	include/xu_ly_tin_nhan.c:110: lenh_sms[i+2]>47 && lenh_sms[i+2]<54 && lenh_sms[i+3]>47 && lenh_sms[i+3]<58){
      003F93 74 02            [12]11261 	mov	a,#0x02
      003F95 2B               [12]11262 	add	a,r3
      003F96 FA               [12]11263 	mov	r2,a
      003F97 E4               [12]11264 	clr	a
      003F98 3C               [12]11265 	addc	a,r4
      003F99 FF               [12]11266 	mov	r7,a
      003F9A EA               [12]11267 	mov	a,r2
      003F9B 24r16            [12]11268 	add	a,#_lenh_sms
      003F9D F5 82            [12]11269 	mov	dpl,a
      003F9F EF               [12]11270 	mov	a,r7
      003FA0 34s00            [12]11271 	addc	a,#(_lenh_sms >> 8)
      003FA2 F5 83            [12]11272 	mov	dph,a
      003FA4 E0               [24]11273 	movx	a,@dptr
      003FA5 FF               [12]11274 	mov  r7,a
      003FA6 24 D0            [12]11275 	add	a,#0xff - 0x2f
      003FA8 40 03            [24]11276 	jc	01776$
      003FAA 02r41rB6         [24]11277 	ljmp	00176$
      003FAD                      11278 01776$:
      003FAD 74 02            [12]11279 	mov	a,#0x02
      003FAF 2B               [12]11280 	add	a,r3
      003FB0 FA               [12]11281 	mov	r2,a
      003FB1 E4               [12]11282 	clr	a
      003FB2 3C               [12]11283 	addc	a,r4
      003FB3 FF               [12]11284 	mov	r7,a
      003FB4 EA               [12]11285 	mov	a,r2
      003FB5 24r16            [12]11286 	add	a,#_lenh_sms
      003FB7 F5 82            [12]11287 	mov	dpl,a
      003FB9 EF               [12]11288 	mov	a,r7
      003FBA 34s00            [12]11289 	addc	a,#(_lenh_sms >> 8)
      003FBC F5 83            [12]11290 	mov	dph,a
      003FBE E0               [24]11291 	movx	a,@dptr
      003FBF FF               [12]11292 	mov	r7,a
      003FC0 BF 36 00         [24]11293 	cjne	r7,#0x36,01777$
      003FC3                      11294 01777$:
      003FC3 40 03            [24]11295 	jc	01778$
      003FC5 02r41rB6         [24]11296 	ljmp	00176$
      003FC8                      11297 01778$:
      003FC8 74 03            [12]11298 	mov	a,#0x03
      003FCA 2B               [12]11299 	add	a,r3
      003FCB FA               [12]11300 	mov	r2,a
      003FCC E4               [12]11301 	clr	a
      003FCD 3C               [12]11302 	addc	a,r4
      003FCE FF               [12]11303 	mov	r7,a
      003FCF EA               [12]11304 	mov	a,r2
      003FD0 24r16            [12]11305 	add	a,#_lenh_sms
      003FD2 F5 82            [12]11306 	mov	dpl,a
      003FD4 EF               [12]11307 	mov	a,r7
      003FD5 34s00            [12]11308 	addc	a,#(_lenh_sms >> 8)
      003FD7 F5 83            [12]11309 	mov	dph,a
      003FD9 E0               [24]11310 	movx	a,@dptr
      003FDA FF               [12]11311 	mov  r7,a
      003FDB 24 D0            [12]11312 	add	a,#0xff - 0x2f
      003FDD 40 03            [24]11313 	jc	01779$
      003FDF 02r41rB6         [24]11314 	ljmp	00176$
      003FE2                      11315 01779$:
      003FE2 74 03            [12]11316 	mov	a,#0x03
      003FE4 2B               [12]11317 	add	a,r3
      003FE5 FA               [12]11318 	mov	r2,a
      003FE6 E4               [12]11319 	clr	a
      003FE7 3C               [12]11320 	addc	a,r4
      003FE8 FF               [12]11321 	mov	r7,a
      003FE9 EA               [12]11322 	mov	a,r2
      003FEA 24r16            [12]11323 	add	a,#_lenh_sms
      003FEC F5 82            [12]11324 	mov	dpl,a
      003FEE EF               [12]11325 	mov	a,r7
      003FEF 34s00            [12]11326 	addc	a,#(_lenh_sms >> 8)
      003FF1 F5 83            [12]11327 	mov	dph,a
      003FF3 E0               [24]11328 	movx	a,@dptr
      003FF4 FF               [12]11329 	mov	r7,a
      003FF5 BF 3A 00         [24]11330 	cjne	r7,#0x3a,01780$
      003FF8                      11331 01780$:
      003FF8 40 03            [24]11332 	jc	01781$
      003FFA 02r41rB6         [24]11333 	ljmp	00176$
      003FFD                      11334 01781$:
                                  11335 ;	include/xu_ly_tin_nhan.c:111: if(kim_index){
      003FFD E5*1F            [12]11336 	mov	a,_xu_ly_tin_nhan_kim_index_65537_185
      003FFF 70 03            [24]11337 	jnz	01782$
      004001 02r40rDE         [24]11338 	ljmp	00173$
      004004                      11339 01782$:
                                  11340 ;	include/xu_ly_tin_nhan.c:112: gio[kim_index-1] = ((lenh_sms[i]-'0')*10 + lenh_sms[i+1] - '0')%12;
      004004 AF*1F            [24]11341 	mov	r7,_xu_ly_tin_nhan_kim_index_65537_185
      004006 1F               [12]11342 	dec	r7
      004007 EF               [12]11343 	mov	a,r7
      004008 24r04            [12]11344 	add	a,#_gio
      00400A F5*28            [12]11345 	mov	_xu_ly_tin_nhan_sloc7_1_0,a
      00400C 7A 00            [12]11346 	mov	r2,#0x00
      00400E ED               [12]11347 	mov	a,r5
      00400F 24 D0            [12]11348 	add	a,#0xd0
      004011 F5*00            [12]11349 	mov	__mulint_PARM_2,a
      004013 EA               [12]11350 	mov	a,r2
      004014 34 FF            [12]11351 	addc	a,#0xff
      004016 F5*01            [12]11352 	mov	(__mulint_PARM_2 + 1),a
      004018 90 00 0A         [24]11353 	mov	dptr,#0x000a
      00401B C0 07            [24]11354 	push	ar7
      00401D C0 06            [24]11355 	push	ar6
      00401F C0 04            [24]11356 	push	ar4
      004021 C0 03            [24]11357 	push	ar3
      004023 12r00r00         [24]11358 	lcall	__mulint
      004026 85 82*26         [24]11359 	mov	_xu_ly_tin_nhan_sloc6_1_0,dpl
      004029 85 83*27         [24]11360 	mov	(_xu_ly_tin_nhan_sloc6_1_0 + 1),dph
      00402C D0 03            [24]11361 	pop	ar3
      00402E D0 04            [24]11362 	pop	ar4
      004030 74 01            [12]11363 	mov	a,#0x01
      004032 2B               [12]11364 	add	a,r3
      004033 FA               [12]11365 	mov	r2,a
      004034 E4               [12]11366 	clr	a
      004035 3C               [12]11367 	addc	a,r4
      004036 FD               [12]11368 	mov	r5,a
      004037 EA               [12]11369 	mov	a,r2
      004038 24r16            [12]11370 	add	a,#_lenh_sms
      00403A F5 82            [12]11371 	mov	dpl,a
      00403C ED               [12]11372 	mov	a,r5
      00403D 34s00            [12]11373 	addc	a,#(_lenh_sms >> 8)
      00403F F5 83            [12]11374 	mov	dph,a
      004041 E0               [24]11375 	movx	a,@dptr
      004042 7A 00            [12]11376 	mov	r2,#0x00
      004044 25*26            [12]11377 	add	a,_xu_ly_tin_nhan_sloc6_1_0
      004046 FD               [12]11378 	mov	r5,a
      004047 EA               [12]11379 	mov	a,r2
      004048 35*27            [12]11380 	addc	a,(_xu_ly_tin_nhan_sloc6_1_0 + 1)
      00404A FA               [12]11381 	mov	r2,a
      00404B ED               [12]11382 	mov	a,r5
      00404C 24 D0            [12]11383 	add	a,#0xd0
      00404E F5 82            [12]11384 	mov	dpl,a
      004050 EA               [12]11385 	mov	a,r2
      004051 34 FF            [12]11386 	addc	a,#0xff
      004053 F5 83            [12]11387 	mov	dph,a
      004055 75*00 0C         [24]11388 	mov	__modsint_PARM_2,#0x0c
      004058 75*01 00         [24]11389 	mov	(__modsint_PARM_2 + 1),#0x00
      00405B C0 04            [24]11390 	push	ar4
      00405D C0 03            [24]11391 	push	ar3
      00405F 12r00r00         [24]11392 	lcall	__modsint
      004062 AA 82            [24]11393 	mov	r2,dpl
      004064 D0 03            [24]11394 	pop	ar3
      004066 D0 04            [24]11395 	pop	ar4
      004068 D0 06            [24]11396 	pop	ar6
      00406A D0 07            [24]11397 	pop	ar7
      00406C A8*28            [24]11398 	mov	r0,_xu_ly_tin_nhan_sloc7_1_0
      00406E A6 02            [24]11399 	mov	@r0,ar2
                                  11400 ;	include/xu_ly_tin_nhan.c:113: phut[kim_index-1] = (lenh_sms[i+2]-'0')*10 + lenh_sms[i+3] - '0';
      004070 EF               [12]11401 	mov	a,r7
      004071 24r08            [12]11402 	add	a,#_phut
      004073 F9               [12]11403 	mov	r1,a
      004074 74 02            [12]11404 	mov	a,#0x02
      004076 2B               [12]11405 	add	a,r3
      004077 FD               [12]11406 	mov	r5,a
      004078 E4               [12]11407 	clr	a
      004079 3C               [12]11408 	addc	a,r4
      00407A FF               [12]11409 	mov	r7,a
      00407B ED               [12]11410 	mov	a,r5
      00407C 24r16            [12]11411 	add	a,#_lenh_sms
      00407E F5 82            [12]11412 	mov	dpl,a
      004080 EF               [12]11413 	mov	a,r7
      004081 34s00            [12]11414 	addc	a,#(_lenh_sms >> 8)
      004083 F5 83            [12]11415 	mov	dph,a
      004085 E0               [24]11416 	movx	a,@dptr
      004086 24 D0            [12]11417 	add	a,#0xd0
      004088 75 F0 0A         [24]11418 	mov	b,#0x0a
      00408B A4               [48]11419 	mul	ab
      00408C FF               [12]11420 	mov	r7,a
      00408D 74 03            [12]11421 	mov	a,#0x03
      00408F 2B               [12]11422 	add	a,r3
      004090 FB               [12]11423 	mov	r3,a
      004091 E4               [12]11424 	clr	a
      004092 3C               [12]11425 	addc	a,r4
      004093 FC               [12]11426 	mov	r4,a
      004094 EB               [12]11427 	mov	a,r3
      004095 24r16            [12]11428 	add	a,#_lenh_sms
      004097 F5 82            [12]11429 	mov	dpl,a
      004099 EC               [12]11430 	mov	a,r4
      00409A 34s00            [12]11431 	addc	a,#(_lenh_sms >> 8)
      00409C F5 83            [12]11432 	mov	dph,a
      00409E E0               [24]11433 	movx	a,@dptr
      00409F 2F               [12]11434 	add	a,r7
      0040A0 24 D0            [12]11435 	add	a,#0xd0
      0040A2 F7               [12]11436 	mov	@r1,a
                                  11437 ;	include/xu_ly_tin_nhan.c:114: luu_gio_kim();
      0040A3 C0 06            [24]11438 	push	ar6
      0040A5 12r06rDD         [24]11439 	lcall	_luu_gio_kim
      0040A8 D0 06            [24]11440 	pop	ar6
                                  11441 ;	include/xu_ly_tin_nhan.c:115: kim_index = (kim_index+1)%(so_motor+1);
      0040AA AD*1F            [24]11442 	mov	r5,_xu_ly_tin_nhan_kim_index_65537_185
      0040AC 7F 00            [12]11443 	mov	r7,#0x00
      0040AE 0D               [12]11444 	inc	r5
      0040AF BD 00 01         [24]11445 	cjne	r5,#0x00,01783$
      0040B2 0F               [12]11446 	inc	r7
      0040B3                      11447 01783$:
      0040B3 90r01r2E         [24]11448 	mov	dptr,#_so_motor
      0040B6 E0               [24]11449 	movx	a,@dptr
      0040B7 FC               [12]11450 	mov	r4,a
      0040B8 7B 00            [12]11451 	mov	r3,#0x00
      0040BA 74 01            [12]11452 	mov	a,#0x01
      0040BC 2C               [12]11453 	add	a,r4
      0040BD F5*00            [12]11454 	mov	__modsint_PARM_2,a
      0040BF E4               [12]11455 	clr	a
      0040C0 3B               [12]11456 	addc	a,r3
      0040C1 F5*01            [12]11457 	mov	(__modsint_PARM_2 + 1),a
      0040C3 8D 82            [24]11458 	mov	dpl,r5
      0040C5 8F 83            [24]11459 	mov	dph,r7
      0040C7 C0 06            [24]11460 	push	ar6
      0040C9 12r00r00         [24]11461 	lcall	__modsint
      0040CC AD 82            [24]11462 	mov	r5,dpl
      0040CE AF 83            [24]11463 	mov	r7,dph
      0040D0 D0 06            [24]11464 	pop	ar6
      0040D2 8D*1F            [24]11465 	mov	_xu_ly_tin_nhan_kim_index_65537_185,r5
                                  11466 ;	include/xu_ly_tin_nhan.c:116: i+=5;
      0040D4 90r01r33         [24]11467 	mov	dptr,#_xu_ly_tin_nhan_i_65537_185
      0040D7 74 05            [12]11468 	mov	a,#0x05
      0040D9 2E               [12]11469 	add	a,r6
      0040DA F0               [24]11470 	movx	@dptr,a
      0040DB 02r41rBC         [24]11471 	ljmp	00199$
      0040DE                      11472 00173$:
                                  11473 ;	include/xu_ly_tin_nhan.c:118: if(mp3_playing) mp3_play(9,0,0);
      0040DE 30 92 0C         [24]11474 	jnb	_P12,00171$
      0040E1 75*00 00         [24]11475 	mov	_mp3_play_PARM_2,#0x00
      0040E4 75*00 00         [24]11476 	mov	_mp3_play_PARM_3,#0x00
      0040E7 75 82 09         [24]11477 	mov	dpl,#0x09
      0040EA 12r00r00         [24]11478 	lcall	_mp3_play
      0040ED                      11479 00171$:
                                  11480 ;	include/xu_ly_tin_nhan.c:119: AmplyRelay=0;
                                  11481 ;	assignBit
      0040ED C2 C2            [12]11482 	clr	_P42
                                  11483 ;	include/xu_ly_tin_nhan.c:120: mp3_status = mp3_IDLE;
      0040EF 78r01            [12]11484 	mov	r0,#_mp3_status
      0040F1 76 00            [12]11485 	mov	@r0,#0x00
                                  11486 ;	include/xu_ly_tin_nhan.c:121: hour = ((lenh_sms[i]-'0')*10 + lenh_sms[i+1] - '0')%24;
      0040F3 90r01r33         [24]11487 	mov	dptr,#_xu_ly_tin_nhan_i_65537_185
      0040F6 E0               [24]11488 	movx	a,@dptr
      0040F7 FF               [12]11489 	mov	r7,a
      0040F8 24r16            [12]11490 	add	a,#_lenh_sms
      0040FA F5 82            [12]11491 	mov	dpl,a
      0040FC E4               [12]11492 	clr	a
      0040FD 34s00            [12]11493 	addc	a,#(_lenh_sms >> 8)
      0040FF F5 83            [12]11494 	mov	dph,a
      004101 E0               [24]11495 	movx	a,@dptr
      004102 7D 00            [12]11496 	mov	r5,#0x00
      004104 24 D0            [12]11497 	add	a,#0xd0
      004106 F5*00            [12]11498 	mov	__mulint_PARM_2,a
      004108 ED               [12]11499 	mov	a,r5
      004109 34 FF            [12]11500 	addc	a,#0xff
      00410B F5*01            [12]11501 	mov	(__mulint_PARM_2 + 1),a
      00410D 90 00 0A         [24]11502 	mov	dptr,#0x000a
      004110 C0 07            [24]11503 	push	ar7
      004112 12r00r00         [24]11504 	lcall	__mulint
      004115 AD 82            [24]11505 	mov	r5,dpl
      004117 AE 83            [24]11506 	mov	r6,dph
      004119 D0 07            [24]11507 	pop	ar7
      00411B 7C 00            [12]11508 	mov	r4,#0x00
      00411D 74 01            [12]11509 	mov	a,#0x01
      00411F 2F               [12]11510 	add	a,r7
      004120 FA               [12]11511 	mov	r2,a
      004121 E4               [12]11512 	clr	a
      004122 3C               [12]11513 	addc	a,r4
      004123 FB               [12]11514 	mov	r3,a
      004124 EA               [12]11515 	mov	a,r2
      004125 24r16            [12]11516 	add	a,#_lenh_sms
      004127 F5 82            [12]11517 	mov	dpl,a
      004129 EB               [12]11518 	mov	a,r3
      00412A 34s00            [12]11519 	addc	a,#(_lenh_sms >> 8)
      00412C F5 83            [12]11520 	mov	dph,a
      00412E E0               [24]11521 	movx	a,@dptr
      00412F 7A 00            [12]11522 	mov	r2,#0x00
      004131 2D               [12]11523 	add	a,r5
      004132 FD               [12]11524 	mov	r5,a
      004133 EA               [12]11525 	mov	a,r2
      004134 3E               [12]11526 	addc	a,r6
      004135 FE               [12]11527 	mov	r6,a
      004136 ED               [12]11528 	mov	a,r5
      004137 24 D0            [12]11529 	add	a,#0xd0
      004139 F5 82            [12]11530 	mov	dpl,a
      00413B EE               [12]11531 	mov	a,r6
      00413C 34 FF            [12]11532 	addc	a,#0xff
      00413E F5 83            [12]11533 	mov	dph,a
      004140 75*00 18         [24]11534 	mov	__modsint_PARM_2,#0x18
                                  11535 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      004143 8C*01            [24]11536 	mov	(__modsint_PARM_2 + 1),r4
      004145 C0 07            [24]11537 	push	ar7
      004147 C0 04            [24]11538 	push	ar4
      004149 12r00r00         [24]11539 	lcall	__modsint
      00414C AD 82            [24]11540 	mov	r5,dpl
      00414E D0 04            [24]11541 	pop	ar4
      004150 D0 07            [24]11542 	pop	ar7
      004152 8D*02            [24]11543 	mov	_hour,r5
                                  11544 ;	include/xu_ly_tin_nhan.c:122: minute = (lenh_sms[i+2]-'0')*10 + lenh_sms[i+3] - '0';
      004154 74 02            [12]11545 	mov	a,#0x02
      004156 2F               [12]11546 	add	a,r7
      004157 FD               [12]11547 	mov	r5,a
      004158 E4               [12]11548 	clr	a
      004159 3C               [12]11549 	addc	a,r4
      00415A FE               [12]11550 	mov	r6,a
      00415B ED               [12]11551 	mov	a,r5
      00415C 24r16            [12]11552 	add	a,#_lenh_sms
      00415E F5 82            [12]11553 	mov	dpl,a
      004160 EE               [12]11554 	mov	a,r6
      004161 34s00            [12]11555 	addc	a,#(_lenh_sms >> 8)
      004163 F5 83            [12]11556 	mov	dph,a
      004165 E0               [24]11557 	movx	a,@dptr
      004166 24 D0            [12]11558 	add	a,#0xd0
      004168 75 F0 0A         [24]11559 	mov	b,#0x0a
      00416B A4               [48]11560 	mul	ab
      00416C FE               [12]11561 	mov	r6,a
      00416D 74 03            [12]11562 	mov	a,#0x03
      00416F 2F               [12]11563 	add	a,r7
      004170 FF               [12]11564 	mov	r7,a
      004171 E4               [12]11565 	clr	a
      004172 3C               [12]11566 	addc	a,r4
      004173 FC               [12]11567 	mov	r4,a
      004174 EF               [12]11568 	mov	a,r7
      004175 24r16            [12]11569 	add	a,#_lenh_sms
      004177 F5 82            [12]11570 	mov	dpl,a
      004179 EC               [12]11571 	mov	a,r4
      00417A 34s00            [12]11572 	addc	a,#(_lenh_sms >> 8)
      00417C F5 83            [12]11573 	mov	dph,a
      00417E E0               [24]11574 	movx	a,@dptr
      00417F 2E               [12]11575 	add	a,r6
      004180 24 D0            [12]11576 	add	a,#0xd0
      004182 F5*01            [12]11577 	mov	_minute,a
                                  11578 ;	include/xu_ly_tin_nhan.c:123: hour12=hour%12;
      004184 AE*02            [24]11579 	mov	r6,_hour
      004186 7F 00            [12]11580 	mov	r7,#0x00
      004188 75*00 0C         [24]11581 	mov	__modsint_PARM_2,#0x0c
                                  11582 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      00418B 8F*01            [24]11583 	mov	(__modsint_PARM_2 + 1),r7
      00418D 8E 82            [24]11584 	mov	dpl,r6
      00418F 8F 83            [24]11585 	mov	dph,r7
      004191 12r00r00         [24]11586 	lcall	__modsint
      004194 AE 82            [24]11587 	mov	r6,dpl
      004196 8E*03            [24]11588 	mov	_hour12,r6
                                  11589 ;	include/xu_ly_tin_nhan.c:124: rtc_settime(hour,minute,second);
      004198 85*01*00         [24]11590 	mov	_rtc_settime_PARM_2,_minute
      00419B 85*00*00         [24]11591 	mov	_rtc_settime_PARM_3,_second
      00419E 85*02 82         [24]11592 	mov	dpl,_hour
      0041A1 12r00r00         [24]11593 	lcall	_rtc_settime
                                  11594 ;	include/xu_ly_tin_nhan.c:125: GPS_time = 0;
                                  11595 ;	assignBit
      0041A4 C2*1B            [12]11596 	clr	_GPS_time
                                  11597 ;	include/xu_ly_tin_nhan.c:126: mp3_hour = 24;
      0041A6 78r03            [12]11598 	mov	r0,#_mp3_hour
      0041A8 76 18            [12]11599 	mov	@r0,#0x18
                                  11600 ;	include/xu_ly_tin_nhan.c:127: mp3_minute = 60;
      0041AA 78r04            [12]11601 	mov	r0,#_mp3_minute
      0041AC 76 3C            [12]11602 	mov	@r0,#0x3c
                                  11603 ;	include/xu_ly_tin_nhan.c:128: i= 101;
      0041AE 90r01r33         [24]11604 	mov	dptr,#_xu_ly_tin_nhan_i_65537_185
      0041B1 74 65            [12]11605 	mov	a,#0x65
      0041B3 F0               [24]11606 	movx	@dptr,a
      0041B4 80 06            [24]11607 	sjmp	00199$
      0041B6                      11608 00176$:
                                  11609 ;	include/xu_ly_tin_nhan.c:130: }else i = 202;
      0041B6 90r01r33         [24]11610 	mov	dptr,#_xu_ly_tin_nhan_i_65537_185
      0041B9 74 CA            [12]11611 	mov	a,#0xca
      0041BB F0               [24]11612 	movx	@dptr,a
      0041BC                      11613 00199$:
                                  11614 ;	include/xu_ly_tin_nhan.c:131: }while(i<100);
      0041BC 90r01r33         [24]11615 	mov	dptr,#_xu_ly_tin_nhan_i_65537_185
      0041BF E0               [24]11616 	movx	a,@dptr
      0041C0 FF               [12]11617 	mov	r7,a
      0041C1 BF 64 00         [24]11618 	cjne	r7,#0x64,01785$
      0041C4                      11619 01785$:
      0041C4 50 03            [24]11620 	jnc	01786$
      0041C6 02r3Er73         [24]11621 	ljmp	00198$
      0041C9                      11622 01786$:
                                  11623 ;	include/xu_ly_tin_nhan.c:132: lenh_khong_hop_le = i==202;
      0041C9 BF CA 03         [24]11624 	cjne	r7,#0xca,01787$
      0041CC D3               [12]11625 	setb	c
      0041CD 80 01            [24]11626 	sjmp	01788$
      0041CF                      11627 01787$:
      0041CF C3               [12]11628 	clr	c
      0041D0                      11629 01788$:
      0041D0 92*0E            [24]11630 	mov	_lenh_khong_hop_le,c
      0041D2                      11631 00217$:
                                  11632 ;	include/xu_ly_tin_nhan.c:138: motor_index = motor_run_check();
      0041D2 12r01rE8         [24]11633 	lcall	_motor_run_check
      0041D5 85 82*0D         [24]11634 	mov	_motor_index,dpl
                                  11635 ;	include/xu_ly_tin_nhan.c:139: motor_index2 = motor_run_check2();
      0041D8 12r04r60         [24]11636 	lcall	_motor_run_check2
      0041DB 85 82*0E         [24]11637 	mov	_motor_index2,dpl
                                  11638 ;	include/xu_ly_tin_nhan.c:140: if(lenh_khong_hop_le){
      0041DE 30*0E 2A         [24]11639 	jnb	_lenh_khong_hop_le,00227$
                                  11640 ;	include/xu_ly_tin_nhan.c:141: if(phone_phu_so_sanh_that_bai)
      0041E1 30*07 0E         [24]11641 	jnb	_phone_phu_so_sanh_that_bai,00221$
                                  11642 ;	include/xu_ly_tin_nhan.c:142: baocaosms(CHINH,"\rlenh khong hop le");
                                  11643 ;	assignBit
      0041E4 D2*44            [12]11644 	setb	_baocaosms_PARM_1
      0041E6 90r07r7E         [24]11645 	mov	dptr,#___str_82
      0041E9 75 F0 80         [24]11646 	mov	b,#0x80
      0041EC 12r17r8C         [24]11647 	lcall	_baocaosms
      0041EF 02r4Er59         [24]11648 	ljmp	00479$
      0041F2                      11649 00221$:
                                  11650 ;	include/xu_ly_tin_nhan.c:144: baocaosms(CHINH,"\rlenh dong ho khong hop le\rPhone phu gui lenh");
                                  11651 ;	assignBit
      0041F2 D2*44            [12]11652 	setb	_baocaosms_PARM_1
      0041F4 90r07r91         [24]11653 	mov	dptr,#___str_83
      0041F7 75 F0 80         [24]11654 	mov	b,#0x80
      0041FA 12r17r8C         [24]11655 	lcall	_baocaosms
                                  11656 ;	include/xu_ly_tin_nhan.c:145: baocaosms(PHU,"\rlenh khong hop le");
                                  11657 ;	assignBit
      0041FD C2*44            [12]11658 	clr	_baocaosms_PARM_1
      0041FF 90r07r7E         [24]11659 	mov	dptr,#___str_82
      004202 75 F0 80         [24]11660 	mov	b,#0x80
      004205 12r17r8C         [24]11661 	lcall	_baocaosms
      004208 02r4Er59         [24]11662 	ljmp	00479$
      00420B                      11663 00227$:
                                  11664 ;	include/xu_ly_tin_nhan.c:150: if(phone_phu_so_sanh_that_bai)
      00420B 30*07 0E         [24]11665 	jnb	_phone_phu_so_sanh_that_bai,00224$
                                  11666 ;	include/xu_ly_tin_nhan.c:151: baocaosms(CHINH,"\rchinh dong ho thanh cong");
                                  11667 ;	assignBit
      00420E D2*44            [12]11668 	setb	_baocaosms_PARM_1
      004210 90r07rBF         [24]11669 	mov	dptr,#___str_84
      004213 75 F0 80         [24]11670 	mov	b,#0x80
      004216 12r17r8C         [24]11671 	lcall	_baocaosms
      004219 02r4Er59         [24]11672 	ljmp	00479$
      00421C                      11673 00224$:
                                  11674 ;	include/xu_ly_tin_nhan.c:153: baocaosms(CHINH,"\rchinh dong ho thanh cong\rPhone phu gui lenh");
                                  11675 ;	assignBit
      00421C D2*44            [12]11676 	setb	_baocaosms_PARM_1
      00421E 90r07rD9         [24]11677 	mov	dptr,#___str_85
      004221 75 F0 80         [24]11678 	mov	b,#0x80
      004224 12r17r8C         [24]11679 	lcall	_baocaosms
                                  11680 ;	include/xu_ly_tin_nhan.c:154: baocaosms(PHU,"\rchinh dong ho thanh cong");
                                  11681 ;	assignBit
      004227 C2*44            [12]11682 	clr	_baocaosms_PARM_1
      004229 90r07rBF         [24]11683 	mov	dptr,#___str_84
      00422C 75 F0 80         [24]11684 	mov	b,#0x80
      00422F 12r17r8C         [24]11685 	lcall	_baocaosms
                                  11686 ;	include/xu_ly_tin_nhan.c:157: break;
      004232 02r4Er59         [24]11687 	ljmp	00479$
                                  11688 ;	include/xu_ly_tin_nhan.c:159: case 'C':
      004235                      11689 00230$:
                                  11690 ;	include/xu_ly_tin_nhan.c:160: if(lenh_sms[4]=='e' || lenh_sms[4]=='E'){
      004235 90r00r1A         [24]11691 	mov	dptr,#(_lenh_sms + 0x0004)
      004238 E0               [24]11692 	movx	a,@dptr
      004239 FF               [12]11693 	mov	r7,a
      00423A BF 65 02         [24]11694 	cjne	r7,#0x65,01792$
      00423D 80 03            [24]11695 	sjmp	00251$
      00423F                      11696 01792$:
      00423F BF 45 14         [24]11697 	cjne	r7,#0x45,00252$
      004242                      11698 00251$:
                                  11699 ;	include/xu_ly_tin_nhan.c:161: if(phone_chinh_so_sanh_that_bai)break;
      004242 30*06 03         [24]11700 	jnb	_phone_chinh_so_sanh_that_bai,01795$
      004245 02r4Er59         [24]11701 	ljmp	00479$
      004248                      11702 01795$:
                                  11703 ;	include/xu_ly_tin_nhan.c:162: baocaoden(CHINH,"\rbao cao den thanh cong");
                                  11704 ;	assignBit
      004248 D2*45            [12]11705 	setb	_baocaoden_PARM_1
      00424A 90r08r06         [24]11706 	mov	dptr,#___str_86
      00424D 75 F0 80         [24]11707 	mov	b,#0x80
      004250 12r1Br96         [24]11708 	lcall	_baocaoden
                                  11709 ;	include/xu_ly_tin_nhan.c:164: break;
      004253 02r4Er59         [24]11710 	ljmp	00479$
      004256                      11711 00252$:
                                  11712 ;	include/xu_ly_tin_nhan.c:166: else if(lenh_sms[4]=='n' || lenh_sms[4]=='N'){
      004256 BF 6E 02         [24]11713 	cjne	r7,#0x6e,01796$
      004259 80 03            [24]11714 	sjmp	00247$
      00425B                      11715 01796$:
      00425B BF 4E 14         [24]11716 	cjne	r7,#0x4e,00248$
      00425E                      11717 00247$:
                                  11718 ;	include/xu_ly_tin_nhan.c:167: if(phone_chinh_so_sanh_that_bai)break;
      00425E 30*06 03         [24]11719 	jnb	_phone_chinh_so_sanh_that_bai,01799$
      004261 02r4Er59         [24]11720 	ljmp	00479$
      004264                      11721 01799$:
                                  11722 ;	include/xu_ly_tin_nhan.c:168: IAP_docxoasector1();
      004264 12r00r00         [24]11723 	lcall	_IAP_docxoasector1
                                  11724 ;	include/xu_ly_tin_nhan.c:169: eeprom_buf[BAOCAO_EEPROM] = 1;
      004267 90r00rBD         [24]11725 	mov	dptr,#(_eeprom_buf + 0x0001)
      00426A 74 01            [12]11726 	mov	a,#0x01
      00426C F0               [24]11727 	movx	@dptr,a
                                  11728 ;	include/xu_ly_tin_nhan.c:170: IAP_ghisector1();
      00426D 12r00r00         [24]11729 	lcall	_IAP_ghisector1
      004270 80 51            [24]11730 	sjmp	00253$
      004272                      11731 00248$:
                                  11732 ;	include/xu_ly_tin_nhan.c:171: }else if(lenh_sms[4]=='f' || lenh_sms[4]=='F'){
      004272 BF 66 02         [24]11733 	cjne	r7,#0x66,01800$
      004275 80 03            [24]11734 	sjmp	00243$
      004277                      11735 01800$:
      004277 BF 46 13         [24]11736 	cjne	r7,#0x46,00244$
      00427A                      11737 00243$:
                                  11738 ;	include/xu_ly_tin_nhan.c:172: if(phone_chinh_so_sanh_that_bai)break;
      00427A 30*06 03         [24]11739 	jnb	_phone_chinh_so_sanh_that_bai,01803$
      00427D 02r4Er59         [24]11740 	ljmp	00479$
      004280                      11741 01803$:
                                  11742 ;	include/xu_ly_tin_nhan.c:173: IAP_docxoasector1();
      004280 12r00r00         [24]11743 	lcall	_IAP_docxoasector1
                                  11744 ;	include/xu_ly_tin_nhan.c:174: eeprom_buf[BAOCAO_EEPROM] = 0;
      004283 90r00rBD         [24]11745 	mov	dptr,#(_eeprom_buf + 0x0001)
      004286 E4               [12]11746 	clr	a
      004287 F0               [24]11747 	movx	@dptr,a
                                  11748 ;	include/xu_ly_tin_nhan.c:175: IAP_ghisector1();
      004288 12r00r00         [24]11749 	lcall	_IAP_ghisector1
      00428B 80 36            [24]11750 	sjmp	00253$
      00428D                      11751 00244$:
                                  11752 ;	include/xu_ly_tin_nhan.c:176: }else if(lenh_sms[2] && lenh_sms[3]){
      00428D 90r00r18         [24]11753 	mov	dptr,#(_lenh_sms + 0x0002)
      004290 E0               [24]11754 	movx	a,@dptr
      004291 60 30            [24]11755 	jz	00253$
      004293 90r00r19         [24]11756 	mov	dptr,#(_lenh_sms + 0x0003)
      004296 E0               [24]11757 	movx	a,@dptr
      004297 60 2A            [24]11758 	jz	00253$
                                  11759 ;	include/xu_ly_tin_nhan.c:177: if(phone_phu_so_sanh_that_bai)
      004299 30*07 0E         [24]11760 	jnb	_phone_phu_so_sanh_that_bai,00238$
                                  11761 ;	include/xu_ly_tin_nhan.c:178: baocaosms(CHINH,"\rlenh khong hop le");
                                  11762 ;	assignBit
      00429C D2*44            [12]11763 	setb	_baocaosms_PARM_1
      00429E 90r07r7E         [24]11764 	mov	dptr,#___str_82
      0042A1 75 F0 80         [24]11765 	mov	b,#0x80
      0042A4 12r17r8C         [24]11766 	lcall	_baocaosms
      0042A7 02r4Er59         [24]11767 	ljmp	00479$
      0042AA                      11768 00238$:
                                  11769 ;	include/xu_ly_tin_nhan.c:180: baocaosms(CHINH,"\rlenh khong hop le\rPhone phu gui lenh den");
                                  11770 ;	assignBit
      0042AA D2*44            [12]11771 	setb	_baocaosms_PARM_1
      0042AC 90r08r1E         [24]11772 	mov	dptr,#___str_87
      0042AF 75 F0 80         [24]11773 	mov	b,#0x80
      0042B2 12r17r8C         [24]11774 	lcall	_baocaosms
                                  11775 ;	include/xu_ly_tin_nhan.c:181: baocaosms(PHU,"\rlenh khong hop le");
                                  11776 ;	assignBit
      0042B5 C2*44            [12]11777 	clr	_baocaosms_PARM_1
      0042B7 90r07r7E         [24]11778 	mov	dptr,#___str_82
      0042BA 75 F0 80         [24]11779 	mov	b,#0x80
      0042BD 12r17r8C         [24]11780 	lcall	_baocaosms
                                  11781 ;	include/xu_ly_tin_nhan.c:183: break;
      0042C0 02r4Er59         [24]11782 	ljmp	00479$
      0042C3                      11783 00253$:
                                  11784 ;	include/xu_ly_tin_nhan.c:185: if(phone_phu_so_sanh_that_bai)
      0042C3 30*07 0E         [24]11785 	jnb	_phone_phu_so_sanh_that_bai,00256$
                                  11786 ;	include/xu_ly_tin_nhan.c:186: baocaosms(CHINH,"\rbao cao thanh cong");
                                  11787 ;	assignBit
      0042C6 D2*44            [12]11788 	setb	_baocaosms_PARM_1
      0042C8 90r08r48         [24]11789 	mov	dptr,#___str_88
      0042CB 75 F0 80         [24]11790 	mov	b,#0x80
      0042CE 12r17r8C         [24]11791 	lcall	_baocaosms
      0042D1 02r4Er59         [24]11792 	ljmp	00479$
      0042D4                      11793 00256$:
                                  11794 ;	include/xu_ly_tin_nhan.c:188: baocaosms(CHINH,"\rbao cao thanh cong\rPhone phu gui lenh");
                                  11795 ;	assignBit
      0042D4 D2*44            [12]11796 	setb	_baocaosms_PARM_1
      0042D6 90r08r5C         [24]11797 	mov	dptr,#___str_89
      0042D9 75 F0 80         [24]11798 	mov	b,#0x80
      0042DC 12r17r8C         [24]11799 	lcall	_baocaosms
                                  11800 ;	include/xu_ly_tin_nhan.c:189: baocaosms(PHU,"\rbao cao thanh cong");
                                  11801 ;	assignBit
      0042DF C2*44            [12]11802 	clr	_baocaosms_PARM_1
      0042E1 90r08r48         [24]11803 	mov	dptr,#___str_88
      0042E4 75 F0 80         [24]11804 	mov	b,#0x80
      0042E7 12r17r8C         [24]11805 	lcall	_baocaosms
                                  11806 ;	include/xu_ly_tin_nhan.c:191: break;
      0042EA 02r4Er59         [24]11807 	ljmp	00479$
                                  11808 ;	include/xu_ly_tin_nhan.c:193: case 'S':
      0042ED                      11809 00259$:
                                  11810 ;	include/xu_ly_tin_nhan.c:195: if(phone_chinh_so_sanh_that_bai)break;
      0042ED 30*06 03         [24]11811 	jnb	_phone_chinh_so_sanh_that_bai,01808$
      0042F0 02r4Er59         [24]11812 	ljmp	00479$
      0042F3                      11813 01808$:
                                  11814 ;	include/xu_ly_tin_nhan.c:196: if(lenh_sms[4]=='y' || lenh_sms[4]=='Y' || lenh_sms[4]=='D' || lenh_sms[4]=='d'){
      0042F3 90r00r1A         [24]11815 	mov	dptr,#(_lenh_sms + 0x0004)
      0042F6 E0               [24]11816 	movx	a,@dptr
      0042F7 FF               [12]11817 	mov	r7,a
      0042F8 BF 79 02         [24]11818 	cjne	r7,#0x79,01809$
      0042FB 80 0D            [24]11819 	sjmp	00281$
      0042FD                      11820 01809$:
      0042FD BF 59 02         [24]11821 	cjne	r7,#0x59,01810$
      004300 80 08            [24]11822 	sjmp	00281$
      004302                      11823 01810$:
      004302 BF 44 02         [24]11824 	cjne	r7,#0x44,01811$
      004305 80 03            [24]11825 	sjmp	00281$
      004307                      11826 01811$:
      004307 BF 64 26         [24]11827 	cjne	r7,#0x64,00282$
      00430A                      11828 00281$:
                                  11829 ;	include/xu_ly_tin_nhan.c:197: baocaosms(CHINH,"\rreset bo dieu khien");
                                  11830 ;	assignBit
      00430A D2*44            [12]11831 	setb	_baocaosms_PARM_1
      00430C 90r08r83         [24]11832 	mov	dptr,#___str_90
      00430F 75 F0 80         [24]11833 	mov	b,#0x80
      004312 12r17r8C         [24]11834 	lcall	_baocaosms
                                  11835 ;	include/xu_ly_tin_nhan.c:198: EA=0;
                                  11836 ;	assignBit
      004315 C2 AF            [12]11837 	clr	_EA
                                  11838 ;	include/xu_ly_tin_nhan.c:199: gsm_pw = 0;
                                  11839 ;	assignBit
      004317 C2 A0            [12]11840 	clr	_P20
                                  11841 ;	include/xu_ly_tin_nhan.c:200: IAP_ghibyte(NORRESET_EEPROM,0);
      004319 75*00 00         [24]11842 	mov	_IAP_ghibyte_PARM_2,#0x00
      00431C 90 00 05         [24]11843 	mov	dptr,#0x0005
      00431F 12r00r00         [24]11844 	lcall	_IAP_ghibyte
                                  11845 ;	include/xu_ly_tin_nhan.c:201: RingRelay = 1;
                                  11846 ;	assignBit
      004322 D2 A3            [12]11847 	setb	_P23
                                  11848 ;	include/xu_ly_tin_nhan.c:202: delay_ms(4000);
      004324 90 0F A0         [24]11849 	mov	dptr,#0x0fa0
      004327 12r00r00         [24]11850 	lcall	_delay_ms
                                  11851 ;	include/xu_ly_tin_nhan.c:203: IAP_CONTR = 0x60;
      00432A 75 C7 60         [24]11852 	mov	_IAP_CONTR,#0x60
      00432D 02r4Er59         [24]11853 	ljmp	00479$
      004330                      11854 00282$:
                                  11855 ;	include/xu_ly_tin_nhan.c:206: else if(lenh_sms[4]=='g' || lenh_sms[4]=='G'){
      004330 BF 67 02         [24]11856 	cjne	r7,#0x67,01814$
      004333 80 03            [24]11857 	sjmp	00277$
      004335                      11858 01814$:
      004335 BF 47 71         [24]11859 	cjne	r7,#0x47,00278$
      004338                      11860 00277$:
                                  11861 ;	include/xu_ly_tin_nhan.c:207: if(lenh_sms[8]>47 && lenh_sms[8]<58){
      004338 90r00r1E         [24]11862 	mov	dptr,#(_lenh_sms + 0x0008)
      00433B E0               [24]11863 	movx	a,@dptr
      00433C FE               [12]11864 	mov  r6,a
      00433D 24 D0            [12]11865 	add	a,#0xff - 0x2f
      00433F 50 5A            [24]11866 	jnc	00270$
      004341 BE 3A 00         [24]11867 	cjne	r6,#0x3a,01818$
      004344                      11868 01818$:
      004344 50 55            [24]11869 	jnc	00270$
                                  11870 ;	include/xu_ly_tin_nhan.c:208: IAP_docxoasector1();
      004346 12r00r00         [24]11871 	lcall	_IAP_docxoasector1
                                  11872 ;	include/xu_ly_tin_nhan.c:209: ngay_reset_con_lai = eeprom_buf[NGAYRESET_EEPROM] = lenh_sms[8]-'0';
      004349 90r00r1E         [24]11873 	mov	dptr,#(_lenh_sms + 0x0008)
      00434C E0               [24]11874 	movx	a,@dptr
      00434D 24 D0            [12]11875 	add	a,#0xd0
      00434F FE               [12]11876 	mov	r6,a
      004350 90r00rBF         [24]11877 	mov	dptr,#(_eeprom_buf + 0x0003)
      004353 F0               [24]11878 	movx	@dptr,a
      004354 90r00rE5         [24]11879 	mov	dptr,#_ngay_reset_con_lai
      004357 EE               [12]11880 	mov	a,r6
      004358 F0               [24]11881 	movx	@dptr,a
                                  11882 ;	include/xu_ly_tin_nhan.c:210: if (lenh_sms[10]>47 && lenh_sms[10]<51 && lenh_sms[11]>47 && lenh_sms[11]<58){
      004359 90r00r20         [24]11883 	mov	dptr,#(_lenh_sms + 0x000a)
      00435C E0               [24]11884 	movx	a,@dptr
      00435D FE               [12]11885 	mov  r6,a
      00435E 24 D0            [12]11886 	add	a,#0xff - 0x2f
      004360 50 28            [24]11887 	jnc	00265$
      004362 BE 33 00         [24]11888 	cjne	r6,#0x33,01821$
      004365                      11889 01821$:
      004365 50 23            [24]11890 	jnc	00265$
      004367 90r00r21         [24]11891 	mov	dptr,#(_lenh_sms + 0x000b)
      00436A E0               [24]11892 	movx	a,@dptr
      00436B FD               [12]11893 	mov  r5,a
      00436C 24 D0            [12]11894 	add	a,#0xff - 0x2f
      00436E 50 1A            [24]11895 	jnc	00265$
      004370 BD 3A 00         [24]11896 	cjne	r5,#0x3a,01824$
      004373                      11897 01824$:
      004373 50 15            [24]11898 	jnc	00265$
                                  11899 ;	include/xu_ly_tin_nhan.c:211: giodelta = (lenh_sms[10] - '0')*10 + lenh_sms[11] - '0';
      004375 EE               [12]11900 	mov	a,r6
      004376 24 D0            [12]11901 	add	a,#0xd0
      004378 75 F0 0A         [24]11902 	mov	b,#0x0a
      00437B A4               [48]11903 	mul	ab
      00437C 2D               [12]11904 	add	a,r5
      00437D 24 D0            [12]11905 	add	a,#0xd0
      00437F FE               [12]11906 	mov	r6,a
                                  11907 ;	include/xu_ly_tin_nhan.c:212: if(giodelta<24)
      004380 BE 18 00         [24]11908 	cjne	r6,#0x18,01826$
      004383                      11909 01826$:
      004383 50 05            [24]11910 	jnc	00265$
                                  11911 ;	include/xu_ly_tin_nhan.c:213: eeprom_buf[GIORESET_EEPROM] = giodelta;
      004385 90r00rC0         [24]11912 	mov	dptr,#(_eeprom_buf + 0x0004)
      004388 EE               [12]11913 	mov	a,r6
      004389 F0               [24]11914 	movx	@dptr,a
      00438A                      11915 00265$:
                                  11916 ;	include/xu_ly_tin_nhan.c:215: IAP_ghisector1();
      00438A 12r00r00         [24]11917 	lcall	_IAP_ghisector1
                                  11918 ;	include/xu_ly_tin_nhan.c:216: baocaosms(CHINH,"\rdat reset thanh cong");
                                  11919 ;	assignBit
      00438D D2*44            [12]11920 	setb	_baocaosms_PARM_1
      00438F 90r08r98         [24]11921 	mov	dptr,#___str_91
      004392 75 F0 80         [24]11922 	mov	b,#0x80
      004395 12r17r8C         [24]11923 	lcall	_baocaosms
      004398 02r4Er59         [24]11924 	ljmp	00479$
      00439B                      11925 00270$:
                                  11926 ;	include/xu_ly_tin_nhan.c:219: baocaosms(CHINH,"\rdat reset khong hop le");   
                                  11927 ;	assignBit
      00439B D2*44            [12]11928 	setb	_baocaosms_PARM_1
      00439D 90r08rAE         [24]11929 	mov	dptr,#___str_92
      0043A0 75 F0 80         [24]11930 	mov	b,#0x80
      0043A3 12r17r8C         [24]11931 	lcall	_baocaosms
                                  11932 ;	include/xu_ly_tin_nhan.c:220: break;
      0043A6 02r4Er59         [24]11933 	ljmp	00479$
      0043A9                      11934 00278$:
                                  11935 ;	include/xu_ly_tin_nhan.c:224: else if(lenh_sms[4] == 'i' || lenh_sms[4] == 'I'){
      0043A9 BF 69 02         [24]11936 	cjne	r7,#0x69,01828$
      0043AC 80 03            [24]11937 	sjmp	00273$
      0043AE                      11938 01828$:
      0043AE BF 49 10         [24]11939 	cjne	r7,#0x49,00274$
      0043B1                      11940 00273$:
                                  11941 ;	include/xu_ly_tin_nhan.c:225: baocaosms(CHINH,"\rreset gsm sau10s");
                                  11942 ;	assignBit
      0043B1 D2*44            [12]11943 	setb	_baocaosms_PARM_1
      0043B3 90r08rC6         [24]11944 	mov	dptr,#___str_93
      0043B6 75 F0 80         [24]11945 	mov	b,#0x80
      0043B9 12r17r8C         [24]11946 	lcall	_baocaosms
                                  11947 ;	include/xu_ly_tin_nhan.c:226: gsm_pw = 0;
                                  11948 ;	assignBit
      0043BC C2 A0            [12]11949 	clr	_P20
      0043BE 02r4Er59         [24]11950 	ljmp	00479$
      0043C1                      11951 00274$:
                                  11952 ;	include/xu_ly_tin_nhan.c:227: }else baocaosms(CHINH,"\rlenh reset khong hop le");
                                  11953 ;	assignBit
      0043C1 D2*44            [12]11954 	setb	_baocaosms_PARM_1
      0043C3 90r08rD8         [24]11955 	mov	dptr,#___str_94
      0043C6 75 F0 80         [24]11956 	mov	b,#0x80
      0043C9 12r17r8C         [24]11957 	lcall	_baocaosms
                                  11958 ;	include/xu_ly_tin_nhan.c:232: break;
      0043CC 02r4Er59         [24]11959 	ljmp	00479$
                                  11960 ;	include/xu_ly_tin_nhan.c:247: case 'E':
      0043CF                      11961 00288$:
                                  11962 ;	include/xu_ly_tin_nhan.c:248: if(phone_chinh_so_sanh_that_bai)break;
      0043CF 30*06 03         [24]11963 	jnb	_phone_chinh_so_sanh_that_bai,01831$
      0043D2 02r4Er59         [24]11964 	ljmp	00479$
      0043D5                      11965 01831$:
                                  11966 ;	include/xu_ly_tin_nhan.c:249: if(lenh_sms[4]=='X' || lenh_sms[4]=='x'){
      0043D5 90r00r1A         [24]11967 	mov	dptr,#(_lenh_sms + 0x0004)
      0043D8 E0               [24]11968 	movx	a,@dptr
      0043D9 FF               [12]11969 	mov	r7,a
      0043DA BF 58 02         [24]11970 	cjne	r7,#0x58,01832$
      0043DD 80 03            [24]11971 	sjmp	00315$
      0043DF                      11972 01832$:
      0043DF BF 78 19         [24]11973 	cjne	r7,#0x78,00316$
      0043E2                      11974 00315$:
                                  11975 ;	include/xu_ly_tin_nhan.c:250: IAP_docxoasector1();
      0043E2 12r00r00         [24]11976 	lcall	_IAP_docxoasector1
                                  11977 ;	include/xu_ly_tin_nhan.c:251: eeprom_buf[TATMODEN_EEPROM] = 0;
      0043E5 90r00rC3         [24]11978 	mov	dptr,#(_eeprom_buf + 0x0007)
      0043E8 E4               [12]11979 	clr	a
      0043E9 F0               [24]11980 	movx	@dptr,a
                                  11981 ;	include/xu_ly_tin_nhan.c:252: IAP_ghisector1();
      0043EA 12r00r00         [24]11982 	lcall	_IAP_ghisector1
                                  11983 ;	include/xu_ly_tin_nhan.c:253: baocaoden(CHINH,"\rxoa gio den thanh cong");
                                  11984 ;	assignBit
      0043ED D2*45            [12]11985 	setb	_baocaoden_PARM_1
      0043EF 90r08rF1         [24]11986 	mov	dptr,#___str_95
      0043F2 75 F0 80         [24]11987 	mov	b,#0x80
      0043F5 12r1Br96         [24]11988 	lcall	_baocaoden
      0043F8 02r4Er59         [24]11989 	ljmp	00479$
      0043FB                      11990 00316$:
                                  11991 ;	include/xu_ly_tin_nhan.c:256: IAP_docxoasector1();
      0043FB 12r00r00         [24]11992 	lcall	_IAP_docxoasector1
                                  11993 ;	include/xu_ly_tin_nhan.c:257: IAP_ghisector1();
      0043FE 12r00r00         [24]11994 	lcall	_IAP_ghisector1
                                  11995 ;	include/xu_ly_tin_nhan.c:258: eeprom_buf[TATMODEN_EEPROM] = 0;
      004401 90r00rC3         [24]11996 	mov	dptr,#(_eeprom_buf + 0x0007)
      004404 E4               [12]11997 	clr	a
      004405 F0               [24]11998 	movx	@dptr,a
                                  11999 ;	include/xu_ly_tin_nhan.c:259: for(i=4;i<75;i+=10){
      004406 90r01r33         [24]12000 	mov	dptr,#_xu_ly_tin_nhan_i_65537_185
      004409 74 04            [12]12001 	mov	a,#0x04
      00440B F0               [24]12002 	movx	@dptr,a
      00440C                      12003 00488$:
                                  12004 ;	include/xu_ly_tin_nhan.c:260: if(lenh_sms[i]>47 && lenh_sms[i]<51 && lenh_sms[i+1]>47 && lenh_sms[i+1]<58 &&
      00440C 90r01r33         [24]12005 	mov	dptr,#_xu_ly_tin_nhan_i_65537_185
      00440F E0               [24]12006 	movx	a,@dptr
      004410 FF               [12]12007 	mov	r7,a
      004411 24r16            [12]12008 	add	a,#_lenh_sms
      004413 F5 82            [12]12009 	mov	dpl,a
      004415 E4               [12]12010 	clr	a
      004416 34s00            [12]12011 	addc	a,#(_lenh_sms >> 8)
      004418 F5 83            [12]12012 	mov	dph,a
      00441A E0               [24]12013 	movx	a,@dptr
      00441B FE               [12]12014 	mov  r6,a
      00441C 24 D0            [12]12015 	add	a,#0xff - 0x2f
      00441E 40 03            [24]12016 	jc	01835$
      004420 02r47r21         [24]12017 	ljmp	00292$
      004423                      12018 01835$:
      004423 BE 33 00         [24]12019 	cjne	r6,#0x33,01836$
      004426                      12020 01836$:
      004426 40 03            [24]12021 	jc	01837$
      004428 02r47r21         [24]12022 	ljmp	00292$
      00442B                      12023 01837$:
      00442B 8F 05            [24]12024 	mov	ar5,r7
      00442D 7F 00            [12]12025 	mov	r7,#0x00
      00442F 74 01            [12]12026 	mov	a,#0x01
      004431 2D               [12]12027 	add	a,r5
      004432 FB               [12]12028 	mov	r3,a
      004433 E4               [12]12029 	clr	a
      004434 3F               [12]12030 	addc	a,r7
      004435 FC               [12]12031 	mov	r4,a
      004436 EB               [12]12032 	mov	a,r3
      004437 24r16            [12]12033 	add	a,#_lenh_sms
      004439 F5 82            [12]12034 	mov	dpl,a
      00443B EC               [12]12035 	mov	a,r4
      00443C 34s00            [12]12036 	addc	a,#(_lenh_sms >> 8)
      00443E F5 83            [12]12037 	mov	dph,a
      004440 E0               [24]12038 	movx	a,@dptr
      004441 FC               [12]12039 	mov  r4,a
      004442 24 D0            [12]12040 	add	a,#0xff - 0x2f
      004444 40 03            [24]12041 	jc	01838$
      004446 02r47r21         [24]12042 	ljmp	00292$
      004449                      12043 01838$:
      004449 74 01            [12]12044 	mov	a,#0x01
      00444B 2D               [12]12045 	add	a,r5
      00444C FB               [12]12046 	mov	r3,a
      00444D E4               [12]12047 	clr	a
      00444E 3F               [12]12048 	addc	a,r7
      00444F FC               [12]12049 	mov	r4,a
      004450 EB               [12]12050 	mov	a,r3
      004451 24r16            [12]12051 	add	a,#_lenh_sms
      004453 F5 82            [12]12052 	mov	dpl,a
      004455 EC               [12]12053 	mov	a,r4
      004456 34s00            [12]12054 	addc	a,#(_lenh_sms >> 8)
      004458 F5 83            [12]12055 	mov	dph,a
      00445A E0               [24]12056 	movx	a,@dptr
      00445B FC               [12]12057 	mov	r4,a
      00445C BC 3A 00         [24]12058 	cjne	r4,#0x3a,01839$
      00445F                      12059 01839$:
      00445F 40 03            [24]12060 	jc	01840$
      004461 02r47r21         [24]12061 	ljmp	00292$
      004464                      12062 01840$:
                                  12063 ;	include/xu_ly_tin_nhan.c:261: lenh_sms[i+2]>47 && lenh_sms[i+2]<54 && lenh_sms[i+3]>47 && lenh_sms[i+3]<58 &&
      004464 74 02            [12]12064 	mov	a,#0x02
      004466 2D               [12]12065 	add	a,r5
      004467 FB               [12]12066 	mov	r3,a
      004468 E4               [12]12067 	clr	a
      004469 3F               [12]12068 	addc	a,r7
      00446A FC               [12]12069 	mov	r4,a
      00446B EB               [12]12070 	mov	a,r3
      00446C 24r16            [12]12071 	add	a,#_lenh_sms
      00446E F5 82            [12]12072 	mov	dpl,a
      004470 EC               [12]12073 	mov	a,r4
      004471 34s00            [12]12074 	addc	a,#(_lenh_sms >> 8)
      004473 F5 83            [12]12075 	mov	dph,a
      004475 E0               [24]12076 	movx	a,@dptr
      004476 FC               [12]12077 	mov  r4,a
      004477 24 D0            [12]12078 	add	a,#0xff - 0x2f
      004479 40 03            [24]12079 	jc	01841$
      00447B 02r47r21         [24]12080 	ljmp	00292$
      00447E                      12081 01841$:
      00447E 74 02            [12]12082 	mov	a,#0x02
      004480 2D               [12]12083 	add	a,r5
      004481 FB               [12]12084 	mov	r3,a
      004482 E4               [12]12085 	clr	a
      004483 3F               [12]12086 	addc	a,r7
      004484 FC               [12]12087 	mov	r4,a
      004485 EB               [12]12088 	mov	a,r3
      004486 24r16            [12]12089 	add	a,#_lenh_sms
      004488 F5 82            [12]12090 	mov	dpl,a
      00448A EC               [12]12091 	mov	a,r4
      00448B 34s00            [12]12092 	addc	a,#(_lenh_sms >> 8)
      00448D F5 83            [12]12093 	mov	dph,a
      00448F E0               [24]12094 	movx	a,@dptr
      004490 FC               [12]12095 	mov	r4,a
      004491 BC 36 00         [24]12096 	cjne	r4,#0x36,01842$
      004494                      12097 01842$:
      004494 40 03            [24]12098 	jc	01843$
      004496 02r47r21         [24]12099 	ljmp	00292$
      004499                      12100 01843$:
      004499 74 03            [12]12101 	mov	a,#0x03
      00449B 2D               [12]12102 	add	a,r5
      00449C FB               [12]12103 	mov	r3,a
      00449D E4               [12]12104 	clr	a
      00449E 3F               [12]12105 	addc	a,r7
      00449F FC               [12]12106 	mov	r4,a
      0044A0 EB               [12]12107 	mov	a,r3
      0044A1 24r16            [12]12108 	add	a,#_lenh_sms
      0044A3 F5 82            [12]12109 	mov	dpl,a
      0044A5 EC               [12]12110 	mov	a,r4
      0044A6 34s00            [12]12111 	addc	a,#(_lenh_sms >> 8)
      0044A8 F5 83            [12]12112 	mov	dph,a
      0044AA E0               [24]12113 	movx	a,@dptr
      0044AB FC               [12]12114 	mov  r4,a
      0044AC 24 D0            [12]12115 	add	a,#0xff - 0x2f
      0044AE 40 03            [24]12116 	jc	01844$
      0044B0 02r47r21         [24]12117 	ljmp	00292$
      0044B3                      12118 01844$:
      0044B3 74 03            [12]12119 	mov	a,#0x03
      0044B5 2D               [12]12120 	add	a,r5
      0044B6 FB               [12]12121 	mov	r3,a
      0044B7 E4               [12]12122 	clr	a
      0044B8 3F               [12]12123 	addc	a,r7
      0044B9 FC               [12]12124 	mov	r4,a
      0044BA EB               [12]12125 	mov	a,r3
      0044BB 24r16            [12]12126 	add	a,#_lenh_sms
      0044BD F5 82            [12]12127 	mov	dpl,a
      0044BF EC               [12]12128 	mov	a,r4
      0044C0 34s00            [12]12129 	addc	a,#(_lenh_sms >> 8)
      0044C2 F5 83            [12]12130 	mov	dph,a
      0044C4 E0               [24]12131 	movx	a,@dptr
      0044C5 FC               [12]12132 	mov	r4,a
      0044C6 BC 3A 00         [24]12133 	cjne	r4,#0x3a,01845$
      0044C9                      12134 01845$:
      0044C9 40 03            [24]12135 	jc	01846$
      0044CB 02r47r21         [24]12136 	ljmp	00292$
      0044CE                      12137 01846$:
                                  12138 ;	include/xu_ly_tin_nhan.c:262: lenh_sms[i+5]>47 && lenh_sms[i+5]<51 && lenh_sms[i+6]>47 && lenh_sms[i+6]<58 &&
      0044CE 74 05            [12]12139 	mov	a,#0x05
      0044D0 2D               [12]12140 	add	a,r5
      0044D1 FB               [12]12141 	mov	r3,a
      0044D2 E4               [12]12142 	clr	a
      0044D3 3F               [12]12143 	addc	a,r7
      0044D4 FC               [12]12144 	mov	r4,a
      0044D5 EB               [12]12145 	mov	a,r3
      0044D6 24r16            [12]12146 	add	a,#_lenh_sms
      0044D8 F5 82            [12]12147 	mov	dpl,a
      0044DA EC               [12]12148 	mov	a,r4
      0044DB 34s00            [12]12149 	addc	a,#(_lenh_sms >> 8)
      0044DD F5 83            [12]12150 	mov	dph,a
      0044DF E0               [24]12151 	movx	a,@dptr
      0044E0 FC               [12]12152 	mov  r4,a
      0044E1 24 D0            [12]12153 	add	a,#0xff - 0x2f
      0044E3 40 03            [24]12154 	jc	01847$
      0044E5 02r47r21         [24]12155 	ljmp	00292$
      0044E8                      12156 01847$:
      0044E8 74 05            [12]12157 	mov	a,#0x05
      0044EA 2D               [12]12158 	add	a,r5
      0044EB FB               [12]12159 	mov	r3,a
      0044EC E4               [12]12160 	clr	a
      0044ED 3F               [12]12161 	addc	a,r7
      0044EE FC               [12]12162 	mov	r4,a
      0044EF EB               [12]12163 	mov	a,r3
      0044F0 24r16            [12]12164 	add	a,#_lenh_sms
      0044F2 F5 82            [12]12165 	mov	dpl,a
      0044F4 EC               [12]12166 	mov	a,r4
      0044F5 34s00            [12]12167 	addc	a,#(_lenh_sms >> 8)
      0044F7 F5 83            [12]12168 	mov	dph,a
      0044F9 E0               [24]12169 	movx	a,@dptr
      0044FA FC               [12]12170 	mov	r4,a
      0044FB BC 33 00         [24]12171 	cjne	r4,#0x33,01848$
      0044FE                      12172 01848$:
      0044FE 40 03            [24]12173 	jc	01849$
      004500 02r47r21         [24]12174 	ljmp	00292$
      004503                      12175 01849$:
      004503 74 06            [12]12176 	mov	a,#0x06
      004505 2D               [12]12177 	add	a,r5
      004506 FB               [12]12178 	mov	r3,a
      004507 E4               [12]12179 	clr	a
      004508 3F               [12]12180 	addc	a,r7
      004509 FC               [12]12181 	mov	r4,a
      00450A EB               [12]12182 	mov	a,r3
      00450B 24r16            [12]12183 	add	a,#_lenh_sms
      00450D F5 82            [12]12184 	mov	dpl,a
      00450F EC               [12]12185 	mov	a,r4
      004510 34s00            [12]12186 	addc	a,#(_lenh_sms >> 8)
      004512 F5 83            [12]12187 	mov	dph,a
      004514 E0               [24]12188 	movx	a,@dptr
      004515 FC               [12]12189 	mov  r4,a
      004516 24 D0            [12]12190 	add	a,#0xff - 0x2f
      004518 40 03            [24]12191 	jc	01850$
      00451A 02r47r21         [24]12192 	ljmp	00292$
      00451D                      12193 01850$:
      00451D 74 06            [12]12194 	mov	a,#0x06
      00451F 2D               [12]12195 	add	a,r5
      004520 FB               [12]12196 	mov	r3,a
      004521 E4               [12]12197 	clr	a
      004522 3F               [12]12198 	addc	a,r7
      004523 FC               [12]12199 	mov	r4,a
      004524 EB               [12]12200 	mov	a,r3
      004525 24r16            [12]12201 	add	a,#_lenh_sms
      004527 F5 82            [12]12202 	mov	dpl,a
      004529 EC               [12]12203 	mov	a,r4
      00452A 34s00            [12]12204 	addc	a,#(_lenh_sms >> 8)
      00452C F5 83            [12]12205 	mov	dph,a
      00452E E0               [24]12206 	movx	a,@dptr
      00452F FC               [12]12207 	mov	r4,a
      004530 BC 3A 00         [24]12208 	cjne	r4,#0x3a,01851$
      004533                      12209 01851$:
      004533 40 03            [24]12210 	jc	01852$
      004535 02r47r21         [24]12211 	ljmp	00292$
      004538                      12212 01852$:
                                  12213 ;	include/xu_ly_tin_nhan.c:263: lenh_sms[i+7]>47 && lenh_sms[i+7]<54 && lenh_sms[i+8]>47 && lenh_sms[i+8]<58 &&
      004538 74 07            [12]12214 	mov	a,#0x07
      00453A 2D               [12]12215 	add	a,r5
      00453B FB               [12]12216 	mov	r3,a
      00453C E4               [12]12217 	clr	a
      00453D 3F               [12]12218 	addc	a,r7
      00453E FC               [12]12219 	mov	r4,a
      00453F EB               [12]12220 	mov	a,r3
      004540 24r16            [12]12221 	add	a,#_lenh_sms
      004542 F5 82            [12]12222 	mov	dpl,a
      004544 EC               [12]12223 	mov	a,r4
      004545 34s00            [12]12224 	addc	a,#(_lenh_sms >> 8)
      004547 F5 83            [12]12225 	mov	dph,a
      004549 E0               [24]12226 	movx	a,@dptr
      00454A FC               [12]12227 	mov  r4,a
      00454B 24 D0            [12]12228 	add	a,#0xff - 0x2f
      00454D 40 03            [24]12229 	jc	01853$
      00454F 02r47r21         [24]12230 	ljmp	00292$
      004552                      12231 01853$:
      004552 74 07            [12]12232 	mov	a,#0x07
      004554 2D               [12]12233 	add	a,r5
      004555 FB               [12]12234 	mov	r3,a
      004556 E4               [12]12235 	clr	a
      004557 3F               [12]12236 	addc	a,r7
      004558 FC               [12]12237 	mov	r4,a
      004559 EB               [12]12238 	mov	a,r3
      00455A 24r16            [12]12239 	add	a,#_lenh_sms
      00455C F5 82            [12]12240 	mov	dpl,a
      00455E EC               [12]12241 	mov	a,r4
      00455F 34s00            [12]12242 	addc	a,#(_lenh_sms >> 8)
      004561 F5 83            [12]12243 	mov	dph,a
      004563 E0               [24]12244 	movx	a,@dptr
      004564 FC               [12]12245 	mov	r4,a
      004565 BC 36 00         [24]12246 	cjne	r4,#0x36,01854$
      004568                      12247 01854$:
      004568 40 03            [24]12248 	jc	01855$
      00456A 02r47r21         [24]12249 	ljmp	00292$
      00456D                      12250 01855$:
      00456D 74 08            [12]12251 	mov	a,#0x08
      00456F 2D               [12]12252 	add	a,r5
      004570 FB               [12]12253 	mov	r3,a
      004571 E4               [12]12254 	clr	a
      004572 3F               [12]12255 	addc	a,r7
      004573 FC               [12]12256 	mov	r4,a
      004574 EB               [12]12257 	mov	a,r3
      004575 24r16            [12]12258 	add	a,#_lenh_sms
      004577 F5 82            [12]12259 	mov	dpl,a
      004579 EC               [12]12260 	mov	a,r4
      00457A 34s00            [12]12261 	addc	a,#(_lenh_sms >> 8)
      00457C F5 83            [12]12262 	mov	dph,a
      00457E E0               [24]12263 	movx	a,@dptr
      00457F FC               [12]12264 	mov  r4,a
      004580 24 D0            [12]12265 	add	a,#0xff - 0x2f
      004582 40 03            [24]12266 	jc	01856$
      004584 02r47r21         [24]12267 	ljmp	00292$
      004587                      12268 01856$:
      004587 74 08            [12]12269 	mov	a,#0x08
      004589 2D               [12]12270 	add	a,r5
      00458A FB               [12]12271 	mov	r3,a
      00458B E4               [12]12272 	clr	a
      00458C 3F               [12]12273 	addc	a,r7
      00458D FC               [12]12274 	mov	r4,a
      00458E EB               [12]12275 	mov	a,r3
      00458F 24r16            [12]12276 	add	a,#_lenh_sms
      004591 F5 82            [12]12277 	mov	dpl,a
      004593 EC               [12]12278 	mov	a,r4
      004594 34s00            [12]12279 	addc	a,#(_lenh_sms >> 8)
      004596 F5 83            [12]12280 	mov	dph,a
      004598 E0               [24]12281 	movx	a,@dptr
      004599 FC               [12]12282 	mov	r4,a
      00459A BC 3A 00         [24]12283 	cjne	r4,#0x3a,01857$
      00459D                      12284 01857$:
      00459D 40 03            [24]12285 	jc	01858$
      00459F 02r47r21         [24]12286 	ljmp	00292$
      0045A2                      12287 01858$:
                                  12288 ;	include/xu_ly_tin_nhan.c:264: lenh_sms[i]*10+lenh_sms[i+1]<552 && lenh_sms[i+5]*10+lenh_sms[i+6]<552){
      0045A2 8E*00            [24]12289 	mov	__mulint_PARM_2,r6
      0045A4 75*01 00         [24]12290 	mov	(__mulint_PARM_2 + 1),#0x00
      0045A7 90 00 0A         [24]12291 	mov	dptr,#0x000a
      0045AA C0 07            [24]12292 	push	ar7
      0045AC C0 06            [24]12293 	push	ar6
      0045AE C0 05            [24]12294 	push	ar5
      0045B0 12r00r00         [24]12295 	lcall	__mulint
      0045B3 AB 82            [24]12296 	mov	r3,dpl
      0045B5 AC 83            [24]12297 	mov	r4,dph
      0045B7 D0 05            [24]12298 	pop	ar5
      0045B9 D0 06            [24]12299 	pop	ar6
      0045BB D0 07            [24]12300 	pop	ar7
      0045BD C0 06            [24]12301 	push	ar6
      0045BF 74 01            [12]12302 	mov	a,#0x01
      0045C1 2D               [12]12303 	add	a,r5
      0045C2 FA               [12]12304 	mov	r2,a
      0045C3 E4               [12]12305 	clr	a
      0045C4 3F               [12]12306 	addc	a,r7
      0045C5 FE               [12]12307 	mov	r6,a
      0045C6 EA               [12]12308 	mov	a,r2
      0045C7 24r16            [12]12309 	add	a,#_lenh_sms
      0045C9 F5 82            [12]12310 	mov	dpl,a
      0045CB EE               [12]12311 	mov	a,r6
      0045CC 34s00            [12]12312 	addc	a,#(_lenh_sms >> 8)
      0045CE F5 83            [12]12313 	mov	dph,a
      0045D0 E0               [24]12314 	movx	a,@dptr
      0045D1 7A 00            [12]12315 	mov	r2,#0x00
      0045D3 2B               [12]12316 	add	a,r3
      0045D4 FB               [12]12317 	mov	r3,a
      0045D5 EA               [12]12318 	mov	a,r2
      0045D6 3C               [12]12319 	addc	a,r4
      0045D7 FC               [12]12320 	mov	r4,a
      0045D8 C3               [12]12321 	clr	c
      0045D9 EB               [12]12322 	mov	a,r3
      0045DA 94 28            [12]12323 	subb	a,#0x28
      0045DC EC               [12]12324 	mov	a,r4
      0045DD 64 80            [12]12325 	xrl	a,#0x80
      0045DF 94 82            [12]12326 	subb	a,#0x82
      0045E1 D0 06            [24]12327 	pop	ar6
      0045E3 40 03            [24]12328 	jc	01859$
      0045E5 02r47r21         [24]12329 	ljmp	00292$
      0045E8                      12330 01859$:
      0045E8 C0 06            [24]12331 	push	ar6
      0045EA 74 05            [12]12332 	mov	a,#0x05
      0045EC 2D               [12]12333 	add	a,r5
      0045ED FB               [12]12334 	mov	r3,a
      0045EE E4               [12]12335 	clr	a
      0045EF 3F               [12]12336 	addc	a,r7
      0045F0 FC               [12]12337 	mov	r4,a
      0045F1 EB               [12]12338 	mov	a,r3
      0045F2 24r16            [12]12339 	add	a,#_lenh_sms
      0045F4 F5 82            [12]12340 	mov	dpl,a
      0045F6 EC               [12]12341 	mov	a,r4
      0045F7 34s00            [12]12342 	addc	a,#(_lenh_sms >> 8)
      0045F9 F5 83            [12]12343 	mov	dph,a
      0045FB E0               [24]12344 	movx	a,@dptr
      0045FC FC               [12]12345 	mov	r4,a
      0045FD 8C*00            [24]12346 	mov	__mulint_PARM_2,r4
      0045FF 75*01 00         [24]12347 	mov	(__mulint_PARM_2 + 1),#0x00
      004602 90 00 0A         [24]12348 	mov	dptr,#0x000a
      004605 C0 07            [24]12349 	push	ar7
      004607 C0 06            [24]12350 	push	ar6
      004609 C0 05            [24]12351 	push	ar5
      00460B 12r00r00         [24]12352 	lcall	__mulint
      00460E AB 82            [24]12353 	mov	r3,dpl
      004610 AC 83            [24]12354 	mov	r4,dph
      004612 D0 05            [24]12355 	pop	ar5
      004614 D0 06            [24]12356 	pop	ar6
      004616 D0 07            [24]12357 	pop	ar7
      004618 74 06            [12]12358 	mov	a,#0x06
      00461A 2D               [12]12359 	add	a,r5
      00461B FA               [12]12360 	mov	r2,a
      00461C E4               [12]12361 	clr	a
      00461D 3F               [12]12362 	addc	a,r7
      00461E FE               [12]12363 	mov	r6,a
      00461F EA               [12]12364 	mov	a,r2
      004620 24r16            [12]12365 	add	a,#_lenh_sms
      004622 F5 82            [12]12366 	mov	dpl,a
      004624 EE               [12]12367 	mov	a,r6
      004625 34s00            [12]12368 	addc	a,#(_lenh_sms >> 8)
      004627 F5 83            [12]12369 	mov	dph,a
      004629 E0               [24]12370 	movx	a,@dptr
      00462A 7A 00            [12]12371 	mov	r2,#0x00
      00462C 2B               [12]12372 	add	a,r3
      00462D FB               [12]12373 	mov	r3,a
      00462E EA               [12]12374 	mov	a,r2
      00462F 3C               [12]12375 	addc	a,r4
      004630 FC               [12]12376 	mov	r4,a
      004631 C3               [12]12377 	clr	c
      004632 EB               [12]12378 	mov	a,r3
      004633 94 28            [12]12379 	subb	a,#0x28
      004635 EC               [12]12380 	mov	a,r4
      004636 64 80            [12]12381 	xrl	a,#0x80
      004638 94 82            [12]12382 	subb	a,#0x82
      00463A D0 06            [24]12383 	pop	ar6
      00463C 40 03            [24]12384 	jc	01860$
      00463E 02r47r21         [24]12385 	ljmp	00292$
      004641                      12386 01860$:
                                  12387 ;	include/xu_ly_tin_nhan.c:265: eeprom_buf[TATMODEN_EEPROM+(i-4)/5+1] = ((lenh_sms[i] -'0')*10 + lenh_sms[i+1] -'0')*6 + lenh_sms[i+2]-'0';
      004641 ED               [12]12388 	mov	a,r5
      004642 24 FC            [12]12389 	add	a,#0xfc
      004644 F5 82            [12]12390 	mov	dpl,a
      004646 EF               [12]12391 	mov	a,r7
      004647 34 FF            [12]12392 	addc	a,#0xff
      004649 F5 83            [12]12393 	mov	dph,a
      00464B 75*00 05         [24]12394 	mov	__divsint_PARM_2,#0x05
      00464E 75*01 00         [24]12395 	mov	(__divsint_PARM_2 + 1),#0x00
      004651 C0 07            [24]12396 	push	ar7
      004653 C0 06            [24]12397 	push	ar6
      004655 C0 05            [24]12398 	push	ar5
      004657 12r00r00         [24]12399 	lcall	__divsint
      00465A AB 82            [24]12400 	mov	r3,dpl
      00465C D0 05            [24]12401 	pop	ar5
      00465E D0 06            [24]12402 	pop	ar6
      004660 D0 07            [24]12403 	pop	ar7
      004662 74 08            [12]12404 	mov	a,#0x08
      004664 2B               [12]12405 	add	a,r3
      004665 FC               [12]12406 	mov	r4,a
      004666 33               [12]12407 	rlc	a
      004667 95 E0            [12]12408 	subb	a,acc
      004669 FA               [12]12409 	mov	r2,a
      00466A EC               [12]12410 	mov	a,r4
      00466B 24rBC            [12]12411 	add	a,#_eeprom_buf
      00466D F5*26            [12]12412 	mov	_xu_ly_tin_nhan_sloc6_1_0,a
      00466F EA               [12]12413 	mov	a,r2
      004670 34s00            [12]12414 	addc	a,#(_eeprom_buf >> 8)
      004672 F5*27            [12]12415 	mov	(_xu_ly_tin_nhan_sloc6_1_0 + 1),a
      004674 EE               [12]12416 	mov	a,r6
      004675 24 D0            [12]12417 	add	a,#0xd0
      004677 75 F0 0A         [24]12418 	mov	b,#0x0a
      00467A A4               [48]12419 	mul	ab
      00467B F5*28            [12]12420 	mov	_xu_ly_tin_nhan_sloc7_1_0,a
      00467D 74 01            [12]12421 	mov	a,#0x01
      00467F 2D               [12]12422 	add	a,r5
      004680 FC               [12]12423 	mov	r4,a
      004681 E4               [12]12424 	clr	a
      004682 3F               [12]12425 	addc	a,r7
      004683 FE               [12]12426 	mov	r6,a
      004684 EC               [12]12427 	mov	a,r4
      004685 24r16            [12]12428 	add	a,#_lenh_sms
      004687 F5 82            [12]12429 	mov	dpl,a
      004689 EE               [12]12430 	mov	a,r6
      00468A 34s00            [12]12431 	addc	a,#(_lenh_sms >> 8)
      00468C F5 83            [12]12432 	mov	dph,a
      00468E E0               [24]12433 	movx	a,@dptr
      00468F 25*28            [12]12434 	add	a,_xu_ly_tin_nhan_sloc7_1_0
      004691 24 D0            [12]12435 	add	a,#0xd0
      004693 75 F0 06         [24]12436 	mov	b,#0x06
      004696 A4               [48]12437 	mul	ab
      004697 FE               [12]12438 	mov	r6,a
      004698 74 02            [12]12439 	mov	a,#0x02
      00469A 2D               [12]12440 	add	a,r5
      00469B FA               [12]12441 	mov	r2,a
      00469C E4               [12]12442 	clr	a
      00469D 3F               [12]12443 	addc	a,r7
      00469E FC               [12]12444 	mov	r4,a
      00469F EA               [12]12445 	mov	a,r2
      0046A0 24r16            [12]12446 	add	a,#_lenh_sms
      0046A2 F5 82            [12]12447 	mov	dpl,a
      0046A4 EC               [12]12448 	mov	a,r4
      0046A5 34s00            [12]12449 	addc	a,#(_lenh_sms >> 8)
      0046A7 F5 83            [12]12450 	mov	dph,a
      0046A9 E0               [24]12451 	movx	a,@dptr
      0046AA 2E               [12]12452 	add	a,r6
      0046AB 24 D0            [12]12453 	add	a,#0xd0
      0046AD 85*26 82         [24]12454 	mov	dpl,_xu_ly_tin_nhan_sloc6_1_0
      0046B0 85*27 83         [24]12455 	mov	dph,(_xu_ly_tin_nhan_sloc6_1_0 + 1)
      0046B3 F0               [24]12456 	movx	@dptr,a
                                  12457 ;	include/xu_ly_tin_nhan.c:266: eeprom_buf[TATMODEN_EEPROM+(i-4)/5+2] = ((lenh_sms[i+5]-'0')*10 + lenh_sms[i+6]-'0')*6 + lenh_sms[i+7]-'0';
      0046B4 74 09            [12]12458 	mov	a,#0x09
      0046B6 2B               [12]12459 	add	a,r3
      0046B7 FB               [12]12460 	mov	r3,a
      0046B8 33               [12]12461 	rlc	a
      0046B9 95 E0            [12]12462 	subb	a,acc
      0046BB FE               [12]12463 	mov	r6,a
      0046BC EB               [12]12464 	mov	a,r3
      0046BD 24rBC            [12]12465 	add	a,#_eeprom_buf
      0046BF FB               [12]12466 	mov	r3,a
      0046C0 EE               [12]12467 	mov	a,r6
      0046C1 34s00            [12]12468 	addc	a,#(_eeprom_buf >> 8)
      0046C3 FE               [12]12469 	mov	r6,a
      0046C4 74 05            [12]12470 	mov	a,#0x05
      0046C6 2D               [12]12471 	add	a,r5
      0046C7 FA               [12]12472 	mov	r2,a
      0046C8 E4               [12]12473 	clr	a
      0046C9 3F               [12]12474 	addc	a,r7
      0046CA FC               [12]12475 	mov	r4,a
      0046CB EA               [12]12476 	mov	a,r2
      0046CC 24r16            [12]12477 	add	a,#_lenh_sms
      0046CE F5 82            [12]12478 	mov	dpl,a
      0046D0 EC               [12]12479 	mov	a,r4
      0046D1 34s00            [12]12480 	addc	a,#(_lenh_sms >> 8)
      0046D3 F5 83            [12]12481 	mov	dph,a
      0046D5 E0               [24]12482 	movx	a,@dptr
      0046D6 24 D0            [12]12483 	add	a,#0xd0
      0046D8 75 F0 0A         [24]12484 	mov	b,#0x0a
      0046DB A4               [48]12485 	mul	ab
      0046DC F5*28            [12]12486 	mov	_xu_ly_tin_nhan_sloc7_1_0,a
      0046DE 74 06            [12]12487 	mov	a,#0x06
      0046E0 2D               [12]12488 	add	a,r5
      0046E1 FA               [12]12489 	mov	r2,a
      0046E2 E4               [12]12490 	clr	a
      0046E3 3F               [12]12491 	addc	a,r7
      0046E4 FC               [12]12492 	mov	r4,a
      0046E5 EA               [12]12493 	mov	a,r2
      0046E6 24r16            [12]12494 	add	a,#_lenh_sms
      0046E8 F5 82            [12]12495 	mov	dpl,a
      0046EA EC               [12]12496 	mov	a,r4
      0046EB 34s00            [12]12497 	addc	a,#(_lenh_sms >> 8)
      0046ED F5 83            [12]12498 	mov	dph,a
      0046EF E0               [24]12499 	movx	a,@dptr
      0046F0 25*28            [12]12500 	add	a,_xu_ly_tin_nhan_sloc7_1_0
      0046F2 24 D0            [12]12501 	add	a,#0xd0
      0046F4 75 F0 06         [24]12502 	mov	b,#0x06
      0046F7 A4               [48]12503 	mul	ab
      0046F8 FC               [12]12504 	mov	r4,a
      0046F9 74 07            [12]12505 	mov	a,#0x07
      0046FB 2D               [12]12506 	add	a,r5
      0046FC FD               [12]12507 	mov	r5,a
      0046FD E4               [12]12508 	clr	a
      0046FE 3F               [12]12509 	addc	a,r7
      0046FF FF               [12]12510 	mov	r7,a
      004700 ED               [12]12511 	mov	a,r5
      004701 24r16            [12]12512 	add	a,#_lenh_sms
      004703 F5 82            [12]12513 	mov	dpl,a
      004705 EF               [12]12514 	mov	a,r7
      004706 34s00            [12]12515 	addc	a,#(_lenh_sms >> 8)
      004708 F5 83            [12]12516 	mov	dph,a
      00470A E0               [24]12517 	movx	a,@dptr
      00470B 2C               [12]12518 	add	a,r4
      00470C 24 D0            [12]12519 	add	a,#0xd0
      00470E 8B 82            [24]12520 	mov	dpl,r3
      004710 8E 83            [24]12521 	mov	dph,r6
      004712 F0               [24]12522 	movx	@dptr,a
                                  12523 ;	include/xu_ly_tin_nhan.c:267: eeprom_buf[TATMODEN_EEPROM]+=2;
      004713 90r00rC3         [24]12524 	mov	dptr,#(_eeprom_buf + 0x0007)
      004716 E0               [24]12525 	movx	a,@dptr
      004717 FF               [12]12526 	mov	r7,a
      004718 0F               [12]12527 	inc	r7
      004719 0F               [12]12528 	inc	r7
      00471A 90r00rC3         [24]12529 	mov	dptr,#(_eeprom_buf + 0x0007)
      00471D EF               [12]12530 	mov	a,r7
      00471E F0               [24]12531 	movx	@dptr,a
      00471F 80 06            [24]12532 	sjmp	00489$
      004721                      12533 00292$:
                                  12534 ;	include/xu_ly_tin_nhan.c:269: else i = 75;
      004721 90r01r33         [24]12535 	mov	dptr,#_xu_ly_tin_nhan_i_65537_185
      004724 74 4B            [12]12536 	mov	a,#0x4b
      004726 F0               [24]12537 	movx	@dptr,a
      004727                      12538 00489$:
                                  12539 ;	include/xu_ly_tin_nhan.c:259: for(i=4;i<75;i+=10){
      004727 90r01r33         [24]12540 	mov	dptr,#_xu_ly_tin_nhan_i_65537_185
      00472A E0               [24]12541 	movx	a,@dptr
      00472B 24 0A            [12]12542 	add	a,#0x0a
      00472D F0               [24]12543 	movx	@dptr,a
      00472E E0               [24]12544 	movx	a,@dptr
      00472F FF               [12]12545 	mov	r7,a
      004730 BF 4B 00         [24]12546 	cjne	r7,#0x4b,01861$
      004733                      12547 01861$:
      004733 50 03            [24]12548 	jnc	01862$
      004735 02r44r0C         [24]12549 	ljmp	00488$
      004738                      12550 01862$:
                                  12551 ;	include/xu_ly_tin_nhan.c:271: if(eeprom_buf[TATMODEN_EEPROM]){
      004738 90r00rC3         [24]12552 	mov	dptr,#(_eeprom_buf + 0x0007)
      00473B E0               [24]12553 	movx	a,@dptr
      00473C 60 17            [24]12554 	jz	00313$
                                  12555 ;	include/xu_ly_tin_nhan.c:272: IAP_xoasector(SECTOR1);
      00473E 90 00 00         [24]12556 	mov	dptr,#0x0000
      004741 12r00r00         [24]12557 	lcall	_IAP_xoasector
                                  12558 ;	include/xu_ly_tin_nhan.c:273: IAP_ghisector1();
      004744 12r00r00         [24]12559 	lcall	_IAP_ghisector1
                                  12560 ;	include/xu_ly_tin_nhan.c:274: baocaoden(CHINH,"\rlenh den thanh cong");
                                  12561 ;	assignBit
      004747 D2*45            [12]12562 	setb	_baocaoden_PARM_1
      004749 90r09r09         [24]12563 	mov	dptr,#___str_96
      00474C 75 F0 80         [24]12564 	mov	b,#0x80
      00474F 12r1Br96         [24]12565 	lcall	_baocaoden
      004752 02r4Er59         [24]12566 	ljmp	00479$
      004755                      12567 00313$:
                                  12568 ;	include/xu_ly_tin_nhan.c:276: }else baocaosms(CHINH,"\rthong so den khong hop le");
                                  12569 ;	assignBit
      004755 D2*44            [12]12570 	setb	_baocaosms_PARM_1
      004757 90r09r1E         [24]12571 	mov	dptr,#___str_97
      00475A 75 F0 80         [24]12572 	mov	b,#0x80
      00475D 12r17r8C         [24]12573 	lcall	_baocaosms
                                  12574 ;	include/xu_ly_tin_nhan.c:279: break;
      004760 02r4Er59         [24]12575 	ljmp	00479$
                                  12576 ;	include/xu_ly_tin_nhan.c:281: case 'P':
      004763                      12577 00320$:
                                  12578 ;	include/xu_ly_tin_nhan.c:282: if(!phone_chinh_so_sanh_that_bai){
      004763 30*06 03         [24]12579 	jnb	_phone_chinh_so_sanh_that_bai,01864$
      004766 02r4Er59         [24]12580 	ljmp	00479$
      004769                      12581 01864$:
                                  12582 ;	include/xu_ly_tin_nhan.c:283: if(!(eep_mp3%4)){
      004769 90 F0 10         [24]12583 	mov	dptr,#_eep_mp3
      00476C E4               [12]12584 	clr	a
      00476D 93               [24]12585 	movc	a,@a+dptr
      00476E 54 03            [12]12586 	anl	a,#0x03
      004770 70 0E            [24]12587 	jnz	00372$
                                  12588 ;	include/xu_ly_tin_nhan.c:284: baocaosms(CHINH,"\rKhong Co Module Mp3");
                                  12589 ;	assignBit
      004772 D2*44            [12]12590 	setb	_baocaosms_PARM_1
      004774 90r09r39         [24]12591 	mov	dptr,#___str_98
      004777 75 F0 80         [24]12592 	mov	b,#0x80
      00477A 12r17r8C         [24]12593 	lcall	_baocaosms
      00477D 02r4Er59         [24]12594 	ljmp	00479$
      004780                      12595 00372$:
                                  12596 ;	include/xu_ly_tin_nhan.c:286: else if(lenh_sms[5]=='T' || lenh_sms[5]=='t'){
      004780 90r00r1B         [24]12597 	mov	dptr,#(_lenh_sms + 0x0005)
      004783 E0               [24]12598 	movx	a,@dptr
      004784 FF               [12]12599 	mov	r7,a
      004785 BF 54 02         [24]12600 	cjne	r7,#0x54,01867$
      004788 80 03            [24]12601 	sjmp	00367$
      00478A                      12602 01867$:
      00478A BF 74 1F         [24]12603 	cjne	r7,#0x74,00368$
      00478D                      12604 00367$:
                                  12605 ;	include/xu_ly_tin_nhan.c:287: if(mp3_playing) mp3_play(9,0,0); //mp3_stop() TODO
      00478D 30 92 0C         [24]12606 	jnb	_P12,00322$
      004790 75*00 00         [24]12607 	mov	_mp3_play_PARM_2,#0x00
      004793 75*00 00         [24]12608 	mov	_mp3_play_PARM_3,#0x00
      004796 75 82 09         [24]12609 	mov	dpl,#0x09
      004799 12r00r00         [24]12610 	lcall	_mp3_play
      00479C                      12611 00322$:
                                  12612 ;	include/xu_ly_tin_nhan.c:288: AmplyRelay = 0;
                                  12613 ;	assignBit
      00479C C2 C2            [12]12614 	clr	_P42
                                  12615 ;	include/xu_ly_tin_nhan.c:289: baocaosms(CHINH,"\rDung Mp3");    
                                  12616 ;	assignBit
      00479E D2*44            [12]12617 	setb	_baocaosms_PARM_1
      0047A0 90r09r4E         [24]12618 	mov	dptr,#___str_99
      0047A3 75 F0 80         [24]12619 	mov	b,#0x80
      0047A6 12r17r8C         [24]12620 	lcall	_baocaosms
      0047A9 02r4Er59         [24]12621 	ljmp	00479$
      0047AC                      12622 00368$:
                                  12623 ;	include/xu_ly_tin_nhan.c:291: else if(lenh_sms[5]=='N' || lenh_sms[5]=='n'){
      0047AC BF 4E 02         [24]12624 	cjne	r7,#0x4e,01871$
      0047AF 80 03            [24]12625 	sjmp	00363$
      0047B1                      12626 01871$:
      0047B1 BF 6E 3B         [24]12627 	cjne	r7,#0x6e,00364$
      0047B4                      12628 00363$:
                                  12629 ;	include/xu_ly_tin_nhan.c:292: if(eep_mp3%4==1){
      0047B4 90 F0 10         [24]12630 	mov	dptr,#_eep_mp3
      0047B7 E4               [12]12631 	clr	a
      0047B8 93               [24]12632 	movc	a,@a+dptr
      0047B9 54 03            [12]12633 	anl	a,#0x03
      0047BB FD               [12]12634 	mov	r5,a
      0047BC 7E 00            [12]12635 	mov	r6,#0x00
      0047BE BD 01 20         [24]12636 	cjne	r5,#0x01,00324$
      0047C1 BE 00 1D         [24]12637 	cjne	r6,#0x00,00324$
                                  12638 ;	include/xu_ly_tin_nhan.c:293: IAP_docxoasector1();
      0047C4 12r00r00         [24]12639 	lcall	_IAP_docxoasector1
                                  12640 ;	include/xu_ly_tin_nhan.c:294: eeprom_buf[MP3_EEPROM] += 1;
      0047C7 90r00rCC         [24]12641 	mov	dptr,#(_eeprom_buf + 0x0010)
      0047CA E0               [24]12642 	movx	a,@dptr
      0047CB FE               [12]12643 	mov	r6,a
      0047CC 0E               [12]12644 	inc	r6
      0047CD 90r00rCC         [24]12645 	mov	dptr,#(_eeprom_buf + 0x0010)
      0047D0 EE               [12]12646 	mov	a,r6
      0047D1 F0               [24]12647 	movx	@dptr,a
                                  12648 ;	include/xu_ly_tin_nhan.c:295: IAP_ghisector1();
      0047D2 12r00r00         [24]12649 	lcall	_IAP_ghisector1
                                  12650 ;	include/xu_ly_tin_nhan.c:296: mp3_status = mp3_IDLE;
      0047D5 78r01            [12]12651 	mov	r0,#_mp3_status
      0047D7 76 00            [12]12652 	mov	@r0,#0x00
                                  12653 ;	include/xu_ly_tin_nhan.c:297: mp3_hour= 24;
      0047D9 78r03            [12]12654 	mov	r0,#_mp3_hour
      0047DB 76 18            [12]12655 	mov	@r0,#0x18
                                  12656 ;	include/xu_ly_tin_nhan.c:298: mp3_minute = 60;
      0047DD 78r04            [12]12657 	mov	r0,#_mp3_minute
      0047DF 76 3C            [12]12658 	mov	@r0,#0x3c
      0047E1                      12659 00324$:
                                  12660 ;	include/xu_ly_tin_nhan.c:300: baocaosms(CHINH,"\rBat mp3");
                                  12661 ;	assignBit
      0047E1 D2*44            [12]12662 	setb	_baocaosms_PARM_1
      0047E3 90r09r58         [24]12663 	mov	dptr,#___str_100
      0047E6 75 F0 80         [24]12664 	mov	b,#0x80
      0047E9 12r17r8C         [24]12665 	lcall	_baocaosms
      0047EC 02r4Er59         [24]12666 	ljmp	00479$
      0047EF                      12667 00364$:
                                  12668 ;	include/xu_ly_tin_nhan.c:301: }else if(lenh_sms[5]=='F' || lenh_sms[5]=='f'){
      0047EF BF 46 02         [24]12669 	cjne	r7,#0x46,01876$
      0047F2 80 03            [24]12670 	sjmp	00359$
      0047F4                      12671 01876$:
      0047F4 BF 66 40         [24]12672 	cjne	r7,#0x66,00360$
      0047F7                      12673 00359$:
                                  12674 ;	include/xu_ly_tin_nhan.c:302: if(eep_mp3%4==2){
      0047F7 90 F0 10         [24]12675 	mov	dptr,#_eep_mp3
      0047FA E4               [12]12676 	clr	a
      0047FB 93               [24]12677 	movc	a,@a+dptr
      0047FC 54 03            [12]12678 	anl	a,#0x03
      0047FE FD               [12]12679 	mov	r5,a
      0047FF 7E 00            [12]12680 	mov	r6,#0x00
      004801 BD 02 25         [24]12681 	cjne	r5,#0x02,00328$
      004804 BE 00 22         [24]12682 	cjne	r6,#0x00,00328$
                                  12683 ;	include/xu_ly_tin_nhan.c:303: if(mp3_playing) mp3_play(9,0,0);
      004807 30 92 0C         [24]12684 	jnb	_P12,00326$
      00480A 75*00 00         [24]12685 	mov	_mp3_play_PARM_2,#0x00
      00480D 75*00 00         [24]12686 	mov	_mp3_play_PARM_3,#0x00
      004810 75 82 09         [24]12687 	mov	dpl,#0x09
      004813 12r00r00         [24]12688 	lcall	_mp3_play
      004816                      12689 00326$:
                                  12690 ;	include/xu_ly_tin_nhan.c:304: AmplyRelay = 0;
                                  12691 ;	assignBit
      004816 C2 C2            [12]12692 	clr	_P42
                                  12693 ;	include/xu_ly_tin_nhan.c:305: IAP_docxoasector1();
      004818 12r00r00         [24]12694 	lcall	_IAP_docxoasector1
                                  12695 ;	include/xu_ly_tin_nhan.c:306: eeprom_buf[MP3_EEPROM] -= 1;
      00481B 90r00rCC         [24]12696 	mov	dptr,#(_eeprom_buf + 0x0010)
      00481E E0               [24]12697 	movx	a,@dptr
      00481F FE               [12]12698 	mov	r6,a
      004820 1E               [12]12699 	dec	r6
      004821 90r00rCC         [24]12700 	mov	dptr,#(_eeprom_buf + 0x0010)
      004824 EE               [12]12701 	mov	a,r6
      004825 F0               [24]12702 	movx	@dptr,a
                                  12703 ;	include/xu_ly_tin_nhan.c:307: IAP_ghisector1();
      004826 12r00r00         [24]12704 	lcall	_IAP_ghisector1
      004829                      12705 00328$:
                                  12706 ;	include/xu_ly_tin_nhan.c:309: baocaosms(CHINH,"\rTat mp3");
                                  12707 ;	assignBit
      004829 D2*44            [12]12708 	setb	_baocaosms_PARM_1
      00482B 90r09r61         [24]12709 	mov	dptr,#___str_101
      00482E 75 F0 80         [24]12710 	mov	b,#0x80
      004831 12r17r8C         [24]12711 	lcall	_baocaosms
      004834 02r4Er59         [24]12712 	ljmp	00479$
      004837                      12713 00360$:
                                  12714 ;	include/xu_ly_tin_nhan.c:310: }else if(lenh_sms[4]>47 && lenh_sms[4]<51 && lenh_sms[5]>47 && lenh_sms[5]<58 &&
      004837 90r00r1A         [24]12715 	mov	dptr,#(_lenh_sms + 0x0004)
      00483A E0               [24]12716 	movx	a,@dptr
      00483B FE               [12]12717 	mov  r6,a
      00483C 24 D0            [12]12718 	add	a,#0xff - 0x2f
      00483E 40 03            [24]12719 	jc	01882$
      004840 02r4Ar87         [24]12720 	ljmp	00338$
      004843                      12721 01882$:
      004843 BE 33 00         [24]12722 	cjne	r6,#0x33,01883$
      004846                      12723 01883$:
      004846 40 03            [24]12724 	jc	01884$
      004848 02r4Ar87         [24]12725 	ljmp	00338$
      00484B                      12726 01884$:
      00484B EF               [12]12727 	mov	a,r7
      00484C 24 D0            [12]12728 	add	a,#0xff - 0x2f
      00484E 40 03            [24]12729 	jc	01885$
      004850 02r4Ar87         [24]12730 	ljmp	00338$
      004853                      12731 01885$:
      004853 BF 3A 00         [24]12732 	cjne	r7,#0x3a,01886$
      004856                      12733 01886$:
      004856 40 03            [24]12734 	jc	01887$
      004858 02r4Ar87         [24]12735 	ljmp	00338$
      00485B                      12736 01887$:
                                  12737 ;	include/xu_ly_tin_nhan.c:311: lenh_sms[6]>47 && lenh_sms[6]<54 && (lenh_sms[7]==48 || lenh_sms[7]==53) &&
      00485B 90r00r1C         [24]12738 	mov	dptr,#(_lenh_sms + 0x0006)
      00485E E0               [24]12739 	movx	a,@dptr
      00485F FF               [12]12740 	mov  r7,a
      004860 24 D0            [12]12741 	add	a,#0xff - 0x2f
      004862 40 03            [24]12742 	jc	01888$
      004864 02r4Ar87         [24]12743 	ljmp	00338$
      004867                      12744 01888$:
      004867 BF 36 00         [24]12745 	cjne	r7,#0x36,01889$
      00486A                      12746 01889$:
      00486A 40 03            [24]12747 	jc	01890$
      00486C 02r4Ar87         [24]12748 	ljmp	00338$
      00486F                      12749 01890$:
      00486F 90r00r1D         [24]12750 	mov	dptr,#(_lenh_sms + 0x0007)
      004872 E0               [24]12751 	movx	a,@dptr
      004873 FF               [12]12752 	mov	r7,a
      004874 BF 30 02         [24]12753 	cjne	r7,#0x30,01891$
      004877 80 08            [24]12754 	sjmp	00347$
      004879                      12755 01891$:
      004879 BF 35 02         [24]12756 	cjne	r7,#0x35,01892$
      00487C 80 03            [24]12757 	sjmp	01893$
      00487E                      12758 01892$:
      00487E 02r4Ar87         [24]12759 	ljmp	00338$
      004881                      12760 01893$:
      004881                      12761 00347$:
                                  12762 ;	include/xu_ly_tin_nhan.c:312: lenh_sms[9]>47 && lenh_sms[9]<52 && lenh_sms[10]>47 && lenh_sms[10]<58 &&
      004881 90r00r1F         [24]12763 	mov	dptr,#(_lenh_sms + 0x0009)
      004884 E0               [24]12764 	movx	a,@dptr
      004885 FF               [12]12765 	mov  r7,a
      004886 24 D0            [12]12766 	add	a,#0xff - 0x2f
      004888 40 03            [24]12767 	jc	01894$
      00488A 02r4Ar87         [24]12768 	ljmp	00338$
      00488D                      12769 01894$:
      00488D BF 34 00         [24]12770 	cjne	r7,#0x34,01895$
      004890                      12771 01895$:
      004890 40 03            [24]12772 	jc	01896$
      004892 02r4Ar87         [24]12773 	ljmp	00338$
      004895                      12774 01896$:
      004895 90r00r20         [24]12775 	mov	dptr,#(_lenh_sms + 0x000a)
      004898 E0               [24]12776 	movx	a,@dptr
      004899 FF               [12]12777 	mov  r7,a
      00489A 24 D0            [12]12778 	add	a,#0xff - 0x2f
      00489C 40 03            [24]12779 	jc	01897$
      00489E 02r4Ar87         [24]12780 	ljmp	00338$
      0048A1                      12781 01897$:
      0048A1 BF 3A 00         [24]12782 	cjne	r7,#0x3a,01898$
      0048A4                      12783 01898$:
      0048A4 40 03            [24]12784 	jc	01899$
      0048A6 02r4Ar87         [24]12785 	ljmp	00338$
      0048A9                      12786 01899$:
                                  12787 ;	include/xu_ly_tin_nhan.c:313: lenh_sms[11]>47 && lenh_sms[11]<50 && lenh_sms[12]>47 && lenh_sms[12]<58 &&
      0048A9 90r00r21         [24]12788 	mov	dptr,#(_lenh_sms + 0x000b)
      0048AC E0               [24]12789 	movx	a,@dptr
      0048AD FF               [12]12790 	mov  r7,a
      0048AE 24 D0            [12]12791 	add	a,#0xff - 0x2f
      0048B0 40 03            [24]12792 	jc	01900$
      0048B2 02r4Ar87         [24]12793 	ljmp	00338$
      0048B5                      12794 01900$:
      0048B5 BF 32 00         [24]12795 	cjne	r7,#0x32,01901$
      0048B8                      12796 01901$:
      0048B8 40 03            [24]12797 	jc	01902$
      0048BA 02r4Ar87         [24]12798 	ljmp	00338$
      0048BD                      12799 01902$:
      0048BD 90r00r22         [24]12800 	mov	dptr,#(_lenh_sms + 0x000c)
      0048C0 E0               [24]12801 	movx	a,@dptr
      0048C1 FF               [12]12802 	mov  r7,a
      0048C2 24 D0            [12]12803 	add	a,#0xff - 0x2f
      0048C4 40 03            [24]12804 	jc	01903$
      0048C6 02r4Ar87         [24]12805 	ljmp	00338$
      0048C9                      12806 01903$:
      0048C9 BF 3A 00         [24]12807 	cjne	r7,#0x3a,01904$
      0048CC                      12808 01904$:
      0048CC 40 03            [24]12809 	jc	01905$
      0048CE 02r4Ar87         [24]12810 	ljmp	00338$
      0048D1                      12811 01905$:
                                  12812 ;	include/xu_ly_tin_nhan.c:314: lenh_sms[13]>47 && lenh_sms[13]<58 && lenh_sms[14]>47 && lenh_sms[14]<58){
      0048D1 90r00r23         [24]12813 	mov	dptr,#(_lenh_sms + 0x000d)
      0048D4 E0               [24]12814 	movx	a,@dptr
      0048D5 FF               [12]12815 	mov  r7,a
      0048D6 24 D0            [12]12816 	add	a,#0xff - 0x2f
      0048D8 40 03            [24]12817 	jc	01906$
      0048DA 02r4Ar87         [24]12818 	ljmp	00338$
      0048DD                      12819 01906$:
      0048DD BF 3A 00         [24]12820 	cjne	r7,#0x3a,01907$
      0048E0                      12821 01907$:
      0048E0 40 03            [24]12822 	jc	01908$
      0048E2 02r4Ar87         [24]12823 	ljmp	00338$
      0048E5                      12824 01908$:
      0048E5 90r00r24         [24]12825 	mov	dptr,#(_lenh_sms + 0x000e)
      0048E8 E0               [24]12826 	movx	a,@dptr
      0048E9 FF               [12]12827 	mov  r7,a
      0048EA 24 D0            [12]12828 	add	a,#0xff - 0x2f
      0048EC 40 03            [24]12829 	jc	01909$
      0048EE 02r4Ar87         [24]12830 	ljmp	00338$
      0048F1                      12831 01909$:
      0048F1 BF 3A 00         [24]12832 	cjne	r7,#0x3a,01910$
      0048F4                      12833 01910$:
      0048F4 40 03            [24]12834 	jc	01911$
      0048F6 02r4Ar87         [24]12835 	ljmp	00338$
      0048F9                      12836 01911$:
                                  12837 ;	include/xu_ly_tin_nhan.c:315: if(mp3_playing) mp3_play(9,0,0);
      0048F9 30 92 0C         [24]12838 	jnb	_P12,00330$
      0048FC 75*00 00         [24]12839 	mov	_mp3_play_PARM_2,#0x00
      0048FF 75*00 00         [24]12840 	mov	_mp3_play_PARM_3,#0x00
      004902 75 82 09         [24]12841 	mov	dpl,#0x09
      004905 12r00r00         [24]12842 	lcall	_mp3_play
      004908                      12843 00330$:
                                  12844 ;	include/xu_ly_tin_nhan.c:316: if(!mp3_playing){
      004908 30 92 03         [24]12845 	jnb	_P12,01913$
      00490B 02r4Ar79         [24]12846 	ljmp	00335$
      00490E                      12847 01913$:
                                  12848 ;	include/xu_ly_tin_nhan.c:317: AmplyRelay = 1;
                                  12849 ;	assignBit
      00490E D2 C2            [12]12850 	setb	_P42
                                  12851 ;	include/xu_ly_tin_nhan.c:318: u8 nam = (lenh_sms[13]-'0')*10+lenh_sms[14]-'0';
      004910 90r00r23         [24]12852 	mov	dptr,#(_lenh_sms + 0x000d)
      004913 E0               [24]12853 	movx	a,@dptr
      004914 24 D0            [12]12854 	add	a,#0xd0
      004916 75 F0 0A         [24]12855 	mov	b,#0x0a
      004919 A4               [48]12856 	mul	ab
      00491A FF               [12]12857 	mov	r7,a
      00491B 90r00r24         [24]12858 	mov	dptr,#(_lenh_sms + 0x000e)
      00491E E0               [24]12859 	movx	a,@dptr
      00491F 2F               [12]12860 	add	a,r7
      004920 24 D0            [12]12861 	add	a,#0xd0
      004922 FF               [12]12862 	mov	r7,a
                                  12863 ;	include/xu_ly_tin_nhan.c:319: u16 check = (23*((lenh_sms[11]-'0')*10+lenh_sms[12]-'0')/9 + ((lenh_sms[9]-'0')*10+lenh_sms[10]-'0') + 
      004923 90r00r21         [24]12864 	mov	dptr,#(_lenh_sms + 0x000b)
      004926 E0               [24]12865 	movx	a,@dptr
      004927 7D 00            [12]12866 	mov	r5,#0x00
      004929 24 D0            [12]12867 	add	a,#0xd0
      00492B F5*00            [12]12868 	mov	__mulint_PARM_2,a
      00492D ED               [12]12869 	mov	a,r5
      00492E 34 FF            [12]12870 	addc	a,#0xff
      004930 F5*01            [12]12871 	mov	(__mulint_PARM_2 + 1),a
      004932 90 00 0A         [24]12872 	mov	dptr,#0x000a
      004935 C0 07            [24]12873 	push	ar7
      004937 12r00r00         [24]12874 	lcall	__mulint
      00493A AD 82            [24]12875 	mov	r5,dpl
      00493C AE 83            [24]12876 	mov	r6,dph
      00493E 90r00r22         [24]12877 	mov	dptr,#(_lenh_sms + 0x000c)
      004941 E0               [24]12878 	movx	a,@dptr
      004942 7B 00            [12]12879 	mov	r3,#0x00
      004944 2D               [12]12880 	add	a,r5
      004945 FD               [12]12881 	mov	r5,a
      004946 EB               [12]12882 	mov	a,r3
      004947 3E               [12]12883 	addc	a,r6
      004948 FE               [12]12884 	mov	r6,a
      004949 ED               [12]12885 	mov	a,r5
      00494A 24 D0            [12]12886 	add	a,#0xd0
      00494C FD               [12]12887 	mov	r5,a
      00494D EE               [12]12888 	mov	a,r6
      00494E 34 FF            [12]12889 	addc	a,#0xff
      004950 FE               [12]12890 	mov	r6,a
      004951 8D*00            [24]12891 	mov	__mulint_PARM_2,r5
      004953 8E*01            [24]12892 	mov	(__mulint_PARM_2 + 1),r6
      004955 90 00 17         [24]12893 	mov	dptr,#0x0017
      004958 C0 06            [24]12894 	push	ar6
      00495A C0 05            [24]12895 	push	ar5
      00495C 12r00r00         [24]12896 	lcall	__mulint
      00495F 75*00 09         [24]12897 	mov	__divsint_PARM_2,#0x09
      004962 75*01 00         [24]12898 	mov	(__divsint_PARM_2 + 1),#0x00
      004965 12r00r00         [24]12899 	lcall	__divsint
      004968 E5 82            [12]12900 	mov	a,dpl
      00496A 85 83 F0         [24]12901 	mov	b,dph
      00496D D0 05            [24]12902 	pop	ar5
      00496F D0 06            [24]12903 	pop	ar6
      004971 D0 07            [24]12904 	pop	ar7
      004973 24 D1            [12]12905 	add	a,#0xd1
      004975 FB               [12]12906 	mov	r3,a
      004976 74 FF            [12]12907 	mov	a,#0xff
      004978 35 F0            [12]12908 	addc	a,b
      00497A FC               [12]12909 	mov	r4,a
      00497B C3               [12]12910 	clr	c
      00497C 74 02            [12]12911 	mov	a,#0x02
      00497E 9D               [12]12912 	subb	a,r5
      00497F 74 80            [12]12913 	mov	a,#(0x00 ^ 0x80)
      004981 8E F0            [24]12914 	mov	b,r6
      004983 63 F0 80         [24]12915 	xrl	b,#0x80
      004986 95 F0            [12]12916 	subb	a,b
      004988 50 12            [24]12917 	jnc	00498$
      00498A 74 03            [12]12918 	mov	a,#0x03
      00498C 5F               [12]12919 	anl	a,r7
      00498D 7E 00            [12]12920 	mov	r6,#0x00
      00498F 4E               [12]12921 	orl	a,r6
      004990 B4 01 00         [24]12922 	cjne	a,#0x01,01915$
      004993                      12923 01915$:
      004993 92*4A            [24]12924 	mov  _xu_ly_tin_nhan_sloc8_1_0,c
      004995 E4               [12]12925 	clr	a
      004996 33               [12]12926 	rlc	a
      004997 FD               [12]12927 	mov	r5,a
      004998 7E 00            [12]12928 	mov	r6,#0x00
      00499A 80 04            [24]12929 	sjmp	00499$
      00499C                      12930 00498$:
      00499C 7D 02            [12]12931 	mov	r5,#0x02
      00499E 7E 00            [12]12932 	mov	r6,#0x00
      0049A0                      12933 00499$:
      0049A0 ED               [12]12934 	mov	a,r5
      0049A1 2B               [12]12935 	add	a,r3
      0049A2 FB               [12]12936 	mov	r3,a
      0049A3 EE               [12]12937 	mov	a,r6
      0049A4 3C               [12]12938 	addc	a,r4
      0049A5 FC               [12]12939 	mov	r4,a
      0049A6 7E 00            [12]12940 	mov	r6,#0x00
      0049A8 EF               [12]12941 	mov	a,r7
      0049A9 2B               [12]12942 	add	a,r3
      0049AA FB               [12]12943 	mov	r3,a
      0049AB EE               [12]12944 	mov	a,r6
      0049AC 3C               [12]12945 	addc	a,r4
      0049AD FC               [12]12946 	mov	r4,a
      0049AE 8F 82            [24]12947 	mov	dpl,r7
      0049B0 8E 83            [24]12948 	mov	dph,r6
      0049B2 A3               [24]12949 	inc	dptr
      0049B3 A3               [24]12950 	inc	dptr
      0049B4 A3               [24]12951 	inc	dptr
      0049B5 75*00 04         [24]12952 	mov	__divsint_PARM_2,#0x04
                                  12953 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      0049B8 8E*01            [24]12954 	mov	(__divsint_PARM_2 + 1),r6
      0049BA C0 04            [24]12955 	push	ar4
      0049BC C0 03            [24]12956 	push	ar3
      0049BE 12r00r00         [24]12957 	lcall	__divsint
      0049C1 AE 82            [24]12958 	mov	r6,dpl
      0049C3 AF 83            [24]12959 	mov	r7,dph
      0049C5 D0 03            [24]12960 	pop	ar3
      0049C7 D0 04            [24]12961 	pop	ar4
      0049C9 EE               [12]12962 	mov	a,r6
      0049CA 2B               [12]12963 	add	a,r3
      0049CB FB               [12]12964 	mov	r3,a
      0049CC EF               [12]12965 	mov	a,r7
      0049CD 3C               [12]12966 	addc	a,r4
      0049CE FC               [12]12967 	mov	r4,a
      0049CF 90r00r1F         [24]12968 	mov	dptr,#(_lenh_sms + 0x0009)
      0049D2 E0               [24]12969 	movx	a,@dptr
      0049D3 7E 00            [12]12970 	mov	r6,#0x00
      0049D5 24 D0            [12]12971 	add	a,#0xd0
      0049D7 F5*00            [12]12972 	mov	__mulint_PARM_2,a
      0049D9 EE               [12]12973 	mov	a,r6
      0049DA 34 FF            [12]12974 	addc	a,#0xff
      0049DC F5*01            [12]12975 	mov	(__mulint_PARM_2 + 1),a
      0049DE 90 00 0A         [24]12976 	mov	dptr,#0x000a
      0049E1 C0 04            [24]12977 	push	ar4
      0049E3 C0 03            [24]12978 	push	ar3
      0049E5 12r00r00         [24]12979 	lcall	__mulint
      0049E8 AE 82            [24]12980 	mov	r6,dpl
      0049EA AF 83            [24]12981 	mov	r7,dph
      0049EC D0 03            [24]12982 	pop	ar3
      0049EE D0 04            [24]12983 	pop	ar4
      0049F0 90r00r20         [24]12984 	mov	dptr,#(_lenh_sms + 0x000a)
      0049F3 E0               [24]12985 	movx	a,@dptr
      0049F4 FD               [12]12986 	mov	r5,a
      0049F5 7A 00            [12]12987 	mov	r2,#0x00
      0049F7 2E               [12]12988 	add	a,r6
      0049F8 FE               [12]12989 	mov	r6,a
      0049F9 EA               [12]12990 	mov	a,r2
      0049FA 3F               [12]12991 	addc	a,r7
      0049FB FF               [12]12992 	mov	r7,a
      0049FC EE               [12]12993 	mov	a,r6
      0049FD 2B               [12]12994 	add	a,r3
      0049FE FE               [12]12995 	mov	r6,a
      0049FF EF               [12]12996 	mov	a,r7
      004A00 3C               [12]12997 	addc	a,r4
      004A01 FF               [12]12998 	mov	r7,a
                                  12999 ;	include/xu_ly_tin_nhan.c:321: mp3_play(eep_mp3>3?check%7+1:10,(lenh_sms[4]-'0')*10+lenh_sms[5]-'0',(lenh_sms[6]-'0')*10+lenh_sms[7]-'0');
      004A02 90 F0 10         [24]13000 	mov	dptr,#_eep_mp3
      004A05 E4               [12]13001 	clr	a
      004A06 93               [24]13002 	movc	a,@a+dptr
      004A07 FD               [12]13003 	mov  r5,a
      004A08 24 FC            [12]13004 	add	a,#0xff - 0x03
      004A0A 50 17            [24]13005 	jnc	00500$
      004A0C 75*00 07         [24]13006 	mov	__moduint_PARM_2,#0x07
      004A0F 75*01 00         [24]13007 	mov	(__moduint_PARM_2 + 1),#0x00
      004A12 8E 82            [24]13008 	mov	dpl,r6
      004A14 8F 83            [24]13009 	mov	dph,r7
      004A16 12r00r00         [24]13010 	lcall	__moduint
      004A19 AE 82            [24]13011 	mov	r6,dpl
      004A1B 0E               [12]13012 	inc	r6
      004A1C EE               [12]13013 	mov	a,r6
      004A1D 33               [12]13014 	rlc	a
      004A1E 95 E0            [12]13015 	subb	a,acc
      004A20 FF               [12]13016 	mov	r7,a
      004A21 80 04            [24]13017 	sjmp	00501$
      004A23                      13018 00500$:
      004A23 7E 0A            [12]13019 	mov	r6,#0x0a
      004A25 7F 00            [12]13020 	mov	r7,#0x00
      004A27                      13021 00501$:
      004A27 90r00r1A         [24]13022 	mov	dptr,#(_lenh_sms + 0x0004)
      004A2A E0               [24]13023 	movx	a,@dptr
      004A2B 24 D0            [12]13024 	add	a,#0xd0
      004A2D 75 F0 0A         [24]13025 	mov	b,#0x0a
      004A30 A4               [48]13026 	mul	ab
      004A31 FF               [12]13027 	mov	r7,a
      004A32 90r00r1B         [24]13028 	mov	dptr,#(_lenh_sms + 0x0005)
      004A35 E0               [24]13029 	movx	a,@dptr
      004A36 2F               [12]13030 	add	a,r7
      004A37 24 D0            [12]13031 	add	a,#0xd0
      004A39 F5*00            [12]13032 	mov	_mp3_play_PARM_2,a
      004A3B 90r00r1C         [24]13033 	mov	dptr,#(_lenh_sms + 0x0006)
      004A3E E0               [24]13034 	movx	a,@dptr
      004A3F 24 D0            [12]13035 	add	a,#0xd0
      004A41 75 F0 0A         [24]13036 	mov	b,#0x0a
      004A44 A4               [48]13037 	mul	ab
      004A45 FF               [12]13038 	mov	r7,a
      004A46 90r00r1D         [24]13039 	mov	dptr,#(_lenh_sms + 0x0007)
      004A49 E0               [24]13040 	movx	a,@dptr
      004A4A 2F               [12]13041 	add	a,r7
      004A4B 24 D0            [12]13042 	add	a,#0xd0
      004A4D F5*00            [12]13043 	mov	_mp3_play_PARM_3,a
      004A4F 8E 82            [24]13044 	mov	dpl,r6
      004A51 12r00r00         [24]13045 	lcall	_mp3_play
                                  13046 ;	include/xu_ly_tin_nhan.c:322: delay_ms(1500);
      004A54 90 05 DC         [24]13047 	mov	dptr,#0x05dc
      004A57 12r00r00         [24]13048 	lcall	_delay_ms
                                  13049 ;	include/xu_ly_tin_nhan.c:323: if(mp3_playing) baocaosms(CHINH,"\rTest mp3 thanh cong");
      004A5A 30 92 0E         [24]13050 	jnb	_P12,00332$
                                  13051 ;	assignBit
      004A5D D2*44            [12]13052 	setb	_baocaosms_PARM_1
      004A5F 90r09r6A         [24]13053 	mov	dptr,#___str_102
      004A62 75 F0 80         [24]13054 	mov	b,#0x80
      004A65 12r17r8C         [24]13055 	lcall	_baocaosms
      004A68 02r4Er59         [24]13056 	ljmp	00479$
      004A6B                      13057 00332$:
                                  13058 ;	include/xu_ly_tin_nhan.c:324: else baocaosms(CHINH,"\rkhong dung gio phat hoac mp3 loi");
                                  13059 ;	assignBit
      004A6B D2*44            [12]13060 	setb	_baocaosms_PARM_1
      004A6D 90r09r7F         [24]13061 	mov	dptr,#___str_103
      004A70 75 F0 80         [24]13062 	mov	b,#0x80
      004A73 12r17r8C         [24]13063 	lcall	_baocaosms
      004A76 02r4Er59         [24]13064 	ljmp	00479$
      004A79                      13065 00335$:
                                  13066 ;	include/xu_ly_tin_nhan.c:325: }else baocaosms(CHINH,"\rMp3 dang choi nhac nen chua the test");
                                  13067 ;	assignBit
      004A79 D2*44            [12]13068 	setb	_baocaosms_PARM_1
      004A7B 90r09rA1         [24]13069 	mov	dptr,#___str_104
      004A7E 75 F0 80         [24]13070 	mov	b,#0x80
      004A81 12r17r8C         [24]13071 	lcall	_baocaosms
      004A84 02r4Er59         [24]13072 	ljmp	00479$
      004A87                      13073 00338$:
                                  13074 ;	include/xu_ly_tin_nhan.c:326: }else baocaosms(CHINH,"\rLenh MP3 khong hop le");
                                  13075 ;	assignBit
      004A87 D2*44            [12]13076 	setb	_baocaosms_PARM_1
      004A89 90r09rC7         [24]13077 	mov	dptr,#___str_105
      004A8C 75 F0 80         [24]13078 	mov	b,#0x80
      004A8F 12r17r8C         [24]13079 	lcall	_baocaosms
                                  13080 ;	include/xu_ly_tin_nhan.c:328: break;
      004A92 02r4Er59         [24]13081 	ljmp	00479$
                                  13082 ;	include/xu_ly_tin_nhan.c:330: case 'I':
      004A95                      13083 00377$:
                                  13084 ;	include/xu_ly_tin_nhan.c:331: if(!phone_chinh_so_sanh_that_bai){
      004A95 30*06 03         [24]13085 	jnb	_phone_chinh_so_sanh_that_bai,01918$
      004A98 02r4Er59         [24]13086 	ljmp	00479$
      004A9B                      13087 01918$:
                                  13088 ;	include/xu_ly_tin_nhan.c:332: if(lenh_sms[4]=='B' || lenh_sms[4]=='b' || lenh_sms[5]=='N' || lenh_sms[5]=='n' ){
      004A9B 90r00r1A         [24]13089 	mov	dptr,#(_lenh_sms + 0x0004)
      004A9E E0               [24]13090 	movx	a,@dptr
      004A9F FF               [12]13091 	mov	r7,a
      004AA0 BF 42 02         [24]13092 	cjne	r7,#0x42,01919$
      004AA3 80 12            [24]13093 	sjmp	00383$
      004AA5                      13094 01919$:
      004AA5 BF 62 02         [24]13095 	cjne	r7,#0x62,01920$
      004AA8 80 0D            [24]13096 	sjmp	00383$
      004AAA                      13097 01920$:
      004AAA 90r00r1B         [24]13098 	mov	dptr,#(_lenh_sms + 0x0005)
      004AAD E0               [24]13099 	movx	a,@dptr
      004AAE FE               [12]13100 	mov	r6,a
      004AAF BE 4E 02         [24]13101 	cjne	r6,#0x4e,01921$
      004AB2 80 03            [24]13102 	sjmp	00383$
      004AB4                      13103 01921$:
      004AB4 BE 6E 1D         [24]13104 	cjne	r6,#0x6e,00384$
      004AB7                      13105 00383$:
                                  13106 ;	include/xu_ly_tin_nhan.c:333: IAP_docxoasector1();
      004AB7 12r00r00         [24]13107 	lcall	_IAP_docxoasector1
                                  13108 ;	include/xu_ly_tin_nhan.c:334: eeprom_buf[GPSON_EEPROM] = 1;
      004ABA 90r00rBE         [24]13109 	mov	dptr,#(_eeprom_buf + 0x0002)
      004ABD 74 01            [12]13110 	mov	a,#0x01
      004ABF F0               [24]13111 	movx	@dptr,a
                                  13112 ;	include/xu_ly_tin_nhan.c:335: IAP_ghisector1();
      004AC0 12r00r00         [24]13113 	lcall	_IAP_ghisector1
                                  13114 ;	include/xu_ly_tin_nhan.c:337: gsm_thietlapngaygiothuc();
      004AC3 12r1Cr8F         [24]13115 	lcall	_gsm_thietlapngaygiothuc
                                  13116 ;	include/xu_ly_tin_nhan.c:338: baocaosms(CHINH,"\rBat GPS");
                                  13117 ;	assignBit
      004AC6 D2*44            [12]13118 	setb	_baocaosms_PARM_1
      004AC8 90r09rDE         [24]13119 	mov	dptr,#___str_106
      004ACB 75 F0 80         [24]13120 	mov	b,#0x80
      004ACE 12r17r8C         [24]13121 	lcall	_baocaosms
      004AD1 02r4Er59         [24]13122 	ljmp	00479$
      004AD4                      13123 00384$:
                                  13124 ;	include/xu_ly_tin_nhan.c:340: else if(lenh_sms[4]=='T' || lenh_sms[4]=='t' || lenh_sms[5]=='B' || lenh_sms[5]=='b' ){
      004AD4 BF 54 02         [24]13125 	cjne	r7,#0x54,01924$
      004AD7 80 12            [24]13126 	sjmp	00378$
      004AD9                      13127 01924$:
      004AD9 BF 74 02         [24]13128 	cjne	r7,#0x74,01925$
      004ADC 80 0D            [24]13129 	sjmp	00378$
      004ADE                      13130 01925$:
      004ADE BE 42 02         [24]13131 	cjne	r6,#0x42,01926$
      004AE1 80 08            [24]13132 	sjmp	00378$
      004AE3                      13133 01926$:
      004AE3 BE 62 02         [24]13134 	cjne	r6,#0x62,01927$
      004AE6 80 03            [24]13135 	sjmp	01928$
      004AE8                      13136 01927$:
      004AE8 02r4Er59         [24]13137 	ljmp	00479$
      004AEB                      13138 01928$:
      004AEB                      13139 00378$:
                                  13140 ;	include/xu_ly_tin_nhan.c:341: IAP_docxoasector1();
      004AEB 12r00r00         [24]13141 	lcall	_IAP_docxoasector1
                                  13142 ;	include/xu_ly_tin_nhan.c:342: eeprom_buf[GPSON_EEPROM] = 0;
      004AEE 90r00rBE         [24]13143 	mov	dptr,#(_eeprom_buf + 0x0002)
      004AF1 E4               [12]13144 	clr	a
      004AF2 F0               [24]13145 	movx	@dptr,a
                                  13146 ;	include/xu_ly_tin_nhan.c:343: IAP_ghisector1();
      004AF3 12r00r00         [24]13147 	lcall	_IAP_ghisector1
                                  13148 ;	include/xu_ly_tin_nhan.c:344: GPS_time = 0;
                                  13149 ;	assignBit
      004AF6 C2*1B            [12]13150 	clr	_GPS_time
                                  13151 ;	include/xu_ly_tin_nhan.c:345: baocaosms(CHINH,"\rTat GPS"); 
                                  13152 ;	assignBit
      004AF8 D2*44            [12]13153 	setb	_baocaosms_PARM_1
      004AFA 90r09rE7         [24]13154 	mov	dptr,#___str_107
      004AFD 75 F0 80         [24]13155 	mov	b,#0x80
      004B00 12r17r8C         [24]13156 	lcall	_baocaosms
                                  13157 ;	include/xu_ly_tin_nhan.c:348: break;
      004B03 02r4Er59         [24]13158 	ljmp	00479$
                                  13159 ;	include/xu_ly_tin_nhan.c:350: case 'T':
      004B06                      13160 00392$:
                                  13161 ;	include/xu_ly_tin_nhan.c:351: if(!phone_chinh_so_sanh_that_bai){
      004B06 30*06 03         [24]13162 	jnb	_phone_chinh_so_sanh_that_bai,01929$
      004B09 02r4Er25         [24]13163 	ljmp	00474$
      004B0C                      13164 01929$:
                                  13165 ;	include/xu_ly_tin_nhan.c:352: if(lenh_sms[3]=='G' || lenh_sms[3]=='g' || lenh_sms[3]=='C' || lenh_sms[3]=='c' ){
      004B0C 90r00r19         [24]13166 	mov	dptr,#(_lenh_sms + 0x0003)
      004B0F E0               [24]13167 	movx	a,@dptr
      004B10 FF               [12]13168 	mov	r7,a
      004B11 BF 47 02         [24]13169 	cjne	r7,#0x47,01930$
      004B14 80 0D            [24]13170 	sjmp	00467$
      004B16                      13171 01930$:
      004B16 BF 67 02         [24]13172 	cjne	r7,#0x67,01931$
      004B19 80 08            [24]13173 	sjmp	00467$
      004B1B                      13174 01931$:
      004B1B BF 43 02         [24]13175 	cjne	r7,#0x43,01932$
      004B1E 80 03            [24]13176 	sjmp	00467$
      004B20                      13177 01932$:
      004B20 BF 63 10         [24]13178 	cjne	r7,#0x63,00468$
      004B23                      13179 00467$:
                                  13180 ;	include/xu_ly_tin_nhan.c:353: goi_dien_thoai = 1;
                                  13181 ;	assignBit
      004B23 D2*05            [12]13182 	setb	_goi_dien_thoai
                                  13183 ;	include/xu_ly_tin_nhan.c:354: baocaosms(CHINH,"\rDang goi dien thoai ve ...."); 
                                  13184 ;	assignBit
      004B25 D2*44            [12]13185 	setb	_baocaosms_PARM_1
      004B27 90r09rF0         [24]13186 	mov	dptr,#___str_108
      004B2A 75 F0 80         [24]13187 	mov	b,#0x80
      004B2D 12r17r8C         [24]13188 	lcall	_baocaosms
      004B30 02r4Er25         [24]13189 	ljmp	00474$
      004B33                      13190 00468$:
                                  13191 ;	include/xu_ly_tin_nhan.c:356: else if(lenh_sms[3]=='+' && lenh_sms[4]=='8' && lenh_sms[5]=='4'){
      004B33 BF 2B 02         [24]13192 	cjne	r7,#0x2b,01935$
      004B36 80 03            [24]13193 	sjmp	01936$
      004B38                      13194 01935$:
      004B38 02r4Cr6D         [24]13195 	ljmp	00463$
      004B3B                      13196 01936$:
      004B3B 90r00r1A         [24]13197 	mov	dptr,#(_lenh_sms + 0x0004)
      004B3E E0               [24]13198 	movx	a,@dptr
      004B3F FE               [12]13199 	mov	r6,a
      004B40 BE 38 02         [24]13200 	cjne	r6,#0x38,01937$
      004B43 80 03            [24]13201 	sjmp	01938$
      004B45                      13202 01937$:
      004B45 02r4Cr6D         [24]13203 	ljmp	00463$
      004B48                      13204 01938$:
      004B48 90r00r1B         [24]13205 	mov	dptr,#(_lenh_sms + 0x0005)
      004B4B E0               [24]13206 	movx	a,@dptr
      004B4C FE               [12]13207 	mov	r6,a
      004B4D BE 34 02         [24]13208 	cjne	r6,#0x34,01939$
      004B50 80 03            [24]13209 	sjmp	01940$
      004B52                      13210 01939$:
      004B52 02r4Cr6D         [24]13211 	ljmp	00463$
      004B55                      13212 01940$:
                                  13213 ;	include/xu_ly_tin_nhan.c:357: if(lenh_sms[6]>='0' && lenh_sms[6]<='9' && lenh_sms[7]>='0' && lenh_sms[7]<='9' &&
      004B55 90r00r1C         [24]13214 	mov	dptr,#(_lenh_sms + 0x0006)
      004B58 E0               [24]13215 	movx	a,@dptr
      004B59 FE               [12]13216 	mov	r6,a
      004B5A BE 30 00         [24]13217 	cjne	r6,#0x30,01941$
      004B5D                      13218 01941$:
      004B5D 50 03            [24]13219 	jnc	01942$
      004B5F 02r4Cr5F         [24]13220 	ljmp	00397$
      004B62                      13221 01942$:
      004B62 EE               [12]13222 	mov	a,r6
      004B63 24 C6            [12]13223 	add	a,#0xff - 0x39
      004B65 50 03            [24]13224 	jnc	01943$
      004B67 02r4Cr5F         [24]13225 	ljmp	00397$
      004B6A                      13226 01943$:
      004B6A 90r00r1D         [24]13227 	mov	dptr,#(_lenh_sms + 0x0007)
      004B6D E0               [24]13228 	movx	a,@dptr
      004B6E FE               [12]13229 	mov	r6,a
      004B6F BE 30 00         [24]13230 	cjne	r6,#0x30,01944$
      004B72                      13231 01944$:
      004B72 50 03            [24]13232 	jnc	01945$
      004B74 02r4Cr5F         [24]13233 	ljmp	00397$
      004B77                      13234 01945$:
      004B77 EE               [12]13235 	mov	a,r6
      004B78 24 C6            [12]13236 	add	a,#0xff - 0x39
      004B7A 50 03            [24]13237 	jnc	01946$
      004B7C 02r4Cr5F         [24]13238 	ljmp	00397$
      004B7F                      13239 01946$:
                                  13240 ;	include/xu_ly_tin_nhan.c:358: lenh_sms[8]>='0' && lenh_sms[8]<='9' && lenh_sms[9]>='0' && lenh_sms[9]<='9' &&
      004B7F 90r00r1E         [24]13241 	mov	dptr,#(_lenh_sms + 0x0008)
      004B82 E0               [24]13242 	movx	a,@dptr
      004B83 FE               [12]13243 	mov	r6,a
      004B84 BE 30 00         [24]13244 	cjne	r6,#0x30,01947$
      004B87                      13245 01947$:
      004B87 50 03            [24]13246 	jnc	01948$
      004B89 02r4Cr5F         [24]13247 	ljmp	00397$
      004B8C                      13248 01948$:
      004B8C EE               [12]13249 	mov	a,r6
      004B8D 24 C6            [12]13250 	add	a,#0xff - 0x39
      004B8F 50 03            [24]13251 	jnc	01949$
      004B91 02r4Cr5F         [24]13252 	ljmp	00397$
      004B94                      13253 01949$:
      004B94 90r00r1F         [24]13254 	mov	dptr,#(_lenh_sms + 0x0009)
      004B97 E0               [24]13255 	movx	a,@dptr
      004B98 FE               [12]13256 	mov	r6,a
      004B99 BE 30 00         [24]13257 	cjne	r6,#0x30,01950$
      004B9C                      13258 01950$:
      004B9C 50 03            [24]13259 	jnc	01951$
      004B9E 02r4Cr5F         [24]13260 	ljmp	00397$
      004BA1                      13261 01951$:
      004BA1 EE               [12]13262 	mov	a,r6
      004BA2 24 C6            [12]13263 	add	a,#0xff - 0x39
      004BA4 50 03            [24]13264 	jnc	01952$
      004BA6 02r4Cr5F         [24]13265 	ljmp	00397$
      004BA9                      13266 01952$:
                                  13267 ;	include/xu_ly_tin_nhan.c:359: lenh_sms[10]>='0' && lenh_sms[10]<='9' && lenh_sms[11]>='0' && lenh_sms[11]<='9' &&
      004BA9 90r00r20         [24]13268 	mov	dptr,#(_lenh_sms + 0x000a)
      004BAC E0               [24]13269 	movx	a,@dptr
      004BAD FE               [12]13270 	mov	r6,a
      004BAE BE 30 00         [24]13271 	cjne	r6,#0x30,01953$
      004BB1                      13272 01953$:
      004BB1 50 03            [24]13273 	jnc	01954$
      004BB3 02r4Cr5F         [24]13274 	ljmp	00397$
      004BB6                      13275 01954$:
      004BB6 EE               [12]13276 	mov	a,r6
      004BB7 24 C6            [12]13277 	add	a,#0xff - 0x39
      004BB9 50 03            [24]13278 	jnc	01955$
      004BBB 02r4Cr5F         [24]13279 	ljmp	00397$
      004BBE                      13280 01955$:
      004BBE 90r00r21         [24]13281 	mov	dptr,#(_lenh_sms + 0x000b)
      004BC1 E0               [24]13282 	movx	a,@dptr
      004BC2 FE               [12]13283 	mov	r6,a
      004BC3 BE 30 00         [24]13284 	cjne	r6,#0x30,01956$
      004BC6                      13285 01956$:
      004BC6 50 03            [24]13286 	jnc	01957$
      004BC8 02r4Cr5F         [24]13287 	ljmp	00397$
      004BCB                      13288 01957$:
      004BCB EE               [12]13289 	mov	a,r6
      004BCC 24 C6            [12]13290 	add	a,#0xff - 0x39
      004BCE 50 03            [24]13291 	jnc	01958$
      004BD0 02r4Cr5F         [24]13292 	ljmp	00397$
      004BD3                      13293 01958$:
                                  13294 ;	include/xu_ly_tin_nhan.c:360: lenh_sms[12]>='0' && lenh_sms[12]<='9' && lenh_sms[13]>='0' && lenh_sms[13]<='9' &&
      004BD3 90r00r22         [24]13295 	mov	dptr,#(_lenh_sms + 0x000c)
      004BD6 E0               [24]13296 	movx	a,@dptr
      004BD7 FE               [12]13297 	mov	r6,a
      004BD8 BE 30 00         [24]13298 	cjne	r6,#0x30,01959$
      004BDB                      13299 01959$:
      004BDB 50 03            [24]13300 	jnc	01960$
      004BDD 02r4Cr5F         [24]13301 	ljmp	00397$
      004BE0                      13302 01960$:
      004BE0 EE               [12]13303 	mov	a,r6
      004BE1 24 C6            [12]13304 	add	a,#0xff - 0x39
      004BE3 40 7A            [24]13305 	jc	00397$
      004BE5 90r00r23         [24]13306 	mov	dptr,#(_lenh_sms + 0x000d)
      004BE8 E0               [24]13307 	movx	a,@dptr
      004BE9 FE               [12]13308 	mov	r6,a
      004BEA BE 30 00         [24]13309 	cjne	r6,#0x30,01962$
      004BED                      13310 01962$:
      004BED 40 70            [24]13311 	jc	00397$
      004BEF EE               [12]13312 	mov	a,r6
      004BF0 24 C6            [12]13313 	add	a,#0xff - 0x39
      004BF2 40 6B            [24]13314 	jc	00397$
                                  13315 ;	include/xu_ly_tin_nhan.c:361: lenh_sms[14]>='0' && lenh_sms[14]<='9'){
      004BF4 90r00r24         [24]13316 	mov	dptr,#(_lenh_sms + 0x000e)
      004BF7 E0               [24]13317 	movx	a,@dptr
      004BF8 FE               [12]13318 	mov	r6,a
      004BF9 BE 30 00         [24]13319 	cjne	r6,#0x30,01965$
      004BFC                      13320 01965$:
      004BFC 40 61            [24]13321 	jc	00397$
      004BFE EE               [12]13322 	mov	a,r6
      004BFF 24 C6            [12]13323 	add	a,#0xff - 0x39
      004C01 40 5C            [24]13324 	jc	00397$
                                  13325 ;	include/xu_ly_tin_nhan.c:362: IAP_docxoasector1();
      004C03 12r00r00         [24]13326 	lcall	_IAP_docxoasector1
                                  13327 ;	include/xu_ly_tin_nhan.c:363: eeprom_buf[PHONEPHU_EEPROM] = 0;
      004C06 90r00rCD         [24]13328 	mov	dptr,#(_eeprom_buf + 0x0011)
      004C09 E4               [12]13329 	clr	a
      004C0A F0               [24]13330 	movx	@dptr,a
                                  13331 ;	include/xu_ly_tin_nhan.c:364: for(i=1;i<10;i++)
      004C0B 7E 01            [12]13332 	mov	r6,#0x01
      004C0D                      13333 00490$:
                                  13334 ;	include/xu_ly_tin_nhan.c:365: eeprom_buf[PHONEPHU_EEPROM+i] = lenh_sms[6+i];
      004C0D 8E 05            [24]13335 	mov	ar5,r6
      004C0F 74 11            [12]13336 	mov	a,#0x11
      004C11 2D               [12]13337 	add	a,r5
      004C12 FD               [12]13338 	mov	r5,a
      004C13 33               [12]13339 	rlc	a
      004C14 95 E0            [12]13340 	subb	a,acc
      004C16 FC               [12]13341 	mov	r4,a
      004C17 ED               [12]13342 	mov	a,r5
      004C18 24rBC            [12]13343 	add	a,#_eeprom_buf
      004C1A FD               [12]13344 	mov	r5,a
      004C1B EC               [12]13345 	mov	a,r4
      004C1C 34s00            [12]13346 	addc	a,#(_eeprom_buf >> 8)
      004C1E FC               [12]13347 	mov	r4,a
      004C1F 8E 02            [24]13348 	mov	ar2,r6
      004C21 7B 00            [12]13349 	mov	r3,#0x00
      004C23 74 06            [12]13350 	mov	a,#0x06
      004C25 2A               [12]13351 	add	a,r2
      004C26 FA               [12]13352 	mov	r2,a
      004C27 E4               [12]13353 	clr	a
      004C28 3B               [12]13354 	addc	a,r3
      004C29 FB               [12]13355 	mov	r3,a
      004C2A EA               [12]13356 	mov	a,r2
      004C2B 24r16            [12]13357 	add	a,#_lenh_sms
      004C2D F5 82            [12]13358 	mov	dpl,a
      004C2F EB               [12]13359 	mov	a,r3
      004C30 34s00            [12]13360 	addc	a,#(_lenh_sms >> 8)
      004C32 F5 83            [12]13361 	mov	dph,a
      004C34 E0               [24]13362 	movx	a,@dptr
      004C35 8D 82            [24]13363 	mov	dpl,r5
      004C37 8C 83            [24]13364 	mov	dph,r4
      004C39 F0               [24]13365 	movx	@dptr,a
                                  13366 ;	include/xu_ly_tin_nhan.c:364: for(i=1;i<10;i++)
      004C3A 0E               [12]13367 	inc	r6
      004C3B BE 0A 00         [24]13368 	cjne	r6,#0x0a,01968$
      004C3E                      13369 01968$:
      004C3E 40 CD            [24]13370 	jc	00490$
                                  13371 ;	include/xu_ly_tin_nhan.c:366: if(eeprom_buf[PHONEPHU_EEPROM+11]==2) eeprom_buf[PHONEPHU_EEPROM+11] = 1;
      004C40 90r00rD8         [24]13372 	mov	dptr,#(_eeprom_buf + 0x001c)
      004C43 E0               [24]13373 	movx	a,@dptr
      004C44 FE               [12]13374 	mov	r6,a
      004C45 BE 02 06         [24]13375 	cjne	r6,#0x02,00395$
      004C48 90r00rD8         [24]13376 	mov	dptr,#(_eeprom_buf + 0x001c)
      004C4B 74 01            [12]13377 	mov	a,#0x01
      004C4D F0               [24]13378 	movx	@dptr,a
      004C4E                      13379 00395$:
                                  13380 ;	include/xu_ly_tin_nhan.c:367: IAP_ghisector1();
      004C4E 12r00r00         [24]13381 	lcall	_IAP_ghisector1
                                  13382 ;	include/xu_ly_tin_nhan.c:368: baocaosms(CHINH,"\rghi phone phu moi thanh cong");
                                  13383 ;	assignBit
      004C51 D2*44            [12]13384 	setb	_baocaosms_PARM_1
      004C53 90r0Ar0D         [24]13385 	mov	dptr,#___str_109
      004C56 75 F0 80         [24]13386 	mov	b,#0x80
      004C59 12r17r8C         [24]13387 	lcall	_baocaosms
      004C5C 02r4Er25         [24]13388 	ljmp	00474$
      004C5F                      13389 00397$:
                                  13390 ;	include/xu_ly_tin_nhan.c:369: }else baocaosms(CHINH,"\rthay doi phone phu khong thanh cong");
                                  13391 ;	assignBit
      004C5F D2*44            [12]13392 	setb	_baocaosms_PARM_1
      004C61 90r0Ar2B         [24]13393 	mov	dptr,#___str_110
      004C64 75 F0 80         [24]13394 	mov	b,#0x80
      004C67 12r17r8C         [24]13395 	lcall	_baocaosms
      004C6A 02r4Er25         [24]13396 	ljmp	00474$
      004C6D                      13397 00463$:
                                  13398 ;	include/xu_ly_tin_nhan.c:371: else if(lenh_sms[3]=='0'){
      004C6D BF 30 02         [24]13399 	cjne	r7,#0x30,01972$
      004C70 80 03            [24]13400 	sjmp	01973$
      004C72                      13401 01972$:
      004C72 02r4Dr85         [24]13402 	ljmp	00460$
      004C75                      13403 01973$:
                                  13404 ;	include/xu_ly_tin_nhan.c:372: if(lenh_sms[4]>='0' && lenh_sms[4]<='9' && lenh_sms[5]>='0' && lenh_sms[5]<='9' &&
      004C75 90r00r1A         [24]13405 	mov	dptr,#(_lenh_sms + 0x0004)
      004C78 E0               [24]13406 	movx	a,@dptr
      004C79 FE               [12]13407 	mov	r6,a
      004C7A BE 30 00         [24]13408 	cjne	r6,#0x30,01974$
      004C7D                      13409 01974$:
      004C7D 50 03            [24]13410 	jnc	01975$
      004C7F 02r4Dr77         [24]13411 	ljmp	00420$
      004C82                      13412 01975$:
      004C82 EE               [12]13413 	mov	a,r6
      004C83 24 C6            [12]13414 	add	a,#0xff - 0x39
      004C85 50 03            [24]13415 	jnc	01976$
      004C87 02r4Dr77         [24]13416 	ljmp	00420$
      004C8A                      13417 01976$:
      004C8A 90r00r1B         [24]13418 	mov	dptr,#(_lenh_sms + 0x0005)
      004C8D E0               [24]13419 	movx	a,@dptr
      004C8E FE               [12]13420 	mov	r6,a
      004C8F BE 30 00         [24]13421 	cjne	r6,#0x30,01977$
      004C92                      13422 01977$:
      004C92 50 03            [24]13423 	jnc	01978$
      004C94 02r4Dr77         [24]13424 	ljmp	00420$
      004C97                      13425 01978$:
      004C97 EE               [12]13426 	mov	a,r6
      004C98 24 C6            [12]13427 	add	a,#0xff - 0x39
      004C9A 50 03            [24]13428 	jnc	01979$
      004C9C 02r4Dr77         [24]13429 	ljmp	00420$
      004C9F                      13430 01979$:
                                  13431 ;	include/xu_ly_tin_nhan.c:373: lenh_sms[6]>='0' && lenh_sms[6]<='9' && lenh_sms[7]>='0' && lenh_sms[7]<='9' &&
      004C9F 90r00r1C         [24]13432 	mov	dptr,#(_lenh_sms + 0x0006)
      004CA2 E0               [24]13433 	movx	a,@dptr
      004CA3 FE               [12]13434 	mov	r6,a
      004CA4 BE 30 00         [24]13435 	cjne	r6,#0x30,01980$
      004CA7                      13436 01980$:
      004CA7 50 03            [24]13437 	jnc	01981$
      004CA9 02r4Dr77         [24]13438 	ljmp	00420$
      004CAC                      13439 01981$:
      004CAC EE               [12]13440 	mov	a,r6
      004CAD 24 C6            [12]13441 	add	a,#0xff - 0x39
      004CAF 50 03            [24]13442 	jnc	01982$
      004CB1 02r4Dr77         [24]13443 	ljmp	00420$
      004CB4                      13444 01982$:
      004CB4 90r00r1D         [24]13445 	mov	dptr,#(_lenh_sms + 0x0007)
      004CB7 E0               [24]13446 	movx	a,@dptr
      004CB8 FE               [12]13447 	mov	r6,a
      004CB9 BE 30 00         [24]13448 	cjne	r6,#0x30,01983$
      004CBC                      13449 01983$:
      004CBC 50 03            [24]13450 	jnc	01984$
      004CBE 02r4Dr77         [24]13451 	ljmp	00420$
      004CC1                      13452 01984$:
      004CC1 EE               [12]13453 	mov	a,r6
      004CC2 24 C6            [12]13454 	add	a,#0xff - 0x39
      004CC4 50 03            [24]13455 	jnc	01985$
      004CC6 02r4Dr77         [24]13456 	ljmp	00420$
      004CC9                      13457 01985$:
                                  13458 ;	include/xu_ly_tin_nhan.c:374: lenh_sms[8]>='0' && lenh_sms[8]<='9' && lenh_sms[9]>='0' && lenh_sms[9]<='9' &&
      004CC9 90r00r1E         [24]13459 	mov	dptr,#(_lenh_sms + 0x0008)
      004CCC E0               [24]13460 	movx	a,@dptr
      004CCD FE               [12]13461 	mov	r6,a
      004CCE BE 30 00         [24]13462 	cjne	r6,#0x30,01986$
      004CD1                      13463 01986$:
      004CD1 50 03            [24]13464 	jnc	01987$
      004CD3 02r4Dr77         [24]13465 	ljmp	00420$
      004CD6                      13466 01987$:
      004CD6 EE               [12]13467 	mov	a,r6
      004CD7 24 C6            [12]13468 	add	a,#0xff - 0x39
      004CD9 50 03            [24]13469 	jnc	01988$
      004CDB 02r4Dr77         [24]13470 	ljmp	00420$
      004CDE                      13471 01988$:
      004CDE 90r00r1F         [24]13472 	mov	dptr,#(_lenh_sms + 0x0009)
      004CE1 E0               [24]13473 	movx	a,@dptr
      004CE2 FE               [12]13474 	mov	r6,a
      004CE3 BE 30 00         [24]13475 	cjne	r6,#0x30,01989$
      004CE6                      13476 01989$:
      004CE6 50 03            [24]13477 	jnc	01990$
      004CE8 02r4Dr77         [24]13478 	ljmp	00420$
      004CEB                      13479 01990$:
      004CEB EE               [12]13480 	mov	a,r6
      004CEC 24 C6            [12]13481 	add	a,#0xff - 0x39
      004CEE 50 03            [24]13482 	jnc	01991$
      004CF0 02r4Dr77         [24]13483 	ljmp	00420$
      004CF3                      13484 01991$:
                                  13485 ;	include/xu_ly_tin_nhan.c:375: lenh_sms[10]>='0' && lenh_sms[10]<='9' && lenh_sms[11]>='0' && lenh_sms[11]<='9' &&
      004CF3 90r00r20         [24]13486 	mov	dptr,#(_lenh_sms + 0x000a)
      004CF6 E0               [24]13487 	movx	a,@dptr
      004CF7 FE               [12]13488 	mov	r6,a
      004CF8 BE 30 00         [24]13489 	cjne	r6,#0x30,01992$
      004CFB                      13490 01992$:
      004CFB 40 7A            [24]13491 	jc	00420$
      004CFD EE               [12]13492 	mov	a,r6
      004CFE 24 C6            [12]13493 	add	a,#0xff - 0x39
      004D00 40 75            [24]13494 	jc	00420$
      004D02 90r00r21         [24]13495 	mov	dptr,#(_lenh_sms + 0x000b)
      004D05 E0               [24]13496 	movx	a,@dptr
      004D06 FE               [12]13497 	mov	r6,a
      004D07 BE 30 00         [24]13498 	cjne	r6,#0x30,01995$
      004D0A                      13499 01995$:
      004D0A 40 6B            [24]13500 	jc	00420$
      004D0C EE               [12]13501 	mov	a,r6
      004D0D 24 C6            [12]13502 	add	a,#0xff - 0x39
      004D0F 40 66            [24]13503 	jc	00420$
                                  13504 ;	include/xu_ly_tin_nhan.c:376: lenh_sms[12]>='0' && lenh_sms[12]<='9'){
      004D11 90r00r22         [24]13505 	mov	dptr,#(_lenh_sms + 0x000c)
      004D14 E0               [24]13506 	movx	a,@dptr
      004D15 FE               [12]13507 	mov	r6,a
      004D16 BE 30 00         [24]13508 	cjne	r6,#0x30,01998$
      004D19                      13509 01998$:
      004D19 40 5C            [24]13510 	jc	00420$
      004D1B EE               [12]13511 	mov	a,r6
      004D1C 24 C6            [12]13512 	add	a,#0xff - 0x39
      004D1E 40 57            [24]13513 	jc	00420$
                                  13514 ;	include/xu_ly_tin_nhan.c:377: IAP_docxoasector1();
      004D20 12r00r00         [24]13515 	lcall	_IAP_docxoasector1
                                  13516 ;	include/xu_ly_tin_nhan.c:378: for(i=0;i<10;i++)
      004D23 7E 00            [12]13517 	mov	r6,#0x00
      004D25                      13518 00492$:
                                  13519 ;	include/xu_ly_tin_nhan.c:379: eeprom_buf[PHONEPHU_EEPROM+i] = lenh_sms[3+i];
      004D25 8E 05            [24]13520 	mov	ar5,r6
      004D27 74 11            [12]13521 	mov	a,#0x11
      004D29 2D               [12]13522 	add	a,r5
      004D2A FD               [12]13523 	mov	r5,a
      004D2B 33               [12]13524 	rlc	a
      004D2C 95 E0            [12]13525 	subb	a,acc
      004D2E FC               [12]13526 	mov	r4,a
      004D2F ED               [12]13527 	mov	a,r5
      004D30 24rBC            [12]13528 	add	a,#_eeprom_buf
      004D32 FD               [12]13529 	mov	r5,a
      004D33 EC               [12]13530 	mov	a,r4
      004D34 34s00            [12]13531 	addc	a,#(_eeprom_buf >> 8)
      004D36 FC               [12]13532 	mov	r4,a
      004D37 8E 02            [24]13533 	mov	ar2,r6
      004D39 7B 00            [12]13534 	mov	r3,#0x00
      004D3B 74 03            [12]13535 	mov	a,#0x03
      004D3D 2A               [12]13536 	add	a,r2
      004D3E FA               [12]13537 	mov	r2,a
      004D3F E4               [12]13538 	clr	a
      004D40 3B               [12]13539 	addc	a,r3
      004D41 FB               [12]13540 	mov	r3,a
      004D42 EA               [12]13541 	mov	a,r2
      004D43 24r16            [12]13542 	add	a,#_lenh_sms
      004D45 F5 82            [12]13543 	mov	dpl,a
      004D47 EB               [12]13544 	mov	a,r3
      004D48 34s00            [12]13545 	addc	a,#(_lenh_sms >> 8)
      004D4A F5 83            [12]13546 	mov	dph,a
      004D4C E0               [24]13547 	movx	a,@dptr
      004D4D 8D 82            [24]13548 	mov	dpl,r5
      004D4F 8C 83            [24]13549 	mov	dph,r4
      004D51 F0               [24]13550 	movx	@dptr,a
                                  13551 ;	include/xu_ly_tin_nhan.c:378: for(i=0;i<10;i++)
      004D52 0E               [12]13552 	inc	r6
      004D53 BE 0A 00         [24]13553 	cjne	r6,#0x0a,02001$
      004D56                      13554 02001$:
      004D56 40 CD            [24]13555 	jc	00492$
                                  13556 ;	include/xu_ly_tin_nhan.c:380: if(eeprom_buf[PHONEPHU_EEPROM+11]==2) eeprom_buf[PHONEPHU_EEPROM+11] = 1;
      004D58 90r00rD8         [24]13557 	mov	dptr,#(_eeprom_buf + 0x001c)
      004D5B E0               [24]13558 	movx	a,@dptr
      004D5C FE               [12]13559 	mov	r6,a
      004D5D BE 02 06         [24]13560 	cjne	r6,#0x02,00418$
      004D60 90r00rD8         [24]13561 	mov	dptr,#(_eeprom_buf + 0x001c)
      004D63 74 01            [12]13562 	mov	a,#0x01
      004D65 F0               [24]13563 	movx	@dptr,a
      004D66                      13564 00418$:
                                  13565 ;	include/xu_ly_tin_nhan.c:381: IAP_ghisector1();
      004D66 12r00r00         [24]13566 	lcall	_IAP_ghisector1
                                  13567 ;	include/xu_ly_tin_nhan.c:382: baocaosms(CHINH,"\rghi phone phu moi thanh cong");
                                  13568 ;	assignBit
      004D69 D2*44            [12]13569 	setb	_baocaosms_PARM_1
      004D6B 90r0Ar0D         [24]13570 	mov	dptr,#___str_109
      004D6E 75 F0 80         [24]13571 	mov	b,#0x80
      004D71 12r17r8C         [24]13572 	lcall	_baocaosms
      004D74 02r4Er25         [24]13573 	ljmp	00474$
      004D77                      13574 00420$:
                                  13575 ;	include/xu_ly_tin_nhan.c:383: }else baocaosms(CHINH,"\rthay doi phone phu khong thanh cong");
                                  13576 ;	assignBit
      004D77 D2*44            [12]13577 	setb	_baocaosms_PARM_1
      004D79 90r0Ar2B         [24]13578 	mov	dptr,#___str_110
      004D7C 75 F0 80         [24]13579 	mov	b,#0x80
      004D7F 12r17r8C         [24]13580 	lcall	_baocaosms
      004D82 02r4Er25         [24]13581 	ljmp	00474$
      004D85                      13582 00460$:
                                  13583 ;	include/xu_ly_tin_nhan.c:384: }else if(lenh_sms[3]=='x' || lenh_sms[3]=='X'){
      004D85 BF 78 02         [24]13584 	cjne	r7,#0x78,02005$
      004D88 80 03            [24]13585 	sjmp	00455$
      004D8A                      13586 02005$:
      004D8A BF 58 1A         [24]13587 	cjne	r7,#0x58,00456$
      004D8D                      13588 00455$:
                                  13589 ;	include/xu_ly_tin_nhan.c:385: IAP_docxoasector1();
      004D8D 12r00r00         [24]13590 	lcall	_IAP_docxoasector1
                                  13591 ;	include/xu_ly_tin_nhan.c:386: eeprom_buf[PHONEPHU_EEPROM+11] = 2;
      004D90 90r00rD8         [24]13592 	mov	dptr,#(_eeprom_buf + 0x001c)
      004D93 74 02            [12]13593 	mov	a,#0x02
      004D95 F0               [24]13594 	movx	@dptr,a
                                  13595 ;	include/xu_ly_tin_nhan.c:387: IAP_ghisector1();
      004D96 12r00r00         [24]13596 	lcall	_IAP_ghisector1
                                  13597 ;	include/xu_ly_tin_nhan.c:388: baocaosms(CHINH,"\rXoa phone phu");
                                  13598 ;	assignBit
      004D99 D2*44            [12]13599 	setb	_baocaosms_PARM_1
      004D9B 90r0Ar50         [24]13600 	mov	dptr,#___str_111
      004D9E 75 F0 80         [24]13601 	mov	b,#0x80
      004DA1 12r17r8C         [24]13602 	lcall	_baocaosms
      004DA4 02r4Er25         [24]13603 	ljmp	00474$
      004DA7                      13604 00456$:
                                  13605 ;	include/xu_ly_tin_nhan.c:389: }else if(eep_phonephu[11]==2){
      004DA7 90 F0 1C         [24]13606 	mov	dptr,#(_eep_phonephu + 0x000b)
      004DAA E4               [12]13607 	clr	a
      004DAB 93               [24]13608 	movc	a,@a+dptr
      004DAC FF               [12]13609 	mov	r7,a
      004DAD BF 02 24         [24]13610 	cjne	r7,#0x02,00453$
                                  13611 ;	include/xu_ly_tin_nhan.c:390: if(lenh_sms[4]=='n' || lenh_sms[4]=='N'|| lenh_sms[4]=='f'|| lenh_sms[4]=='F')
      004DB0 90r00r1A         [24]13612 	mov	dptr,#(_lenh_sms + 0x0004)
      004DB3 E0               [24]13613 	movx	a,@dptr
      004DB4 FF               [12]13614 	mov	r7,a
      004DB5 BF 6E 02         [24]13615 	cjne	r7,#0x6e,02010$
      004DB8 80 0D            [24]13616 	sjmp	00439$
      004DBA                      13617 02010$:
      004DBA BF 4E 02         [24]13618 	cjne	r7,#0x4e,02011$
      004DBD 80 08            [24]13619 	sjmp	00439$
      004DBF                      13620 02011$:
      004DBF BF 66 02         [24]13621 	cjne	r7,#0x66,02012$
      004DC2 80 03            [24]13622 	sjmp	00439$
      004DC4                      13623 02012$:
      004DC4 BF 46 5E         [24]13624 	cjne	r7,#0x46,00474$
      004DC7                      13625 00439$:
                                  13626 ;	include/xu_ly_tin_nhan.c:391: baocaosms(CHINH,"\rlenh khong thanh cong do chua khoi tao phone phu");
                                  13627 ;	assignBit
      004DC7 D2*44            [12]13628 	setb	_baocaosms_PARM_1
      004DC9 90r0Ar5F         [24]13629 	mov	dptr,#___str_112
      004DCC 75 F0 80         [24]13630 	mov	b,#0x80
      004DCF 12r17r8C         [24]13631 	lcall	_baocaosms
      004DD2 80 51            [24]13632 	sjmp	00474$
      004DD4                      13633 00453$:
                                  13634 ;	include/xu_ly_tin_nhan.c:392: }else if(lenh_sms[4]=='N' || lenh_sms[4]=='n'){
      004DD4 90r00r1A         [24]13635 	mov	dptr,#(_lenh_sms + 0x0004)
      004DD7 E0               [24]13636 	movx	a,@dptr
      004DD8 FF               [12]13637 	mov	r7,a
      004DD9 BF 4E 02         [24]13638 	cjne	r7,#0x4e,02015$
      004DDC 80 03            [24]13639 	sjmp	00448$
      004DDE                      13640 02015$:
      004DDE BF 6E 19         [24]13641 	cjne	r7,#0x6e,00449$
      004DE1                      13642 00448$:
                                  13643 ;	include/xu_ly_tin_nhan.c:393: IAP_docxoasector1();
      004DE1 12r00r00         [24]13644 	lcall	_IAP_docxoasector1
                                  13645 ;	include/xu_ly_tin_nhan.c:394: eeprom_buf[PHONEPHU_EEPROM+11] = 1;
      004DE4 90r00rD8         [24]13646 	mov	dptr,#(_eeprom_buf + 0x001c)
      004DE7 74 01            [12]13647 	mov	a,#0x01
      004DE9 F0               [24]13648 	movx	@dptr,a
                                  13649 ;	include/xu_ly_tin_nhan.c:395: IAP_ghisector1();
      004DEA 12r00r00         [24]13650 	lcall	_IAP_ghisector1
                                  13651 ;	include/xu_ly_tin_nhan.c:396: baocaosms(CHINH,"\rBat phone phu");
                                  13652 ;	assignBit
      004DED D2*44            [12]13653 	setb	_baocaosms_PARM_1
      004DEF 90r0Ar91         [24]13654 	mov	dptr,#___str_113
      004DF2 75 F0 80         [24]13655 	mov	b,#0x80
      004DF5 12r17r8C         [24]13656 	lcall	_baocaosms
      004DF8 80 2B            [24]13657 	sjmp	00474$
      004DFA                      13658 00449$:
                                  13659 ;	include/xu_ly_tin_nhan.c:397: }else if(lenh_sms[4]=='F' || lenh_sms[4]=='f'){
      004DFA BF 46 02         [24]13660 	cjne	r7,#0x46,02018$
      004DFD 80 03            [24]13661 	sjmp	00444$
      004DFF                      13662 02018$:
      004DFF BF 66 18         [24]13663 	cjne	r7,#0x66,00445$
      004E02                      13664 00444$:
                                  13665 ;	include/xu_ly_tin_nhan.c:399: IAP_docxoasector1();
      004E02 12r00r00         [24]13666 	lcall	_IAP_docxoasector1
                                  13667 ;	include/xu_ly_tin_nhan.c:400: eeprom_buf[PHONEPHU_EEPROM+11] = 0;
      004E05 90r00rD8         [24]13668 	mov	dptr,#(_eeprom_buf + 0x001c)
      004E08 E4               [12]13669 	clr	a
      004E09 F0               [24]13670 	movx	@dptr,a
                                  13671 ;	include/xu_ly_tin_nhan.c:401: IAP_ghisector1();
      004E0A 12r00r00         [24]13672 	lcall	_IAP_ghisector1
                                  13673 ;	include/xu_ly_tin_nhan.c:402: baocaosms(CHINH,"\rTat phone phu");
                                  13674 ;	assignBit
      004E0D D2*44            [12]13675 	setb	_baocaosms_PARM_1
      004E0F 90r0ArA0         [24]13676 	mov	dptr,#___str_114
      004E12 75 F0 80         [24]13677 	mov	b,#0x80
      004E15 12r17r8C         [24]13678 	lcall	_baocaosms
      004E18 80 0B            [24]13679 	sjmp	00474$
      004E1A                      13680 00445$:
                                  13681 ;	include/xu_ly_tin_nhan.c:403: }else baocaosms(CHINH,"\rLenh phone phu khong hop le");
                                  13682 ;	assignBit
      004E1A D2*44            [12]13683 	setb	_baocaosms_PARM_1
      004E1C 90r0ArAF         [24]13684 	mov	dptr,#___str_115
      004E1F 75 F0 80         [24]13685 	mov	b,#0x80
      004E22 12r17r8C         [24]13686 	lcall	_baocaosms
      004E25                      13687 00474$:
                                  13688 ;	include/xu_ly_tin_nhan.c:405: bat_phone_phu = eep_phonephu[11]&1;
      004E25 90 F0 1C         [24]13689 	mov	dptr,#(_eep_phonephu + 0x000b)
      004E28 E4               [12]13690 	clr	a
      004E29 93               [24]13691 	movc	a,@a+dptr
      004E2A 54 01            [12]13692 	anl	a,#0x01
                                  13693 ;	assignBit
      004E2C FF               [12]13694 	mov	r7,a
      004E2D 24 FF            [12]13695 	add	a,#0xff
      004E2F 92*08            [24]13696 	mov	_bat_phone_phu,c
                                  13697 ;	include/xu_ly_tin_nhan.c:406: break;
                                  13698 ;	include/xu_ly_tin_nhan.c:407: default:
      004E31 80 26            [24]13699 	sjmp	00479$
      004E33                      13700 00475$:
                                  13701 ;	include/xu_ly_tin_nhan.c:408: if(phone_phu_so_sanh_that_bai)
      004E33 30*07 0D         [24]13702 	jnb	_phone_phu_so_sanh_that_bai,00477$
                                  13703 ;	include/xu_ly_tin_nhan.c:409: baocaosms(CHINH,"\rLenh khong hop le");
                                  13704 ;	assignBit
      004E36 D2*44            [12]13705 	setb	_baocaosms_PARM_1
      004E38 90r0ArCC         [24]13706 	mov	dptr,#___str_116
      004E3B 75 F0 80         [24]13707 	mov	b,#0x80
      004E3E 12r17r8C         [24]13708 	lcall	_baocaosms
      004E41 80 16            [24]13709 	sjmp	00479$
      004E43                      13710 00477$:
                                  13711 ;	include/xu_ly_tin_nhan.c:411: baocaosms(CHINH,"\rLenh khong hop le\rPhone phu gui lenh");
                                  13712 ;	assignBit
      004E43 D2*44            [12]13713 	setb	_baocaosms_PARM_1
      004E45 90r0ArDF         [24]13714 	mov	dptr,#___str_117
      004E48 75 F0 80         [24]13715 	mov	b,#0x80
      004E4B 12r17r8C         [24]13716 	lcall	_baocaosms
                                  13717 ;	include/xu_ly_tin_nhan.c:412: baocaosms(PHU,"\rLenh khong hop le");
                                  13718 ;	assignBit
      004E4E C2*44            [12]13719 	clr	_baocaosms_PARM_1
      004E50 90r0ArCC         [24]13720 	mov	dptr,#___str_116
      004E53 75 F0 80         [24]13721 	mov	b,#0x80
      004E56 12r17r8C         [24]13722 	lcall	_baocaosms
                                  13723 ;	include/xu_ly_tin_nhan.c:414: }
      004E59                      13724 00479$:
                                  13725 ;	include/xu_ly_tin_nhan.c:417: WATCHDOG;
      004E59 43 C1 10         [24]13726 	orl	_WDT_CONTR,#0x10
                                  13727 ;	include/xu_ly_tin_nhan.c:418: while(lenh_sms[phutdelta])lenh_sms[phutdelta++] = 0;
      004E5C 7F 00            [12]13728 	mov	r7,#0x00
      004E5E                      13729 00480$:
      004E5E EF               [12]13730 	mov	a,r7
      004E5F 24r16            [12]13731 	add	a,#_lenh_sms
      004E61 FD               [12]13732 	mov	r5,a
      004E62 E4               [12]13733 	clr	a
      004E63 34s00            [12]13734 	addc	a,#(_lenh_sms >> 8)
      004E65 FE               [12]13735 	mov	r6,a
      004E66 8D 82            [24]13736 	mov	dpl,r5
      004E68 8E 83            [24]13737 	mov	dph,r6
      004E6A E0               [24]13738 	movx	a,@dptr
      004E6B 60 0F            [24]13739 	jz	00494$
      004E6D EF               [12]13740 	mov	a,r7
      004E6E 24r16            [12]13741 	add	a,#_lenh_sms
      004E70 F5 82            [12]13742 	mov	dpl,a
      004E72 E4               [12]13743 	clr	a
      004E73 34s00            [12]13744 	addc	a,#(_lenh_sms >> 8)
      004E75 F5 83            [12]13745 	mov	dph,a
      004E77 0F               [12]13746 	inc	r7
      004E78 E4               [12]13747 	clr	a
      004E79 F0               [24]13748 	movx	@dptr,a
      004E7A 80 E2            [24]13749 	sjmp	00480$
      004E7C                      13750 00494$:
                                  13751 ;	include/xu_ly_tin_nhan.c:420: }
      004E7C 22               [24]13752 	ret
                                  13753 ;------------------------------------------------------------
                                  13754 ;Allocation info for local variables in function 'main'
                                  13755 ;------------------------------------------------------------
                                  13756 ;giotemp                   Allocated with name '_main_giotemp_65536_253'
                                  13757 ;phuttemp                  Allocated to registers r5 
                                  13758 ;debug_dem                 Allocated with name '_main_debug_dem_131073_263'
                                  13759 ;mp3temp                   Allocated with name '_main_mp3temp_131073_263'
                                  13760 ;retry                     Allocated with name '_main_retry_131073_284'
                                  13761 ;retry                     Allocated with name '_main_retry_131073_287'
                                  13762 ;sloc0                     Allocated with name '_main_sloc0_1_0'
                                  13763 ;sloc1                     Allocated with name '_main_sloc1_1_0'
                                  13764 ;sloc2                     Allocated with name '_main_sloc2_1_0'
                                  13765 ;ngaytemp                  Allocated with name '_main_ngaytemp_65536_253'
                                  13766 ;thangtemp                 Allocated with name '_main_thangtemp_65536_253'
                                  13767 ;namtemp                   Allocated with name '_main_namtemp_65536_253'
                                  13768 ;thutemp                   Allocated with name '_main_thutemp_65536_253'
                                  13769 ;check                     Allocated with name '_main_check_65536_253'
                                  13770 ;i                         Allocated with name '_main_i_65537_254'
                                  13771 ;------------------------------------------------------------
                                  13772 ;	src\main.c:22: void main() {
                                  13773 ;	-----------------------------------------
                                  13774 ;	 function main
                                  13775 ;	-----------------------------------------
      004E7D                      13776 _main:
                                  13777 ;	src\main.c:23: u8 __data giotemp=0,phuttemp=0;
      004E7D 7F 00            [12]13778 	mov	r7,#0x00
      004E7F 7E 00            [12]13779 	mov	r6,#0x00
                                  13780 ;	src\main.c:24: u8 __xdata  ngaytemp = 1, thangtemp=1, namtemp = 21, thutemp = 1;
      004E81 90r01r34         [24]13781 	mov	dptr,#_main_ngaytemp_65536_253
      004E84 74 01            [12]13782 	mov	a,#0x01
      004E86 F0               [24]13783 	movx	@dptr,a
      004E87 90r01r35         [24]13784 	mov	dptr,#_main_thangtemp_65536_253
      004E8A F0               [24]13785 	movx	@dptr,a
      004E8B 90r01r36         [24]13786 	mov	dptr,#_main_namtemp_65536_253
      004E8E 74 15            [12]13787 	mov	a,#0x15
      004E90 F0               [24]13788 	movx	@dptr,a
      004E91 90r01r37         [24]13789 	mov	dptr,#_main_thutemp_65536_253
      004E94 74 01            [12]13790 	mov	a,#0x01
      004E96 F0               [24]13791 	movx	@dptr,a
                                  13792 ;	src\main.c:27: P0M1 = 0; P0M0 = 0xff; //port LCD -- chân xuất với điện trở kéo lên nhỏ, dòng lớn -> 20mA
                                  13793 ;	1-genFromRTrack replaced	mov	_P0M1,#0x00
      004E97 8F 93            [24]13794 	mov	_P0M1,r7
      004E99 75 94 FF         [24]13795 	mov	_P0M0,#0xff
                                  13796 ;	src\main.c:28: P1M1 = P1M0 = 0;
                                  13797 ;	1-genFromRTrack replaced	mov	_P1M0,#0x00
      004E9C 8F 92            [24]13798 	mov	_P1M0,r7
                                  13799 ;	1-genFromRTrack replaced	mov	_P1M1,#0x00
      004E9E 8F 91            [24]13800 	mov	_P1M1,r7
                                  13801 ;	src\main.c:29: P2M1 = 0; P2M0 = 0xff; // output
                                  13802 ;	1-genFromRTrack replaced	mov	_P2M1,#0x00
      004EA0 8F 95            [24]13803 	mov	_P2M1,r7
      004EA2 75 96 FF         [24]13804 	mov	_P2M0,#0xff
                                  13805 ;	src\main.c:30: P3M1 = P3M0 = 0; //full compatip 8051 -- key and cam
                                  13806 ;	1-genFromRTrack replaced	mov	_P3M0,#0x00
      004EA5 8F B2            [24]13807 	mov	_P3M0,r7
                                  13808 ;	1-genFromRTrack replaced	mov	_P3M1,#0x00
      004EA7 8F B1            [24]13809 	mov	_P3M1,r7
                                  13810 ;	src\main.c:31: P4M1 = 2; P4M0 = 0x1c;//full compatip 8051 --motor port
      004EA9 75 B3 02         [24]13811 	mov	_P4M1,#0x02
      004EAC 75 B4 1C         [24]13812 	mov	_P4M0,#0x1c
                                  13813 ;	src\main.c:32: P5M1 = P5M0 = 0; // full compatip 8051
                                  13814 ;	1-genFromRTrack replaced	mov	_P5M0,#0x00
      004EAF 8F CA            [24]13815 	mov	_P5M0,r7
                                  13816 ;	1-genFromRTrack replaced	mov	_P5M1,#0x00
      004EB1 8F C9            [24]13817 	mov	_P5M1,r7
                                  13818 ;	src\main.c:33: P4 = 0;
                                  13819 ;	1-genFromRTrack replaced	mov	_P4,#0x00
      004EB3 8F C0            [24]13820 	mov	_P4,r7
                                  13821 ;	src\main.c:34: P3 = 0xff;
      004EB5 75 B0 FF         [24]13822 	mov	_P3,#0xff
                                  13823 ;	src\main.c:35: P2 = 0;
                                  13824 ;	1-genFromRTrack replaced	mov	_P2,#0x00
      004EB8 8F A0            [24]13825 	mov	_P2,r7
                                  13826 ;	src\main.c:37: IP = 0x81; //priority PCA
      004EBA 75 B8 81         [24]13827 	mov	_IP,#0x81
                                  13828 ;	src\main.c:39: P1ASF = 8;
      004EBD 75 9D 08         [24]13829 	mov	_P1ASF,#0x08
                                  13830 ;	src\main.c:40: CLK_DIV = 0;
                                  13831 ;	1-genFromRTrack replaced	mov	_CLK_DIV,#0x00
      004EC0 8F 97            [24]13832 	mov	_CLK_DIV,r7
                                  13833 ;	src\main.c:41: ADC_RES = 0;
                                  13834 ;	1-genFromRTrack replaced	mov	_ADC_RES,#0x00
      004EC2 8F BD            [24]13835 	mov	_ADC_RES,r7
                                  13836 ;	src\main.c:42: ADC_CONTR = 0x83;
      004EC4 75 BC 83         [24]13837 	mov	_ADC_CONTR,#0x83
                                  13838 ;	src\main.c:43: EADC = 1;
                                  13839 ;	assignBit
      004EC7 D2 AD            [12]13840 	setb	_EADC
                                  13841 ;	src\main.c:44: EA = 1; //bat tat ca interupt
                                  13842 ;	assignBit
      004EC9 D2 AF            [12]13843 	setb	_EA
                                  13844 ;	src\main.c:47: xung_giay_check=250;
      004ECB 90r00rE6         [24]13845 	mov	dptr,#_xung_giay_check
      004ECE 74 FA            [12]13846 	mov	a,#0xfa
      004ED0 F0               [24]13847 	movx	@dptr,a
                                  13848 ;	src\main.c:48: so_lan_goi_dien = 0;
      004ED1 90r00rB8         [24]13849 	mov	dptr,#_so_lan_goi_dien
      004ED4 E4               [12]13850 	clr	a
      004ED5 F0               [24]13851 	movx	@dptr,a
                                  13852 ;	src\main.c:49: motor_index = motor_index2 = 5;
      004ED6 75*0E 05         [24]13853 	mov	_motor_index2,#0x05
      004ED9 75*0D 05         [24]13854 	mov	_motor_index,#0x05
                                  13855 ;	src\main.c:50: phone[0]='0';
      004EDC 90r00r0B         [24]13856 	mov	dptr,#_phone
      004EDF 74 30            [12]13857 	mov	a,#0x30
      004EE1 F0               [24]13858 	movx	@dptr,a
                                  13859 ;	src\main.c:53: gsm_delay_reset=10;
      004EE2 90r00rB7         [24]13860 	mov	dptr,#_gsm_delay_reset
      004EE5 74 0A            [12]13861 	mov	a,#0x0a
      004EE7 F0               [24]13862 	movx	@dptr,a
                                  13863 ;	src\main.c:54: phim_mode_doi = phim_back_doi = phim_cong_doi = 2;
      004EE8 90r00rF2         [24]13864 	mov	dptr,#_phim_cong_doi
      004EEB 74 02            [12]13865 	mov	a,#0x02
      004EED F0               [24]13866 	movx	@dptr,a
      004EEE 90r00rF1         [24]13867 	mov	dptr,#_phim_back_doi
      004EF1 F0               [24]13868 	movx	@dptr,a
      004EF2 90r00rF0         [24]13869 	mov	dptr,#_phim_mode_doi
      004EF5 F0               [24]13870 	movx	@dptr,a
                                  13871 ;	src\main.c:55: mode = SELECT; sub_mode = GIOKIM;
      004EF6 90r00rF3         [24]13872 	mov	dptr,#_mode
      004EF9 74 07            [12]13873 	mov	a,#0x07
      004EFB F0               [24]13874 	movx	@dptr,a
      004EFC 90r00rF4         [24]13875 	mov	dptr,#_sub_mode
      004EFF 74 01            [12]13876 	mov	a,#0x01
      004F01 F0               [24]13877 	movx	@dptr,a
                                  13878 ;	src\main.c:59: LCD_Init();
      004F02 C0 07            [24]13879 	push	ar7
      004F04 C0 06            [24]13880 	push	ar6
      004F06 12r00r00         [24]13881 	lcall	_LCD_Init
                                  13882 ;	src\main.c:60: LCD_guilenh(0x80);
      004F09 75 82 80         [24]13883 	mov	dpl,#0x80
      004F0C 12r00r00         [24]13884 	lcall	_LCD_guilenh
                                  13885 ;	src\main.c:61: LCD_guichuoi(ver);
      004F0F 90r00r95         [24]13886 	mov	dptr,#_ver
      004F12 75 F0 80         [24]13887 	mov	b,#0x80
      004F15 12r00r00         [24]13888 	lcall	_LCD_guichuoi
                                  13889 ;	src\main.c:64: delay_ms(5000);
      004F18 90 13 88         [24]13890 	mov	dptr,#0x1388
      004F1B 12r00r00         [24]13891 	lcall	_delay_ms
                                  13892 ;	src\main.c:70: LCD_guilenh(0x80);
      004F1E 75 82 80         [24]13893 	mov	dpl,#0x80
      004F21 12r00r00         [24]13894 	lcall	_LCD_guilenh
                                  13895 ;	src\main.c:71: LCD_guichuoi("THIET LAP EEPROM");
      004F24 90r0Br05         [24]13896 	mov	dptr,#___str_118
      004F27 75 F0 80         [24]13897 	mov	b,#0x80
      004F2A 12r00r00         [24]13898 	lcall	_LCD_guichuoi
                                  13899 ;	src\main.c:72: IAP_docxoasector1();
      004F2D 12r00r00         [24]13900 	lcall	_IAP_docxoasector1
      004F30 D0 06            [24]13901 	pop	ar6
      004F32 D0 07            [24]13902 	pop	ar7
                                  13903 ;	src\main.c:73: if(eeprom_buf[MOTOR_EEPROM]==0xff)eeprom_buf[MOTOR_EEPROM] = MOTOR_DEFAULT;
      004F34 90r00rBC         [24]13904 	mov	dptr,#_eeprom_buf
      004F37 E0               [24]13905 	movx	a,@dptr
      004F38 FD               [12]13906 	mov	r5,a
      004F39 BD FF 06         [24]13907 	cjne	r5,#0xff,00102$
      004F3C 90r00rBC         [24]13908 	mov	dptr,#_eeprom_buf
      004F3F 74 0E            [12]13909 	mov	a,#0x0e
      004F41 F0               [24]13910 	movx	@dptr,a
      004F42                      13911 00102$:
                                  13912 ;	src\main.c:88: if(eeprom_buf[BAOCAO_EEPROM]>1)eeprom_buf[BAOCAO_EEPROM] = 0;
      004F42 90r00rBD         [24]13913 	mov	dptr,#(_eeprom_buf + 0x0001)
      004F45 E0               [24]13914 	movx	a,@dptr
      004F46 24 FE            [12]13915 	add	a,#0xff - 0x01
      004F48 50 05            [24]13916 	jnc	00104$
      004F4A 90r00rBD         [24]13917 	mov	dptr,#(_eeprom_buf + 0x0001)
      004F4D E4               [12]13918 	clr	a
      004F4E F0               [24]13919 	movx	@dptr,a
      004F4F                      13920 00104$:
                                  13921 ;	src\main.c:89: if(eeprom_buf[GPSON_EEPROM]>1)eeprom_buf[GPSON_EEPROM] = 1;
      004F4F 90r00rBE         [24]13922 	mov	dptr,#(_eeprom_buf + 0x0002)
      004F52 E0               [24]13923 	movx	a,@dptr
      004F53 24 FE            [12]13924 	add	a,#0xff - 0x01
      004F55 50 06            [24]13925 	jnc	00106$
      004F57 90r00rBE         [24]13926 	mov	dptr,#(_eeprom_buf + 0x0002)
      004F5A 74 01            [12]13927 	mov	a,#0x01
      004F5C F0               [24]13928 	movx	@dptr,a
      004F5D                      13929 00106$:
                                  13930 ;	src\main.c:90: if(eeprom_buf[NGAYRESET_EEPROM]>9)eeprom_buf[NGAYRESET_EEPROM] = 1;
      004F5D 90r00rBF         [24]13931 	mov	dptr,#(_eeprom_buf + 0x0003)
      004F60 E0               [24]13932 	movx	a,@dptr
      004F61 24 F6            [12]13933 	add	a,#0xff - 0x09
      004F63 50 06            [24]13934 	jnc	00108$
      004F65 90r00rBF         [24]13935 	mov	dptr,#(_eeprom_buf + 0x0003)
      004F68 74 01            [12]13936 	mov	a,#0x01
      004F6A F0               [24]13937 	movx	@dptr,a
      004F6B                      13938 00108$:
                                  13939 ;	src\main.c:92: if(eeprom_buf[GIORESET_EEPROM]>23)eeprom_buf[GIORESET_EEPROM] = 0;
      004F6B 90r00rC0         [24]13940 	mov	dptr,#(_eeprom_buf + 0x0004)
      004F6E E0               [24]13941 	movx	a,@dptr
      004F6F 24 E8            [12]13942 	add	a,#0xff - 0x17
      004F71 50 05            [24]13943 	jnc	00110$
      004F73 90r00rC0         [24]13944 	mov	dptr,#(_eeprom_buf + 0x0004)
      004F76 E4               [12]13945 	clr	a
      004F77 F0               [24]13946 	movx	@dptr,a
      004F78                      13947 00110$:
                                  13948 ;	src\main.c:93: if((eeprom_buf[GIOSACXA_EEPROM]>>4) -1 > 8) eeprom_buf[GIOSACXA_EEPROM] = eeprom_buf[GIOSACXA_EEPROM] & 0x0f | 0x50;
      004F78 90r00rC2         [24]13949 	mov	dptr,#(_eeprom_buf + 0x0006)
      004F7B E0               [24]13950 	movx	a,@dptr
      004F7C FD               [12]13951 	mov	r5,a
      004F7D C4               [12]13952 	swap	a
      004F7E 54 0F            [12]13953 	anl	a,#0x0f
      004F80 FC               [12]13954 	mov	r4,a
      004F81 7B 00            [12]13955 	mov	r3,#0x00
      004F83 1C               [12]13956 	dec	r4
      004F84 BC FF 01         [24]13957 	cjne	r4,#0xff,02361$
      004F87 1B               [12]13958 	dec	r3
      004F88                      13959 02361$:
      004F88 C3               [12]13960 	clr	c
      004F89 74 08            [12]13961 	mov	a,#0x08
      004F8B 9C               [12]13962 	subb	a,r4
      004F8C 74 80            [12]13963 	mov	a,#(0x00 ^ 0x80)
      004F8E 8B F0            [24]13964 	mov	b,r3
      004F90 63 F0 80         [24]13965 	xrl	b,#0x80
      004F93 95 F0            [12]13966 	subb	a,b
      004F95 50 0A            [24]13967 	jnc	00112$
      004F97 74 0F            [12]13968 	mov	a,#0x0f
      004F99 5D               [12]13969 	anl	a,r5
      004F9A 44 50            [12]13970 	orl	a,#0x50
      004F9C FD               [12]13971 	mov	r5,a
      004F9D 90r00rC2         [24]13972 	mov	dptr,#(_eeprom_buf + 0x0006)
      004FA0 F0               [24]13973 	movx	@dptr,a
      004FA1                      13974 00112$:
                                  13975 ;	src\main.c:94: if((eeprom_buf[GIOSACXA_EEPROM] & 0x0f) -1 > 8) eeprom_buf[GIOSACXA_EEPROM] = eeprom_buf[GIOSACXA_EEPROM] & 0xf0 | 0x01;	
      004FA1 90r00rC2         [24]13976 	mov	dptr,#(_eeprom_buf + 0x0006)
      004FA4 E0               [24]13977 	movx	a,@dptr
      004FA5 FD               [12]13978 	mov	r5,a
      004FA6 53 05 0F         [24]13979 	anl	ar5,#0x0f
      004FA9 7C 00            [12]13980 	mov	r4,#0x00
      004FAB 1D               [12]13981 	dec	r5
      004FAC BD FF 01         [24]13982 	cjne	r5,#0xff,02363$
      004FAF 1C               [12]13983 	dec	r4
      004FB0                      13984 02363$:
      004FB0 C3               [12]13985 	clr	c
      004FB1 74 08            [12]13986 	mov	a,#0x08
      004FB3 9D               [12]13987 	subb	a,r5
      004FB4 74 80            [12]13988 	mov	a,#(0x00 ^ 0x80)
      004FB6 8C F0            [24]13989 	mov	b,r4
      004FB8 63 F0 80         [24]13990 	xrl	b,#0x80
      004FBB 95 F0            [12]13991 	subb	a,b
      004FBD 50 0F            [24]13992 	jnc	00114$
      004FBF 90r00rC2         [24]13993 	mov	dptr,#(_eeprom_buf + 0x0006)
      004FC2 E0               [24]13994 	movx	a,@dptr
      004FC3 FD               [12]13995 	mov	r5,a
      004FC4 74 F0            [12]13996 	mov	a,#0xf0
      004FC6 5D               [12]13997 	anl	a,r5
      004FC7 44 01            [12]13998 	orl	a,#0x01
      004FC9 FD               [12]13999 	mov	r5,a
      004FCA 90r00rC2         [24]14000 	mov	dptr,#(_eeprom_buf + 0x0006)
      004FCD F0               [24]14001 	movx	@dptr,a
      004FCE                      14002 00114$:
                                  14003 ;	src\main.c:95: i=1;
      004FCE 90r01r38         [24]14004 	mov	dptr,#_main_i_65537_254
      004FD1 74 01            [12]14005 	mov	a,#0x01
      004FD3 F0               [24]14006 	movx	@dptr,a
                                  14007 ;	src\main.c:96: if(eeprom_buf[TATMODEN_EEPROM]<9 && !(eeprom_buf[TATMODEN_EEPROM]&1))
      004FD4 90r00rC3         [24]14008 	mov	dptr,#(_eeprom_buf + 0x0007)
      004FD7 E0               [24]14009 	movx	a,@dptr
      004FD8 FD               [12]14010 	mov	r5,a
      004FD9 BD 09 00         [24]14011 	cjne	r5,#0x09,02365$
      004FDC                      14012 02365$:
      004FDC 50 2E            [24]14013 	jnc	00117$
      004FDE ED               [12]14014 	mov	a,r5
      004FDF 20 E0 2A         [24]14015 	jb	acc.0,00117$
                                  14016 ;	src\main.c:97: for(i=1;i<=eeprom_buf[TATMODEN_EEPROM] && eeprom_buf[TATMODEN_EEPROM+i]<144;i++);
      004FE2 7C 01            [12]14017 	mov	r4,#0x01
      004FE4                      14018 00649$:
      004FE4 C3               [12]14019 	clr	c
      004FE5 ED               [12]14020 	mov	a,r5
      004FE6 9C               [12]14021 	subb	a,r4
      004FE7 40 1E            [24]14022 	jc	01097$
      004FE9 8C 03            [24]14023 	mov	ar3,r4
      004FEB 74 07            [12]14024 	mov	a,#0x07
      004FED 2B               [12]14025 	add	a,r3
      004FEE FB               [12]14026 	mov	r3,a
      004FEF 33               [12]14027 	rlc	a
      004FF0 95 E0            [12]14028 	subb	a,acc
      004FF2 FA               [12]14029 	mov	r2,a
      004FF3 EB               [12]14030 	mov	a,r3
      004FF4 24rBC            [12]14031 	add	a,#_eeprom_buf
      004FF6 F5 82            [12]14032 	mov	dpl,a
      004FF8 EA               [12]14033 	mov	a,r2
      004FF9 34s00            [12]14034 	addc	a,#(_eeprom_buf >> 8)
      004FFB F5 83            [12]14035 	mov	dph,a
      004FFD E0               [24]14036 	movx	a,@dptr
      004FFE FB               [12]14037 	mov	r3,a
      004FFF BB 90 00         [24]14038 	cjne	r3,#0x90,02369$
      005002                      14039 02369$:
      005002 50 03            [24]14040 	jnc	01097$
      005004 0C               [12]14041 	inc	r4
      005005 80 DD            [24]14042 	sjmp	00649$
      005007                      14043 01097$:
      005007 90r01r38         [24]14044 	mov	dptr,#_main_i_65537_254
      00500A EC               [12]14045 	mov	a,r4
      00500B F0               [24]14046 	movx	@dptr,a
      00500C                      14047 00117$:
                                  14048 ;	src\main.c:98: if(i<=eeprom_buf[TATMODEN_EEPROM]){
      00500C 90r01r38         [24]14049 	mov	dptr,#_main_i_65537_254
      00500F E0               [24]14050 	movx	a,@dptr
      005010 FC               [12]14051 	mov	r4,a
      005011 C3               [12]14052 	clr	c
      005012 ED               [12]14053 	mov	a,r5
      005013 9C               [12]14054 	subb	a,r4
      005014 40 12            [24]14055 	jc	00120$
                                  14056 ;	src\main.c:99: eeprom_buf[TATMODEN_EEPROM] = 2;
      005016 90r00rC3         [24]14057 	mov	dptr,#(_eeprom_buf + 0x0007)
      005019 74 02            [12]14058 	mov	a,#0x02
      00501B F0               [24]14059 	movx	@dptr,a
                                  14060 ;	src\main.c:100: eeprom_buf[TATMODEN_EEPROM+1] = 36;
      00501C 90r00rC4         [24]14061 	mov	dptr,#(_eeprom_buf + 0x0008)
      00501F 74 24            [12]14062 	mov	a,#0x24
      005021 F0               [24]14063 	movx	@dptr,a
                                  14064 ;	src\main.c:101: eeprom_buf[TATMODEN_EEPROM+2] = 108;
      005022 90r00rC5         [24]14065 	mov	dptr,#(_eeprom_buf + 0x0009)
      005025 74 6C            [12]14066 	mov	a,#0x6c
      005027 F0               [24]14067 	movx	@dptr,a
      005028                      14068 00120$:
                                  14069 ;	src\main.c:103: i=0;
      005028 90r01r38         [24]14070 	mov	dptr,#_main_i_65537_254
      00502B E4               [12]14071 	clr	a
      00502C F0               [24]14072 	movx	@dptr,a
                                  14073 ;	src\main.c:104: if(eeprom_buf[PHONEPHU_EEPROM+11]<2 && !eeprom_buf[PHONEPHU_EEPROM+10])
      00502D 90r00rD8         [24]14074 	mov	dptr,#(_eeprom_buf + 0x001c)
      005030 E0               [24]14075 	movx	a,@dptr
      005031 FD               [12]14076 	mov	r5,a
      005032 BD 02 00         [24]14077 	cjne	r5,#0x02,02372$
      005035                      14078 02372$:
      005035 50 47            [24]14079 	jnc	00123$
      005037 90r00rD7         [24]14080 	mov	dptr,#(_eeprom_buf + 0x001b)
      00503A E0               [24]14081 	movx	a,@dptr
                                  14082 ;	src\main.c:105: for(i=0;i<10 && eeprom_buf[PHONEPHU_EEPROM+i]>='0' && eeprom_buf[PHONEPHU_EEPROM+i]<='9';i++);
      00503B 70 41            [24]14083 	jnz	00123$
      00503D FD               [12]14084 	mov	r5,a
      00503E                      14085 00654$:
      00503E BD 0A 00         [24]14086 	cjne	r5,#0x0a,02375$
      005041                      14087 02375$:
      005041 50 36            [24]14088 	jnc	01098$
      005043 8D 04            [24]14089 	mov	ar4,r5
      005045 74 11            [12]14090 	mov	a,#0x11
      005047 2C               [12]14091 	add	a,r4
      005048 FB               [12]14092 	mov	r3,a
      005049 33               [12]14093 	rlc	a
      00504A 95 E0            [12]14094 	subb	a,acc
      00504C FA               [12]14095 	mov	r2,a
      00504D EB               [12]14096 	mov	a,r3
      00504E 24rBC            [12]14097 	add	a,#_eeprom_buf
      005050 F5 82            [12]14098 	mov	dpl,a
      005052 EA               [12]14099 	mov	a,r2
      005053 34s00            [12]14100 	addc	a,#(_eeprom_buf >> 8)
      005055 F5 83            [12]14101 	mov	dph,a
      005057 E0               [24]14102 	movx	a,@dptr
      005058 FB               [12]14103 	mov	r3,a
      005059 BB 30 00         [24]14104 	cjne	r3,#0x30,02377$
      00505C                      14105 02377$:
      00505C 40 1B            [24]14106 	jc	01098$
      00505E 74 11            [12]14107 	mov	a,#0x11
      005060 2C               [12]14108 	add	a,r4
      005061 FC               [12]14109 	mov	r4,a
      005062 33               [12]14110 	rlc	a
      005063 95 E0            [12]14111 	subb	a,acc
      005065 FB               [12]14112 	mov	r3,a
      005066 EC               [12]14113 	mov	a,r4
      005067 24rBC            [12]14114 	add	a,#_eeprom_buf
      005069 F5 82            [12]14115 	mov	dpl,a
      00506B EB               [12]14116 	mov	a,r3
      00506C 34s00            [12]14117 	addc	a,#(_eeprom_buf >> 8)
      00506E F5 83            [12]14118 	mov	dph,a
      005070 E0               [24]14119 	movx	a,@dptr
      005071 FC               [12]14120 	mov  r4,a
      005072 24 C6            [12]14121 	add	a,#0xff - 0x39
      005074 40 03            [24]14122 	jc	01098$
      005076 0D               [12]14123 	inc	r5
      005077 80 C5            [24]14124 	sjmp	00654$
      005079                      14125 01098$:
      005079 90r01r38         [24]14126 	mov	dptr,#_main_i_65537_254
      00507C ED               [12]14127 	mov	a,r5
      00507D F0               [24]14128 	movx	@dptr,a
      00507E                      14129 00123$:
                                  14130 ;	src\main.c:106: if(i<10){
      00507E 90r01r38         [24]14131 	mov	dptr,#_main_i_65537_254
      005081 E0               [24]14132 	movx	a,@dptr
      005082 FD               [12]14133 	mov	r5,a
      005083 BD 0A 00         [24]14134 	cjne	r5,#0x0a,02380$
      005086                      14135 02380$:
      005086 50 0B            [24]14136 	jnc	00126$
                                  14137 ;	src\main.c:107: eeprom_buf[PHONEPHU_EEPROM+10] = 0;
      005088 90r00rD7         [24]14138 	mov	dptr,#(_eeprom_buf + 0x001b)
      00508B E4               [12]14139 	clr	a
      00508C F0               [24]14140 	movx	@dptr,a
                                  14141 ;	src\main.c:108: eeprom_buf[PHONEPHU_EEPROM+11] = 2;
      00508D 90r00rD8         [24]14142 	mov	dptr,#(_eeprom_buf + 0x001c)
      005090 74 02            [12]14143 	mov	a,#0x02
      005092 F0               [24]14144 	movx	@dptr,a
      005093                      14145 00126$:
                                  14146 ;	src\main.c:111: if(eeprom_buf[LOITHESIM_EEPROM]>24)eeprom_buf[LOITHESIM_EEPROM] = 0;
      005093 90r00rD9         [24]14147 	mov	dptr,#(_eeprom_buf + 0x001d)
      005096 E0               [24]14148 	movx	a,@dptr
      005097 FD               [12]14149 	mov  r5,a
      005098 24 E7            [12]14150 	add	a,#0xff - 0x18
      00509A 50 05            [24]14151 	jnc	00128$
      00509C 90r00rD9         [24]14152 	mov	dptr,#(_eeprom_buf + 0x001d)
      00509F E4               [12]14153 	clr	a
      0050A0 F0               [24]14154 	movx	@dptr,a
      0050A1                      14155 00128$:
                                  14156 ;	src\main.c:112: if(mp3_playing) eeprom_buf[MP3_EEPROM] &= 4;
      0050A1 30 92 0A         [24]14157 	jnb	_P12,00135$
      0050A4 90r00rCC         [24]14158 	mov	dptr,#(_eeprom_buf + 0x0010)
      0050A7 E0               [24]14159 	movx	a,@dptr
      0050A8 54 04            [12]14160 	anl	a,#0x04
      0050AA FD               [12]14161 	mov	r5,a
      0050AB F0               [24]14162 	movx	@dptr,a
      0050AC 80 1D            [24]14163 	sjmp	00136$
      0050AE                      14164 00135$:
                                  14165 ;	src\main.c:113: else if(eeprom_buf[MP3_EEPROM]>6)eeprom_buf[MP3_EEPROM] = 2;
      0050AE 90r00rCC         [24]14166 	mov	dptr,#(_eeprom_buf + 0x0010)
      0050B1 E0               [24]14167 	movx	a,@dptr
      0050B2 FD               [12]14168 	mov  r5,a
      0050B3 24 F9            [12]14169 	add	a,#0xff - 0x06
      0050B5 50 08            [24]14170 	jnc	00132$
      0050B7 90r00rCC         [24]14171 	mov	dptr,#(_eeprom_buf + 0x0010)
      0050BA 74 02            [12]14172 	mov	a,#0x02
      0050BC F0               [24]14173 	movx	@dptr,a
      0050BD 80 0C            [24]14174 	sjmp	00136$
      0050BF                      14175 00132$:
                                  14176 ;	src\main.c:114: else if(!(eeprom_buf[MP3_EEPROM]&3))eeprom_buf[MP3_EEPROM] += 2;
      0050BF ED               [12]14177 	mov	a,r5
      0050C0 54 03            [12]14178 	anl	a,#0x03
      0050C2 70 07            [24]14179 	jnz	00136$
      0050C4 0D               [12]14180 	inc	r5
      0050C5 0D               [12]14181 	inc	r5
      0050C6 90r00rCC         [24]14182 	mov	dptr,#(_eeprom_buf + 0x0010)
      0050C9 ED               [12]14183 	mov	a,r5
      0050CA F0               [24]14184 	movx	@dptr,a
      0050CB                      14185 00136$:
                                  14186 ;	src\main.c:115: if((eeprom_buf[DEBUG_EEPROM]&15) -1 > 10)eeprom_buf[DEBUG_EEPROM] = 0x3b; 	
      0050CB 90r00rDA         [24]14187 	mov	dptr,#(_eeprom_buf + 0x001e)
      0050CE E0               [24]14188 	movx	a,@dptr
      0050CF FD               [12]14189 	mov	r5,a
      0050D0 53 05 0F         [24]14190 	anl	ar5,#0x0f
      0050D3 7C 00            [12]14191 	mov	r4,#0x00
      0050D5 1D               [12]14192 	dec	r5
      0050D6 BD FF 01         [24]14193 	cjne	r5,#0xff,02387$
      0050D9 1C               [12]14194 	dec	r4
      0050DA                      14195 02387$:
      0050DA C3               [12]14196 	clr	c
      0050DB 74 0A            [12]14197 	mov	a,#0x0a
      0050DD 9D               [12]14198 	subb	a,r5
      0050DE 74 80            [12]14199 	mov	a,#(0x00 ^ 0x80)
      0050E0 8C F0            [24]14200 	mov	b,r4
      0050E2 63 F0 80         [24]14201 	xrl	b,#0x80
      0050E5 95 F0            [12]14202 	subb	a,b
      0050E7 50 06            [24]14203 	jnc	00138$
      0050E9 90r00rDA         [24]14204 	mov	dptr,#(_eeprom_buf + 0x001e)
      0050EC 74 3B            [12]14205 	mov	a,#0x3b
      0050EE F0               [24]14206 	movx	@dptr,a
      0050EF                      14207 00138$:
                                  14208 ;	src\main.c:116: if(eeprom_buf[CAM_EEPROM]>1)eeprom_buf[CAM_EEPROM] = 1;
      0050EF 90r00rDB         [24]14209 	mov	dptr,#(_eeprom_buf + 0x001f)
      0050F2 E0               [24]14210 	movx	a,@dptr
      0050F3 24 FE            [12]14211 	add	a,#0xff - 0x01
      0050F5 50 06            [24]14212 	jnc	00140$
      0050F7 90r00rDB         [24]14213 	mov	dptr,#(_eeprom_buf + 0x001f)
      0050FA 74 01            [12]14214 	mov	a,#0x01
      0050FC F0               [24]14215 	movx	@dptr,a
      0050FD                      14216 00140$:
                                  14217 ;	src\main.c:118: IAP_ghisector1();
      0050FD C0 07            [24]14218 	push	ar7
      0050FF C0 06            [24]14219 	push	ar6
      005101 12r00r00         [24]14220 	lcall	_IAP_ghisector1
      005104 D0 06            [24]14221 	pop	ar6
      005106 D0 07            [24]14222 	pop	ar7
                                  14223 ;	src\main.c:119: so_motor = (eep_motor & 3) + 1;
      005108 90 F0 00         [24]14224 	mov	dptr,#_eep_motor
      00510B E4               [12]14225 	clr	a
      00510C 93               [24]14226 	movc	a,@a+dptr
      00510D FD               [12]14227 	mov	r5,a
      00510E 74 03            [12]14228 	mov	a,#0x03
      005110 5D               [12]14229 	anl	a,r5
      005111 90r01r2E         [24]14230 	mov	dptr,#_so_motor
      005114 04               [12]14231 	inc	a
      005115 F0               [24]14232 	movx	@dptr,a
                                  14233 ;	src\main.c:120: may_dc   = (eep_motor & 4);
      005116 90 F0 00         [24]14234 	mov	dptr,#_eep_motor
      005119 E4               [12]14235 	clr	a
      00511A 93               [24]14236 	movc	a,@a+dptr
      00511B 03               [12]14237 	rr	a
      00511C 03               [12]14238 	rr	a
      00511D 54 01            [12]14239 	anl	a,#0x01
                                  14240 ;	assignBit
      00511F 24 FF            [12]14241 	add	a,#0xff
      005121 92*32            [24]14242 	mov	_may_dc,c
                                  14243 ;	src\main.c:121: motorDir = atmel_phat = (eep_motor & 8);
      005123 E4               [12]14244 	clr	a
      005124 93               [24]14245 	movc	a,@a+dptr
      005125 A2 E3            [12]14246 	mov	c,acc[3]
      005127 E4               [12]14247 	clr	a
      005128 33               [12]14248 	rlc	a
                                  14249 ;	assignBit
      005129 24 FF            [12]14250 	add	a,#0xff
                                  14251 ;	assignBit
      00512B 92*33            [24]14252 	mov  _atmel_phat,c
      00512D 92*10            [24]14253 	mov	_motorDir,c
                                  14254 ;	src\main.c:122: motor_dung  = (eep_motor & 16);
      00512F 90 F0 00         [24]14255 	mov	dptr,#_eep_motor
      005132 E4               [12]14256 	clr	a
      005133 93               [24]14257 	movc	a,@a+dptr
      005134 C4               [12]14258 	swap	a
      005135 54 01            [12]14259 	anl	a,#0x01
                                  14260 ;	assignBit
      005137 24 FF            [12]14261 	add	a,#0xff
      005139 92*34            [24]14262 	mov	_motor_dung,c
                                  14263 ;	src\main.c:123: motor_debug = (eep_motor & 32);
      00513B E4               [12]14264 	clr	a
      00513C 93               [24]14265 	movc	a,@a+dptr
      00513D A2 E5            [12]14266 	mov	c,acc[5]
      00513F E4               [12]14267 	clr	a
      005140 33               [12]14268 	rlc	a
                                  14269 ;	assignBit
      005141 FD               [12]14270 	mov	r5,a
      005142 24 FF            [12]14271 	add	a,#0xff
      005144 92*35            [24]14272 	mov	_motor_debug,c
                                  14273 ;	src\main.c:124: if(!may_dc && !atmel_phat) toc_do_motor_step = (eep_motor & 192) >> 64;
      005146 20*32 19         [24]14274 	jb	_may_dc,00142$
      005149 20*33 16         [24]14275 	jb	_atmel_phat,00142$
      00514C 90 F0 00         [24]14276 	mov	dptr,#_eep_motor
      00514F E4               [12]14277 	clr	a
      005150 93               [24]14278 	movc	a,@a+dptr
      005151 FD               [12]14279 	mov	r5,a
      005152 53 05 C0         [24]14280 	anl	ar5,#0xc0
      005155 E4               [12]14281 	clr	a
      005156 33               [12]14282 	rlc	a
      005157 95 E0            [12]14283 	subb	a,acc
      005159 FD               [12]14284 	mov	r5,a
      00515A FC               [12]14285 	mov	r4,a
      00515B 90r00rEC         [24]14286 	mov	dptr,#_toc_do_motor_step
      00515E ED               [12]14287 	mov	a,r5
      00515F F0               [24]14288 	movx	@dptr,a
      005160 80 05            [24]14289 	sjmp	00143$
      005162                      14290 00142$:
                                  14291 ;	src\main.c:125: else toc_do_motor_step = 0;
      005162 90r00rEC         [24]14292 	mov	dptr,#_toc_do_motor_step
      005165 E4               [12]14293 	clr	a
      005166 F0               [24]14294 	movx	@dptr,a
      005167                      14295 00143$:
                                  14296 ;	src\main.c:127: sms_on = (eep_debug & 96)>>5;
      005167 90 F0 1E         [24]14297 	mov	dptr,#_eep_debug
      00516A E4               [12]14298 	clr	a
      00516B 93               [24]14299 	movc	a,@a+dptr
      00516C FD               [12]14300 	mov	r5,a
      00516D 53 05 60         [24]14301 	anl	ar5,#0x60
      005170 E4               [12]14302 	clr	a
      005171 03               [12]14303 	rr	a
      005172 CD               [12]14304 	xch	a,r5
      005173 C4               [12]14305 	swap	a
      005174 03               [12]14306 	rr	a
      005175 54 07            [12]14307 	anl	a,#0x07
      005177 6D               [12]14308 	xrl	a,r5
      005178 CD               [12]14309 	xch	a,r5
      005179 54 07            [12]14310 	anl	a,#0x07
      00517B CD               [12]14311 	xch	a,r5
      00517C 6D               [12]14312 	xrl	a,r5
      00517D CD               [12]14313 	xch	a,r5
      00517E 30 E2 02         [24]14314 	jnb	acc.2,02392$
      005181 44 F8            [12]14315 	orl	a,#0xf8
      005183                      14316 02392$:
      005183 FC               [12]14317 	mov	r4,a
      005184 90r01r31         [24]14318 	mov	dptr,#_sms_on
      005187 ED               [12]14319 	mov	a,r5
      005188 F0               [24]14320 	movx	@dptr,a
                                  14321 ;	src\main.c:128: if(sms_on==2) for(i=0;i<11;i++)phone_chinh[i]= phone2[i];
      005189 BD 02 1D         [24]14322 	cjne	r5,#0x02,00821$
      00518C 7D 00            [12]14323 	mov	r5,#0x00
      00518E                      14324 00656$:
      00518E ED               [12]14325 	mov	a,r5
      00518F 24r00            [12]14326 	add	a,#_phone_chinh
      005191 FB               [12]14327 	mov	r3,a
      005192 E4               [12]14328 	clr	a
      005193 34s00            [12]14329 	addc	a,#(_phone_chinh >> 8)
      005195 FC               [12]14330 	mov	r4,a
      005196 ED               [12]14331 	mov	a,r5
      005197 90r00r0B         [24]14332 	mov	dptr,#_phone2
      00519A 93               [24]14333 	movc	a,@a+dptr
      00519B FA               [12]14334 	mov	r2,a
      00519C 8B 82            [24]14335 	mov	dpl,r3
      00519E 8C 83            [24]14336 	mov	dph,r4
      0051A0 F0               [24]14337 	movx	@dptr,a
      0051A1 0D               [12]14338 	inc	r5
      0051A2 BD 0B 00         [24]14339 	cjne	r5,#0x0b,02395$
      0051A5                      14340 02395$:
      0051A5 40 E7            [24]14341 	jc	00656$
                                  14342 ;	src\main.c:129: else for(i=0;i<11;i++)phone_chinh[i]= phone1[i];
      0051A7 80 1B            [24]14343 	sjmp	00149$
      0051A9                      14344 00821$:
      0051A9 7D 00            [12]14345 	mov	r5,#0x00
      0051AB                      14346 00658$:
      0051AB ED               [12]14347 	mov	a,r5
      0051AC 24r00            [12]14348 	add	a,#_phone_chinh
      0051AE FB               [12]14349 	mov	r3,a
      0051AF E4               [12]14350 	clr	a
      0051B0 34s00            [12]14351 	addc	a,#(_phone_chinh >> 8)
      0051B2 FC               [12]14352 	mov	r4,a
      0051B3 ED               [12]14353 	mov	a,r5
      0051B4 90r00r00         [24]14354 	mov	dptr,#_phone1
      0051B7 93               [24]14355 	movc	a,@a+dptr
      0051B8 FA               [12]14356 	mov	r2,a
      0051B9 8B 82            [24]14357 	mov	dpl,r3
      0051BB 8C 83            [24]14358 	mov	dph,r4
      0051BD F0               [24]14359 	movx	@dptr,a
      0051BE 0D               [12]14360 	inc	r5
      0051BF BD 0B 00         [24]14361 	cjne	r5,#0x0b,02397$
      0051C2                      14362 02397$:
      0051C2 40 E7            [24]14363 	jc	00658$
      0051C4                      14364 00149$:
                                  14365 ;	src\main.c:130: sim_test_sec = 0;
      0051C4 90r01r30         [24]14366 	mov	dptr,#_sim_test_sec
      0051C7 E4               [12]14367 	clr	a
      0051C8 F0               [24]14368 	movx	@dptr,a
                                  14369 ;	src\main.c:131: max_second = (eep_debug & 15)<6?(eep_debug & 15) + 1 : (60/(12-(eep_debug & 15)));
      0051C9 90 F0 1E         [24]14370 	mov	dptr,#_eep_debug
                                  14371 ;	genFromRTrack removed	clr	a
      0051CC 93               [24]14372 	movc	a,@a+dptr
      0051CD FD               [12]14373 	mov	r5,a
      0051CE 53 05 0F         [24]14374 	anl	ar5,#0x0f
      0051D1 7C 00            [12]14375 	mov	r4,#0x00
      0051D3 C3               [12]14376 	clr	c
      0051D4 ED               [12]14377 	mov	a,r5
      0051D5 94 06            [12]14378 	subb	a,#0x06
      0051D7 EC               [12]14379 	mov	a,r4
      0051D8 64 80            [12]14380 	xrl	a,#0x80
      0051DA 94 80            [12]14381 	subb	a,#0x80
      0051DC 50 11            [24]14382 	jnc	00662$
      0051DE 90 F0 1E         [24]14383 	mov	dptr,#_eep_debug
      0051E1 E4               [12]14384 	clr	a
      0051E2 93               [24]14385 	movc	a,@a+dptr
      0051E3 FD               [12]14386 	mov	r5,a
      0051E4 74 0F            [12]14387 	mov	a,#0x0f
      0051E6 5D               [12]14388 	anl	a,r5
      0051E7 04               [12]14389 	inc	a
      0051E8 FC               [12]14390 	mov	r4,a
      0051E9 33               [12]14391 	rlc	a
      0051EA 95 E0            [12]14392 	subb	a,acc
      0051EC FD               [12]14393 	mov	r5,a
      0051ED 80 27            [24]14394 	sjmp	00663$
      0051EF                      14395 00662$:
      0051EF 90 F0 1E         [24]14396 	mov	dptr,#_eep_debug
      0051F2 E4               [12]14397 	clr	a
      0051F3 93               [24]14398 	movc	a,@a+dptr
      0051F4 FB               [12]14399 	mov	r3,a
      0051F5 53 03 0F         [24]14400 	anl	ar3,#0x0f
      0051F8 7A 00            [12]14401 	mov	r2,#0x00
      0051FA 74 0C            [12]14402 	mov	a,#0x0c
      0051FC C3               [12]14403 	clr	c
      0051FD 9B               [12]14404 	subb	a,r3
      0051FE F5*00            [12]14405 	mov	__divsint_PARM_2,a
      005200 E4               [12]14406 	clr	a
      005201 9A               [12]14407 	subb	a,r2
      005202 F5*01            [12]14408 	mov	(__divsint_PARM_2 + 1),a
      005204 90 00 3C         [24]14409 	mov	dptr,#0x003c
      005207 C0 07            [24]14410 	push	ar7
      005209 C0 06            [24]14411 	push	ar6
      00520B 12r00r00         [24]14412 	lcall	__divsint
      00520E AC 82            [24]14413 	mov	r4,dpl
      005210 AD 83            [24]14414 	mov	r5,dph
      005212 D0 06            [24]14415 	pop	ar6
      005214 D0 07            [24]14416 	pop	ar7
      005216                      14417 00663$:
      005216 90r01r2F         [24]14418 	mov	dptr,#_max_second
      005219 EC               [12]14419 	mov	a,r4
      00521A F0               [24]14420 	movx	@dptr,a
                                  14421 ;	src\main.c:132: if(!(eep_debug & 16) || max_second<60) sim_test_sec = 61;
      00521B 90 F0 1E         [24]14422 	mov	dptr,#_eep_debug
      00521E E4               [12]14423 	clr	a
      00521F 93               [24]14424 	movc	a,@a+dptr
      005220 30 E4 05         [24]14425 	jnb	acc.4,00150$
      005223 BC 3C 00         [24]14426 	cjne	r4,#0x3c,02401$
      005226                      14427 02401$:
      005226 50 06            [24]14428 	jnc	00151$
      005228                      14429 00150$:
      005228 90r01r30         [24]14430 	mov	dptr,#_sim_test_sec
      00522B 74 3D            [12]14431 	mov	a,#0x3d
      00522D F0               [24]14432 	movx	@dptr,a
      00522E                      14433 00151$:
                                  14434 ;	src\main.c:134: thoi_gian_doi_cam_chuan = (eep_motor & 64)?255:(may_dc?30:10);
      00522E 90 F0 00         [24]14435 	mov	dptr,#_eep_motor
      005231 E4               [12]14436 	clr	a
      005232 93               [24]14437 	movc	a,@a+dptr
      005233 30 E6 06         [24]14438 	jnb	acc.6,00664$
      005236 7C FF            [12]14439 	mov	r4,#0xff
      005238 7D 00            [12]14440 	mov	r5,#0x00
      00523A 80 11            [24]14441 	sjmp	00665$
      00523C                      14442 00664$:
      00523C 30*32 06         [24]14443 	jnb	_may_dc,00666$
      00523F 7A 1E            [12]14444 	mov	r2,#0x1e
      005241 7B 00            [12]14445 	mov	r3,#0x00
      005243 80 04            [24]14446 	sjmp	00667$
      005245                      14447 00666$:
      005245 7A 0A            [12]14448 	mov	r2,#0x0a
      005247 7B 00            [12]14449 	mov	r3,#0x00
      005249                      14450 00667$:
      005249 8A 04            [24]14451 	mov	ar4,r2
      00524B 8B 05            [24]14452 	mov	ar5,r3
      00524D                      14453 00665$:
      00524D 90r00rEB         [24]14454 	mov	dptr,#_thoi_gian_doi_cam_chuan
      005250 EC               [12]14455 	mov	a,r4
      005251 F0               [24]14456 	movx	@dptr,a
                                  14457 ;	src\main.c:136: switch(so_motor){
      005252 90r01r2E         [24]14458 	mov	dptr,#_so_motor
      005255 E0               [24]14459 	movx	a,@dptr
      005256 FD               [12]14460 	mov	r5,a
      005257 BD 01 03         [24]14461 	cjne	r5,#0x01,02405$
      00525A 02r53r0D         [24]14462 	ljmp	00165$
      00525D                      14463 02405$:
      00525D BD 02 02         [24]14464 	cjne	r5,#0x02,02406$
      005260 80 75            [24]14465 	sjmp	00161$
      005262                      14466 02406$:
      005262 BD 03 02         [24]14467 	cjne	r5,#0x03,02407$
      005265 80 3A            [24]14468 	sjmp	00157$
      005267                      14469 02407$:
      005267 BD 04 02         [24]14470 	cjne	r5,#0x04,02408$
      00526A 80 03            [24]14471 	sjmp	02409$
      00526C                      14472 02408$:
      00526C 02r53r43         [24]14473 	ljmp	00170$
      00526F                      14474 02409$:
                                  14475 ;	src\main.c:137: case 4: thoi_gian_doi_doc_cam[3]=thoi_gian_doi_cam_chuan;
      00526F 90r00rEA         [24]14476 	mov	dptr,#(_thoi_gian_doi_doc_cam + 0x0003)
      005272 EC               [12]14477 	mov	a,r4
      005273 F0               [24]14478 	movx	@dptr,a
                                  14479 ;	src\main.c:138: if(eep_phut4>59 || eep_gio4>11)
      005274 90 F2 06         [24]14480 	mov	dptr,#_eep_phut4
      005277 E4               [12]14481 	clr	a
      005278 93               [24]14482 	movc	a,@a+dptr
      005279 FD               [12]14483 	mov  r5,a
      00527A 24 C4            [12]14484 	add	a,#0xff - 0x3b
      00527C 40 0A            [24]14485 	jc	00154$
      00527E 90 F2 07         [24]14486 	mov	dptr,#_eep_gio4
      005281 E4               [12]14487 	clr	a
      005282 93               [24]14488 	movc	a,@a+dptr
      005283 FD               [12]14489 	mov  r5,a
      005284 24 F4            [12]14490 	add	a,#0xff - 0x0b
      005286 50 0B            [24]14491 	jnc	00155$
      005288                      14492 00154$:
                                  14493 ;	src\main.c:139: luu_gio_kim();
      005288 C0 07            [24]14494 	push	ar7
      00528A C0 06            [24]14495 	push	ar6
      00528C 12r06rDD         [24]14496 	lcall	_luu_gio_kim
      00528F D0 06            [24]14497 	pop	ar6
      005291 D0 07            [24]14498 	pop	ar7
      005293                      14499 00155$:
                                  14500 ;	src\main.c:140: phut[3] = eep_phut4; 
      005293 90 F2 06         [24]14501 	mov	dptr,#_eep_phut4
      005296 E4               [12]14502 	clr	a
      005297 93               [24]14503 	movc	a,@a+dptr
      005298 F5*0B            [12]14504 	mov	(_phut + 0x0003),a
                                  14505 ;	src\main.c:141: gio[3] = eep_gio4;
      00529A 90 F2 07         [24]14506 	mov	dptr,#_eep_gio4
      00529D E4               [12]14507 	clr	a
      00529E 93               [24]14508 	movc	a,@a+dptr
      00529F F5*07            [12]14509 	mov	(_gio + 0x0003),a
                                  14510 ;	src\main.c:142: case 3: thoi_gian_doi_doc_cam[2]=thoi_gian_doi_cam_chuan;
      0052A1                      14511 00157$:
      0052A1 90r00rEB         [24]14512 	mov	dptr,#_thoi_gian_doi_cam_chuan
      0052A4 E0               [24]14513 	movx	a,@dptr
      0052A5 FD               [12]14514 	mov	r5,a
      0052A6 90r00rE9         [24]14515 	mov	dptr,#(_thoi_gian_doi_doc_cam + 0x0002)
      0052A9 F0               [24]14516 	movx	@dptr,a
                                  14517 ;	src\main.c:143: if(eep_phut3>59 || eep_gio3>11)
      0052AA 90 F2 04         [24]14518 	mov	dptr,#_eep_phut3
      0052AD E4               [12]14519 	clr	a
      0052AE 93               [24]14520 	movc	a,@a+dptr
      0052AF FD               [12]14521 	mov  r5,a
      0052B0 24 C4            [12]14522 	add	a,#0xff - 0x3b
      0052B2 40 0A            [24]14523 	jc	00158$
      0052B4 90 F2 05         [24]14524 	mov	dptr,#_eep_gio3
      0052B7 E4               [12]14525 	clr	a
      0052B8 93               [24]14526 	movc	a,@a+dptr
      0052B9 FD               [12]14527 	mov  r5,a
      0052BA 24 F4            [12]14528 	add	a,#0xff - 0x0b
      0052BC 50 0B            [24]14529 	jnc	00159$
      0052BE                      14530 00158$:
                                  14531 ;	src\main.c:144: luu_gio_kim();
      0052BE C0 07            [24]14532 	push	ar7
      0052C0 C0 06            [24]14533 	push	ar6
      0052C2 12r06rDD         [24]14534 	lcall	_luu_gio_kim
      0052C5 D0 06            [24]14535 	pop	ar6
      0052C7 D0 07            [24]14536 	pop	ar7
      0052C9                      14537 00159$:
                                  14538 ;	src\main.c:145: phut[2] = eep_phut3; gio[2] = eep_gio3;
      0052C9 90 F2 04         [24]14539 	mov	dptr,#_eep_phut3
      0052CC E4               [12]14540 	clr	a
      0052CD 93               [24]14541 	movc	a,@a+dptr
      0052CE F5*0A            [12]14542 	mov	(_phut + 0x0002),a
      0052D0 90 F2 05         [24]14543 	mov	dptr,#_eep_gio3
      0052D3 E4               [12]14544 	clr	a
      0052D4 93               [24]14545 	movc	a,@a+dptr
      0052D5 F5*06            [12]14546 	mov	(_gio + 0x0002),a
                                  14547 ;	src\main.c:146: case 2: thoi_gian_doi_doc_cam[1]=thoi_gian_doi_cam_chuan;
      0052D7                      14548 00161$:
      0052D7 90r00rEB         [24]14549 	mov	dptr,#_thoi_gian_doi_cam_chuan
      0052DA E0               [24]14550 	movx	a,@dptr
      0052DB FD               [12]14551 	mov	r5,a
      0052DC 90r00rE8         [24]14552 	mov	dptr,#(_thoi_gian_doi_doc_cam + 0x0001)
      0052DF F0               [24]14553 	movx	@dptr,a
                                  14554 ;	src\main.c:147: if(eep_phut2>59 || eep_gio2>11)
      0052E0 90 F2 02         [24]14555 	mov	dptr,#_eep_phut2
      0052E3 E4               [12]14556 	clr	a
      0052E4 93               [24]14557 	movc	a,@a+dptr
      0052E5 FD               [12]14558 	mov  r5,a
      0052E6 24 C4            [12]14559 	add	a,#0xff - 0x3b
      0052E8 40 0A            [24]14560 	jc	00162$
      0052EA 90 F2 03         [24]14561 	mov	dptr,#_eep_gio2
      0052ED E4               [12]14562 	clr	a
      0052EE 93               [24]14563 	movc	a,@a+dptr
      0052EF FD               [12]14564 	mov  r5,a
      0052F0 24 F4            [12]14565 	add	a,#0xff - 0x0b
      0052F2 50 0B            [24]14566 	jnc	00163$
      0052F4                      14567 00162$:
                                  14568 ;	src\main.c:148: luu_gio_kim();
      0052F4 C0 07            [24]14569 	push	ar7
      0052F6 C0 06            [24]14570 	push	ar6
      0052F8 12r06rDD         [24]14571 	lcall	_luu_gio_kim
      0052FB D0 06            [24]14572 	pop	ar6
      0052FD D0 07            [24]14573 	pop	ar7
      0052FF                      14574 00163$:
                                  14575 ;	src\main.c:149: phut[1] = eep_phut2; gio[1] = eep_gio2;
      0052FF 90 F2 02         [24]14576 	mov	dptr,#_eep_phut2
      005302 E4               [12]14577 	clr	a
      005303 93               [24]14578 	movc	a,@a+dptr
      005304 F5*09            [12]14579 	mov	(_phut + 0x0001),a
      005306 90 F2 03         [24]14580 	mov	dptr,#_eep_gio2
      005309 E4               [12]14581 	clr	a
      00530A 93               [24]14582 	movc	a,@a+dptr
      00530B F5*05            [12]14583 	mov	(_gio + 0x0001),a
                                  14584 ;	src\main.c:150: case 1: thoi_gian_doi_doc_cam[0]=thoi_gian_doi_cam_chuan;
      00530D                      14585 00165$:
      00530D 90r00rEB         [24]14586 	mov	dptr,#_thoi_gian_doi_cam_chuan
      005310 E0               [24]14587 	movx	a,@dptr
      005311 FD               [12]14588 	mov	r5,a
      005312 90r00rE7         [24]14589 	mov	dptr,#_thoi_gian_doi_doc_cam
      005315 F0               [24]14590 	movx	@dptr,a
                                  14591 ;	src\main.c:151: if(eep_phut1>59 || eep_gio1>11)
      005316 90 F2 00         [24]14592 	mov	dptr,#_eep_phut1
      005319 E4               [12]14593 	clr	a
      00531A 93               [24]14594 	movc	a,@a+dptr
      00531B FD               [12]14595 	mov  r5,a
      00531C 24 C4            [12]14596 	add	a,#0xff - 0x3b
      00531E 40 0A            [24]14597 	jc	00166$
      005320 90 F2 01         [24]14598 	mov	dptr,#_eep_gio1
      005323 E4               [12]14599 	clr	a
      005324 93               [24]14600 	movc	a,@a+dptr
      005325 FD               [12]14601 	mov  r5,a
      005326 24 F4            [12]14602 	add	a,#0xff - 0x0b
      005328 50 0B            [24]14603 	jnc	00167$
      00532A                      14604 00166$:
                                  14605 ;	src\main.c:152: luu_gio_kim();
      00532A C0 07            [24]14606 	push	ar7
      00532C C0 06            [24]14607 	push	ar6
      00532E 12r06rDD         [24]14608 	lcall	_luu_gio_kim
      005331 D0 06            [24]14609 	pop	ar6
      005333 D0 07            [24]14610 	pop	ar7
      005335                      14611 00167$:
                                  14612 ;	src\main.c:153: phut[0] = eep_phut1; gio[0] = eep_gio1;
      005335 90 F2 00         [24]14613 	mov	dptr,#_eep_phut1
      005338 E4               [12]14614 	clr	a
      005339 93               [24]14615 	movc	a,@a+dptr
      00533A F5*08            [12]14616 	mov	_phut,a
      00533C 90 F2 01         [24]14617 	mov	dptr,#_eep_gio1
      00533F E4               [12]14618 	clr	a
      005340 93               [24]14619 	movc	a,@a+dptr
      005341 F5*04            [12]14620 	mov	_gio,a
                                  14621 ;	src\main.c:155: }
      005343                      14622 00170$:
                                  14623 ;	src\main.c:157: ChargeRelay = 1;
                                  14624 ;	assignBit
      005343 D2 A2            [12]14625 	setb	_P22
                                  14626 ;	src\main.c:160: LCD_guilenh(0x80);
      005345 75 82 80         [24]14627 	mov	dpl,#0x80
      005348 C0 07            [24]14628 	push	ar7
      00534A C0 06            [24]14629 	push	ar6
      00534C 12r00r00         [24]14630 	lcall	_LCD_guilenh
                                  14631 ;	src\main.c:161: LCD_guichuoi("POWER ON SIM800 ");
      00534F 90r0Br16         [24]14632 	mov	dptr,#___str_119
      005352 75 F0 80         [24]14633 	mov	b,#0x80
      005355 12r00r00         [24]14634 	lcall	_LCD_guichuoi
                                  14635 ;	src\main.c:162: gsm_init();
      005358 12r00r00         [24]14636 	lcall	_gsm_init
                                  14637 ;	src\main.c:166: LCD_guilenh(0x80);
      00535B 75 82 80         [24]14638 	mov	dpl,#0x80
      00535E 12r00r00         [24]14639 	lcall	_LCD_guilenh
                                  14640 ;	src\main.c:167: LCD_guichuoi("  KHOI TAO MP3  ");
      005361 90r0Br27         [24]14641 	mov	dptr,#___str_120
      005364 75 F0 80         [24]14642 	mov	b,#0x80
      005367 12r00r00         [24]14643 	lcall	_LCD_guichuoi
      00536A D0 06            [24]14644 	pop	ar6
      00536C D0 07            [24]14645 	pop	ar7
                                  14646 ;	src\main.c:168: if(eep_mp3%4==2){
      00536E 90 F0 10         [24]14647 	mov	dptr,#_eep_mp3
      005371 E4               [12]14648 	clr	a
      005372 93               [24]14649 	movc	a,@a+dptr
      005373 54 03            [12]14650 	anl	a,#0x03
      005375 FC               [12]14651 	mov	r4,a
      005376 7D 00            [12]14652 	mov	r5,#0x00
      005378 BC 02 1A         [24]14653 	cjne	r4,#0x02,00172$
      00537B BD 00 17         [24]14654 	cjne	r5,#0x00,00172$
                                  14655 ;	src\main.c:169: mp3_serial_init();
      00537E C0 07            [24]14656 	push	ar7
      005380 C0 06            [24]14657 	push	ar6
      005382 12r00r00         [24]14658 	lcall	_mp3_serial_init
      005385 D0 06            [24]14659 	pop	ar6
      005387 D0 07            [24]14660 	pop	ar7
                                  14661 ;	src\main.c:170: mp3_status= mp3_IDLE;
      005389 78r01            [12]14662 	mov	r0,#_mp3_status
      00538B 76 00            [12]14663 	mov	@r0,#0x00
                                  14664 ;	src\main.c:171: mp3_hour = 24;
      00538D 78r03            [12]14665 	mov	r0,#_mp3_hour
      00538F 76 18            [12]14666 	mov	@r0,#0x18
                                  14667 ;	src\main.c:172: mp3_minute = 60;
      005391 78r04            [12]14668 	mov	r0,#_mp3_minute
      005393 76 3C            [12]14669 	mov	@r0,#0x3c
      005395                      14670 00172$:
                                  14671 ;	src\main.c:176: da_gui_bao_cao = 1;
                                  14672 ;	assignBit
      005395 D2*01            [12]14673 	setb	_da_gui_bao_cao
                                  14674 ;	src\main.c:177: ngay_reset_con_lai = eep_ngayreset;
      005397 90 F0 03         [24]14675 	mov	dptr,#_eep_ngayreset
      00539A E4               [12]14676 	clr	a
      00539B 93               [24]14677 	movc	a,@a+dptr
      00539C 90r00rE5         [24]14678 	mov	dptr,#_ngay_reset_con_lai
      00539F F0               [24]14679 	movx	@dptr,a
                                  14680 ;	src\main.c:180: PCA_Timer_init();
      0053A0 C0 07            [24]14681 	push	ar7
      0053A2 C0 06            [24]14682 	push	ar6
      0053A4 12r07r43         [24]14683 	lcall	_PCA_Timer_init
      0053A7 D0 06            [24]14684 	pop	ar6
      0053A9 D0 07            [24]14685 	pop	ar7
                                  14686 ;	src\main.c:187: if(phim_mode_nhan && phim_back_nhan && phim_cong_nhan){
      0053AB 20*20 03         [24]14687 	jb	_phim_mode_nhan,02420$
      0053AE 02r5Br69         [24]14688 	ljmp	00251$
      0053B1                      14689 02420$:
      0053B1 20*24 03         [24]14690 	jb	_phim_back_nhan,02421$
      0053B4 02r5Br69         [24]14691 	ljmp	00251$
      0053B7                      14692 02421$:
      0053B7 20*28 03         [24]14693 	jb	_phim_cong_nhan,02422$
      0053BA 02r5Br69         [24]14694 	ljmp	00251$
      0053BD                      14695 02422$:
                                  14696 ;	src\main.c:188: u8 debug_dem = 0;
      0053BD 75*2B 00         [24]14697 	mov	_main_debug_dem_131073_263,#0x00
                                  14698 ;	src\main.c:190: u8 mp3temp = eep_mp3;
      0053C0 90 F0 10         [24]14699 	mov	dptr,#_eep_mp3
      0053C3 E4               [12]14700 	clr	a
      0053C4 93               [24]14701 	movc	a,@a+dptr
      0053C5 F5*2C            [12]14702 	mov	_main_mp3temp_131073_263,a
                                  14703 ;	src\main.c:191: __bit debug = 0;
                                  14704 ;	assignBit
      0053C7 C2*4B            [12]14705 	clr	_main_debug_131073_263
                                  14706 ;	src\main.c:192: giotemp = eep_debug;
      0053C9 90 F0 1E         [24]14707 	mov	dptr,#_eep_debug
      0053CC E4               [12]14708 	clr	a
      0053CD 93               [24]14709 	movc	a,@a+dptr
      0053CE F5*2A            [12]14710 	mov	_main_giotemp_65536_253,a
                                  14711 ;	src\main.c:194: i = eep_motor;
      0053D0 90 F0 00         [24]14712 	mov	dptr,#_eep_motor
      0053D3 E4               [12]14713 	clr	a
      0053D4 93               [24]14714 	movc	a,@a+dptr
      0053D5 FA               [12]14715 	mov	r2,a
                                  14716 ;	src\main.c:196: phim_mode_nhan = phim_back_nhan = phim_cong_nhan = 0;
                                  14717 ;	assignBit
      0053D6 C2*28            [12]14718 	clr	_phim_cong_nhan
                                  14719 ;	assignBit
      0053D8 C2*24            [12]14720 	clr	_phim_back_nhan
                                  14721 ;	assignBit
      0053DA C2*20            [12]14722 	clr	_phim_mode_nhan
                                  14723 ;	src\main.c:197: LCD_guichuoi("\200 NHA PHAT TRIEN");
      0053DC 90r0Br38         [24]14724 	mov	dptr,#___str_121
      0053DF 75 F0 80         [24]14725 	mov	b,#0x80
      0053E2 C0 02            [24]14726 	push	ar2
      0053E4 12r00r00         [24]14727 	lcall	_LCD_guichuoi
                                  14728 ;	src\main.c:198: LCD_guichuoi("\300MAY:");
      0053E7 90r0Br49         [24]14729 	mov	dptr,#___str_122
      0053EA 75 F0 80         [24]14730 	mov	b,#0x80
      0053ED 12r00r00         [24]14731 	lcall	_LCD_guichuoi
                                  14732 ;	src\main.c:199: LCD_guidulieu(so_motor+'0');
      0053F0 90r01r2E         [24]14733 	mov	dptr,#_so_motor
      0053F3 E0               [24]14734 	movx	a,@dptr
      0053F4 24 30            [12]14735 	add	a,#0x30
      0053F6 F5 82            [12]14736 	mov	dpl,a
      0053F8 12r00r00         [24]14737 	lcall	_LCD_guidulieu
      0053FB D0 02            [24]14738 	pop	ar2
                                  14739 ;	src\main.c:200: LCD_guichuoi(may_dc?"\305 DC ":"\305 ST ");
      0053FD 30*32 08         [24]14740 	jnb	_may_dc,00668$
      005400 75*2Fr4F         [24]14741 	mov	_main_sloc0_1_0,#___str_123
      005403 75*30s0B         [24]14742 	mov	(_main_sloc0_1_0 + 1),#(___str_123 >> 8)
      005406 80 06            [24]14743 	sjmp	00669$
      005408                      14744 00668$:
      005408 75*2Fr55         [24]14745 	mov	_main_sloc0_1_0,#___str_124
      00540B 75*30s0B         [24]14746 	mov	(_main_sloc0_1_0 + 1),#(___str_124 >> 8)
      00540E                      14747 00669$:
      00540E AB*2F            [24]14748 	mov	r3,_main_sloc0_1_0
      005410 AC*30            [24]14749 	mov	r4,(_main_sloc0_1_0 + 1)
      005412 7D 80            [12]14750 	mov	r5,#0x80
      005414 8B 82            [24]14751 	mov	dpl,r3
      005416 8C 83            [24]14752 	mov	dph,r4
      005418 8D F0            [24]14753 	mov	b,r5
      00541A C0 02            [24]14754 	push	ar2
      00541C 12r00r00         [24]14755 	lcall	_LCD_guichuoi
      00541F D0 02            [24]14756 	pop	ar2
                                  14757 ;	src\main.c:201: LCD_guichuoi(atmel_phat?"\311C55 ":"\311STC ");
      005421 30*33 06         [24]14758 	jnb	_atmel_phat,00670$
      005424 7Cr5B            [12]14759 	mov	r4,#___str_125
      005426 7Ds0B            [12]14760 	mov	r5,#(___str_125 >> 8)
      005428 80 04            [24]14761 	sjmp	00671$
      00542A                      14762 00670$:
      00542A 7Cr61            [12]14763 	mov	r4,#___str_126
      00542C 7Ds0B            [12]14764 	mov	r5,#(___str_126 >> 8)
      00542E                      14765 00671$:
      00542E 7B 80            [12]14766 	mov	r3,#0x80
      005430 8C 82            [24]14767 	mov	dpl,r4
      005432 8D 83            [24]14768 	mov	dph,r5
      005434 8B F0            [24]14769 	mov	b,r3
      005436 C0 02            [24]14770 	push	ar2
      005438 12r00r00         [24]14771 	lcall	_LCD_guichuoi
                                  14772 ;	src\main.c:202: LCD_guichuoi("\315S:");
      00543B 90r0Br67         [24]14773 	mov	dptr,#___str_127
      00543E 75 F0 80         [24]14774 	mov	b,#0x80
      005441 12r00r00         [24]14775 	lcall	_LCD_guichuoi
                                  14776 ;	src\main.c:203: LCD_guidulieu(toc_do_motor_step+'0');
      005444 90r00rEC         [24]14777 	mov	dptr,#_toc_do_motor_step
      005447 E0               [24]14778 	movx	a,@dptr
      005448 24 30            [12]14779 	add	a,#0x30
      00544A F5 82            [12]14780 	mov	dpl,a
      00544C 12r00r00         [24]14781 	lcall	_LCD_guidulieu
                                  14782 ;	src\main.c:204: LCD_blinkXY(DUOI,4);
      00544F 75*00 04         [24]14783 	mov	_LCD_blinkXY_PARM_2,#0x04
      005452 75 82 C0         [24]14784 	mov	dpl,#0xc0
      005455 12r00r00         [24]14785 	lcall	_LCD_blinkXY
      005458 D0 02            [24]14786 	pop	ar2
                                  14787 ;	src\main.c:205: sub_mode = so_motor-1;
      00545A 90r01r2E         [24]14788 	mov	dptr,#_so_motor
      00545D E0               [24]14789 	movx	a,@dptr
      00545E FD               [12]14790 	mov	r5,a
      00545F 14               [12]14791 	dec	a
      005460 90r00rF4         [24]14792 	mov	dptr,#_sub_mode
      005463 F0               [24]14793 	movx	@dptr,a
                                  14794 ;	src\main.c:206: mode = 0;
      005464 90r00rF3         [24]14795 	mov	dptr,#_mode
      005467 E4               [12]14796 	clr	a
      005468 F0               [24]14797 	movx	@dptr,a
                                  14798 ;	src\main.c:207: while(1){
      005469                      14799 00248$:
                                  14800 ;	src\main.c:208: if(debug){
      005469 20*4B 03         [24]14801 	jb	_main_debug_131073_263,02425$
      00546C 02r58r09         [24]14802 	ljmp	00245$
      00546F                      14803 02425$:
                                  14804 ;	src\main.c:209: if(lcd_update_chop){
      00546F 20*3D 03         [24]14805 	jb	_lcd_update_chop,02426$
      005472 02r56r55         [24]14806 	ljmp	00174$
      005475                      14807 02426$:
                                  14808 ;	src\main.c:210: lcd_update_chop = 0;
      005475 C0 02            [24]14809 	push	ar2
                                  14810 ;	assignBit
      005477 C2*3D            [12]14811 	clr	_lcd_update_chop
                                  14812 ;	src\main.c:211: LCD_guichuoi("\300P:");
      005479 90r0Br6B         [24]14813 	mov	dptr,#___str_128
      00547C 75 F0 80         [24]14814 	mov	b,#0x80
      00547F C0 02            [24]14815 	push	ar2
      005481 12r00r00         [24]14816 	lcall	_LCD_guichuoi
      005484 D0 02            [24]14817 	pop	ar2
                                  14818 ;	src\main.c:212: phuttemp = (giotemp & 15) < 6?(giotemp & 15)+1:(60/(12-(giotemp & 15)));
      005486 AB*2A            [24]14819 	mov	r3,_main_giotemp_65536_253
      005488 7D 00            [12]14820 	mov	r5,#0x00
      00548A 74 0F            [12]14821 	mov	a,#0x0f
      00548C 5B               [12]14822 	anl	a,r3
      00548D FA               [12]14823 	mov	r2,a
      00548E 7C 00            [12]14824 	mov	r4,#0x00
      005490 C3               [12]14825 	clr	c
      005491 EA               [12]14826 	mov	a,r2
      005492 94 06            [12]14827 	subb	a,#0x06
      005494 EC               [12]14828 	mov	a,r4
      005495 64 80            [12]14829 	xrl	a,#0x80
      005497 94 80            [12]14830 	subb	a,#0x80
      005499 D0 02            [24]14831 	pop	ar2
      00549B 50 10            [24]14832 	jnc	00672$
      00549D AC*2A            [24]14833 	mov	r4,_main_giotemp_65536_253
      00549F 74 0F            [12]14834 	mov	a,#0x0f
      0054A1 5C               [12]14835 	anl	a,r4
      0054A2 04               [12]14836 	inc	a
      0054A3 FC               [12]14837 	mov	r4,a
      0054A4 8C*2F            [24]14838 	mov	_main_sloc0_1_0,r4
      0054A6 33               [12]14839 	rlc	a
      0054A7 95 E0            [12]14840 	subb	a,acc
      0054A9 F5*30            [12]14841 	mov	(_main_sloc0_1_0 + 1),a
      0054AB 80 2C            [24]14842 	sjmp	00673$
      0054AD                      14843 00672$:
      0054AD C0 02            [24]14844 	push	ar2
      0054AF 74 0F            [12]14845 	mov	a,#0x0f
      0054B1 5B               [12]14846 	anl	a,r3
      0054B2 FA               [12]14847 	mov	r2,a
      0054B3 7C 00            [12]14848 	mov	r4,#0x00
      0054B5 74 0C            [12]14849 	mov	a,#0x0c
      0054B7 C3               [12]14850 	clr	c
      0054B8 9A               [12]14851 	subb	a,r2
      0054B9 F5*00            [12]14852 	mov	__divsint_PARM_2,a
      0054BB E4               [12]14853 	clr	a
      0054BC 9C               [12]14854 	subb	a,r4
      0054BD F5*01            [12]14855 	mov	(__divsint_PARM_2 + 1),a
      0054BF 90 00 3C         [24]14856 	mov	dptr,#0x003c
      0054C2 C0 05            [24]14857 	push	ar5
      0054C4 C0 03            [24]14858 	push	ar3
      0054C6 C0 02            [24]14859 	push	ar2
      0054C8 12r00r00         [24]14860 	lcall	__divsint
      0054CB 85 82*2F         [24]14861 	mov	_main_sloc0_1_0,dpl
      0054CE 85 83*30         [24]14862 	mov	(_main_sloc0_1_0 + 1),dph
      0054D1 D0 02            [24]14863 	pop	ar2
      0054D3 D0 03            [24]14864 	pop	ar3
      0054D5 D0 05            [24]14865 	pop	ar5
                                  14866 ;	src\main.c:973: WATCHDOG;
      0054D7 D0 02            [24]14867 	pop	ar2
                                  14868 ;	src\main.c:212: phuttemp = (giotemp & 15) < 6?(giotemp & 15)+1:(60/(12-(giotemp & 15)));
      0054D9                      14869 00673$:
      0054D9 85*2F*31         [24]14870 	mov	_main_sloc1_1_0,_main_sloc0_1_0
                                  14871 ;	src\main.c:213: LCD_guidulieu((mode==0&&chop)?'_':phuttemp/10+'0');
      0054DC 90r00rF3         [24]14872 	mov	dptr,#_mode
      0054DF E0               [24]14873 	movx	a,@dptr
      0054E0 70 0B            [24]14874 	jnz	00674$
      0054E2 30*2B 08         [24]14875 	jnb	_chop,00674$
      0054E5 75*2F 5F         [24]14876 	mov	_main_sloc0_1_0,#0x5f
      0054E8 75*30 00         [24]14877 	mov	(_main_sloc0_1_0 + 1),#0x00
      0054EB 80 2B            [24]14878 	sjmp	00675$
      0054ED                      14879 00674$:
      0054ED C0 02            [24]14880 	push	ar2
      0054EF AA*31            [24]14881 	mov	r2,_main_sloc1_1_0
      0054F1 7C 00            [12]14882 	mov	r4,#0x00
      0054F3 75*00 0A         [24]14883 	mov	__divsint_PARM_2,#0x0a
                                  14884 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      0054F6 8C*01            [24]14885 	mov	(__divsint_PARM_2 + 1),r4
      0054F8 8A 82            [24]14886 	mov	dpl,r2
      0054FA 8C 83            [24]14887 	mov	dph,r4
      0054FC C0 05            [24]14888 	push	ar5
      0054FE C0 03            [24]14889 	push	ar3
      005500 12r00r00         [24]14890 	lcall	__divsint
      005503 AA 82            [24]14891 	mov	r2,dpl
      005505 AC 83            [24]14892 	mov	r4,dph
      005507 D0 03            [24]14893 	pop	ar3
      005509 D0 05            [24]14894 	pop	ar5
      00550B 74 30            [12]14895 	mov	a,#0x30
      00550D 2A               [12]14896 	add	a,r2
      00550E FA               [12]14897 	mov	r2,a
      00550F 8A*2F            [24]14898 	mov	_main_sloc0_1_0,r2
      005511 33               [12]14899 	rlc	a
      005512 95 E0            [12]14900 	subb	a,acc
      005514 F5*30            [12]14901 	mov	(_main_sloc0_1_0 + 1),a
                                  14902 ;	src\main.c:973: WATCHDOG;
      005516 D0 02            [24]14903 	pop	ar2
                                  14904 ;	src\main.c:213: LCD_guidulieu((mode==0&&chop)?'_':phuttemp/10+'0');
      005518                      14905 00675$:
      005518 85*2F 82         [24]14906 	mov	dpl,_main_sloc0_1_0
      00551B C0 05            [24]14907 	push	ar5
      00551D C0 03            [24]14908 	push	ar3
      00551F C0 02            [24]14909 	push	ar2
      005521 12r00r00         [24]14910 	lcall	_LCD_guidulieu
      005524 D0 02            [24]14911 	pop	ar2
      005526 D0 03            [24]14912 	pop	ar3
      005528 D0 05            [24]14913 	pop	ar5
                                  14914 ;	src\main.c:214: LCD_guidulieu((mode==0&&chop)?'_':phuttemp%10+'0');
      00552A 90r00rF3         [24]14915 	mov	dptr,#_mode
      00552D E0               [24]14916 	movx	a,@dptr
      00552E 70 0B            [24]14917 	jnz	00679$
      005530 30*2B 08         [24]14918 	jnb	_chop,00679$
      005533 75*2F 5F         [24]14919 	mov	_main_sloc0_1_0,#0x5f
      005536 75*30 00         [24]14920 	mov	(_main_sloc0_1_0 + 1),#0x00
      005539 80 2B            [24]14921 	sjmp	00680$
      00553B                      14922 00679$:
      00553B C0 02            [24]14923 	push	ar2
      00553D AA*31            [24]14924 	mov	r2,_main_sloc1_1_0
      00553F 7C 00            [12]14925 	mov	r4,#0x00
      005541 75*00 0A         [24]14926 	mov	__modsint_PARM_2,#0x0a
                                  14927 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      005544 8C*01            [24]14928 	mov	(__modsint_PARM_2 + 1),r4
      005546 8A 82            [24]14929 	mov	dpl,r2
      005548 8C 83            [24]14930 	mov	dph,r4
      00554A C0 05            [24]14931 	push	ar5
      00554C C0 03            [24]14932 	push	ar3
      00554E 12r00r00         [24]14933 	lcall	__modsint
      005551 AA 82            [24]14934 	mov	r2,dpl
      005553 AC 83            [24]14935 	mov	r4,dph
      005555 D0 03            [24]14936 	pop	ar3
      005557 D0 05            [24]14937 	pop	ar5
      005559 74 30            [12]14938 	mov	a,#0x30
      00555B 2A               [12]14939 	add	a,r2
      00555C FA               [12]14940 	mov	r2,a
      00555D 8A*2F            [24]14941 	mov	_main_sloc0_1_0,r2
      00555F 33               [12]14942 	rlc	a
      005560 95 E0            [12]14943 	subb	a,acc
      005562 F5*30            [12]14944 	mov	(_main_sloc0_1_0 + 1),a
                                  14945 ;	src\main.c:973: WATCHDOG;
      005564 D0 02            [24]14946 	pop	ar2
                                  14947 ;	src\main.c:214: LCD_guidulieu((mode==0&&chop)?'_':phuttemp%10+'0');
      005566                      14948 00680$:
      005566 85*2F 82         [24]14949 	mov	dpl,_main_sloc0_1_0
      005569 C0 05            [24]14950 	push	ar5
      00556B C0 03            [24]14951 	push	ar3
      00556D C0 02            [24]14952 	push	ar2
      00556F 12r00r00         [24]14953 	lcall	_LCD_guidulieu
                                  14954 ;	src\main.c:215: LCD_guichuoi(" T:");
      005572 90r0Br6F         [24]14955 	mov	dptr,#___str_129
      005575 75 F0 80         [24]14956 	mov	b,#0x80
      005578 12r00r00         [24]14957 	lcall	_LCD_guichuoi
      00557B D0 02            [24]14958 	pop	ar2
      00557D D0 03            [24]14959 	pop	ar3
      00557F D0 05            [24]14960 	pop	ar5
                                  14961 ;	src\main.c:216: LCD_guidulieu((mode==1&&chop)?'_':(((giotemp&96)>>5)+'0'));
      005581 90r00rF3         [24]14962 	mov	dptr,#_mode
      005584 E0               [24]14963 	movx	a,@dptr
      005585 FC               [12]14964 	mov	r4,a
      005586 BC 01 0B         [24]14965 	cjne	r4,#0x01,00684$
      005589 30*2B 08         [24]14966 	jnb	_chop,00684$
      00558C 75*2F 5F         [24]14967 	mov	_main_sloc0_1_0,#0x5f
      00558F 75*30 00         [24]14968 	mov	(_main_sloc0_1_0 + 1),#0x00
      005592 80 27            [24]14969 	sjmp	00685$
      005594                      14970 00684$:
      005594 C0 02            [24]14971 	push	ar2
      005596 74 60            [12]14972 	mov	a,#0x60
      005598 5B               [12]14973 	anl	a,r3
      005599 FA               [12]14974 	mov	r2,a
      00559A E4               [12]14975 	clr	a
      00559B 03               [12]14976 	rr	a
      00559C CA               [12]14977 	xch	a,r2
      00559D C4               [12]14978 	swap	a
      00559E 03               [12]14979 	rr	a
      00559F 54 07            [12]14980 	anl	a,#0x07
      0055A1 6A               [12]14981 	xrl	a,r2
      0055A2 CA               [12]14982 	xch	a,r2
      0055A3 54 07            [12]14983 	anl	a,#0x07
      0055A5 CA               [12]14984 	xch	a,r2
      0055A6 6A               [12]14985 	xrl	a,r2
      0055A7 CA               [12]14986 	xch	a,r2
      0055A8 30 E2 02         [24]14987 	jnb	acc.2,02435$
      0055AB 44 F8            [12]14988 	orl	a,#0xf8
      0055AD                      14989 02435$:
      0055AD FC               [12]14990 	mov	r4,a
      0055AE 74 30            [12]14991 	mov	a,#0x30
      0055B0 2A               [12]14992 	add	a,r2
      0055B1 FA               [12]14993 	mov	r2,a
      0055B2 8A*2F            [24]14994 	mov	_main_sloc0_1_0,r2
      0055B4 33               [12]14995 	rlc	a
      0055B5 95 E0            [12]14996 	subb	a,acc
      0055B7 F5*30            [12]14997 	mov	(_main_sloc0_1_0 + 1),a
                                  14998 ;	src\main.c:973: WATCHDOG;
      0055B9 D0 02            [24]14999 	pop	ar2
                                  15000 ;	src\main.c:216: LCD_guidulieu((mode==1&&chop)?'_':(((giotemp&96)>>5)+'0'));
      0055BB                      15001 00685$:
      0055BB 85*2F 82         [24]15002 	mov	dpl,_main_sloc0_1_0
      0055BE C0 05            [24]15003 	push	ar5
      0055C0 C0 03            [24]15004 	push	ar3
      0055C2 C0 02            [24]15005 	push	ar2
      0055C4 12r00r00         [24]15006 	lcall	_LCD_guidulieu
                                  15007 ;	src\main.c:217: LCD_guichuoi(" G:");
      0055C7 90r0Br73         [24]15008 	mov	dptr,#___str_130
      0055CA 75 F0 80         [24]15009 	mov	b,#0x80
      0055CD 12r00r00         [24]15010 	lcall	_LCD_guichuoi
      0055D0 D0 02            [24]15011 	pop	ar2
      0055D2 D0 03            [24]15012 	pop	ar3
      0055D4 D0 05            [24]15013 	pop	ar5
                                  15014 ;	src\main.c:218: LCD_guidulieu((mode==2&&chop)?'_':(((giotemp&16)>>4)+'0'));
      0055D6 90r00rF3         [24]15015 	mov	dptr,#_mode
      0055D9 E0               [24]15016 	movx	a,@dptr
      0055DA FC               [12]15017 	mov	r4,a
      0055DB BC 02 0B         [24]15018 	cjne	r4,#0x02,00689$
      0055DE 30*2B 08         [24]15019 	jnb	_chop,00689$
      0055E1 75*2F 5F         [24]15020 	mov	_main_sloc0_1_0,#0x5f
      0055E4 75*30 00         [24]15021 	mov	(_main_sloc0_1_0 + 1),#0x00
      0055E7 80 20            [24]15022 	sjmp	00690$
      0055E9                      15023 00689$:
      0055E9 53 03 10         [24]15024 	anl	ar3,#0x10
      0055EC E4               [12]15025 	clr	a
      0055ED CB               [12]15026 	xch	a,r3
      0055EE C4               [12]15027 	swap	a
      0055EF 54 0F            [12]15028 	anl	a,#0x0f
      0055F1 6B               [12]15029 	xrl	a,r3
      0055F2 CB               [12]15030 	xch	a,r3
      0055F3 54 0F            [12]15031 	anl	a,#0x0f
      0055F5 CB               [12]15032 	xch	a,r3
      0055F6 6B               [12]15033 	xrl	a,r3
      0055F7 CB               [12]15034 	xch	a,r3
      0055F8 30 E3 02         [24]15035 	jnb	acc.3,02439$
      0055FB 44 F0            [12]15036 	orl	a,#0xf0
      0055FD                      15037 02439$:
      0055FD FD               [12]15038 	mov	r5,a
      0055FE 74 30            [12]15039 	mov	a,#0x30
      005600 2B               [12]15040 	add	a,r3
      005601 FB               [12]15041 	mov	r3,a
      005602 8B*2F            [24]15042 	mov	_main_sloc0_1_0,r3
      005604 33               [12]15043 	rlc	a
      005605 95 E0            [12]15044 	subb	a,acc
      005607 F5*30            [12]15045 	mov	(_main_sloc0_1_0 + 1),a
      005609                      15046 00690$:
      005609 85*2F 82         [24]15047 	mov	dpl,_main_sloc0_1_0
      00560C C0 02            [24]15048 	push	ar2
      00560E 12r00r00         [24]15049 	lcall	_LCD_guidulieu
                                  15050 ;	src\main.c:219: LCD_guichuoi(" M:");
      005611 90r0Br77         [24]15051 	mov	dptr,#___str_131
      005614 75 F0 80         [24]15052 	mov	b,#0x80
      005617 12r00r00         [24]15053 	lcall	_LCD_guichuoi
      00561A D0 02            [24]15054 	pop	ar2
                                  15055 ;	src\main.c:220: LCD_guidulieu((mode==3&&chop)?'_':((mp3temp&4)>>2)+'0');
      00561C 90r00rF3         [24]15056 	mov	dptr,#_mode
      00561F E0               [24]15057 	movx	a,@dptr
      005620 FD               [12]15058 	mov	r5,a
      005621 BD 03 09         [24]15059 	cjne	r5,#0x03,00694$
      005624 30*2B 06         [24]15060 	jnb	_chop,00694$
      005627 7C 5F            [12]15061 	mov	r4,#0x5f
      005629 7D 00            [12]15062 	mov	r5,#0x00
      00562B 80 1F            [24]15063 	sjmp	00695$
      00562D                      15064 00694$:
      00562D C0 02            [24]15065 	push	ar2
      00562F AA*2C            [24]15066 	mov	r2,_main_mp3temp_131073_263
      005631 53 02 04         [24]15067 	anl	ar2,#0x04
      005634 E4               [12]15068 	clr	a
      005635 A2 E7            [12]15069 	mov	c,acc.7
      005637 13               [12]15070 	rrc	a
      005638 CA               [12]15071 	xch	a,r2
      005639 13               [12]15072 	rrc	a
      00563A CA               [12]15073 	xch	a,r2
      00563B A2 E7            [12]15074 	mov	c,acc.7
      00563D 13               [12]15075 	rrc	a
      00563E CA               [12]15076 	xch	a,r2
      00563F 13               [12]15077 	rrc	a
      005640 CA               [12]15078 	xch	a,r2
      005641 FB               [12]15079 	mov	r3,a
      005642 74 30            [12]15080 	mov	a,#0x30
      005644 2A               [12]15081 	add	a,r2
      005645 FC               [12]15082 	mov	r4,a
      005646 33               [12]15083 	rlc	a
      005647 95 E0            [12]15084 	subb	a,acc
      005649 FD               [12]15085 	mov	r5,a
                                  15086 ;	src\main.c:973: WATCHDOG;
      00564A D0 02            [24]15087 	pop	ar2
                                  15088 ;	src\main.c:220: LCD_guidulieu((mode==3&&chop)?'_':((mp3temp&4)>>2)+'0');
      00564C                      15089 00695$:
      00564C 8C 82            [24]15090 	mov	dpl,r4
      00564E C0 02            [24]15091 	push	ar2
      005650 12r00r00         [24]15092 	lcall	_LCD_guidulieu
      005653 D0 02            [24]15093 	pop	ar2
      005655                      15094 00174$:
                                  15095 ;	src\main.c:222: if(phim_mode_nhan){
                                  15096 ;	src\main.c:223: phim_mode_nhan = 0;
                                  15097 ;	assignBit
      005655 10*20 03         [24]15098 	jbc	_phim_mode_nhan,02443$
      005658 02r56rF9         [24]15099 	ljmp	00181$
      00565B                      15100 02443$:
                                  15101 ;	src\main.c:224: mode++;
      00565B 90r00rF3         [24]15102 	mov	dptr,#_mode
      00565E E0               [24]15103 	movx	a,@dptr
      00565F 24 01            [12]15104 	add	a,#0x01
      005661 F0               [24]15105 	movx	@dptr,a
                                  15106 ;	src\main.c:225: switch(mode){
      005662 E0               [24]15107 	movx	a,@dptr
      005663 FD               [12]15108 	mov	r5,a
      005664 BD 01 02         [24]15109 	cjne	r5,#0x01,02444$
      005667 80 12            [24]15110 	sjmp	00175$
      005669                      15111 02444$:
      005669 BD 02 02         [24]15112 	cjne	r5,#0x02,02445$
      00566C 80 2D            [24]15113 	sjmp	00176$
      00566E                      15114 02445$:
      00566E BD 03 02         [24]15115 	cjne	r5,#0x03,02446$
      005671 80 46            [24]15116 	sjmp	00177$
      005673                      15117 02446$:
      005673 BD 04 02         [24]15118 	cjne	r5,#0x04,02447$
      005676 80 5B            [24]15119 	sjmp	00178$
      005678                      15120 02447$:
      005678 02r56rF9         [24]15121 	ljmp	00181$
                                  15122 ;	src\main.c:226: case 1:sub_mode = (giotemp&96)>>5;break;
      00567B                      15123 00175$:
      00567B AB*2A            [24]15124 	mov	r3,_main_giotemp_65536_253
      00567D 53 03 60         [24]15125 	anl	ar3,#0x60
      005680 E4               [12]15126 	clr	a
      005681 03               [12]15127 	rr	a
      005682 CB               [12]15128 	xch	a,r3
      005683 C4               [12]15129 	swap	a
      005684 03               [12]15130 	rr	a
      005685 54 07            [12]15131 	anl	a,#0x07
      005687 6B               [12]15132 	xrl	a,r3
      005688 CB               [12]15133 	xch	a,r3
      005689 54 07            [12]15134 	anl	a,#0x07
      00568B CB               [12]15135 	xch	a,r3
      00568C 6B               [12]15136 	xrl	a,r3
      00568D CB               [12]15137 	xch	a,r3
      00568E 30 E2 02         [24]15138 	jnb	acc.2,02448$
      005691 44 F8            [12]15139 	orl	a,#0xf8
      005693                      15140 02448$:
      005693 FD               [12]15141 	mov	r5,a
      005694 90r00rF4         [24]15142 	mov	dptr,#_sub_mode
      005697 EB               [12]15143 	mov	a,r3
      005698 F0               [24]15144 	movx	@dptr,a
                                  15145 ;	src\main.c:227: case 2:sub_mode = (giotemp&16)>>4;break;
      005699 80 5E            [24]15146 	sjmp	00181$
      00569B                      15147 00176$:
      00569B AB*2A            [24]15148 	mov	r3,_main_giotemp_65536_253
      00569D 53 03 10         [24]15149 	anl	ar3,#0x10
      0056A0 E4               [12]15150 	clr	a
      0056A1 CB               [12]15151 	xch	a,r3
      0056A2 C4               [12]15152 	swap	a
      0056A3 54 0F            [12]15153 	anl	a,#0x0f
      0056A5 6B               [12]15154 	xrl	a,r3
      0056A6 CB               [12]15155 	xch	a,r3
      0056A7 54 0F            [12]15156 	anl	a,#0x0f
      0056A9 CB               [12]15157 	xch	a,r3
      0056AA 6B               [12]15158 	xrl	a,r3
      0056AB CB               [12]15159 	xch	a,r3
      0056AC 30 E3 02         [24]15160 	jnb	acc.3,02449$
      0056AF 44 F0            [12]15161 	orl	a,#0xf0
      0056B1                      15162 02449$:
      0056B1 FD               [12]15163 	mov	r5,a
      0056B2 90r00rF4         [24]15164 	mov	dptr,#_sub_mode
      0056B5 EB               [12]15165 	mov	a,r3
      0056B6 F0               [24]15166 	movx	@dptr,a
                                  15167 ;	src\main.c:228: case 3:sub_mode = (mp3temp&4)>>2;break;
      0056B7 80 40            [24]15168 	sjmp	00181$
      0056B9                      15169 00177$:
      0056B9 AC*2C            [24]15170 	mov	r4,_main_mp3temp_131073_263
      0056BB 53 04 04         [24]15171 	anl	ar4,#0x04
      0056BE E4               [12]15172 	clr	a
      0056BF A2 E7            [12]15173 	mov	c,acc.7
      0056C1 13               [12]15174 	rrc	a
      0056C2 CC               [12]15175 	xch	a,r4
      0056C3 13               [12]15176 	rrc	a
      0056C4 CC               [12]15177 	xch	a,r4
      0056C5 A2 E7            [12]15178 	mov	c,acc.7
      0056C7 13               [12]15179 	rrc	a
      0056C8 CC               [12]15180 	xch	a,r4
      0056C9 13               [12]15181 	rrc	a
      0056CA CC               [12]15182 	xch	a,r4
      0056CB FD               [12]15183 	mov	r5,a
      0056CC 90r00rF4         [24]15184 	mov	dptr,#_sub_mode
      0056CF EC               [12]15185 	mov	a,r4
      0056D0 F0               [24]15186 	movx	@dptr,a
                                  15187 ;	src\main.c:229: case 4:IAP_docxoasector1();
      0056D1 80 26            [24]15188 	sjmp	00181$
      0056D3                      15189 00178$:
      0056D3 C0 02            [24]15190 	push	ar2
      0056D5 12r00r00         [24]15191 	lcall	_IAP_docxoasector1
                                  15192 ;	src\main.c:230: eeprom_buf[MOTOR_EEPROM] &= 0xef;
      0056D8 90r00rBC         [24]15193 	mov	dptr,#_eeprom_buf
      0056DB E0               [24]15194 	movx	a,@dptr
      0056DC 54 EF            [12]15195 	anl	a,#0xef
      0056DE F0               [24]15196 	movx	@dptr,a
                                  15197 ;	src\main.c:231: eeprom_buf[DEBUG_EEPROM] =  giotemp;
      0056DF 90r00rDA         [24]15198 	mov	dptr,#(_eeprom_buf + 0x001e)
      0056E2 E5*2A            [12]15199 	mov	a,_main_giotemp_65536_253
      0056E4 F0               [24]15200 	movx	@dptr,a
                                  15201 ;	src\main.c:232: eeprom_buf[MP3_EEPROM] =  mp3temp;
      0056E5 90r00rCC         [24]15202 	mov	dptr,#(_eeprom_buf + 0x0010)
      0056E8 E5*2C            [12]15203 	mov	a,_main_mp3temp_131073_263
      0056EA F0               [24]15204 	movx	@dptr,a
                                  15205 ;	src\main.c:234: IAP_ghisector1();
      0056EB 12r00r00         [24]15206 	lcall	_IAP_ghisector1
                                  15207 ;	src\main.c:235: IAP_xoasector(SECTOR2);
      0056EE 90 02 00         [24]15208 	mov	dptr,#0x0200
      0056F1 12r00r00         [24]15209 	lcall	_IAP_xoasector
      0056F4 D0 02            [24]15210 	pop	ar2
                                  15211 ;	src\main.c:236: IAP_CONTR = 0x60;
      0056F6 75 C7 60         [24]15212 	mov	_IAP_CONTR,#0x60
                                  15213 ;	src\main.c:237: }
      0056F9                      15214 00181$:
                                  15215 ;	src\main.c:239: if(phim_back_nhan){
                                  15216 ;	src\main.c:240: phim_back_nhan = 0;
                                  15217 ;	assignBit
      0056F9 10*24 02         [24]15218 	jbc	_phim_back_nhan,02450$
      0056FC 80 65            [24]15219 	sjmp	00189$
      0056FE                      15220 02450$:
                                  15221 ;	src\main.c:241: if(mode) mode--;
      0056FE 90r00rF3         [24]15222 	mov	dptr,#_mode
      005701 E0               [24]15223 	movx	a,@dptr
      005702 FD               [12]15224 	mov	r5,a
      005703 E0               [24]15225 	movx	a,@dptr
      005704 60 06            [24]15226 	jz	00183$
      005706 ED               [12]15227 	mov	a,r5
      005707 14               [12]15228 	dec	a
      005708 90r00rF3         [24]15229 	mov	dptr,#_mode
      00570B F0               [24]15230 	movx	@dptr,a
      00570C                      15231 00183$:
                                  15232 ;	src\main.c:242: switch(mode){
      00570C 90r00rF3         [24]15233 	mov	dptr,#_mode
      00570F E0               [24]15234 	movx	a,@dptr
      005710 FD               [12]15235 	mov	r5,a
      005711 60 0A            [24]15236 	jz	00184$
      005713 BD 01 02         [24]15237 	cjne	r5,#0x01,02453$
      005716 80 0F            [24]15238 	sjmp	00185$
      005718                      15239 02453$:
                                  15240 ;	src\main.c:243: case 0:sub_mode = giotemp & 15;break;
      005718 BD 02 48         [24]15241 	cjne	r5,#0x02,00189$
      00571B 80 2A            [24]15242 	sjmp	00186$
      00571D                      15243 00184$:
      00571D 90r00rF4         [24]15244 	mov	dptr,#_sub_mode
      005720 74 0F            [12]15245 	mov	a,#0x0f
      005722 55*2A            [12]15246 	anl	a,_main_giotemp_65536_253
      005724 F0               [24]15247 	movx	@dptr,a
                                  15248 ;	src\main.c:244: case 1:sub_mode = (giotemp&96)>>5;break;
      005725 80 3C            [24]15249 	sjmp	00189$
      005727                      15250 00185$:
      005727 AB*2A            [24]15251 	mov	r3,_main_giotemp_65536_253
      005729 53 03 60         [24]15252 	anl	ar3,#0x60
      00572C E4               [12]15253 	clr	a
      00572D 03               [12]15254 	rr	a
      00572E CB               [12]15255 	xch	a,r3
      00572F C4               [12]15256 	swap	a
      005730 03               [12]15257 	rr	a
      005731 54 07            [12]15258 	anl	a,#0x07
      005733 6B               [12]15259 	xrl	a,r3
      005734 CB               [12]15260 	xch	a,r3
      005735 54 07            [12]15261 	anl	a,#0x07
      005737 CB               [12]15262 	xch	a,r3
      005738 6B               [12]15263 	xrl	a,r3
      005739 CB               [12]15264 	xch	a,r3
      00573A 30 E2 02         [24]15265 	jnb	acc.2,02455$
      00573D 44 F8            [12]15266 	orl	a,#0xf8
      00573F                      15267 02455$:
      00573F FD               [12]15268 	mov	r5,a
      005740 90r00rF4         [24]15269 	mov	dptr,#_sub_mode
      005743 EB               [12]15270 	mov	a,r3
      005744 F0               [24]15271 	movx	@dptr,a
                                  15272 ;	src\main.c:245: case 2:sub_mode = (giotemp&16)>>4;break;
      005745 80 1C            [24]15273 	sjmp	00189$
      005747                      15274 00186$:
      005747 AB*2A            [24]15275 	mov	r3,_main_giotemp_65536_253
      005749 53 03 10         [24]15276 	anl	ar3,#0x10
      00574C E4               [12]15277 	clr	a
      00574D CB               [12]15278 	xch	a,r3
      00574E C4               [12]15279 	swap	a
      00574F 54 0F            [12]15280 	anl	a,#0x0f
      005751 6B               [12]15281 	xrl	a,r3
      005752 CB               [12]15282 	xch	a,r3
      005753 54 0F            [12]15283 	anl	a,#0x0f
      005755 CB               [12]15284 	xch	a,r3
      005756 6B               [12]15285 	xrl	a,r3
      005757 CB               [12]15286 	xch	a,r3
      005758 30 E3 02         [24]15287 	jnb	acc.3,02456$
      00575B 44 F0            [12]15288 	orl	a,#0xf0
      00575D                      15289 02456$:
      00575D FD               [12]15290 	mov	r5,a
      00575E 90r00rF4         [24]15291 	mov	dptr,#_sub_mode
      005761 EB               [12]15292 	mov	a,r3
      005762 F0               [24]15293 	movx	@dptr,a
                                  15294 ;	src\main.c:246: }
      005763                      15295 00189$:
                                  15296 ;	src\main.c:248: if(phim_cong_nhan){
                                  15297 ;	src\main.c:249: phim_cong_nhan = 0;
                                  15298 ;	assignBit
      005763 10*28 03         [24]15299 	jbc	_phim_cong_nhan,02457$
      005766 02r54r69         [24]15300 	ljmp	00248$
      005769                      15301 02457$:
                                  15302 ;	src\main.c:250: sub_mode++;
      005769 90r00rF4         [24]15303 	mov	dptr,#_sub_mode
      00576C E0               [24]15304 	movx	a,@dptr
      00576D 24 01            [12]15305 	add	a,#0x01
      00576F F0               [24]15306 	movx	@dptr,a
                                  15307 ;	src\main.c:251: switch(mode){
      005770 90r00rF3         [24]15308 	mov	dptr,#_mode
      005773 E0               [24]15309 	movx	a,@dptr
      005774 FD               [12]15310 	mov  r5,a
      005775 24 FC            [12]15311 	add	a,#0xff - 0x03
      005777 50 03            [24]15312 	jnc	02458$
      005779 02r54r69         [24]15313 	ljmp	00248$
      00577C                      15314 02458$:
      00577C ED               [12]15315 	mov	a,r5
      00577D 2D               [12]15316 	add	a,r5
                                  15317 ;	src\main.c:252: case 0:if(sub_mode>11) sub_mode = 0;giotemp = giotemp & 0xf0 | sub_mode; break;
      00577E 90r57r82         [24]15318 	mov	dptr,#02459$
      005781 73               [24]15319 	jmp	@a+dptr
      005782                      15320 02459$:
      005782 80 06            [24]15321 	sjmp	00190$
      005784 80 21            [24]15322 	sjmp	00193$
      005786 80 40            [24]15323 	sjmp	00196$
      005788 80 5E            [24]15324 	sjmp	00199$
      00578A                      15325 00190$:
      00578A 90r00rF4         [24]15326 	mov	dptr,#_sub_mode
      00578D E0               [24]15327 	movx	a,@dptr
      00578E 24 F4            [12]15328 	add	a,#0xff - 0x0b
      005790 50 05            [24]15329 	jnc	00192$
      005792 90r00rF4         [24]15330 	mov	dptr,#_sub_mode
      005795 E4               [12]15331 	clr	a
      005796 F0               [24]15332 	movx	@dptr,a
      005797                      15333 00192$:
      005797 74 F0            [12]15334 	mov	a,#0xf0
      005799 55*2A            [12]15335 	anl	a,_main_giotemp_65536_253
      00579B FD               [12]15336 	mov	r5,a
      00579C 90r00rF4         [24]15337 	mov	dptr,#_sub_mode
      00579F E0               [24]15338 	movx	a,@dptr
      0057A0 FC               [12]15339 	mov	r4,a
      0057A1 4D               [12]15340 	orl	a,r5
      0057A2 F5*2A            [12]15341 	mov	_main_giotemp_65536_253,a
      0057A4 02r54r69         [24]15342 	ljmp	00248$
                                  15343 ;	src\main.c:253: case 1:if(sub_mode>3) sub_mode = 0;giotemp = giotemp & 0x9f | (sub_mode<<5); break;
      0057A7                      15344 00193$:
      0057A7 90r00rF4         [24]15345 	mov	dptr,#_sub_mode
      0057AA E0               [24]15346 	movx	a,@dptr
      0057AB 24 FC            [12]15347 	add	a,#0xff - 0x03
      0057AD 50 05            [24]15348 	jnc	00195$
      0057AF 90r00rF4         [24]15349 	mov	dptr,#_sub_mode
      0057B2 E4               [12]15350 	clr	a
      0057B3 F0               [24]15351 	movx	@dptr,a
      0057B4                      15352 00195$:
      0057B4 74 9F            [12]15353 	mov	a,#0x9f
      0057B6 55*2A            [12]15354 	anl	a,_main_giotemp_65536_253
      0057B8 FD               [12]15355 	mov	r5,a
      0057B9 90r00rF4         [24]15356 	mov	dptr,#_sub_mode
      0057BC E0               [24]15357 	movx	a,@dptr
      0057BD C4               [12]15358 	swap	a
      0057BE 23               [12]15359 	rl	a
      0057BF 54 E0            [12]15360 	anl	a,#0xe0
      0057C1 FC               [12]15361 	mov	r4,a
      0057C2 4D               [12]15362 	orl	a,r5
      0057C3 F5*2A            [12]15363 	mov	_main_giotemp_65536_253,a
      0057C5 02r54r69         [24]15364 	ljmp	00248$
                                  15365 ;	src\main.c:254: case 2:if(sub_mode>1) sub_mode = 0;giotemp = giotemp & 0xef | (sub_mode<<4); break;
      0057C8                      15366 00196$:
      0057C8 90r00rF4         [24]15367 	mov	dptr,#_sub_mode
      0057CB E0               [24]15368 	movx	a,@dptr
      0057CC 24 FE            [12]15369 	add	a,#0xff - 0x01
      0057CE 50 05            [24]15370 	jnc	00198$
      0057D0 90r00rF4         [24]15371 	mov	dptr,#_sub_mode
      0057D3 E4               [12]15372 	clr	a
      0057D4 F0               [24]15373 	movx	@dptr,a
      0057D5                      15374 00198$:
      0057D5 74 EF            [12]15375 	mov	a,#0xef
      0057D7 55*2A            [12]15376 	anl	a,_main_giotemp_65536_253
      0057D9 FD               [12]15377 	mov	r5,a
      0057DA 90r00rF4         [24]15378 	mov	dptr,#_sub_mode
      0057DD E0               [24]15379 	movx	a,@dptr
      0057DE C4               [12]15380 	swap	a
      0057DF 54 F0            [12]15381 	anl	a,#0xf0
      0057E1 FC               [12]15382 	mov	r4,a
      0057E2 4D               [12]15383 	orl	a,r5
      0057E3 F5*2A            [12]15384 	mov	_main_giotemp_65536_253,a
      0057E5 02r54r69         [24]15385 	ljmp	00248$
                                  15386 ;	src\main.c:255: case 3:if(sub_mode>1) sub_mode = 0;mp3temp = mp3temp & 0x03 | (sub_mode<<2); break;
      0057E8                      15387 00199$:
      0057E8 90r00rF4         [24]15388 	mov	dptr,#_sub_mode
      0057EB E0               [24]15389 	movx	a,@dptr
      0057EC 24 FE            [12]15390 	add	a,#0xff - 0x01
      0057EE 50 05            [24]15391 	jnc	00201$
      0057F0 90r00rF4         [24]15392 	mov	dptr,#_sub_mode
      0057F3 E4               [12]15393 	clr	a
      0057F4 F0               [24]15394 	movx	@dptr,a
      0057F5                      15395 00201$:
      0057F5 74 03            [12]15396 	mov	a,#0x03
      0057F7 55*2C            [12]15397 	anl	a,_main_mp3temp_131073_263
      0057F9 FD               [12]15398 	mov	r5,a
      0057FA 90r00rF4         [24]15399 	mov	dptr,#_sub_mode
      0057FD E0               [24]15400 	movx	a,@dptr
      0057FE 25 E0            [12]15401 	add	a,acc
      005800 25 E0            [12]15402 	add	a,acc
      005802 FC               [12]15403 	mov	r4,a
      005803 4D               [12]15404 	orl	a,r5
      005804 F5*2C            [12]15405 	mov	_main_mp3temp_131073_263,a
                                  15406 ;	src\main.c:256: }
      005806 02r54r69         [24]15407 	ljmp	00248$
      005809                      15408 00245$:
                                  15409 ;	src\main.c:260: switch(mode){
      005809 90r00rF3         [24]15410 	mov	dptr,#_mode
      00580C E0               [24]15411 	movx	a,@dptr
      00580D FD               [12]15412 	mov  r5,a
      00580E 24 FA            [12]15413 	add	a,#0xff - 0x05
      005810 50 03            [24]15414 	jnc	02464$
      005812 02r59r8A         [24]15415 	ljmp	00222$
      005815                      15416 02464$:
      005815 ED               [12]15417 	mov	a,r5
      005816 2D               [12]15418 	add	a,r5
      005817 2D               [12]15419 	add	a,r5
      005818 90r58r1C         [24]15420 	mov	dptr,#02465$
      00581B 73               [24]15421 	jmp	@a+dptr
      00581C                      15422 02465$:
      00581C 02r58r2E         [24]15423 	ljmp	00205$
      00581F 02r58r44         [24]15424 	ljmp	00206$
      005822 02r58r89         [24]15425 	ljmp	00209$
      005825 02r58rC7         [24]15426 	ljmp	00212$
      005828 02r59r03         [24]15427 	ljmp	00215$
      00582B 02r59r1B         [24]15428 	ljmp	00216$
                                  15429 ;	src\main.c:261: case 0:
      00582E                      15430 00205$:
                                  15431 ;	src\main.c:262: sub_mode = so_motor-1;
      00582E 90r01r2E         [24]15432 	mov	dptr,#_so_motor
      005831 E0               [24]15433 	movx	a,@dptr
      005832 14               [12]15434 	dec	a
      005833 90r00rF4         [24]15435 	mov	dptr,#_sub_mode
      005836 F0               [24]15436 	movx	@dptr,a
                                  15437 ;	src\main.c:263: LCD_guilenh(0xc4); 
      005837 75 82 C4         [24]15438 	mov	dpl,#0xc4
      00583A C0 02            [24]15439 	push	ar2
      00583C 12r00r00         [24]15440 	lcall	_LCD_guilenh
      00583F D0 02            [24]15441 	pop	ar2
                                  15442 ;	src\main.c:264: break;
      005841 02r59r8A         [24]15443 	ljmp	00222$
                                  15444 ;	src\main.c:265: case 1:
      005844                      15445 00206$:
                                  15446 ;	src\main.c:266: sub_mode = may_dc;
      005844 90r00rF4         [24]15447 	mov	dptr,#_sub_mode
      005847 A2*32            [12]15448 	mov	c,_may_dc
      005849 E4               [12]15449 	clr	a
      00584A 33               [12]15450 	rlc	a
      00584B F0               [24]15451 	movx	@dptr,a
                                  15452 ;	src\main.c:267: LCD_noblink(); 
      00584C C0 02            [24]15453 	push	ar2
      00584E 12r00r00         [24]15454 	lcall	_LCD_noblink
      005851 D0 02            [24]15455 	pop	ar2
                                  15456 ;	src\main.c:268: if(lcd_update_chop){
                                  15457 ;	src\main.c:269: lcd_update_chop = 0;
                                  15458 ;	assignBit
      005853 10*3D 03         [24]15459 	jbc	_lcd_update_chop,02466$
      005856 02r59r8A         [24]15460 	ljmp	00222$
      005859                      15461 02466$:
                                  15462 ;	src\main.c:270: LCD_guichuoi(chop?"\305 __ ":(may_dc?"\305 DC ":"\305 ST "));
      005859 30*2B 06         [24]15463 	jnb	_chop,00699$
      00585C 7Cr7B            [12]15464 	mov	r4,#___str_132
      00585E 7Ds0B            [12]15465 	mov	r5,#(___str_132 >> 8)
      005860 80 15            [24]15466 	sjmp	00700$
      005862                      15467 00699$:
      005862 30*32 08         [24]15468 	jnb	_may_dc,00701$
      005865 75*2Fr4F         [24]15469 	mov	_main_sloc0_1_0,#___str_123
      005868 75*30s0B         [24]15470 	mov	(_main_sloc0_1_0 + 1),#(___str_123 >> 8)
      00586B 80 06            [24]15471 	sjmp	00702$
      00586D                      15472 00701$:
      00586D 75*2Fr55         [24]15473 	mov	_main_sloc0_1_0,#___str_124
      005870 75*30s0B         [24]15474 	mov	(_main_sloc0_1_0 + 1),#(___str_124 >> 8)
      005873                      15475 00702$:
      005873 AC*2F            [24]15476 	mov	r4,_main_sloc0_1_0
      005875 AD*30            [24]15477 	mov	r5,(_main_sloc0_1_0 + 1)
      005877                      15478 00700$:
      005877 7B 80            [12]15479 	mov	r3,#0x80
      005879 8C 82            [24]15480 	mov	dpl,r4
      00587B 8D 83            [24]15481 	mov	dph,r5
      00587D 8B F0            [24]15482 	mov	b,r3
      00587F C0 02            [24]15483 	push	ar2
      005881 12r00r00         [24]15484 	lcall	_LCD_guichuoi
      005884 D0 02            [24]15485 	pop	ar2
                                  15486 ;	src\main.c:272: break;
      005886 02r59r8A         [24]15487 	ljmp	00222$
                                  15488 ;	src\main.c:273: case 2:
      005889                      15489 00209$:
                                  15490 ;	src\main.c:274: sub_mode = atmel_phat;
      005889 90r00rF4         [24]15491 	mov	dptr,#_sub_mode
      00588C A2*33            [12]15492 	mov	c,_atmel_phat
      00588E E4               [12]15493 	clr	a
      00588F 33               [12]15494 	rlc	a
      005890 F0               [24]15495 	movx	@dptr,a
                                  15496 ;	src\main.c:275: if(lcd_update_chop){
                                  15497 ;	src\main.c:276: lcd_update_chop = 0;
                                  15498 ;	assignBit
      005891 10*3D 03         [24]15499 	jbc	_lcd_update_chop,02469$
      005894 02r59r8A         [24]15500 	ljmp	00222$
      005897                      15501 02469$:
                                  15502 ;	src\main.c:277: LCD_guichuoi(chop?"\311___":(atmel_phat?"\311C55 ":"\311STC "));
      005897 30*2B 06         [24]15503 	jnb	_chop,00703$
      00589A 7Cr81            [12]15504 	mov	r4,#___str_133
      00589C 7Ds0B            [12]15505 	mov	r5,#(___str_133 >> 8)
      00589E 80 15            [24]15506 	sjmp	00704$
      0058A0                      15507 00703$:
      0058A0 30*33 08         [24]15508 	jnb	_atmel_phat,00705$
      0058A3 75*2Fr5B         [24]15509 	mov	_main_sloc0_1_0,#___str_125
      0058A6 75*30s0B         [24]15510 	mov	(_main_sloc0_1_0 + 1),#(___str_125 >> 8)
      0058A9 80 06            [24]15511 	sjmp	00706$
      0058AB                      15512 00705$:
      0058AB 75*2Fr61         [24]15513 	mov	_main_sloc0_1_0,#___str_126
      0058AE 75*30s0B         [24]15514 	mov	(_main_sloc0_1_0 + 1),#(___str_126 >> 8)
      0058B1                      15515 00706$:
      0058B1 AC*2F            [24]15516 	mov	r4,_main_sloc0_1_0
      0058B3 AD*30            [24]15517 	mov	r5,(_main_sloc0_1_0 + 1)
      0058B5                      15518 00704$:
      0058B5 7B 80            [12]15519 	mov	r3,#0x80
      0058B7 8C 82            [24]15520 	mov	dpl,r4
      0058B9 8D 83            [24]15521 	mov	dph,r5
      0058BB 8B F0            [24]15522 	mov	b,r3
      0058BD C0 02            [24]15523 	push	ar2
      0058BF 12r00r00         [24]15524 	lcall	_LCD_guichuoi
      0058C2 D0 02            [24]15525 	pop	ar2
                                  15526 ;	src\main.c:279: break;
      0058C4 02r59r8A         [24]15527 	ljmp	00222$
                                  15528 ;	src\main.c:280: case 3:
      0058C7                      15529 00212$:
                                  15530 ;	src\main.c:281: sub_mode = toc_do_motor_step;
      0058C7 90r00rEC         [24]15531 	mov	dptr,#_toc_do_motor_step
      0058CA E0               [24]15532 	movx	a,@dptr
      0058CB 90r00rF4         [24]15533 	mov	dptr,#_sub_mode
      0058CE F0               [24]15534 	movx	@dptr,a
                                  15535 ;	src\main.c:282: if(lcd_update_chop){
                                  15536 ;	src\main.c:283: lcd_update_chop = 0;
                                  15537 ;	assignBit
      0058CF 10*3D 03         [24]15538 	jbc	_lcd_update_chop,02472$
      0058D2 02r59r8A         [24]15539 	ljmp	00222$
      0058D5                      15540 02472$:
                                  15541 ;	src\main.c:284: LCD_guichuoi("\315S:");
      0058D5 90r0Br67         [24]15542 	mov	dptr,#___str_127
      0058D8 75 F0 80         [24]15543 	mov	b,#0x80
      0058DB C0 02            [24]15544 	push	ar2
      0058DD 12r00r00         [24]15545 	lcall	_LCD_guichuoi
      0058E0 D0 02            [24]15546 	pop	ar2
                                  15547 ;	src\main.c:285: LCD_guidulieu(chop?'_':(toc_do_motor_step+'0'));
      0058E2 30*2B 06         [24]15548 	jnb	_chop,00707$
      0058E5 7C 5F            [12]15549 	mov	r4,#0x5f
      0058E7 7D 00            [12]15550 	mov	r5,#0x00
      0058E9 80 0C            [24]15551 	sjmp	00708$
      0058EB                      15552 00707$:
      0058EB 90r00rEC         [24]15553 	mov	dptr,#_toc_do_motor_step
      0058EE E0               [24]15554 	movx	a,@dptr
      0058EF 24 30            [12]15555 	add	a,#0x30
      0058F1 FB               [12]15556 	mov	r3,a
      0058F2 FC               [12]15557 	mov	r4,a
      0058F3 33               [12]15558 	rlc	a
      0058F4 95 E0            [12]15559 	subb	a,acc
      0058F6 FD               [12]15560 	mov	r5,a
      0058F7                      15561 00708$:
      0058F7 8C 82            [24]15562 	mov	dpl,r4
      0058F9 C0 02            [24]15563 	push	ar2
      0058FB 12r00r00         [24]15564 	lcall	_LCD_guidulieu
      0058FE D0 02            [24]15565 	pop	ar2
                                  15566 ;	src\main.c:287: break;
      005900 02r59r8A         [24]15567 	ljmp	00222$
                                  15568 ;	src\main.c:288: case 4:
      005903                      15569 00215$:
                                  15570 ;	src\main.c:289: LCD_guichuoi("\200      SAVE      ");
      005903 90r0Br86         [24]15571 	mov	dptr,#___str_134
      005906 75 F0 80         [24]15572 	mov	b,#0x80
      005909 C0 02            [24]15573 	push	ar2
      00590B 12r00r00         [24]15574 	lcall	_LCD_guichuoi
                                  15575 ;	src\main.c:290: LCD_guichuoi("\300MODE:OK    RS:BO");
      00590E 90r0Br98         [24]15576 	mov	dptr,#___str_135
      005911 75 F0 80         [24]15577 	mov	b,#0x80
      005914 12r00r00         [24]15578 	lcall	_LCD_guichuoi
      005917 D0 02            [24]15579 	pop	ar2
                                  15580 ;	src\main.c:291: break;
                                  15581 ;	src\main.c:292: case 5:
      005919 80 6F            [24]15582 	sjmp	00222$
      00591B                      15583 00216$:
                                  15584 ;	src\main.c:293: phuttemp = (i & 0x10);
      00591B 74 10            [12]15585 	mov	a,#0x10
      00591D 5A               [12]15586 	anl	a,r2
      00591E FD               [12]15587 	mov	r5,a
                                  15588 ;	src\main.c:294: phuttemp += (so_motor-1);
      00591F 90r01r2E         [24]15589 	mov	dptr,#_so_motor
      005922 E0               [24]15590 	movx	a,@dptr
      005923 FC               [12]15591 	mov	r4,a
      005924 1C               [12]15592 	dec	r4
      005925 EC               [12]15593 	mov	a,r4
      005926 2D               [12]15594 	add	a,r5
      005927 FD               [12]15595 	mov	r5,a
                                  15596 ;	src\main.c:295: phuttemp += (may_dc?4:0); 
      005928 30*32 06         [24]15597 	jnb	_may_dc,00709$
      00592B 7B 04            [12]15598 	mov	r3,#0x04
      00592D 7C 00            [12]15599 	mov	r4,#0x00
      00592F 80 04            [24]15600 	sjmp	00710$
      005931                      15601 00709$:
      005931 7B 00            [12]15602 	mov	r3,#0x00
      005933 7C 00            [12]15603 	mov	r4,#0x00
      005935                      15604 00710$:
      005935 EB               [12]15605 	mov	a,r3
      005936 2D               [12]15606 	add	a,r5
      005937 FD               [12]15607 	mov	r5,a
                                  15608 ;	src\main.c:296: if(so_motor!=1) phuttemp += (atmel_phat?8:0);
      005938 90r01r2E         [24]15609 	mov	dptr,#_so_motor
      00593B E0               [24]15610 	movx	a,@dptr
      00593C FC               [12]15611 	mov	r4,a
      00593D BC 01 02         [24]15612 	cjne	r4,#0x01,02475$
      005940 80 12            [24]15613 	sjmp	00218$
      005942                      15614 02475$:
      005942 30*33 06         [24]15615 	jnb	_atmel_phat,00711$
      005945 7B 08            [12]15616 	mov	r3,#0x08
      005947 7C 00            [12]15617 	mov	r4,#0x00
      005949 80 04            [24]15618 	sjmp	00712$
      00594B                      15619 00711$:
      00594B 7B 00            [12]15620 	mov	r3,#0x00
      00594D 7C 00            [12]15621 	mov	r4,#0x00
      00594F                      15622 00712$:
      00594F 8D 04            [24]15623 	mov	ar4,r5
      005951 EB               [12]15624 	mov	a,r3
      005952 2C               [12]15625 	add	a,r4
      005953 FD               [12]15626 	mov	r5,a
      005954                      15627 00218$:
                                  15628 ;	src\main.c:297: if(!may_dc && !atmel_phat) phuttemp += (toc_do_motor_step<<6);
      005954 20*32 10         [24]15629 	jb	_may_dc,00220$
      005957 20*33 0D         [24]15630 	jb	_atmel_phat,00220$
      00595A 90r00rEC         [24]15631 	mov	dptr,#_toc_do_motor_step
      00595D E0               [24]15632 	movx	a,@dptr
      00595E 03               [12]15633 	rr	a
      00595F 03               [12]15634 	rr	a
      005960 54 C0            [12]15635 	anl	a,#0xc0
      005962 FC               [12]15636 	mov	r4,a
      005963 8D 03            [24]15637 	mov	ar3,r5
      005965 2B               [12]15638 	add	a,r3
      005966 FD               [12]15639 	mov	r5,a
      005967                      15640 00220$:
                                  15641 ;	src\main.c:298: IAP_xoasector(SECTOR1);
      005967 90 00 00         [24]15642 	mov	dptr,#0x0000
      00596A C0 05            [24]15643 	push	ar5
      00596C C0 02            [24]15644 	push	ar2
      00596E 12r00r00         [24]15645 	lcall	_IAP_xoasector
                                  15646 ;	src\main.c:299: IAP_xoasector(SECTOR2);
      005971 90 02 00         [24]15647 	mov	dptr,#0x0200
      005974 12r00r00         [24]15648 	lcall	_IAP_xoasector
      005977 D0 02            [24]15649 	pop	ar2
      005979 D0 05            [24]15650 	pop	ar5
                                  15651 ;	src\main.c:300: IAP_ghibyte(MOTOR_EEPROM,phuttemp);
      00597B 8D*00            [24]15652 	mov	_IAP_ghibyte_PARM_2,r5
      00597D 90 00 00         [24]15653 	mov	dptr,#0x0000
      005980 C0 02            [24]15654 	push	ar2
      005982 12r00r00         [24]15655 	lcall	_IAP_ghibyte
      005985 D0 02            [24]15656 	pop	ar2
                                  15657 ;	src\main.c:301: IAP_CONTR = 0x60;
      005987 75 C7 60         [24]15658 	mov	_IAP_CONTR,#0x60
                                  15659 ;	src\main.c:302: }
      00598A                      15660 00222$:
                                  15661 ;	src\main.c:303: if(phim_cong_nhan){
                                  15662 ;	src\main.c:304: phim_cong_nhan = 0;
                                  15663 ;	assignBit
      00598A 10*28 03         [24]15664 	jbc	_phim_cong_nhan,02479$
      00598D 02r5Ar39         [24]15665 	ljmp	00232$
      005990                      15666 02479$:
                                  15667 ;	src\main.c:305: debug_dem = 0;
      005990 75*2B 00         [24]15668 	mov	_main_debug_dem_131073_263,#0x00
                                  15669 ;	src\main.c:306: switch(mode){
      005993 90r00rF3         [24]15670 	mov	dptr,#_mode
      005996 E0               [24]15671 	movx	a,@dptr
      005997 FD               [12]15672 	mov  r5,a
      005998 24 FC            [12]15673 	add	a,#0xff - 0x03
      00599A 50 03            [24]15674 	jnc	02480$
      00599C 02r5Ar39         [24]15675 	ljmp	00232$
      00599F                      15676 02480$:
      00599F ED               [12]15677 	mov	a,r5
      0059A0 2D               [12]15678 	add	a,r5
                                  15679 ;	src\main.c:307: case 0:
      0059A1 90r59rA5         [24]15680 	mov	dptr,#02481$
      0059A4 73               [24]15681 	jmp	@a+dptr
      0059A5                      15682 02481$:
      0059A5 80 06            [24]15683 	sjmp	00223$
      0059A7 80 3A            [24]15684 	sjmp	00224$
      0059A9 80 4A            [24]15685 	sjmp	00225$
      0059AB 80 6B            [24]15686 	sjmp	00229$
      0059AD                      15687 00223$:
                                  15688 ;	src\main.c:308: sub_mode = sub_mode<3?sub_mode+1:0;
      0059AD 90r00rF4         [24]15689 	mov	dptr,#_sub_mode
      0059B0 E0               [24]15690 	movx	a,@dptr
      0059B1 FD               [12]15691 	mov	r5,a
      0059B2 BD 03 00         [24]15692 	cjne	r5,#0x03,02482$
      0059B5                      15693 02482$:
      0059B5 50 09            [24]15694 	jnc	00713$
      0059B7 0D               [12]15695 	inc	r5
      0059B8 ED               [12]15696 	mov	a,r5
      0059B9 FC               [12]15697 	mov	r4,a
      0059BA 33               [12]15698 	rlc	a
      0059BB 95 E0            [12]15699 	subb	a,acc
      0059BD FD               [12]15700 	mov	r5,a
      0059BE 80 04            [24]15701 	sjmp	00714$
      0059C0                      15702 00713$:
      0059C0 7C 00            [12]15703 	mov	r4,#0x00
      0059C2 7D 00            [12]15704 	mov	r5,#0x00
      0059C4                      15705 00714$:
      0059C4 90r00rF4         [24]15706 	mov	dptr,#_sub_mode
      0059C7 EC               [12]15707 	mov	a,r4
      0059C8 F0               [24]15708 	movx	@dptr,a
                                  15709 ;	src\main.c:309: so_motor = sub_mode + 1;
      0059C9 0C               [12]15710 	inc	r4
      0059CA 90r01r2E         [24]15711 	mov	dptr,#_so_motor
      0059CD EC               [12]15712 	mov	a,r4
      0059CE F0               [24]15713 	movx	@dptr,a
                                  15714 ;	src\main.c:310: LCD_guidulieu(so_motor+'0');
      0059CF 74 30            [12]15715 	mov	a,#0x30
      0059D1 2C               [12]15716 	add	a,r4
      0059D2 F5 82            [12]15717 	mov	dpl,a
      0059D4 C0 02            [24]15718 	push	ar2
      0059D6 12r00r00         [24]15719 	lcall	_LCD_guidulieu
                                  15720 ;	src\main.c:311: LCD_guilenh(0xc4);
      0059D9 75 82 C4         [24]15721 	mov	dpl,#0xc4
      0059DC 12r00r00         [24]15722 	lcall	_LCD_guilenh
      0059DF D0 02            [24]15723 	pop	ar2
                                  15724 ;	src\main.c:312: break;
                                  15725 ;	src\main.c:313: case 1:
      0059E1 80 56            [24]15726 	sjmp	00232$
      0059E3                      15727 00224$:
                                  15728 ;	src\main.c:314: may_dc = sub_mode = 1 - sub_mode;
      0059E3 90r00rF4         [24]15729 	mov	dptr,#_sub_mode
      0059E6 E0               [24]15730 	movx	a,@dptr
      0059E7 FD               [12]15731 	mov	r5,a
      0059E8 74 01            [12]15732 	mov	a,#0x01
      0059EA C3               [12]15733 	clr	c
      0059EB 9D               [12]15734 	subb	a,r5
                                  15735 ;	assignBit
      0059EC FD               [12]15736 	mov	r5,a
      0059ED 24 FF            [12]15737 	add	a,#0xff
      0059EF 92*32            [24]15738 	mov	_may_dc,c
      0059F1 ED               [12]15739 	mov	a,r5
      0059F2 F0               [24]15740 	movx	@dptr,a
                                  15741 ;	src\main.c:315: break;
                                  15742 ;	src\main.c:316: case 2:
      0059F3 80 44            [24]15743 	sjmp	00232$
      0059F5                      15744 00225$:
                                  15745 ;	src\main.c:317: if(so_motor>2) atmel_phat = sub_mode = 1;
      0059F5 90r01r2E         [24]15746 	mov	dptr,#_so_motor
      0059F8 E0               [24]15747 	movx	a,@dptr
      0059F9 FD               [12]15748 	mov  r5,a
      0059FA 24 FD            [12]15749 	add	a,#0xff - 0x02
      0059FC 50 0A            [24]15750 	jnc	00227$
      0059FE 90r00rF4         [24]15751 	mov	dptr,#_sub_mode
      005A01 74 01            [12]15752 	mov	a,#0x01
      005A03 F0               [24]15753 	movx	@dptr,a
                                  15754 ;	assignBit
      005A04 D2*33            [12]15755 	setb	_atmel_phat
      005A06 80 10            [24]15756 	sjmp	00229$
      005A08                      15757 00227$:
                                  15758 ;	src\main.c:318: else atmel_phat = sub_mode = 1 - sub_mode;
      005A08 90r00rF4         [24]15759 	mov	dptr,#_sub_mode
      005A0B E0               [24]15760 	movx	a,@dptr
      005A0C FD               [12]15761 	mov	r5,a
      005A0D 74 01            [12]15762 	mov	a,#0x01
      005A0F C3               [12]15763 	clr	c
      005A10 9D               [12]15764 	subb	a,r5
                                  15765 ;	assignBit
      005A11 FD               [12]15766 	mov	r5,a
      005A12 24 FF            [12]15767 	add	a,#0xff
      005A14 92*33            [24]15768 	mov	_atmel_phat,c
      005A16 ED               [12]15769 	mov	a,r5
      005A17 F0               [24]15770 	movx	@dptr,a
                                  15771 ;	src\main.c:319: case 3:
      005A18                      15772 00229$:
                                  15773 ;	src\main.c:320: sub_mode = sub_mode<3?sub_mode+1:0;
      005A18 90r00rF4         [24]15774 	mov	dptr,#_sub_mode
      005A1B E0               [24]15775 	movx	a,@dptr
      005A1C FD               [12]15776 	mov	r5,a
      005A1D BD 03 00         [24]15777 	cjne	r5,#0x03,02485$
      005A20                      15778 02485$:
      005A20 50 09            [24]15779 	jnc	00715$
      005A22 0D               [12]15780 	inc	r5
      005A23 ED               [12]15781 	mov	a,r5
      005A24 FC               [12]15782 	mov	r4,a
      005A25 33               [12]15783 	rlc	a
      005A26 95 E0            [12]15784 	subb	a,acc
      005A28 FD               [12]15785 	mov	r5,a
      005A29 80 04            [24]15786 	sjmp	00716$
      005A2B                      15787 00715$:
      005A2B 7C 00            [12]15788 	mov	r4,#0x00
      005A2D 7D 00            [12]15789 	mov	r5,#0x00
      005A2F                      15790 00716$:
      005A2F 90r00rF4         [24]15791 	mov	dptr,#_sub_mode
      005A32 EC               [12]15792 	mov	a,r4
      005A33 F0               [24]15793 	movx	@dptr,a
                                  15794 ;	src\main.c:321: toc_do_motor_step = sub_mode;
      005A34 90r00rEC         [24]15795 	mov	dptr,#_toc_do_motor_step
      005A37 EC               [12]15796 	mov	a,r4
      005A38 F0               [24]15797 	movx	@dptr,a
                                  15798 ;	src\main.c:323: }
      005A39                      15799 00232$:
                                  15800 ;	src\main.c:326: if(phim_mode_nhan){
                                  15801 ;	src\main.c:327: phim_mode_nhan = 0;
                                  15802 ;	assignBit
      005A39 10*20 02         [24]15803 	jbc	_phim_mode_nhan,02487$
      005A3C 80 71            [24]15804 	sjmp	00234$
      005A3E                      15805 02487$:
                                  15806 ;	src\main.c:328: debug_dem = 0;
      005A3E 75*2B 00         [24]15807 	mov	_main_debug_dem_131073_263,#0x00
                                  15808 ;	src\main.c:329: mode++;
      005A41 90r00rF3         [24]15809 	mov	dptr,#_mode
      005A44 E0               [24]15810 	movx	a,@dptr
      005A45 24 01            [12]15811 	add	a,#0x01
      005A47 F0               [24]15812 	movx	@dptr,a
                                  15813 ;	src\main.c:330: LCD_guichuoi("\300MAY:");LCD_guidulieu(so_motor+'0');
      005A48 90r0Br49         [24]15814 	mov	dptr,#___str_122
      005A4B 75 F0 80         [24]15815 	mov	b,#0x80
      005A4E C0 02            [24]15816 	push	ar2
      005A50 12r00r00         [24]15817 	lcall	_LCD_guichuoi
      005A53 90r01r2E         [24]15818 	mov	dptr,#_so_motor
      005A56 E0               [24]15819 	movx	a,@dptr
      005A57 24 30            [12]15820 	add	a,#0x30
      005A59 F5 82            [12]15821 	mov	dpl,a
      005A5B 12r00r00         [24]15822 	lcall	_LCD_guidulieu
      005A5E D0 02            [24]15823 	pop	ar2
                                  15824 ;	src\main.c:331: LCD_guichuoi(may_dc?"\305 DC ":"\305 ST ");
      005A60 30*32 06         [24]15825 	jnb	_may_dc,00717$
      005A63 7Cr4F            [12]15826 	mov	r4,#___str_123
      005A65 7Ds0B            [12]15827 	mov	r5,#(___str_123 >> 8)
      005A67 80 04            [24]15828 	sjmp	00718$
      005A69                      15829 00717$:
      005A69 7Cr55            [12]15830 	mov	r4,#___str_124
      005A6B 7Ds0B            [12]15831 	mov	r5,#(___str_124 >> 8)
      005A6D                      15832 00718$:
      005A6D 7B 80            [12]15833 	mov	r3,#0x80
      005A6F 8C 82            [24]15834 	mov	dpl,r4
      005A71 8D 83            [24]15835 	mov	dph,r5
      005A73 8B F0            [24]15836 	mov	b,r3
      005A75 C0 02            [24]15837 	push	ar2
      005A77 12r00r00         [24]15838 	lcall	_LCD_guichuoi
      005A7A D0 02            [24]15839 	pop	ar2
                                  15840 ;	src\main.c:332: LCD_guichuoi(atmel_phat?"\311C55 ":"\311STC ");
      005A7C 30*33 06         [24]15841 	jnb	_atmel_phat,00719$
      005A7F 7Cr5B            [12]15842 	mov	r4,#___str_125
      005A81 7Ds0B            [12]15843 	mov	r5,#(___str_125 >> 8)
      005A83 80 04            [24]15844 	sjmp	00720$
      005A85                      15845 00719$:
      005A85 7Cr61            [12]15846 	mov	r4,#___str_126
      005A87 7Ds0B            [12]15847 	mov	r5,#(___str_126 >> 8)
      005A89                      15848 00720$:
      005A89 7B 80            [12]15849 	mov	r3,#0x80
      005A8B 8C 82            [24]15850 	mov	dpl,r4
      005A8D 8D 83            [24]15851 	mov	dph,r5
      005A8F 8B F0            [24]15852 	mov	b,r3
      005A91 C0 02            [24]15853 	push	ar2
      005A93 12r00r00         [24]15854 	lcall	_LCD_guichuoi
                                  15855 ;	src\main.c:333: LCD_guichuoi("\315S:");LCD_guidulieu(toc_do_motor_step+'0');
      005A96 90r0Br67         [24]15856 	mov	dptr,#___str_127
      005A99 75 F0 80         [24]15857 	mov	b,#0x80
      005A9C 12r00r00         [24]15858 	lcall	_LCD_guichuoi
      005A9F 90r00rEC         [24]15859 	mov	dptr,#_toc_do_motor_step
      005AA2 E0               [24]15860 	movx	a,@dptr
      005AA3 24 30            [12]15861 	add	a,#0x30
      005AA5 F5 82            [12]15862 	mov	dpl,a
      005AA7 12r00r00         [24]15863 	lcall	_LCD_guidulieu
                                  15864 ;	src\main.c:334: LCD_noblink();
      005AAA 12r00r00         [24]15865 	lcall	_LCD_noblink
      005AAD D0 02            [24]15866 	pop	ar2
      005AAF                      15867 00234$:
                                  15868 ;	src\main.c:336: if(phim_back_nhan){
                                  15869 ;	src\main.c:337: phim_back_nhan = 0;
                                  15870 ;	assignBit
      005AAF 10*24 03         [24]15871 	jbc	_phim_back_nhan,02490$
      005AB2 02r54r69         [24]15872 	ljmp	00248$
      005AB5                      15873 02490$:
                                  15874 ;	src\main.c:338: if(mode) mode--;
      005AB5 90r00rF3         [24]15875 	mov	dptr,#_mode
      005AB8 E0               [24]15876 	movx	a,@dptr
      005AB9 FD               [12]15877 	mov	r5,a
      005ABA E0               [24]15878 	movx	a,@dptr
      005ABB 60 06            [24]15879 	jz	00236$
      005ABD ED               [12]15880 	mov	a,r5
      005ABE 14               [12]15881 	dec	a
      005ABF 90r00rF3         [24]15882 	mov	dptr,#_mode
      005AC2 F0               [24]15883 	movx	@dptr,a
      005AC3                      15884 00236$:
                                  15885 ;	src\main.c:339: LCD_guichuoi("\200 NHA PHAT TRIEN"); 
      005AC3 90r0Br38         [24]15886 	mov	dptr,#___str_121
      005AC6 75 F0 80         [24]15887 	mov	b,#0x80
      005AC9 C0 02            [24]15888 	push	ar2
      005ACB 12r00r00         [24]15889 	lcall	_LCD_guichuoi
                                  15890 ;	src\main.c:340: LCD_guichuoi("\300MAY:");LCD_guidulieu(so_motor+'0');
      005ACE 90r0Br49         [24]15891 	mov	dptr,#___str_122
      005AD1 75 F0 80         [24]15892 	mov	b,#0x80
      005AD4 12r00r00         [24]15893 	lcall	_LCD_guichuoi
      005AD7 90r01r2E         [24]15894 	mov	dptr,#_so_motor
      005ADA E0               [24]15895 	movx	a,@dptr
      005ADB 24 30            [12]15896 	add	a,#0x30
      005ADD F5 82            [12]15897 	mov	dpl,a
      005ADF 12r00r00         [24]15898 	lcall	_LCD_guidulieu
      005AE2 D0 02            [24]15899 	pop	ar2
                                  15900 ;	src\main.c:341: LCD_guichuoi(may_dc?"\305 DC ":"\305 ST ");
      005AE4 30*32 06         [24]15901 	jnb	_may_dc,00721$
      005AE7 7Cr4F            [12]15902 	mov	r4,#___str_123
      005AE9 7Ds0B            [12]15903 	mov	r5,#(___str_123 >> 8)
      005AEB 80 04            [24]15904 	sjmp	00722$
      005AED                      15905 00721$:
      005AED 7Cr55            [12]15906 	mov	r4,#___str_124
      005AEF 7Ds0B            [12]15907 	mov	r5,#(___str_124 >> 8)
      005AF1                      15908 00722$:
      005AF1 7B 80            [12]15909 	mov	r3,#0x80
      005AF3 8C 82            [24]15910 	mov	dpl,r4
      005AF5 8D 83            [24]15911 	mov	dph,r5
      005AF7 8B F0            [24]15912 	mov	b,r3
      005AF9 C0 02            [24]15913 	push	ar2
      005AFB 12r00r00         [24]15914 	lcall	_LCD_guichuoi
      005AFE D0 02            [24]15915 	pop	ar2
                                  15916 ;	src\main.c:342: LCD_guichuoi(atmel_phat?"\311C55 ":"\311STC ");
      005B00 30*33 06         [24]15917 	jnb	_atmel_phat,00723$
      005B03 7Cr5B            [12]15918 	mov	r4,#___str_125
      005B05 7Ds0B            [12]15919 	mov	r5,#(___str_125 >> 8)
      005B07 80 04            [24]15920 	sjmp	00724$
      005B09                      15921 00723$:
      005B09 7Cr61            [12]15922 	mov	r4,#___str_126
      005B0B 7Ds0B            [12]15923 	mov	r5,#(___str_126 >> 8)
      005B0D                      15924 00724$:
      005B0D 7B 80            [12]15925 	mov	r3,#0x80
      005B0F 8C 82            [24]15926 	mov	dpl,r4
      005B11 8D 83            [24]15927 	mov	dph,r5
      005B13 8B F0            [24]15928 	mov	b,r3
      005B15 C0 02            [24]15929 	push	ar2
      005B17 12r00r00         [24]15930 	lcall	_LCD_guichuoi
                                  15931 ;	src\main.c:343: LCD_guichuoi("\315S:");LCD_guidulieu(toc_do_motor_step+'0');
      005B1A 90r0Br67         [24]15932 	mov	dptr,#___str_127
      005B1D 75 F0 80         [24]15933 	mov	b,#0x80
      005B20 12r00r00         [24]15934 	lcall	_LCD_guichuoi
      005B23 90r00rEC         [24]15935 	mov	dptr,#_toc_do_motor_step
      005B26 E0               [24]15936 	movx	a,@dptr
      005B27 24 30            [12]15937 	add	a,#0x30
      005B29 F5 82            [12]15938 	mov	dpl,a
      005B2B 12r00r00         [24]15939 	lcall	_LCD_guidulieu
      005B2E D0 02            [24]15940 	pop	ar2
                                  15941 ;	src\main.c:344: if(!mode){ 
      005B30 90r00rF3         [24]15942 	mov	dptr,#_mode
      005B33 E0               [24]15943 	movx	a,@dptr
      005B34 60 03            [24]15944 	jz	02494$
      005B36 02r54r69         [24]15945 	ljmp	00248$
      005B39                      15946 02494$:
                                  15947 ;	src\main.c:345: if(debug_dem++>8){
      005B39 AD*2B            [24]15948 	mov	r5,_main_debug_dem_131073_263
      005B3B 05*2B            [12]15949 	inc	_main_debug_dem_131073_263
      005B3D ED               [12]15950 	mov	a,r5
      005B3E 24 F7            [12]15951 	add	a,#0xff - 0x08
      005B40 50 17            [24]15952 	jnc	00238$
                                  15953 ;	src\main.c:346: debug = 1;
                                  15954 ;	assignBit
      005B42 D2*4B            [12]15955 	setb	_main_debug_131073_263
                                  15956 ;	src\main.c:347: LCD_noblink();
      005B44 C0 02            [24]15957 	push	ar2
      005B46 12r00r00         [24]15958 	lcall	_LCD_noblink
      005B49 D0 02            [24]15959 	pop	ar2
                                  15960 ;	src\main.c:348: sub_mode = eep_debug & 15;
      005B4B 90 F0 1E         [24]15961 	mov	dptr,#_eep_debug
      005B4E E4               [12]15962 	clr	a
      005B4F 93               [24]15963 	movc	a,@a+dptr
      005B50 90r00rF4         [24]15964 	mov	dptr,#_sub_mode
      005B53 54 0F            [12]15965 	anl	a,#0x0f
      005B55 F0               [24]15966 	movx	@dptr,a
      005B56 02r54r69         [24]15967 	ljmp	00248$
      005B59                      15968 00238$:
                                  15969 ;	src\main.c:350: else LCD_blinkXY(DUOI,4);
      005B59 75*00 04         [24]15970 	mov	_LCD_blinkXY_PARM_2,#0x04
      005B5C 75 82 C0         [24]15971 	mov	dpl,#0xc0
      005B5F C0 02            [24]15972 	push	ar2
      005B61 12r00r00         [24]15973 	lcall	_LCD_blinkXY
      005B64 D0 02            [24]15974 	pop	ar2
      005B66 02r54r69         [24]15975 	ljmp	00248$
      005B69                      15976 00251$:
                                  15977 ;	src\main.c:360: ADC_CONTR = 0x8b;
      005B69 75 BC 8B         [24]15978 	mov	_ADC_CONTR,#0x8b
                                  15979 ;	src\main.c:363: LCD_guilenh(0x80);
      005B6C 75 82 80         [24]15980 	mov	dpl,#0x80
      005B6F C0 07            [24]15981 	push	ar7
      005B71 C0 06            [24]15982 	push	ar6
      005B73 12r00r00         [24]15983 	lcall	_LCD_guilenh
                                  15984 ;	src\main.c:364: LCD_guichuoi("KIEM TRA GIO RTC");
      005B76 90r0BrAA         [24]15985 	mov	dptr,#___str_136
      005B79 75 F0 80         [24]15986 	mov	b,#0x80
      005B7C 12r00r00         [24]15987 	lcall	_LCD_guichuoi
                                  15988 ;	src\main.c:365: rtc_gettime(&hour, &minute, &second);
      005B7F 75*00r01         [24]15989 	mov	_rtc_gettime_PARM_2,#_minute
      005B82 75*01 00         [24]15990 	mov	(_rtc_gettime_PARM_2 + 1),#0x00
      005B85 75*02 40         [24]15991 	mov	(_rtc_gettime_PARM_2 + 2),#0x40
      005B88 75*00r00         [24]15992 	mov	_rtc_gettime_PARM_3,#_second
      005B8B 75*01 00         [24]15993 	mov	(_rtc_gettime_PARM_3 + 1),#0x00
      005B8E 75*02 40         [24]15994 	mov	(_rtc_gettime_PARM_3 + 2),#0x40
      005B91 90r00r02         [24]15995 	mov	dptr,#_hour
      005B94 75 F0 40         [24]15996 	mov	b,#0x40
      005B97 12r00r00         [24]15997 	lcall	_rtc_gettime
      005B9A D0 06            [24]15998 	pop	ar6
      005B9C D0 07            [24]15999 	pop	ar7
                                  16000 ;	src\main.c:366: if(hour>23 || minute > 59 || second >59)	
      005B9E E5*02            [12]16001 	mov	a,_hour
      005BA0 24 E8            [12]16002 	add	a,#0xff - 0x17
      005BA2 40 0C            [24]16003 	jc	00254$
      005BA4 E5*01            [12]16004 	mov	a,_minute
      005BA6 24 C4            [12]16005 	add	a,#0xff - 0x3b
      005BA8 40 06            [24]16006 	jc	00254$
      005BAA E5*00            [12]16007 	mov	a,_second
      005BAC 24 C4            [12]16008 	add	a,#0xff - 0x3b
      005BAE 50 14            [24]16009 	jnc	00255$
      005BB0                      16010 00254$:
                                  16011 ;	src\main.c:367: rtc_settime(0,0,0);
      005BB0 75*00 00         [24]16012 	mov	_rtc_settime_PARM_2,#0x00
      005BB3 75*00 00         [24]16013 	mov	_rtc_settime_PARM_3,#0x00
      005BB6 75 82 00         [24]16014 	mov	dpl,#0x00
      005BB9 C0 07            [24]16015 	push	ar7
      005BBB C0 06            [24]16016 	push	ar6
      005BBD 12r00r00         [24]16017 	lcall	_rtc_settime
      005BC0 D0 06            [24]16018 	pop	ar6
      005BC2 D0 07            [24]16019 	pop	ar7
      005BC4                      16020 00255$:
                                  16021 ;	src\main.c:370: rtc_init(); //khai bao cho ds1307 tao xung vuong moi giay
      005BC4 C0 07            [24]16022 	push	ar7
      005BC6 C0 06            [24]16023 	push	ar6
      005BC8 12r00r00         [24]16024 	lcall	_rtc_init
                                  16025 ;	src\main.c:371: INT_DHO_EX = 1; //Bat ngat ngoai 0 (EX0)
                                  16026 ;	assignBit
      005BCB D2 A8            [12]16027 	setb	_EX0
                                  16028 ;	src\main.c:372: INT_DHO_IT=1; // ngat ngoai 0 cho suon len
                                  16029 ;	assignBit
      005BCD D2 88            [12]16030 	setb	_IT0
                                  16031 ;	src\main.c:373: rtc_gettime(&hour, &minute, &second);
      005BCF 75*00r01         [24]16032 	mov	_rtc_gettime_PARM_2,#_minute
      005BD2 75*01 00         [24]16033 	mov	(_rtc_gettime_PARM_2 + 1),#0x00
      005BD5 75*02 40         [24]16034 	mov	(_rtc_gettime_PARM_2 + 2),#0x40
      005BD8 75*00r00         [24]16035 	mov	_rtc_gettime_PARM_3,#_second
      005BDB 75*01 00         [24]16036 	mov	(_rtc_gettime_PARM_3 + 1),#0x00
      005BDE 75*02 40         [24]16037 	mov	(_rtc_gettime_PARM_3 + 2),#0x40
      005BE1 90r00r02         [24]16038 	mov	dptr,#_hour
      005BE4 75 F0 40         [24]16039 	mov	b,#0x40
      005BE7 12r00r00         [24]16040 	lcall	_rtc_gettime
                                  16041 ;	src\main.c:376: LCD_guilenh(0x80);
      005BEA 75 82 80         [24]16042 	mov	dpl,#0x80
      005BED 12r00r00         [24]16043 	lcall	_LCD_guilenh
                                  16044 ;	src\main.c:377: LCD_guichuoi("KIEM MOTOR 1 - 3");
      005BF0 90r0BrBB         [24]16045 	mov	dptr,#___str_137
      005BF3 75 F0 80         [24]16046 	mov	b,#0x80
      005BF6 12r00r00         [24]16047 	lcall	_LCD_guichuoi
      005BF9 D0 06            [24]16048 	pop	ar6
      005BFB D0 07            [24]16049 	pop	ar7
                                  16050 ;	src\main.c:378: if(so_motor>2){
      005BFD 90r01r2E         [24]16051 	mov	dptr,#_so_motor
      005C00 E0               [24]16052 	movx	a,@dptr
      005C01 FD               [12]16053 	mov  r5,a
      005C02 24 FD            [12]16054 	add	a,#0xff - 0x02
      005C04 40 03            [24]16055 	jc	02499$
      005C06 02r5CrA9         [24]16056 	ljmp	00265$
      005C09                      16057 02499$:
                                  16058 ;	src\main.c:380: while(!cam_che && retry--){
      005C09 75*2D 14         [24]16059 	mov	_main_retry_131073_284,#0x14
      005C0C                      16060 00261$:
      005C0C 30 B6 03         [24]16061 	jnb	_P36,02500$
      005C0F 02r5CrA9         [24]16062 	ljmp	00265$
      005C12                      16063 02500$:
      005C12 AC*2D            [24]16064 	mov	r4,_main_retry_131073_284
      005C14 15*2D            [12]16065 	dec	_main_retry_131073_284
      005C16 EC               [12]16066 	mov	a,r4
      005C17 70 03            [24]16067 	jnz	02501$
      005C19 02r5CrA9         [24]16068 	ljmp	00265$
      005C1C                      16069 02501$:
                                  16070 ;	src\main.c:381: LCD_guilenh(0xc0);
      005C1C 75 82 C0         [24]16071 	mov	dpl,#0xc0
      005C1F C0 07            [24]16072 	push	ar7
      005C21 C0 06            [24]16073 	push	ar6
      005C23 12r00r00         [24]16074 	lcall	_LCD_guilenh
                                  16075 ;	src\main.c:382: LCD_guidulieu(retry/10+'0');
      005C26 AB*2D            [24]16076 	mov	r3,_main_retry_131073_284
      005C28 7C 00            [12]16077 	mov	r4,#0x00
      005C2A 75*00 0A         [24]16078 	mov	__divsint_PARM_2,#0x0a
                                  16079 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      005C2D 8C*01            [24]16080 	mov	(__divsint_PARM_2 + 1),r4
      005C2F 8B 82            [24]16081 	mov	dpl,r3
      005C31 8C 83            [24]16082 	mov	dph,r4
      005C33 C0 04            [24]16083 	push	ar4
      005C35 C0 03            [24]16084 	push	ar3
      005C37 12r00r00         [24]16085 	lcall	__divsint
      005C3A AA 82            [24]16086 	mov	r2,dpl
      005C3C 74 30            [12]16087 	mov	a,#0x30
      005C3E 2A               [12]16088 	add	a,r2
      005C3F F5 82            [12]16089 	mov	dpl,a
      005C41 12r00r00         [24]16090 	lcall	_LCD_guidulieu
      005C44 D0 03            [24]16091 	pop	ar3
      005C46 D0 04            [24]16092 	pop	ar4
                                  16093 ;	src\main.c:383: LCD_guidulieu(retry%10+'0');
      005C48 75*00 0A         [24]16094 	mov	__modsint_PARM_2,#0x0a
      005C4B 75*01 00         [24]16095 	mov	(__modsint_PARM_2 + 1),#0x00
      005C4E 8B 82            [24]16096 	mov	dpl,r3
      005C50 8C 83            [24]16097 	mov	dph,r4
      005C52 12r00r00         [24]16098 	lcall	__modsint
      005C55 AC 82            [24]16099 	mov	r4,dpl
      005C57 74 30            [12]16100 	mov	a,#0x30
      005C59 2C               [12]16101 	add	a,r4
      005C5A F5 82            [12]16102 	mov	dpl,a
      005C5C 12r00r00         [24]16103 	lcall	_LCD_guidulieu
      005C5F D0 06            [24]16104 	pop	ar6
      005C61 D0 07            [24]16105 	pop	ar7
                                  16106 ;	src\main.c:384: motor1 = 1;
                                  16107 ;	assignBit
      005C63 D2 A7            [12]16108 	setb	_P27
                                  16109 ;	src\main.c:385: delay_ms(may_dc?1000:250);
      005C65 30*32 06         [24]16110 	jnb	_may_dc,00725$
      005C68 7C E8            [12]16111 	mov	r4,#0xe8
      005C6A 7D 03            [12]16112 	mov	r5,#0x03
      005C6C 80 04            [24]16113 	sjmp	00726$
      005C6E                      16114 00725$:
      005C6E 7C FA            [12]16115 	mov	r4,#0xfa
      005C70 7D 00            [12]16116 	mov	r5,#0x00
      005C72                      16117 00726$:
      005C72 8C 82            [24]16118 	mov	dpl,r4
      005C74 8D 83            [24]16119 	mov	dph,r5
      005C76 C0 07            [24]16120 	push	ar7
      005C78 C0 06            [24]16121 	push	ar6
      005C7A 12r00r00         [24]16122 	lcall	_delay_ms
      005C7D D0 06            [24]16123 	pop	ar6
      005C7F D0 07            [24]16124 	pop	ar7
                                  16125 ;	src\main.c:386: motor1 = 0;
                                  16126 ;	assignBit
      005C81 C2 A7            [12]16127 	clr	_P27
                                  16128 ;	src\main.c:387: if(!cam_che){
      005C83 20 B6 86         [24]16129 	jb	_P36,00261$
                                  16130 ;	src\main.c:388: motor3 = 1;
                                  16131 ;	assignBit
      005C86 D2 A6            [12]16132 	setb	_P26
                                  16133 ;	src\main.c:389: delay_ms(may_dc?1000:250);
      005C88 30*32 06         [24]16134 	jnb	_may_dc,00727$
      005C8B 7C E8            [12]16135 	mov	r4,#0xe8
      005C8D 7D 03            [12]16136 	mov	r5,#0x03
      005C8F 80 04            [24]16137 	sjmp	00728$
      005C91                      16138 00727$:
      005C91 7C FA            [12]16139 	mov	r4,#0xfa
      005C93 7D 00            [12]16140 	mov	r5,#0x00
      005C95                      16141 00728$:
      005C95 8C 82            [24]16142 	mov	dpl,r4
      005C97 8D 83            [24]16143 	mov	dph,r5
      005C99 C0 07            [24]16144 	push	ar7
      005C9B C0 06            [24]16145 	push	ar6
      005C9D 12r00r00         [24]16146 	lcall	_delay_ms
      005CA0 D0 06            [24]16147 	pop	ar6
      005CA2 D0 07            [24]16148 	pop	ar7
                                  16149 ;	src\main.c:390: motor3 = 0;
                                  16150 ;	assignBit
      005CA4 C2 A6            [12]16151 	clr	_P26
      005CA6 02r5Cr0C         [24]16152 	ljmp	00261$
      005CA9                      16153 00265$:
                                  16154 ;	src\main.c:394: LCD_guilenh(0x80);
      005CA9 75 82 80         [24]16155 	mov	dpl,#0x80
      005CAC C0 07            [24]16156 	push	ar7
      005CAE C0 06            [24]16157 	push	ar6
      005CB0 12r00r00         [24]16158 	lcall	_LCD_guilenh
                                  16159 ;	src\main.c:395: LCD_guichuoi("KIEM MOTOR 2 - 4");
      005CB3 90r0BrCC         [24]16160 	mov	dptr,#___str_138
      005CB6 75 F0 80         [24]16161 	mov	b,#0x80
      005CB9 12r00r00         [24]16162 	lcall	_LCD_guichuoi
      005CBC D0 06            [24]16163 	pop	ar6
      005CBE D0 07            [24]16164 	pop	ar7
                                  16165 ;	src\main.c:396: if(so_motor>3){
      005CC0 90r01r2E         [24]16166 	mov	dptr,#_so_motor
      005CC3 E0               [24]16167 	movx	a,@dptr
      005CC4 FD               [12]16168 	mov  r5,a
      005CC5 24 FC            [12]16169 	add	a,#0xff - 0x03
      005CC7 40 03            [24]16170 	jc	02505$
      005CC9 02r5Dr6C         [24]16171 	ljmp	00273$
      005CCC                      16172 02505$:
                                  16173 ;	src\main.c:398: while(!cam_che2 && retry--){
      005CCC 75*2E 05         [24]16174 	mov	_main_retry_131073_287,#0x05
      005CCF                      16175 00269$:
      005CCF 30 B7 03         [24]16176 	jnb	_P37,02506$
      005CD2 02r5Dr6C         [24]16177 	ljmp	00273$
      005CD5                      16178 02506$:
      005CD5 AC*2E            [24]16179 	mov	r4,_main_retry_131073_287
      005CD7 15*2E            [12]16180 	dec	_main_retry_131073_287
      005CD9 EC               [12]16181 	mov	a,r4
      005CDA 70 03            [24]16182 	jnz	02507$
      005CDC 02r5Dr6C         [24]16183 	ljmp	00273$
      005CDF                      16184 02507$:
                                  16185 ;	src\main.c:399: LCD_guilenh(0xc0);
      005CDF 75 82 C0         [24]16186 	mov	dpl,#0xc0
      005CE2 C0 07            [24]16187 	push	ar7
      005CE4 C0 06            [24]16188 	push	ar6
      005CE6 12r00r00         [24]16189 	lcall	_LCD_guilenh
                                  16190 ;	src\main.c:400: LCD_guidulieu(retry/10+'0');
      005CE9 AB*2E            [24]16191 	mov	r3,_main_retry_131073_287
      005CEB 7C 00            [12]16192 	mov	r4,#0x00
      005CED 75*00 0A         [24]16193 	mov	__divsint_PARM_2,#0x0a
                                  16194 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      005CF0 8C*01            [24]16195 	mov	(__divsint_PARM_2 + 1),r4
      005CF2 8B 82            [24]16196 	mov	dpl,r3
      005CF4 8C 83            [24]16197 	mov	dph,r4
      005CF6 C0 04            [24]16198 	push	ar4
      005CF8 C0 03            [24]16199 	push	ar3
      005CFA 12r00r00         [24]16200 	lcall	__divsint
      005CFD AA 82            [24]16201 	mov	r2,dpl
      005CFF 74 30            [12]16202 	mov	a,#0x30
      005D01 2A               [12]16203 	add	a,r2
      005D02 F5 82            [12]16204 	mov	dpl,a
      005D04 12r00r00         [24]16205 	lcall	_LCD_guidulieu
      005D07 D0 03            [24]16206 	pop	ar3
      005D09 D0 04            [24]16207 	pop	ar4
                                  16208 ;	src\main.c:401: LCD_guidulieu(retry%10+'0');
      005D0B 75*00 0A         [24]16209 	mov	__modsint_PARM_2,#0x0a
      005D0E 75*01 00         [24]16210 	mov	(__modsint_PARM_2 + 1),#0x00
      005D11 8B 82            [24]16211 	mov	dpl,r3
      005D13 8C 83            [24]16212 	mov	dph,r4
      005D15 12r00r00         [24]16213 	lcall	__modsint
      005D18 AC 82            [24]16214 	mov	r4,dpl
      005D1A 74 30            [12]16215 	mov	a,#0x30
      005D1C 2C               [12]16216 	add	a,r4
      005D1D F5 82            [12]16217 	mov	dpl,a
      005D1F 12r00r00         [24]16218 	lcall	_LCD_guidulieu
      005D22 D0 06            [24]16219 	pop	ar6
      005D24 D0 07            [24]16220 	pop	ar7
                                  16221 ;	src\main.c:402: motor2 = 1;
                                  16222 ;	assignBit
      005D26 D2 A5            [12]16223 	setb	_P25
                                  16224 ;	src\main.c:403: delay_ms(may_dc?1000:250);
      005D28 30*32 06         [24]16225 	jnb	_may_dc,00729$
      005D2B 7C E8            [12]16226 	mov	r4,#0xe8
      005D2D 7D 03            [12]16227 	mov	r5,#0x03
      005D2F 80 04            [24]16228 	sjmp	00730$
      005D31                      16229 00729$:
      005D31 7C FA            [12]16230 	mov	r4,#0xfa
      005D33 7D 00            [12]16231 	mov	r5,#0x00
      005D35                      16232 00730$:
      005D35 8C 82            [24]16233 	mov	dpl,r4
      005D37 8D 83            [24]16234 	mov	dph,r5
      005D39 C0 07            [24]16235 	push	ar7
      005D3B C0 06            [24]16236 	push	ar6
      005D3D 12r00r00         [24]16237 	lcall	_delay_ms
      005D40 D0 06            [24]16238 	pop	ar6
      005D42 D0 07            [24]16239 	pop	ar7
                                  16240 ;	src\main.c:404: motor2 = 0;
                                  16241 ;	assignBit
      005D44 C2 A5            [12]16242 	clr	_P25
                                  16243 ;	src\main.c:405: if(!cam_che2){
      005D46 20 B7 86         [24]16244 	jb	_P37,00269$
                                  16245 ;	src\main.c:406: motor4 = 1;
                                  16246 ;	assignBit
      005D49 D2 A4            [12]16247 	setb	_P24
                                  16248 ;	src\main.c:407: delay_ms(may_dc?1000:250);
      005D4B 30*32 06         [24]16249 	jnb	_may_dc,00731$
      005D4E 7C E8            [12]16250 	mov	r4,#0xe8
      005D50 7D 03            [12]16251 	mov	r5,#0x03
      005D52 80 04            [24]16252 	sjmp	00732$
      005D54                      16253 00731$:
      005D54 7C FA            [12]16254 	mov	r4,#0xfa
      005D56 7D 00            [12]16255 	mov	r5,#0x00
      005D58                      16256 00732$:
      005D58 8C 82            [24]16257 	mov	dpl,r4
      005D5A 8D 83            [24]16258 	mov	dph,r5
      005D5C C0 07            [24]16259 	push	ar7
      005D5E C0 06            [24]16260 	push	ar6
      005D60 12r00r00         [24]16261 	lcall	_delay_ms
      005D63 D0 06            [24]16262 	pop	ar6
      005D65 D0 07            [24]16263 	pop	ar7
                                  16264 ;	src\main.c:408: motor4 = 0;
                                  16265 ;	assignBit
      005D67 C2 A4            [12]16266 	clr	_P24
      005D69 02r5CrCF         [24]16267 	ljmp	00269$
      005D6C                      16268 00273$:
                                  16269 ;	src\main.c:412: LCD_guilenh(0x80);
      005D6C 75 82 80         [24]16270 	mov	dpl,#0x80
      005D6F C0 07            [24]16271 	push	ar7
      005D71 C0 06            [24]16272 	push	ar6
      005D73 12r00r00         [24]16273 	lcall	_LCD_guilenh
                                  16274 ;	src\main.c:413: LCD_guichuoi("THIET LAP MOTOR ");
      005D76 90r0BrDD         [24]16275 	mov	dptr,#___str_139
      005D79 75 F0 80         [24]16276 	mov	b,#0x80
      005D7C 12r00r00         [24]16277 	lcall	_LCD_guichuoi
                                  16278 ;	src\main.c:414: motor_step_int_init();
      005D7F 12r07r59         [24]16279 	lcall	_motor_step_int_init
      005D82 D0 06            [24]16280 	pop	ar6
      005D84 D0 07            [24]16281 	pop	ar7
                                  16282 ;	src\main.c:417: bat_phone_phu = eep_phonephu[11]&1;
      005D86 90 F0 1C         [24]16283 	mov	dptr,#(_eep_phonephu + 0x000b)
      005D89 E4               [12]16284 	clr	a
      005D8A 93               [24]16285 	movc	a,@a+dptr
      005D8B 54 01            [12]16286 	anl	a,#0x01
                                  16287 ;	assignBit
      005D8D FD               [12]16288 	mov	r5,a
      005D8E 24 FF            [12]16289 	add	a,#0xff
      005D90 92*08            [24]16290 	mov	_bat_phone_phu,c
                                  16291 ;	src\main.c:418: if(!nosim && gsm_thietlapsim800()){
      005D92 20*2E 70         [24]16292 	jb	_nosim,00282$
      005D95 C0 07            [24]16293 	push	ar7
      005D97 C0 06            [24]16294 	push	ar6
      005D99 12r1Cr3D         [24]16295 	lcall	_gsm_thietlapsim800
      005D9C D0 06            [24]16296 	pop	ar6
      005D9E D0 07            [24]16297 	pop	ar7
      005DA0 50 63            [24]16298 	jnc	00282$
                                  16299 ;	src\main.c:419: gsm_thietlapngaygiothuc();
      005DA2 C0 07            [24]16300 	push	ar7
      005DA4 C0 06            [24]16301 	push	ar6
      005DA6 12r1Cr8F         [24]16302 	lcall	_gsm_thietlapngaygiothuc
                                  16303 ;	src\main.c:420: gsm_thietlapgoidien();
      005DA9 12r1Er66         [24]16304 	lcall	_gsm_thietlapgoidien
                                  16305 ;	src\main.c:422: if(gsm_thietlapnhantin()){ // thiet lap thong so nhan tin
      005DAC 12r1ErAF         [24]16306 	lcall	_gsm_thietlapnhantin
      005DAF D0 06            [24]16307 	pop	ar6
      005DB1 D0 07            [24]16308 	pop	ar7
      005DB3 50 50            [24]16309 	jnc	00282$
                                  16310 ;	src\main.c:423: if(!eep_norreset)baocaosms(CHINH,"\rkhoi dong phan mem san sang");
      005DB5 90 F0 05         [24]16311 	mov	dptr,#_eep_norreset
      005DB8 E4               [12]16312 	clr	a
      005DB9 93               [24]16313 	movc	a,@a+dptr
      005DBA 70 15            [24]16314 	jnz	00277$
                                  16315 ;	assignBit
      005DBC D2*44            [12]16316 	setb	_baocaosms_PARM_1
      005DBE 90r0BrEE         [24]16317 	mov	dptr,#___str_140
      005DC1 75 F0 80         [24]16318 	mov	b,#0x80
      005DC4 C0 07            [24]16319 	push	ar7
      005DC6 C0 06            [24]16320 	push	ar6
      005DC8 12r17r8C         [24]16321 	lcall	_baocaosms
      005DCB D0 06            [24]16322 	pop	ar6
      005DCD D0 07            [24]16323 	pop	ar7
      005DCF 80 29            [24]16324 	sjmp	00278$
      005DD1                      16325 00277$:
                                  16326 ;	src\main.c:425: baocaosms(CHINH,"\rkhoi dong san sang");
                                  16327 ;	assignBit
      005DD1 D2*44            [12]16328 	setb	_baocaosms_PARM_1
      005DD3 90r0Cr0B         [24]16329 	mov	dptr,#___str_141
      005DD6 75 F0 80         [24]16330 	mov	b,#0x80
      005DD9 C0 07            [24]16331 	push	ar7
      005DDB C0 06            [24]16332 	push	ar6
      005DDD 12r17r8C         [24]16333 	lcall	_baocaosms
      005DE0 D0 06            [24]16334 	pop	ar6
      005DE2 D0 07            [24]16335 	pop	ar7
                                  16336 ;	src\main.c:426: if(bat_phone_phu)baocaosms(PHU,"\rkhoi dong san sang");
      005DE4 30*08 13         [24]16337 	jnb	_bat_phone_phu,00278$
                                  16338 ;	assignBit
      005DE7 C2*44            [12]16339 	clr	_baocaosms_PARM_1
      005DE9 90r0Cr0B         [24]16340 	mov	dptr,#___str_141
      005DEC 75 F0 80         [24]16341 	mov	b,#0x80
      005DEF C0 07            [24]16342 	push	ar7
      005DF1 C0 06            [24]16343 	push	ar6
      005DF3 12r17r8C         [24]16344 	lcall	_baocaosms
      005DF6 D0 06            [24]16345 	pop	ar6
      005DF8 D0 07            [24]16346 	pop	ar7
      005DFA                      16347 00278$:
                                  16348 ;	src\main.c:428: kiemtrasodienthoai();
      005DFA C0 07            [24]16349 	push	ar7
      005DFC C0 06            [24]16350 	push	ar6
      005DFE 12r0FrB5         [24]16351 	lcall	_kiemtrasodienthoai
      005E01 D0 06            [24]16352 	pop	ar6
      005E03 D0 07            [24]16353 	pop	ar7
      005E05                      16354 00282$:
                                  16355 ;	src\main.c:433: hour12 = (hour>11)?hour-12:hour;
      005E05 E5*02            [12]16356 	mov	a,_hour
      005E07 24 F4            [12]16357 	add	a,#0xff - 0x0b
      005E09 50 07            [24]16358 	jnc	00733$
      005E0B E5*02            [12]16359 	mov	a,_hour
      005E0D 24 F4            [12]16360 	add	a,#0xf4
      005E0F FD               [12]16361 	mov	r5,a
      005E10 80 02            [24]16362 	sjmp	00734$
      005E12                      16363 00733$:
      005E12 AD*02            [24]16364 	mov	r5,_hour
      005E14                      16365 00734$:
      005E14 8D*03            [24]16366 	mov	_hour12,r5
                                  16367 ;	src\main.c:434: if(!eep_norreset){
      005E16 90 F0 05         [24]16368 	mov	dptr,#_eep_norreset
      005E19 E4               [12]16369 	clr	a
      005E1A 93               [24]16370 	movc	a,@a+dptr
      005E1B 70 1C            [24]16371 	jnz	00285$
                                  16372 ;	src\main.c:435: mode_wait = 5;
      005E1D 90r00rF5         [24]16373 	mov	dptr,#_mode_wait
      005E20 74 05            [12]16374 	mov	a,#0x05
      005E22 F0               [24]16375 	movx	@dptr,a
                                  16376 ;	src\main.c:436: IAP_docxoasector1();
      005E23 C0 07            [24]16377 	push	ar7
      005E25 C0 06            [24]16378 	push	ar6
      005E27 12r00r00         [24]16379 	lcall	_IAP_docxoasector1
                                  16380 ;	src\main.c:437: eeprom_buf[NORRESET_EEPROM] = 0xff;
      005E2A 90r00rC1         [24]16381 	mov	dptr,#(_eeprom_buf + 0x0005)
      005E2D 74 FF            [12]16382 	mov	a,#0xff
      005E2F F0               [24]16383 	movx	@dptr,a
                                  16384 ;	src\main.c:438: IAP_ghisector1();
      005E30 12r00r00         [24]16385 	lcall	_IAP_ghisector1
      005E33 D0 06            [24]16386 	pop	ar6
      005E35 D0 07            [24]16387 	pop	ar7
      005E37 80 06            [24]16388 	sjmp	00286$
      005E39                      16389 00285$:
                                  16390 ;	src\main.c:439: }else mode_wait = 60;
      005E39 90r00rF5         [24]16391 	mov	dptr,#_mode_wait
      005E3C 74 3C            [12]16392 	mov	a,#0x3c
      005E3E F0               [24]16393 	movx	@dptr,a
      005E3F                      16394 00286$:
                                  16395 ;	src\main.c:441: WDT_CONTR = EN_WDT | CLR_WDT | WDT_SCALE_64; // Enable watchdog, clear watchdog, pre scale = 64, watchdog idle mode = NO
      005E3F 75 C1 65         [24]16396 	mov	_WDT_CONTR,#0x65
                                  16397 ;	src\main.c:445: while(1){
      005E42                      16398 00645$:
                                  16399 ;	src\main.c:447: if(so_motor==4 && (eep_phut4!=phut[3] || eep_gio4!=gio[3])) luu_gio_kim();
      005E42 90r01r2E         [24]16400 	mov	dptr,#_so_motor
      005E45 E0               [24]16401 	movx	a,@dptr
      005E46 FD               [12]16402 	mov	r5,a
      005E47 BD 04 20         [24]16403 	cjne	r5,#0x04,00301$
      005E4A 90 F2 06         [24]16404 	mov	dptr,#_eep_phut4
      005E4D E4               [12]16405 	clr	a
      005E4E 93               [24]16406 	movc	a,@a+dptr
      005E4F B5*0B 0B         [24]16407 	cjne	a,(_phut + 0x0003),00300$
      005E52 90 F2 07         [24]16408 	mov	dptr,#_eep_gio4
      005E55 E4               [12]16409 	clr	a
      005E56 93               [24]16410 	movc	a,@a+dptr
      005E57 FD               [12]16411 	mov	r5,a
      005E58 B5*07 02         [24]16412 	cjne	a,(_gio + 0x0003),02522$
      005E5B 80 0D            [24]16413 	sjmp	00301$
      005E5D                      16414 02522$:
      005E5D                      16415 00300$:
      005E5D C0 07            [24]16416 	push	ar7
      005E5F C0 06            [24]16417 	push	ar6
      005E61 12r06rDD         [24]16418 	lcall	_luu_gio_kim
      005E64 D0 06            [24]16419 	pop	ar6
      005E66 D0 07            [24]16420 	pop	ar7
      005E68 80 70            [24]16421 	sjmp	00302$
      005E6A                      16422 00301$:
                                  16423 ;	src\main.c:448: else if(so_motor>2 && (eep_phut3!=phut[2] || eep_gio3!=gio[2])) luu_gio_kim();
      005E6A 90r01r2E         [24]16424 	mov	dptr,#_so_motor
      005E6D E0               [24]16425 	movx	a,@dptr
      005E6E FD               [12]16426 	mov  r5,a
      005E6F 24 FD            [12]16427 	add	a,#0xff - 0x02
      005E71 50 20            [24]16428 	jnc	00296$
      005E73 90 F2 04         [24]16429 	mov	dptr,#_eep_phut3
      005E76 E4               [12]16430 	clr	a
      005E77 93               [24]16431 	movc	a,@a+dptr
      005E78 B5*0A 0B         [24]16432 	cjne	a,(_phut + 0x0002),00295$
      005E7B 90 F2 05         [24]16433 	mov	dptr,#_eep_gio3
      005E7E E4               [12]16434 	clr	a
      005E7F 93               [24]16435 	movc	a,@a+dptr
      005E80 FD               [12]16436 	mov	r5,a
      005E81 B5*06 02         [24]16437 	cjne	a,(_gio + 0x0002),02526$
      005E84 80 0D            [24]16438 	sjmp	00296$
      005E86                      16439 02526$:
      005E86                      16440 00295$:
      005E86 C0 07            [24]16441 	push	ar7
      005E88 C0 06            [24]16442 	push	ar6
      005E8A 12r06rDD         [24]16443 	lcall	_luu_gio_kim
      005E8D D0 06            [24]16444 	pop	ar6
      005E8F D0 07            [24]16445 	pop	ar7
      005E91 80 47            [24]16446 	sjmp	00302$
      005E93                      16447 00296$:
                                  16448 ;	src\main.c:449: else if(so_motor>1 && (eep_phut2!=phut[1] || eep_gio2!=gio[1])) luu_gio_kim();
      005E93 90r01r2E         [24]16449 	mov	dptr,#_so_motor
      005E96 E0               [24]16450 	movx	a,@dptr
      005E97 FD               [12]16451 	mov  r5,a
      005E98 24 FE            [12]16452 	add	a,#0xff - 0x01
      005E9A 50 20            [24]16453 	jnc	00291$
      005E9C 90 F2 02         [24]16454 	mov	dptr,#_eep_phut2
      005E9F E4               [12]16455 	clr	a
      005EA0 93               [24]16456 	movc	a,@a+dptr
      005EA1 B5*09 0B         [24]16457 	cjne	a,(_phut + 0x0001),00290$
      005EA4 90 F2 03         [24]16458 	mov	dptr,#_eep_gio2
      005EA7 E4               [12]16459 	clr	a
      005EA8 93               [24]16460 	movc	a,@a+dptr
      005EA9 FD               [12]16461 	mov	r5,a
      005EAA B5*05 02         [24]16462 	cjne	a,(_gio + 0x0001),02530$
      005EAD 80 0D            [24]16463 	sjmp	00291$
      005EAF                      16464 02530$:
      005EAF                      16465 00290$:
      005EAF C0 07            [24]16466 	push	ar7
      005EB1 C0 06            [24]16467 	push	ar6
      005EB3 12r06rDD         [24]16468 	lcall	_luu_gio_kim
      005EB6 D0 06            [24]16469 	pop	ar6
      005EB8 D0 07            [24]16470 	pop	ar7
      005EBA 80 1E            [24]16471 	sjmp	00302$
      005EBC                      16472 00291$:
                                  16473 ;	src\main.c:450: else if(eep_phut1!=phut[0] || eep_gio1!=gio[0]) luu_gio_kim();
      005EBC 90 F2 00         [24]16474 	mov	dptr,#_eep_phut1
      005EBF E4               [12]16475 	clr	a
      005EC0 93               [24]16476 	movc	a,@a+dptr
      005EC1 B5*08 0B         [24]16477 	cjne	a,_phut,00287$
      005EC4 90 F2 01         [24]16478 	mov	dptr,#_eep_gio1
      005EC7 E4               [12]16479 	clr	a
      005EC8 93               [24]16480 	movc	a,@a+dptr
      005EC9 FD               [12]16481 	mov	r5,a
      005ECA B5*04 02         [24]16482 	cjne	a,_gio,02533$
      005ECD 80 0B            [24]16483 	sjmp	00302$
      005ECF                      16484 02533$:
      005ECF                      16485 00287$:
      005ECF C0 07            [24]16486 	push	ar7
      005ED1 C0 06            [24]16487 	push	ar6
      005ED3 12r06rDD         [24]16488 	lcall	_luu_gio_kim
      005ED6 D0 06            [24]16489 	pop	ar6
      005ED8 D0 07            [24]16490 	pop	ar7
      005EDA                      16491 00302$:
                                  16492 ;	src\main.c:452: if(!mode_wait || !mode) {
      005EDA 90r00rF5         [24]16493 	mov	dptr,#_mode_wait
      005EDD E0               [24]16494 	movx	a,@dptr
      005EDE 60 06            [24]16495 	jz	00309$
      005EE0 90r00rF3         [24]16496 	mov	dptr,#_mode
      005EE3 E0               [24]16497 	movx	a,@dptr
      005EE4 70 2B            [24]16498 	jnz	00310$
      005EE6                      16499 00309$:
                                  16500 ;	src\main.c:453: mode=0;
      005EE6 90r00rF3         [24]16501 	mov	dptr,#_mode
      005EE9 E4               [12]16502 	clr	a
      005EEA F0               [24]16503 	movx	@dptr,a
                                  16504 ;	src\main.c:454: if(motor_index  == 5) motor_index  = motor_run_check();
      005EEB 74 05            [12]16505 	mov	a,#0x05
      005EED B5*0D 0E         [24]16506 	cjne	a,_motor_index,00306$
      005EF0 C0 07            [24]16507 	push	ar7
      005EF2 C0 06            [24]16508 	push	ar6
      005EF4 12r01rE8         [24]16509 	lcall	_motor_run_check
      005EF7 85 82*0D         [24]16510 	mov	_motor_index,dpl
      005EFA D0 06            [24]16511 	pop	ar6
      005EFC D0 07            [24]16512 	pop	ar7
      005EFE                      16513 00306$:
                                  16514 ;	src\main.c:455: if(motor_index2 == 5) motor_index2 = motor_run_check2();
      005EFE 74 05            [12]16515 	mov	a,#0x05
      005F00 B5*0E 0E         [24]16516 	cjne	a,_motor_index2,00310$
      005F03 C0 07            [24]16517 	push	ar7
      005F05 C0 06            [24]16518 	push	ar6
      005F07 12r04r60         [24]16519 	lcall	_motor_run_check2
      005F0A 85 82*0E         [24]16520 	mov	_motor_index2,dpl
      005F0D D0 06            [24]16521 	pop	ar6
      005F0F D0 07            [24]16522 	pop	ar7
      005F11                      16523 00310$:
                                  16524 ;	src\main.c:458: if(phut_out){
                                  16525 ;	src\main.c:459: phut_out = 0;
                                  16526 ;	assignBit
      005F11 10*1D 03         [24]16527 	jbc	_phut_out,02540$
      005F14 02r60r7B         [24]16528 	ljmp	00313$
      005F17                      16529 02540$:
                                  16530 ;	src\main.c:460: send_gsm_cmd("***stc");
      005F17 90r0Cr1F         [24]16531 	mov	dptr,#___str_142
      005F1A 75 F0 80         [24]16532 	mov	b,#0x80
      005F1D C0 07            [24]16533 	push	ar7
      005F1F C0 06            [24]16534 	push	ar6
      005F21 12r00r00         [24]16535 	lcall	_send_gsm_cmd
                                  16536 ;	src\main.c:461: send_gsm_byte(day/10+'0');
      005F24 90r00rDD         [24]16537 	mov	dptr,#_day
      005F27 E0               [24]16538 	movx	a,@dptr
      005F28 FD               [12]16539 	mov	r5,a
      005F29 7C 00            [12]16540 	mov	r4,#0x00
      005F2B 75*00 0A         [24]16541 	mov	__divsint_PARM_2,#0x0a
                                  16542 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      005F2E 8C*01            [24]16543 	mov	(__divsint_PARM_2 + 1),r4
      005F30 8D 82            [24]16544 	mov	dpl,r5
      005F32 8C 83            [24]16545 	mov	dph,r4
      005F34 12r00r00         [24]16546 	lcall	__divsint
      005F37 AC 82            [24]16547 	mov	r4,dpl
      005F39 74 30            [12]16548 	mov	a,#0x30
      005F3B 2C               [12]16549 	add	a,r4
      005F3C F5 82            [12]16550 	mov	dpl,a
      005F3E 12r00r00         [24]16551 	lcall	_send_gsm_byte
                                  16552 ;	src\main.c:462: send_gsm_byte(day%10+'0');
      005F41 90r00rDD         [24]16553 	mov	dptr,#_day
      005F44 E0               [24]16554 	movx	a,@dptr
      005F45 FD               [12]16555 	mov	r5,a
      005F46 7C 00            [12]16556 	mov	r4,#0x00
      005F48 75*00 0A         [24]16557 	mov	__modsint_PARM_2,#0x0a
                                  16558 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      005F4B 8C*01            [24]16559 	mov	(__modsint_PARM_2 + 1),r4
      005F4D 8D 82            [24]16560 	mov	dpl,r5
      005F4F 8C 83            [24]16561 	mov	dph,r4
      005F51 12r00r00         [24]16562 	lcall	__modsint
      005F54 AC 82            [24]16563 	mov	r4,dpl
      005F56 74 30            [12]16564 	mov	a,#0x30
      005F58 2C               [12]16565 	add	a,r4
      005F59 F5 82            [12]16566 	mov	dpl,a
      005F5B 12r00r00         [24]16567 	lcall	_send_gsm_byte
                                  16568 ;	src\main.c:463: send_gsm_byte(month/10+'0');
      005F5E 90r00rDE         [24]16569 	mov	dptr,#_month
      005F61 E0               [24]16570 	movx	a,@dptr
      005F62 FD               [12]16571 	mov	r5,a
      005F63 7C 00            [12]16572 	mov	r4,#0x00
      005F65 75*00 0A         [24]16573 	mov	__divsint_PARM_2,#0x0a
                                  16574 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      005F68 8C*01            [24]16575 	mov	(__divsint_PARM_2 + 1),r4
      005F6A 8D 82            [24]16576 	mov	dpl,r5
      005F6C 8C 83            [24]16577 	mov	dph,r4
      005F6E 12r00r00         [24]16578 	lcall	__divsint
      005F71 AC 82            [24]16579 	mov	r4,dpl
      005F73 74 30            [12]16580 	mov	a,#0x30
      005F75 2C               [12]16581 	add	a,r4
      005F76 F5 82            [12]16582 	mov	dpl,a
      005F78 12r00r00         [24]16583 	lcall	_send_gsm_byte
                                  16584 ;	src\main.c:464: send_gsm_byte(month%10+'0');
      005F7B 90r00rDE         [24]16585 	mov	dptr,#_month
      005F7E E0               [24]16586 	movx	a,@dptr
      005F7F FD               [12]16587 	mov	r5,a
      005F80 7C 00            [12]16588 	mov	r4,#0x00
      005F82 75*00 0A         [24]16589 	mov	__modsint_PARM_2,#0x0a
                                  16590 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      005F85 8C*01            [24]16591 	mov	(__modsint_PARM_2 + 1),r4
      005F87 8D 82            [24]16592 	mov	dpl,r5
      005F89 8C 83            [24]16593 	mov	dph,r4
      005F8B 12r00r00         [24]16594 	lcall	__modsint
      005F8E AC 82            [24]16595 	mov	r4,dpl
      005F90 74 30            [12]16596 	mov	a,#0x30
      005F92 2C               [12]16597 	add	a,r4
      005F93 F5 82            [12]16598 	mov	dpl,a
      005F95 12r00r00         [24]16599 	lcall	_send_gsm_byte
                                  16600 ;	src\main.c:465: send_gsm_byte(year/10+'0');
      005F98 90r00rDF         [24]16601 	mov	dptr,#_year
      005F9B E0               [24]16602 	movx	a,@dptr
      005F9C FD               [12]16603 	mov	r5,a
      005F9D 7C 00            [12]16604 	mov	r4,#0x00
      005F9F 75*00 0A         [24]16605 	mov	__divsint_PARM_2,#0x0a
                                  16606 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      005FA2 8C*01            [24]16607 	mov	(__divsint_PARM_2 + 1),r4
      005FA4 8D 82            [24]16608 	mov	dpl,r5
      005FA6 8C 83            [24]16609 	mov	dph,r4
      005FA8 12r00r00         [24]16610 	lcall	__divsint
      005FAB AC 82            [24]16611 	mov	r4,dpl
      005FAD 74 30            [12]16612 	mov	a,#0x30
      005FAF 2C               [12]16613 	add	a,r4
      005FB0 F5 82            [12]16614 	mov	dpl,a
      005FB2 12r00r00         [24]16615 	lcall	_send_gsm_byte
                                  16616 ;	src\main.c:466: send_gsm_byte(year%10+'0');
      005FB5 90r00rDF         [24]16617 	mov	dptr,#_year
      005FB8 E0               [24]16618 	movx	a,@dptr
      005FB9 FD               [12]16619 	mov	r5,a
      005FBA 7C 00            [12]16620 	mov	r4,#0x00
      005FBC 75*00 0A         [24]16621 	mov	__modsint_PARM_2,#0x0a
                                  16622 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      005FBF 8C*01            [24]16623 	mov	(__modsint_PARM_2 + 1),r4
      005FC1 8D 82            [24]16624 	mov	dpl,r5
      005FC3 8C 83            [24]16625 	mov	dph,r4
      005FC5 12r00r00         [24]16626 	lcall	__modsint
      005FC8 AC 82            [24]16627 	mov	r4,dpl
      005FCA 74 30            [12]16628 	mov	a,#0x30
      005FCC 2C               [12]16629 	add	a,r4
      005FCD F5 82            [12]16630 	mov	dpl,a
      005FCF 12r00r00         [24]16631 	lcall	_send_gsm_byte
                                  16632 ;	src\main.c:467: send_gsm_byte(hour/10+'0');
      005FD2 AC*02            [24]16633 	mov	r4,_hour
      005FD4 7D 00            [12]16634 	mov	r5,#0x00
      005FD6 75*00 0A         [24]16635 	mov	__divsint_PARM_2,#0x0a
                                  16636 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      005FD9 8D*01            [24]16637 	mov	(__divsint_PARM_2 + 1),r5
      005FDB 8C 82            [24]16638 	mov	dpl,r4
      005FDD 8D 83            [24]16639 	mov	dph,r5
      005FDF 12r00r00         [24]16640 	lcall	__divsint
      005FE2 AC 82            [24]16641 	mov	r4,dpl
      005FE4 74 30            [12]16642 	mov	a,#0x30
      005FE6 2C               [12]16643 	add	a,r4
      005FE7 F5 82            [12]16644 	mov	dpl,a
      005FE9 12r00r00         [24]16645 	lcall	_send_gsm_byte
                                  16646 ;	src\main.c:468: send_gsm_byte(hour%10+'0');
      005FEC AC*02            [24]16647 	mov	r4,_hour
      005FEE 7D 00            [12]16648 	mov	r5,#0x00
      005FF0 75*00 0A         [24]16649 	mov	__modsint_PARM_2,#0x0a
                                  16650 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      005FF3 8D*01            [24]16651 	mov	(__modsint_PARM_2 + 1),r5
      005FF5 8C 82            [24]16652 	mov	dpl,r4
      005FF7 8D 83            [24]16653 	mov	dph,r5
      005FF9 12r00r00         [24]16654 	lcall	__modsint
      005FFC AC 82            [24]16655 	mov	r4,dpl
      005FFE 74 30            [12]16656 	mov	a,#0x30
      006000 2C               [12]16657 	add	a,r4
      006001 F5 82            [12]16658 	mov	dpl,a
      006003 12r00r00         [24]16659 	lcall	_send_gsm_byte
                                  16660 ;	src\main.c:469: send_gsm_byte(minute/10+'0');
      006006 AC*01            [24]16661 	mov	r4,_minute
      006008 7D 00            [12]16662 	mov	r5,#0x00
      00600A 75*00 0A         [24]16663 	mov	__divsint_PARM_2,#0x0a
                                  16664 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      00600D 8D*01            [24]16665 	mov	(__divsint_PARM_2 + 1),r5
      00600F 8C 82            [24]16666 	mov	dpl,r4
      006011 8D 83            [24]16667 	mov	dph,r5
      006013 12r00r00         [24]16668 	lcall	__divsint
      006016 AC 82            [24]16669 	mov	r4,dpl
      006018 74 30            [12]16670 	mov	a,#0x30
      00601A 2C               [12]16671 	add	a,r4
      00601B F5 82            [12]16672 	mov	dpl,a
      00601D 12r00r00         [24]16673 	lcall	_send_gsm_byte
                                  16674 ;	src\main.c:470: send_gsm_byte(minute%10+'0');
      006020 AC*01            [24]16675 	mov	r4,_minute
      006022 7D 00            [12]16676 	mov	r5,#0x00
      006024 75*00 0A         [24]16677 	mov	__modsint_PARM_2,#0x0a
                                  16678 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      006027 8D*01            [24]16679 	mov	(__modsint_PARM_2 + 1),r5
      006029 8C 82            [24]16680 	mov	dpl,r4
      00602B 8D 83            [24]16681 	mov	dph,r5
      00602D 12r00r00         [24]16682 	lcall	__modsint
      006030 AC 82            [24]16683 	mov	r4,dpl
      006032 74 30            [12]16684 	mov	a,#0x30
      006034 2C               [12]16685 	add	a,r4
      006035 F5 82            [12]16686 	mov	dpl,a
      006037 12r00r00         [24]16687 	lcall	_send_gsm_byte
                                  16688 ;	src\main.c:471: send_gsm_byte(second/10+'0');
      00603A AC*00            [24]16689 	mov	r4,_second
      00603C 7D 00            [12]16690 	mov	r5,#0x00
      00603E 75*00 0A         [24]16691 	mov	__divsint_PARM_2,#0x0a
                                  16692 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      006041 8D*01            [24]16693 	mov	(__divsint_PARM_2 + 1),r5
      006043 8C 82            [24]16694 	mov	dpl,r4
      006045 8D 83            [24]16695 	mov	dph,r5
      006047 12r00r00         [24]16696 	lcall	__divsint
      00604A AC 82            [24]16697 	mov	r4,dpl
      00604C 74 30            [12]16698 	mov	a,#0x30
      00604E 2C               [12]16699 	add	a,r4
      00604F F5 82            [12]16700 	mov	dpl,a
      006051 12r00r00         [24]16701 	lcall	_send_gsm_byte
                                  16702 ;	src\main.c:472: send_gsm_byte(second%10+'0');
      006054 AC*00            [24]16703 	mov	r4,_second
      006056 7D 00            [12]16704 	mov	r5,#0x00
      006058 75*00 0A         [24]16705 	mov	__modsint_PARM_2,#0x0a
                                  16706 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      00605B 8D*01            [24]16707 	mov	(__modsint_PARM_2 + 1),r5
      00605D 8C 82            [24]16708 	mov	dpl,r4
      00605F 8D 83            [24]16709 	mov	dph,r5
      006061 12r00r00         [24]16710 	lcall	__modsint
      006064 AC 82            [24]16711 	mov	r4,dpl
      006066 74 30            [12]16712 	mov	a,#0x30
      006068 2C               [12]16713 	add	a,r4
      006069 F5 82            [12]16714 	mov	dpl,a
      00606B 12r00r00         [24]16715 	lcall	_send_gsm_byte
                                  16716 ;	src\main.c:473: send_gsm_cmd("###\r\n");
      00606E 90r0Cr26         [24]16717 	mov	dptr,#___str_143
      006071 75 F0 80         [24]16718 	mov	b,#0x80
      006074 12r00r00         [24]16719 	lcall	_send_gsm_cmd
      006077 D0 06            [24]16720 	pop	ar6
      006079 D0 07            [24]16721 	pop	ar7
      00607B                      16722 00313$:
                                  16723 ;	src\main.c:475: if(!bao_cao_dien_ap_thap && dien_ap_thap){
      00607B 20*3C 2E         [24]16724 	jb	_bao_cao_dien_ap_thap,00317$
      00607E 30*00 2B         [24]16725 	jnb	_dien_ap_thap,00317$
                                  16726 ;	src\main.c:476: baocaosms(CHINH,"\rdien ap thap");
                                  16727 ;	assignBit
      006081 D2*44            [12]16728 	setb	_baocaosms_PARM_1
      006083 90r0Cr2C         [24]16729 	mov	dptr,#___str_144
      006086 75 F0 80         [24]16730 	mov	b,#0x80
      006089 C0 07            [24]16731 	push	ar7
      00608B C0 06            [24]16732 	push	ar6
      00608D 12r17r8C         [24]16733 	lcall	_baocaosms
      006090 D0 06            [24]16734 	pop	ar6
      006092 D0 07            [24]16735 	pop	ar7
                                  16736 ;	src\main.c:477: if(bat_phone_phu)baocaosms(PHU,"\rdien ap thap");
      006094 30*08 13         [24]16737 	jnb	_bat_phone_phu,00315$
                                  16738 ;	assignBit
      006097 C2*44            [12]16739 	clr	_baocaosms_PARM_1
      006099 90r0Cr2C         [24]16740 	mov	dptr,#___str_144
      00609C 75 F0 80         [24]16741 	mov	b,#0x80
      00609F C0 07            [24]16742 	push	ar7
      0060A1 C0 06            [24]16743 	push	ar6
      0060A3 12r17r8C         [24]16744 	lcall	_baocaosms
      0060A6 D0 06            [24]16745 	pop	ar6
      0060A8 D0 07            [24]16746 	pop	ar7
      0060AA                      16747 00315$:
                                  16748 ;	src\main.c:478: bao_cao_dien_ap_thap = 1;
                                  16749 ;	assignBit
      0060AA D2*3C            [12]16750 	setb	_bao_cao_dien_ap_thap
      0060AC                      16751 00317$:
                                  16752 ;	src\main.c:480: if(bao_cao_dien_ap_thap && !dien_ap_thap){
      0060AC 30*3C 2E         [24]16753 	jnb	_bao_cao_dien_ap_thap,00322$
      0060AF 20*00 2B         [24]16754 	jb	_dien_ap_thap,00322$
                                  16755 ;	src\main.c:481: baocaosms(CHINH,"\rdien ap khoi phuc");
                                  16756 ;	assignBit
      0060B2 D2*44            [12]16757 	setb	_baocaosms_PARM_1
      0060B4 90r0Cr3A         [24]16758 	mov	dptr,#___str_145
      0060B7 75 F0 80         [24]16759 	mov	b,#0x80
      0060BA C0 07            [24]16760 	push	ar7
      0060BC C0 06            [24]16761 	push	ar6
      0060BE 12r17r8C         [24]16762 	lcall	_baocaosms
      0060C1 D0 06            [24]16763 	pop	ar6
      0060C3 D0 07            [24]16764 	pop	ar7
                                  16765 ;	src\main.c:482: if(bat_phone_phu)baocaosms(PHU,"\rdien ap khoi phuc");
      0060C5 30*08 13         [24]16766 	jnb	_bat_phone_phu,00320$
                                  16767 ;	assignBit
      0060C8 C2*44            [12]16768 	clr	_baocaosms_PARM_1
      0060CA 90r0Cr3A         [24]16769 	mov	dptr,#___str_145
      0060CD 75 F0 80         [24]16770 	mov	b,#0x80
      0060D0 C0 07            [24]16771 	push	ar7
      0060D2 C0 06            [24]16772 	push	ar6
      0060D4 12r17r8C         [24]16773 	lcall	_baocaosms
      0060D7 D0 06            [24]16774 	pop	ar6
      0060D9 D0 07            [24]16775 	pop	ar7
      0060DB                      16776 00320$:
                                  16777 ;	src\main.c:483: bao_cao_dien_ap_thap = 0;
                                  16778 ;	assignBit
      0060DB C2*3C            [12]16779 	clr	_bao_cao_dien_ap_thap
      0060DD                      16780 00322$:
                                  16781 ;	src\main.c:485: if(!xung_giay_check && !mat_xung_giay){
      0060DD 90r00rE6         [24]16782 	mov	dptr,#_xung_giay_check
      0060E0 E0               [24]16783 	movx	a,@dptr
      0060E1 70 18            [24]16784 	jnz	00325$
      0060E3 20*36 15         [24]16785 	jb	_mat_xung_giay,00325$
                                  16786 ;	src\main.c:486: mat_xung_giay = 1;
                                  16787 ;	assignBit
      0060E6 D2*36            [12]16788 	setb	_mat_xung_giay
                                  16789 ;	src\main.c:487: baocaosms(CHINH,"\rmat xung giay");
                                  16790 ;	assignBit
      0060E8 D2*44            [12]16791 	setb	_baocaosms_PARM_1
      0060EA 90r0Cr4D         [24]16792 	mov	dptr,#___str_146
      0060ED 75 F0 80         [24]16793 	mov	b,#0x80
      0060F0 C0 07            [24]16794 	push	ar7
      0060F2 C0 06            [24]16795 	push	ar6
      0060F4 12r17r8C         [24]16796 	lcall	_baocaosms
      0060F7 D0 06            [24]16797 	pop	ar6
      0060F9 D0 07            [24]16798 	pop	ar7
      0060FB                      16799 00325$:
                                  16800 ;	src\main.c:490: if(!thoi_gian_doi_doc_cam[0] && !loi_cam_motor1){
      0060FB 90r00rE7         [24]16801 	mov	dptr,#_thoi_gian_doi_doc_cam
      0060FE E0               [24]16802 	movx	a,@dptr
      0060FF 70 2E            [24]16803 	jnz	00330$
      006101 20*37 2B         [24]16804 	jb	_loi_cam_motor1,00330$
                                  16805 ;	src\main.c:491: loi_cam_motor1 = 1;
                                  16806 ;	assignBit
      006104 D2*37            [12]16807 	setb	_loi_cam_motor1
                                  16808 ;	src\main.c:492: baocaosms(CHINH,"\rloi doc cam 1");
                                  16809 ;	assignBit
      006106 D2*44            [12]16810 	setb	_baocaosms_PARM_1
      006108 90r0Cr5C         [24]16811 	mov	dptr,#___str_147
      00610B 75 F0 80         [24]16812 	mov	b,#0x80
      00610E C0 07            [24]16813 	push	ar7
      006110 C0 06            [24]16814 	push	ar6
      006112 12r17r8C         [24]16815 	lcall	_baocaosms
      006115 D0 06            [24]16816 	pop	ar6
      006117 D0 07            [24]16817 	pop	ar7
                                  16818 ;	src\main.c:493: if(bat_phone_phu)baocaosms(PHU,"\rloi doc cam 1");
      006119 30*08 13         [24]16819 	jnb	_bat_phone_phu,00330$
                                  16820 ;	assignBit
      00611C C2*44            [12]16821 	clr	_baocaosms_PARM_1
      00611E 90r0Cr5C         [24]16822 	mov	dptr,#___str_147
      006121 75 F0 80         [24]16823 	mov	b,#0x80
      006124 C0 07            [24]16824 	push	ar7
      006126 C0 06            [24]16825 	push	ar6
      006128 12r17r8C         [24]16826 	lcall	_baocaosms
      00612B D0 06            [24]16827 	pop	ar6
      00612D D0 07            [24]16828 	pop	ar7
      00612F                      16829 00330$:
                                  16830 ;	src\main.c:495: if(so_motor>1 && !thoi_gian_doi_doc_cam[1] && !loi_cam_motor2){
      00612F 90r01r2E         [24]16831 	mov	dptr,#_so_motor
      006132 E0               [24]16832 	movx	a,@dptr
      006133 FD               [12]16833 	mov  r5,a
      006134 24 FE            [12]16834 	add	a,#0xff - 0x01
      006136 50 34            [24]16835 	jnc	00335$
      006138 90r00rE8         [24]16836 	mov	dptr,#(_thoi_gian_doi_doc_cam + 0x0001)
      00613B E0               [24]16837 	movx	a,@dptr
      00613C 70 2E            [24]16838 	jnz	00335$
      00613E 20*38 2B         [24]16839 	jb	_loi_cam_motor2,00335$
                                  16840 ;	src\main.c:496: loi_cam_motor2 = 1;
                                  16841 ;	assignBit
      006141 D2*38            [12]16842 	setb	_loi_cam_motor2
                                  16843 ;	src\main.c:497: baocaosms(CHINH,"\rloi doc cam 2");
                                  16844 ;	assignBit
      006143 D2*44            [12]16845 	setb	_baocaosms_PARM_1
      006145 90r0Cr6B         [24]16846 	mov	dptr,#___str_148
      006148 75 F0 80         [24]16847 	mov	b,#0x80
      00614B C0 07            [24]16848 	push	ar7
      00614D C0 06            [24]16849 	push	ar6
      00614F 12r17r8C         [24]16850 	lcall	_baocaosms
      006152 D0 06            [24]16851 	pop	ar6
      006154 D0 07            [24]16852 	pop	ar7
                                  16853 ;	src\main.c:498: if(bat_phone_phu)baocaosms(PHU,"\rloi doc cam 2");
      006156 30*08 13         [24]16854 	jnb	_bat_phone_phu,00335$
                                  16855 ;	assignBit
      006159 C2*44            [12]16856 	clr	_baocaosms_PARM_1
      00615B 90r0Cr6B         [24]16857 	mov	dptr,#___str_148
      00615E 75 F0 80         [24]16858 	mov	b,#0x80
      006161 C0 07            [24]16859 	push	ar7
      006163 C0 06            [24]16860 	push	ar6
      006165 12r17r8C         [24]16861 	lcall	_baocaosms
      006168 D0 06            [24]16862 	pop	ar6
      00616A D0 07            [24]16863 	pop	ar7
      00616C                      16864 00335$:
                                  16865 ;	src\main.c:500: if(so_motor>2 && !thoi_gian_doi_doc_cam[2] && !loi_cam_motor3){
      00616C 90r01r2E         [24]16866 	mov	dptr,#_so_motor
      00616F E0               [24]16867 	movx	a,@dptr
      006170 FD               [12]16868 	mov  r5,a
      006171 24 FD            [12]16869 	add	a,#0xff - 0x02
      006173 50 34            [24]16870 	jnc	00341$
      006175 90r00rE9         [24]16871 	mov	dptr,#(_thoi_gian_doi_doc_cam + 0x0002)
      006178 E0               [24]16872 	movx	a,@dptr
      006179 70 2E            [24]16873 	jnz	00341$
      00617B 20*39 2B         [24]16874 	jb	_loi_cam_motor3,00341$
                                  16875 ;	src\main.c:501: loi_cam_motor3 = 1;
                                  16876 ;	assignBit
      00617E D2*39            [12]16877 	setb	_loi_cam_motor3
                                  16878 ;	src\main.c:502: baocaosms(CHINH,"\rloi doc cam 3");
                                  16879 ;	assignBit
      006180 D2*44            [12]16880 	setb	_baocaosms_PARM_1
      006182 90r0Cr7A         [24]16881 	mov	dptr,#___str_149
      006185 75 F0 80         [24]16882 	mov	b,#0x80
      006188 C0 07            [24]16883 	push	ar7
      00618A C0 06            [24]16884 	push	ar6
      00618C 12r17r8C         [24]16885 	lcall	_baocaosms
      00618F D0 06            [24]16886 	pop	ar6
      006191 D0 07            [24]16887 	pop	ar7
                                  16888 ;	src\main.c:503: if(bat_phone_phu)baocaosms(PHU,"\rloi doc cam 3");
      006193 30*08 13         [24]16889 	jnb	_bat_phone_phu,00341$
                                  16890 ;	assignBit
      006196 C2*44            [12]16891 	clr	_baocaosms_PARM_1
      006198 90r0Cr7A         [24]16892 	mov	dptr,#___str_149
      00619B 75 F0 80         [24]16893 	mov	b,#0x80
      00619E C0 07            [24]16894 	push	ar7
      0061A0 C0 06            [24]16895 	push	ar6
      0061A2 12r17r8C         [24]16896 	lcall	_baocaosms
      0061A5 D0 06            [24]16897 	pop	ar6
      0061A7 D0 07            [24]16898 	pop	ar7
      0061A9                      16899 00341$:
                                  16900 ;	src\main.c:505: if(so_motor==4 && !thoi_gian_doi_doc_cam[3] && !loi_cam_motor4){
      0061A9 90r01r2E         [24]16901 	mov	dptr,#_so_motor
      0061AC E0               [24]16902 	movx	a,@dptr
      0061AD FD               [12]16903 	mov	r5,a
      0061AE BD 04 34         [24]16904 	cjne	r5,#0x04,00347$
      0061B1 90r00rEA         [24]16905 	mov	dptr,#(_thoi_gian_doi_doc_cam + 0x0003)
      0061B4 E0               [24]16906 	movx	a,@dptr
      0061B5 70 2E            [24]16907 	jnz	00347$
      0061B7 20*3A 2B         [24]16908 	jb	_loi_cam_motor4,00347$
                                  16909 ;	src\main.c:506: loi_cam_motor4 = 1;
                                  16910 ;	assignBit
      0061BA D2*3A            [12]16911 	setb	_loi_cam_motor4
                                  16912 ;	src\main.c:507: baocaosms(CHINH,"\rloi doc cam 4");
                                  16913 ;	assignBit
      0061BC D2*44            [12]16914 	setb	_baocaosms_PARM_1
      0061BE 90r0Cr89         [24]16915 	mov	dptr,#___str_150
      0061C1 75 F0 80         [24]16916 	mov	b,#0x80
      0061C4 C0 07            [24]16917 	push	ar7
      0061C6 C0 06            [24]16918 	push	ar6
      0061C8 12r17r8C         [24]16919 	lcall	_baocaosms
      0061CB D0 06            [24]16920 	pop	ar6
      0061CD D0 07            [24]16921 	pop	ar7
                                  16922 ;	src\main.c:508: if(bat_phone_phu)baocaosms(PHU,"\rloi doc cam 4");
      0061CF 30*08 13         [24]16923 	jnb	_bat_phone_phu,00347$
                                  16924 ;	assignBit
      0061D2 C2*44            [12]16925 	clr	_baocaosms_PARM_1
      0061D4 90r0Cr89         [24]16926 	mov	dptr,#___str_150
      0061D7 75 F0 80         [24]16927 	mov	b,#0x80
      0061DA C0 07            [24]16928 	push	ar7
      0061DC C0 06            [24]16929 	push	ar6
      0061DE 12r17r8C         [24]16930 	lcall	_baocaosms
      0061E1 D0 06            [24]16931 	pop	ar6
      0061E3 D0 07            [24]16932 	pop	ar7
      0061E5                      16933 00347$:
                                  16934 ;	src\main.c:510: if(giay_out){
      0061E5 20*1C 03         [24]16935 	jb	_giay_out,02565$
      0061E8 02r62rB6         [24]16936 	ljmp	00374$
      0061EB                      16937 02565$:
                                  16938 ;	src\main.c:511: if(!gsm_pw){
      0061EB 20 A0 16         [24]16939 	jb	_P20,00353$
                                  16940 ;	src\main.c:512: if(!--gsm_delay_reset){
      0061EE 90r00rB7         [24]16941 	mov	dptr,#_gsm_delay_reset
      0061F1 E0               [24]16942 	movx	a,@dptr
      0061F2 14               [12]16943 	dec	a
      0061F3 F0               [24]16944 	movx	@dptr,a
      0061F4 E0               [24]16945 	movx	a,@dptr
      0061F5 70 0D            [24]16946 	jnz	00353$
                                  16947 ;	src\main.c:513: ADC_CONTR = 0x83;
      0061F7 75 BC 83         [24]16948 	mov	_ADC_CONTR,#0x83
                                  16949 ;	src\main.c:514: gsm_pw = 1;
                                  16950 ;	assignBit
      0061FA D2 A0            [12]16951 	setb	_P20
                                  16952 ;	src\main.c:515: gsm_delay_reset = 30;
      0061FC 90r00rB7         [24]16953 	mov	dptr,#_gsm_delay_reset
      0061FF 74 1E            [12]16954 	mov	a,#0x1e
      006201 F0               [24]16955 	movx	@dptr,a
                                  16956 ;	src\main.c:516: gsm_reset=1;
                                  16957 ;	assignBit
      006202 D2*03            [12]16958 	setb	_gsm_reset
      006204                      16959 00353$:
                                  16960 ;	src\main.c:519: if(delay_ve_kim && !canhkim && !--delay_ve_kim){
      006204 90r00rE2         [24]16961 	mov	dptr,#_delay_ve_kim
      006207 E0               [24]16962 	movx	a,@dptr
      006208 FD               [12]16963 	mov	r5,a
      006209 E0               [24]16964 	movx	a,@dptr
      00620A 60 2D            [24]16965 	jz	00355$
      00620C 90r00rE0         [24]16966 	mov	dptr,#_canhkim
      00620F E0               [24]16967 	movx	a,@dptr
      006210 70 27            [24]16968 	jnz	00355$
      006212 ED               [12]16969 	mov	a,r5
      006213 14               [12]16970 	dec	a
      006214 90r00rE2         [24]16971 	mov	dptr,#_delay_ve_kim
      006217 F0               [24]16972 	movx	@dptr,a
      006218 E0               [24]16973 	movx	a,@dptr
      006219 70 1E            [24]16974 	jnz	00355$
                                  16975 ;	src\main.c:520: canhkim = 5;
      00621B 90r00rE0         [24]16976 	mov	dptr,#_canhkim
      00621E 74 05            [12]16977 	mov	a,#0x05
      006220 F0               [24]16978 	movx	@dptr,a
                                  16979 ;	src\main.c:521: delay_ve_kim = 5;
      006221 90r00rE2         [24]16980 	mov	dptr,#_delay_ve_kim
      006224 F0               [24]16981 	movx	@dptr,a
                                  16982 ;	src\main.c:522: motor_index  = motor_run_check();
      006225 C0 07            [24]16983 	push	ar7
      006227 C0 06            [24]16984 	push	ar6
      006229 12r01rE8         [24]16985 	lcall	_motor_run_check
      00622C 85 82*0D         [24]16986 	mov	_motor_index,dpl
                                  16987 ;	src\main.c:523: motor_index2 = motor_run_check2();
      00622F 12r04r60         [24]16988 	lcall	_motor_run_check2
      006232 85 82*0E         [24]16989 	mov	_motor_index2,dpl
      006235 D0 06            [24]16990 	pop	ar6
      006237 D0 07            [24]16991 	pop	ar7
      006239                      16992 00355$:
                                  16993 ;	src\main.c:526: if(motor_index!=5 && thoi_gian_doi_doc_cam[motor_index] && !--thoi_gian_doi_doc_cam[motor_index]){ cam_vao = cam_vao_han = 0;motor_index = 5;}
      006239 74 05            [12]16994 	mov	a,#0x05
      00623B B5*0D 02         [24]16995 	cjne	a,_motor_index,02571$
      00623E 80 22            [24]16996 	sjmp	00359$
      006240                      16997 02571$:
      006240 E5*0D            [12]16998 	mov	a,_motor_index
      006242 24rE7            [12]16999 	add	a,#_thoi_gian_doi_doc_cam
      006244 FC               [12]17000 	mov	r4,a
      006245 E4               [12]17001 	clr	a
      006246 34s00            [12]17002 	addc	a,#(_thoi_gian_doi_doc_cam >> 8)
      006248 FD               [12]17003 	mov	r5,a
      006249 8C 82            [24]17004 	mov	dpl,r4
      00624B 8D 83            [24]17005 	mov	dph,r5
      00624D E0               [24]17006 	movx	a,@dptr
      00624E FB               [12]17007 	mov	r3,a
      00624F 60 11            [24]17008 	jz	00359$
      006251 1B               [12]17009 	dec	r3
      006252 8C 82            [24]17010 	mov	dpl,r4
      006254 8D 83            [24]17011 	mov	dph,r5
      006256 EB               [12]17012 	mov	a,r3
      006257 F0               [24]17013 	movx	@dptr,a
      006258 EB               [12]17014 	mov	a,r3
      006259 70 07            [24]17015 	jnz	00359$
                                  17016 ;	assignBit
      00625B C2*17            [12]17017 	clr	_cam_vao_han
                                  17018 ;	assignBit
      00625D C2*15            [12]17019 	clr	_cam_vao
      00625F 75*0D 05         [24]17020 	mov	_motor_index,#0x05
      006262                      17021 00359$:
                                  17022 ;	src\main.c:527: if((motor_index2!=5)  && thoi_gian_doi_doc_cam[motor_index2] && !--thoi_gian_doi_doc_cam[motor_index2]){ cam_vao2 = cam_vao_han2 = 0;motor_index2 = 5;}
      006262 74 05            [12]17023 	mov	a,#0x05
      006264 B5*0E 02         [24]17024 	cjne	a,_motor_index2,02574$
      006267 80 22            [24]17025 	sjmp	00363$
      006269                      17026 02574$:
      006269 E5*0E            [12]17027 	mov	a,_motor_index2
      00626B 24rE7            [12]17028 	add	a,#_thoi_gian_doi_doc_cam
      00626D FC               [12]17029 	mov	r4,a
      00626E E4               [12]17030 	clr	a
      00626F 34s00            [12]17031 	addc	a,#(_thoi_gian_doi_doc_cam >> 8)
      006271 FD               [12]17032 	mov	r5,a
      006272 8C 82            [24]17033 	mov	dpl,r4
      006274 8D 83            [24]17034 	mov	dph,r5
      006276 E0               [24]17035 	movx	a,@dptr
      006277 FB               [12]17036 	mov	r3,a
      006278 60 11            [24]17037 	jz	00363$
      00627A 1B               [12]17038 	dec	r3
      00627B 8C 82            [24]17039 	mov	dpl,r4
      00627D 8D 83            [24]17040 	mov	dph,r5
      00627F EB               [12]17041 	mov	a,r3
      006280 F0               [24]17042 	movx	@dptr,a
      006281 EB               [12]17043 	mov	a,r3
      006282 70 07            [24]17044 	jnz	00363$
                                  17045 ;	assignBit
      006284 C2*18            [12]17046 	clr	_cam_vao_han2
                                  17047 ;	assignBit
      006286 C2*16            [12]17048 	clr	_cam_vao2
      006288 75*0E 05         [24]17049 	mov	_motor_index2,#0x05
      00628B                      17050 00363$:
                                  17051 ;	src\main.c:529: if(mode_wait && (!(eep_mp3%4) || !mp3_playing)) mode_wait--;
      00628B 90r00rF5         [24]17052 	mov	dptr,#_mode_wait
      00628E E0               [24]17053 	movx	a,@dptr
      00628F 60 12            [24]17054 	jz	00367$
      006291 90 F0 10         [24]17055 	mov	dptr,#_eep_mp3
      006294 E4               [12]17056 	clr	a
      006295 93               [24]17057 	movc	a,@a+dptr
      006296 54 03            [12]17058 	anl	a,#0x03
      006298 60 03            [24]17059 	jz	00366$
      00629A 20 92 06         [24]17060 	jb	_P12,00367$
      00629D                      17061 00366$:
      00629D 90r00rF5         [24]17062 	mov	dptr,#_mode_wait
      0062A0 E0               [24]17063 	movx	a,@dptr
      0062A1 14               [12]17064 	dec	a
      0062A2 F0               [24]17065 	movx	@dptr,a
      0062A3                      17066 00367$:
                                  17067 ;	src\main.c:531: if(phim_mode_doi && phim_mode_giu){
      0062A3 90r00rF0         [24]17068 	mov	dptr,#_phim_mode_doi
      0062A6 E0               [24]17069 	movx	a,@dptr
      0062A7 FD               [12]17070 	mov	r5,a
      0062A8 E0               [24]17071 	movx	a,@dptr
      0062A9 60 09            [24]17072 	jz	00371$
      0062AB 30*22 06         [24]17073 	jnb	_phim_mode_giu,00371$
                                  17074 ;	src\main.c:532: phim_mode_doi--;
      0062AE ED               [12]17075 	mov	a,r5
      0062AF 14               [12]17076 	dec	a
      0062B0 90r00rF0         [24]17077 	mov	dptr,#_phim_mode_doi
      0062B3 F0               [24]17078 	movx	@dptr,a
      0062B4                      17079 00371$:
                                  17080 ;	src\main.c:534: giay_out=0;
                                  17081 ;	assignBit
      0062B4 C2*1C            [12]17082 	clr	_giay_out
      0062B6                      17083 00374$:
                                  17084 ;	src\main.c:537: kiem_tra_den();
      0062B6 C0 07            [24]17085 	push	ar7
      0062B8 C0 06            [24]17086 	push	ar6
      0062BA 12r00r00         [24]17087 	lcall	_kiem_tra_den
      0062BD D0 06            [24]17088 	pop	ar6
      0062BF D0 07            [24]17089 	pop	ar7
                                  17090 ;	src\main.c:539: if(!mode && (eep_mp3%4)==2) kiem_tra_nhac();
      0062C1 90r00rF3         [24]17091 	mov	dptr,#_mode
      0062C4 E0               [24]17092 	movx	a,@dptr
      0062C5 70 1B            [24]17093 	jnz	00376$
      0062C7 90 F0 10         [24]17094 	mov	dptr,#_eep_mp3
      0062CA E4               [12]17095 	clr	a
      0062CB 93               [24]17096 	movc	a,@a+dptr
      0062CC 54 03            [12]17097 	anl	a,#0x03
      0062CE FC               [12]17098 	mov	r4,a
      0062CF 7D 00            [12]17099 	mov	r5,#0x00
      0062D1 BC 02 0E         [24]17100 	cjne	r4,#0x02,00376$
      0062D4 BD 00 0B         [24]17101 	cjne	r5,#0x00,00376$
      0062D7 C0 07            [24]17102 	push	ar7
      0062D9 C0 06            [24]17103 	push	ar6
      0062DB 12r01r47         [24]17104 	lcall	_kiem_tra_nhac
      0062DE D0 06            [24]17105 	pop	ar6
      0062E0 D0 07            [24]17106 	pop	ar7
      0062E2                      17107 00376$:
                                  17108 ;	src\main.c:542: if(((eep_ngayreset && !ngay_reset_con_lai && eep_gioreset==hour && minute>5) || so_lan_goi_dien > 1)  && motor_index==5 && motor_index2==5 && (!(eep_mp3%4) || !mp3_playing)){
      0062E2 90 F0 03         [24]17109 	mov	dptr,#_eep_ngayreset
      0062E5 E4               [12]17110 	clr	a
      0062E6 93               [24]17111 	movc	a,@a+dptr
      0062E7 60 15            [24]17112 	jz	00387$
      0062E9 90r00rE5         [24]17113 	mov	dptr,#_ngay_reset_con_lai
      0062EC E0               [24]17114 	movx	a,@dptr
      0062ED 70 0F            [24]17115 	jnz	00387$
      0062EF 90 F0 04         [24]17116 	mov	dptr,#_eep_gioreset
      0062F2 E4               [12]17117 	clr	a
      0062F3 93               [24]17118 	movc	a,@a+dptr
      0062F4 FD               [12]17119 	mov	r5,a
      0062F5 B5*02 06         [24]17120 	cjne	a,_hour,00387$
      0062F8 E5*01            [12]17121 	mov	a,_minute
      0062FA 24 FA            [12]17122 	add	a,#0xff - 0x05
      0062FC 40 09            [24]17123 	jc	00388$
      0062FE                      17124 00387$:
      0062FE 90r00rB8         [24]17125 	mov	dptr,#_so_lan_goi_dien
      006301 E0               [24]17126 	movx	a,@dptr
      006302 FD               [12]17127 	mov  r5,a
      006303 24 FE            [12]17128 	add	a,#0xff - 0x01
      006305 50 74            [24]17129 	jnc	00383$
      006307                      17130 00388$:
      006307 74 05            [12]17131 	mov	a,#0x05
      006309 B5*0D 6F         [24]17132 	cjne	a,_motor_index,00383$
      00630C 74 05            [12]17133 	mov	a,#0x05
      00630E B5*0E 6A         [24]17134 	cjne	a,_motor_index2,00383$
      006311 90 F0 10         [24]17135 	mov	dptr,#_eep_mp3
      006314 E4               [12]17136 	clr	a
      006315 93               [24]17137 	movc	a,@a+dptr
      006316 54 03            [12]17138 	anl	a,#0x03
      006318 60 03            [24]17139 	jz	00382$
      00631A 20 92 5E         [24]17140 	jb	_P12,00383$
      00631D                      17141 00382$:
                                  17142 ;	src\main.c:543: if(max_second<60)rtc_settime(eep_gioreset,6,0);
      00631D 90r01r2F         [24]17143 	mov	dptr,#_max_second
      006320 E0               [24]17144 	movx	a,@dptr
      006321 FD               [12]17145 	mov	r5,a
      006322 BD 3C 00         [24]17146 	cjne	r5,#0x3c,02597$
      006325                      17147 02597$:
      006325 50 19            [24]17148 	jnc	00379$
      006327 90 F0 04         [24]17149 	mov	dptr,#_eep_gioreset
      00632A E4               [12]17150 	clr	a
      00632B 93               [24]17151 	movc	a,@a+dptr
      00632C FD               [12]17152 	mov	r5,a
      00632D 75*00 06         [24]17153 	mov	_rtc_settime_PARM_2,#0x06
      006330 75*00 00         [24]17154 	mov	_rtc_settime_PARM_3,#0x00
      006333 8D 82            [24]17155 	mov	dpl,r5
      006335 C0 07            [24]17156 	push	ar7
      006337 C0 06            [24]17157 	push	ar6
      006339 12r00r00         [24]17158 	lcall	_rtc_settime
      00633C D0 06            [24]17159 	pop	ar6
      00633E D0 07            [24]17160 	pop	ar7
      006340                      17161 00379$:
                                  17162 ;	src\main.c:544: if(so_lan_goi_dien>1) baocaosms(CHINH,"\rChuan bi reset phan mem tu cuoc goi");	
      006340 90r00rB8         [24]17163 	mov	dptr,#_so_lan_goi_dien
      006343 E0               [24]17164 	movx	a,@dptr
      006344 24 FE            [12]17165 	add	a,#0xff - 0x01
      006346 50 13            [24]17166 	jnc	00381$
                                  17167 ;	assignBit
      006348 D2*44            [12]17168 	setb	_baocaosms_PARM_1
      00634A 90r0Cr98         [24]17169 	mov	dptr,#___str_151
      00634D 75 F0 80         [24]17170 	mov	b,#0x80
      006350 C0 07            [24]17171 	push	ar7
      006352 C0 06            [24]17172 	push	ar6
      006354 12r17r8C         [24]17173 	lcall	_baocaosms
      006357 D0 06            [24]17174 	pop	ar6
      006359 D0 07            [24]17175 	pop	ar7
      00635B                      17176 00381$:
                                  17177 ;	src\main.c:545: EA=0;
                                  17178 ;	assignBit
      00635B C2 AF            [12]17179 	clr	_EA
                                  17180 ;	src\main.c:546: gsm_pw = 0;
                                  17181 ;	assignBit
      00635D C2 A0            [12]17182 	clr	_P20
                                  17183 ;	src\main.c:547: IAP_ghibyte(NORRESET_EEPROM,0);
      00635F 75*00 00         [24]17184 	mov	_IAP_ghibyte_PARM_2,#0x00
      006362 90 00 05         [24]17185 	mov	dptr,#0x0005
      006365 C0 07            [24]17186 	push	ar7
      006367 C0 06            [24]17187 	push	ar6
      006369 12r00r00         [24]17188 	lcall	_IAP_ghibyte
                                  17189 ;	src\main.c:548: RingRelay = 1;
                                  17190 ;	assignBit
      00636C D2 A3            [12]17191 	setb	_P23
                                  17192 ;	src\main.c:549: delay_ms(4000);
      00636E 90 0F A0         [24]17193 	mov	dptr,#0x0fa0
      006371 12r00r00         [24]17194 	lcall	_delay_ms
      006374 D0 06            [24]17195 	pop	ar6
      006376 D0 07            [24]17196 	pop	ar7
                                  17197 ;	src\main.c:550: IAP_CONTR = 0x60;
      006378 75 C7 60         [24]17198 	mov	_IAP_CONTR,#0x60
      00637B                      17199 00383$:
                                  17200 ;	src\main.c:554: if(!da_gui_bao_cao && minute<5 ) {
      00637B 30*01 03         [24]17201 	jnb	_da_gui_bao_cao,02600$
      00637E 02r64r15         [24]17202 	ljmp	00399$
      006381                      17203 02600$:
      006381 74 FB            [12]17204 	mov	a,#0x100 - 0x05
      006383 25*01            [12]17205 	add	a,_minute
      006385 50 03            [24]17206 	jnc	02601$
      006387 02r64r15         [24]17207 	ljmp	00399$
      00638A                      17208 02601$:
                                  17209 ;	src\main.c:555: if(!GPS_time && eep_gpson) {
      00638A 20*1B 25         [24]17210 	jb	_GPS_time,00393$
      00638D 90 F0 02         [24]17211 	mov	dptr,#_eep_gpson
      006390 E4               [12]17212 	clr	a
      006391 93               [24]17213 	movc	a,@a+dptr
      006392 60 1E            [24]17214 	jz	00393$
                                  17215 ;	src\main.c:557: gsm_thietlapngaygiothuc();
      006394 C0 07            [24]17216 	push	ar7
      006396 C0 06            [24]17217 	push	ar6
      006398 12r1Cr8F         [24]17218 	lcall	_gsm_thietlapngaygiothuc
      00639B D0 06            [24]17219 	pop	ar6
      00639D D0 07            [24]17220 	pop	ar7
                                  17221 ;	src\main.c:558: hour12 = (hour>11)?hour-12:hour;
      00639F E5*02            [12]17222 	mov	a,_hour
      0063A1 24 F4            [12]17223 	add	a,#0xff - 0x0b
      0063A3 50 07            [24]17224 	jnc	00735$
      0063A5 E5*02            [12]17225 	mov	a,_hour
      0063A7 24 F4            [12]17226 	add	a,#0xf4
      0063A9 FD               [12]17227 	mov	r5,a
      0063AA 80 02            [24]17228 	sjmp	00736$
      0063AC                      17229 00735$:
      0063AC AD*02            [24]17230 	mov	r5,_hour
      0063AE                      17231 00736$:
      0063AE 8D*03            [24]17232 	mov	_hour12,r5
      0063B0 80 47            [24]17233 	sjmp	00394$
      0063B2                      17234 00393$:
                                  17235 ;	src\main.c:560: rtc_gettime(&hour,&minute,&second);
      0063B2 75*00r01         [24]17236 	mov	_rtc_gettime_PARM_2,#_minute
      0063B5 75*01 00         [24]17237 	mov	(_rtc_gettime_PARM_2 + 1),#0x00
      0063B8 75*02 40         [24]17238 	mov	(_rtc_gettime_PARM_2 + 2),#0x40
      0063BB 75*00r00         [24]17239 	mov	_rtc_gettime_PARM_3,#_second
      0063BE 75*01 00         [24]17240 	mov	(_rtc_gettime_PARM_3 + 1),#0x00
      0063C1 75*02 40         [24]17241 	mov	(_rtc_gettime_PARM_3 + 2),#0x40
      0063C4 90r00r02         [24]17242 	mov	dptr,#_hour
      0063C7 75 F0 40         [24]17243 	mov	b,#0x40
      0063CA C0 07            [24]17244 	push	ar7
      0063CC C0 06            [24]17245 	push	ar6
      0063CE 12r00r00         [24]17246 	lcall	_rtc_gettime
                                  17247 ;	src\main.c:561: rtc_getdate(&date,&day,&month,&year);
      0063D1 75*00rDD         [24]17248 	mov	_rtc_getdate_PARM_2,#_day
      0063D4 75*01s00         [24]17249 	mov	(_rtc_getdate_PARM_2 + 1),#(_day >> 8)
      0063D7 75*02 00         [24]17250 	mov	(_rtc_getdate_PARM_2 + 2),#0x00
      0063DA 75*00rDE         [24]17251 	mov	_rtc_getdate_PARM_3,#_month
      0063DD 75*01s00         [24]17252 	mov	(_rtc_getdate_PARM_3 + 1),#(_month >> 8)
      0063E0 75*02 00         [24]17253 	mov	(_rtc_getdate_PARM_3 + 2),#0x00
      0063E3 75*00rDF         [24]17254 	mov	_rtc_getdate_PARM_4,#_year
      0063E6 75*01s00         [24]17255 	mov	(_rtc_getdate_PARM_4 + 1),#(_year >> 8)
      0063E9 75*02 00         [24]17256 	mov	(_rtc_getdate_PARM_4 + 2),#0x00
      0063EC 90r00rDC         [24]17257 	mov	dptr,#_date
      0063EF 75 F0 00         [24]17258 	mov	b,#0x00
      0063F2 12r00r00         [24]17259 	lcall	_rtc_getdate
      0063F5 D0 06            [24]17260 	pop	ar6
      0063F7 D0 07            [24]17261 	pop	ar7
      0063F9                      17262 00394$:
                                  17263 ;	src\main.c:564: if(eep_baocao) {
      0063F9 90 F0 01         [24]17264 	mov	dptr,#_eep_baocao
      0063FC E4               [12]17265 	clr	a
      0063FD 93               [24]17266 	movc	a,@a+dptr
      0063FE 60 13            [24]17267 	jz	00397$
                                  17268 ;	src\main.c:565: baocaosms(CHINH,"\rbao cao dau gio");
                                  17269 ;	assignBit
      006400 D2*44            [12]17270 	setb	_baocaosms_PARM_1
      006402 90r0CrBD         [24]17271 	mov	dptr,#___str_152
      006405 75 F0 80         [24]17272 	mov	b,#0x80
      006408 C0 07            [24]17273 	push	ar7
      00640A C0 06            [24]17274 	push	ar6
      00640C 12r17r8C         [24]17275 	lcall	_baocaosms
      00640F D0 06            [24]17276 	pop	ar6
      006411 D0 07            [24]17277 	pop	ar7
      006413                      17278 00397$:
                                  17279 ;	src\main.c:567: da_gui_bao_cao = 1;
                                  17280 ;	assignBit
      006413 D2*01            [12]17281 	setb	_da_gui_bao_cao
      006415                      17282 00399$:
                                  17283 ;	src\main.c:569: if(co_tin_nhan_moi){
                                  17284 ;	src\main.c:570: co_tin_nhan_moi = 0;
                                  17285 ;	assignBit
      006415 10*0A 02         [24]17286 	jbc	_co_tin_nhan_moi,02606$
      006418 80 29            [24]17287 	sjmp	00402$
      00641A                      17288 02606$:
                                  17289 ;	src\main.c:571: gsm_sendandcheck("AT\r", 15, 1,"CO TIN NHAN MOI ");
      00641A 75*12rCE         [24]17290 	mov	_gsm_sendandcheck_PARM_4,#___str_153
      00641D 75*13s0C         [24]17291 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_153 >> 8)
      006420 75*14 80         [24]17292 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      006423 75*10 0F         [24]17293 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      006426 75*11 01         [24]17294 	mov	_gsm_sendandcheck_PARM_3,#0x01
      006429 90r04rEC         [24]17295 	mov	dptr,#___str_38
      00642C 75 F0 80         [24]17296 	mov	b,#0x80
      00642F C0 07            [24]17297 	push	ar7
      006431 C0 06            [24]17298 	push	ar6
      006433 12r0Dr06         [24]17299 	lcall	_gsm_sendandcheck
                                  17300 ;	src\main.c:572: send_gsm_cmd("AT+CMGL=\"ALL\"\r");
      006436 90r0CrDF         [24]17301 	mov	dptr,#___str_154
      006439 75 F0 80         [24]17302 	mov	b,#0x80
      00643C 12r00r00         [24]17303 	lcall	_send_gsm_cmd
      00643F D0 06            [24]17304 	pop	ar6
      006441 D0 07            [24]17305 	pop	ar7
      006443                      17306 00402$:
                                  17307 ;	src\main.c:574: if(goi_dien_thoai){
                                  17308 ;	src\main.c:575: goi_dien_thoai = 0;
                                  17309 ;	assignBit
      006443 10*05 02         [24]17310 	jbc	_goi_dien_thoai,02607$
      006446 80 11            [24]17311 	sjmp	00404$
      006448                      17312 02607$:
                                  17313 ;	src\main.c:576: gsm_quay_so(phone_chinh);
      006448 90r00r00         [24]17314 	mov	dptr,#_phone_chinh
      00644B 75 F0 00         [24]17315 	mov	b,#0x00
      00644E C0 07            [24]17316 	push	ar7
      006450 C0 06            [24]17317 	push	ar6
      006452 12r0ErE4         [24]17318 	lcall	_gsm_quay_so
      006455 D0 06            [24]17319 	pop	ar6
      006457 D0 07            [24]17320 	pop	ar7
      006459                      17321 00404$:
                                  17322 ;	src\main.c:579: switch(mode){
      006459 90r00rF3         [24]17323 	mov	dptr,#_mode
      00645C E0               [24]17324 	movx	a,@dptr
      00645D FD               [12]17325 	mov  r5,a
      00645E 24 F8            [12]17326 	add	a,#0xff - 0x07
      006460 50 03            [24]17327 	jnc	02608$
      006462 02r79r76         [24]17328 	ljmp	00642$
      006465                      17329 02608$:
      006465 ED               [12]17330 	mov	a,r5
      006466 24 0A            [12]17331 	add	a,#(02609$-3-.)
      006468 83               [24]17332 	movc	a,@a+pc
      006469 F5 82            [12]17333 	mov	dpl,a
      00646B ED               [12]17334 	mov	a,r5
      00646C 24 0C            [12]17335 	add	a,#(02610$-3-.)
      00646E 83               [24]17336 	movc	a,@a+pc
      00646F F5 83            [12]17337 	mov	dph,a
      006471 E4               [12]17338 	clr	a
      006472 73               [24]17339 	jmp	@a+dptr
      006473                      17340 02609$:
      006473r83                   17341 	.db	00405$
      006474rEF                   17342 	.db	00466$
      006475r7E                   17343 	.db	00519$
      006476rE2                   17344 	.db	00631$
      006477r88                   17345 	.db	00555$
      006478r64                   17346 	.db	00639$
      006479r64                   17347 	.db	00639$
      00647Ar33                   17348 	.db	00431$
      00647B                      17349 02610$:
      00647Bs64                   17350 	.db	00405$>>8
      00647Cs6B                   17351 	.db	00466$>>8
      00647Ds70                   17352 	.db	00519$>>8
      00647Es78                   17353 	.db	00631$>>8
      00647Fs72                   17354 	.db	00555$>>8
      006480s79                   17355 	.db	00639$>>8
      006481s79                   17356 	.db	00639$>>8
      006482s67                   17357 	.db	00431$>>8
                                  17358 ;	src\main.c:580: case 0:
      006483                      17359 00405$:
                                  17360 ;	src\main.c:581: if(gsm_reset){
      006483 30*03 41         [24]17361 	jnb	_gsm_reset,00409$
                                  17362 ;	src\main.c:582: ADC_CONTR = 0x8b;
      006486 75 BC 8B         [24]17363 	mov	_ADC_CONTR,#0x8b
                                  17364 ;	src\main.c:583: gsm_reset = 0;
                                  17365 ;	assignBit
      006489 C2*03            [12]17366 	clr	_gsm_reset
                                  17367 ;	src\main.c:584: gsm_serial_cmd = NORMAL;
      00648B 90r00rFD         [24]17368 	mov	dptr,#_gsm_serial_cmd
      00648E E4               [12]17369 	clr	a
      00648F F0               [24]17370 	movx	@dptr,a
                                  17371 ;	src\main.c:586: gsm_thietlapngaygiothuc();
      006490 C0 07            [24]17372 	push	ar7
      006492 C0 06            [24]17373 	push	ar6
      006494 12r1Cr8F         [24]17374 	lcall	_gsm_thietlapngaygiothuc
                                  17375 ;	src\main.c:587: hour12=hour%12;
      006497 AB*02            [24]17376 	mov	r3,_hour
      006499 7C 00            [12]17377 	mov	r4,#0x00
      00649B 75*00 0C         [24]17378 	mov	__modsint_PARM_2,#0x0c
                                  17379 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      00649E 8C*01            [24]17380 	mov	(__modsint_PARM_2 + 1),r4
      0064A0 8B 82            [24]17381 	mov	dpl,r3
      0064A2 8C 83            [24]17382 	mov	dph,r4
      0064A4 12r00r00         [24]17383 	lcall	__modsint
      0064A7 AB 82            [24]17384 	mov	r3,dpl
      0064A9 8B*03            [24]17385 	mov	_hour12,r3
                                  17386 ;	src\main.c:588: if(gsm_thietlapnhantin()){
      0064AB 12r1ErAF         [24]17387 	lcall	_gsm_thietlapnhantin
      0064AE D0 06            [24]17388 	pop	ar6
      0064B0 D0 07            [24]17389 	pop	ar7
      0064B2 50 13            [24]17390 	jnc	00409$
                                  17391 ;	src\main.c:589: baocaosms(CHINH,"\rgsm reset thanh cong");
                                  17392 ;	assignBit
      0064B4 D2*44            [12]17393 	setb	_baocaosms_PARM_1
      0064B6 90r0CrEE         [24]17394 	mov	dptr,#___str_155
      0064B9 75 F0 80         [24]17395 	mov	b,#0x80
      0064BC C0 07            [24]17396 	push	ar7
      0064BE C0 06            [24]17397 	push	ar6
      0064C0 12r17r8C         [24]17398 	lcall	_baocaosms
      0064C3 D0 06            [24]17399 	pop	ar6
      0064C5 D0 07            [24]17400 	pop	ar7
      0064C7                      17401 00409$:
                                  17402 ;	src\main.c:592: if(sms_dang_xu_ly){
      0064C7 30*0C 28         [24]17403 	jnb	_sms_dang_xu_ly,00418$
                                  17404 ;	src\main.c:594: xu_ly_tin_nhan();
      0064CA C0 07            [24]17405 	push	ar7
      0064CC C0 06            [24]17406 	push	ar6
      0064CE 12r3Ar9A         [24]17407 	lcall	_xu_ly_tin_nhan
                                  17408 ;	src\main.c:595: gsm_sendandcheck("AT+CMGDA=\"DEL ALL\"\r", 15, 1,"  SENDING CMGDA  ");
      0064D1 75*12rCB         [24]17409 	mov	_gsm_sendandcheck_PARM_4,#___str_71
      0064D4 75*13s06         [24]17410 	mov	(_gsm_sendandcheck_PARM_4 + 1),#(___str_71 >> 8)
      0064D7 75*14 80         [24]17411 	mov	(_gsm_sendandcheck_PARM_4 + 2),#0x80
      0064DA 75*10 0F         [24]17412 	mov	_gsm_sendandcheck_PARM_2,#0x0f
      0064DD 75*11 01         [24]17413 	mov	_gsm_sendandcheck_PARM_3,#0x01
      0064E0 90r06r95         [24]17414 	mov	dptr,#___str_68
      0064E3 75 F0 80         [24]17415 	mov	b,#0x80
      0064E6 12r0Dr06         [24]17416 	lcall	_gsm_sendandcheck
      0064E9 D0 06            [24]17417 	pop	ar6
      0064EB D0 07            [24]17418 	pop	ar7
                                  17419 ;	src\main.c:596: sms_dang_xu_ly = 0;
                                  17420 ;	assignBit
      0064ED C2*0C            [12]17421 	clr	_sms_dang_xu_ly
      0064EF 02r66r99         [24]17422 	ljmp	00419$
      0064F2                      17423 00418$:
                                  17424 ;	src\main.c:599: switch(so_motor){
      0064F2 90r01r2E         [24]17425 	mov	dptr,#_so_motor
      0064F5 E0               [24]17426 	movx	a,@dptr
      0064F6 FC               [12]17427 	mov	r4,a
      0064F7 BC 01 02         [24]17428 	cjne	r4,#0x01,02614$
      0064FA 80 14            [24]17429 	sjmp	00410$
      0064FC                      17430 02614$:
      0064FC BC 02 02         [24]17431 	cjne	r4,#0x02,02615$
      0064FF 80 44            [24]17432 	sjmp	00411$
      006501                      17433 02615$:
      006501 BC 03 03         [24]17434 	cjne	r4,#0x03,02616$
      006504 02r65rEF         [24]17435 	ljmp	00413$
      006507                      17436 02616$:
      006507 BC 04 03         [24]17437 	cjne	r4,#0x04,02617$
      00650A 02r65r91         [24]17438 	ljmp	00412$
      00650D                      17439 02617$:
      00650D 02r66r4B         [24]17440 	ljmp	00414$
                                  17441 ;	src\main.c:600: case 1: LCD_guigio(0x80,may_dc? "  MDC  " : "  MST  ",gio[0],phut[0],date,flip_pulse);break;
      006510                      17442 00410$:
      006510 30*32 06         [24]17443 	jnb	_may_dc,00737$
      006513 7Br04            [12]17444 	mov	r3,#___str_156
      006515 7Cs0D            [12]17445 	mov	r4,#(___str_156 >> 8)
      006517 80 04            [24]17446 	sjmp	00738$
      006519                      17447 00737$:
      006519 7Br0C            [12]17448 	mov	r3,#___str_157
      00651B 7Cs0D            [12]17449 	mov	r4,#(___str_157 >> 8)
      00651D                      17450 00738$:
      00651D 8B*00            [24]17451 	mov	_LCD_guigio_PARM_2,r3
      00651F 8C*01            [24]17452 	mov	(_LCD_guigio_PARM_2 + 1),r4
      006521 75*02 80         [24]17453 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      006524 85*04*00         [24]17454 	mov	_LCD_guigio_PARM_3,_gio
      006527 85*08*00         [24]17455 	mov	_LCD_guigio_PARM_4,_phut
      00652A 90r00rDC         [24]17456 	mov	dptr,#_date
      00652D E0               [24]17457 	movx	a,@dptr
      00652E F5*00            [12]17458 	mov	_LCD_guigio_PARM_5,a
                                  17459 ;	assignBit
      006530 A2*1E            [12]17460 	mov	c,_flip_pulse
      006532 92*00            [24]17461 	mov	_LCD_guigio_PARM_6,c
      006534 75 82 80         [24]17462 	mov	dpl,#0x80
      006537 C0 07            [24]17463 	push	ar7
      006539 C0 06            [24]17464 	push	ar6
      00653B 12r00r00         [24]17465 	lcall	_LCD_guigio
      00653E D0 06            [24]17466 	pop	ar6
      006540 D0 07            [24]17467 	pop	ar7
      006542 02r66r4B         [24]17468 	ljmp	00414$
                                  17469 ;	src\main.c:601: case 2: LCD_guigio(0x80,"  ",gio[0],phut[0],253,flip_pulse);LCD_guigio(0x87,"  ",gio[1],phut[1],253,flip_pulse);LCD_guichuoi("  ");break;
      006545                      17470 00411$:
      006545 75*00r14         [24]17471 	mov	_LCD_guigio_PARM_2,#___str_158
      006548 75*01s0D         [24]17472 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_158 >> 8)
      00654B 75*02 80         [24]17473 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      00654E 85*04*00         [24]17474 	mov	_LCD_guigio_PARM_3,_gio
      006551 85*08*00         [24]17475 	mov	_LCD_guigio_PARM_4,_phut
      006554 75*00 FD         [24]17476 	mov	_LCD_guigio_PARM_5,#0xfd
                                  17477 ;	assignBit
      006557 A2*1E            [12]17478 	mov	c,_flip_pulse
      006559 92*00            [24]17479 	mov	_LCD_guigio_PARM_6,c
      00655B 75 82 80         [24]17480 	mov	dpl,#0x80
      00655E C0 07            [24]17481 	push	ar7
      006560 C0 06            [24]17482 	push	ar6
      006562 12r00r00         [24]17483 	lcall	_LCD_guigio
      006565 75*00r14         [24]17484 	mov	_LCD_guigio_PARM_2,#___str_158
      006568 75*01s0D         [24]17485 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_158 >> 8)
      00656B 75*02 80         [24]17486 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      00656E 85*05*00         [24]17487 	mov	_LCD_guigio_PARM_3,(_gio + 0x0001)
      006571 85*09*00         [24]17488 	mov	_LCD_guigio_PARM_4,(_phut + 0x0001)
      006574 75*00 FD         [24]17489 	mov	_LCD_guigio_PARM_5,#0xfd
                                  17490 ;	assignBit
      006577 A2*1E            [12]17491 	mov	c,_flip_pulse
      006579 92*00            [24]17492 	mov	_LCD_guigio_PARM_6,c
      00657B 75 82 87         [24]17493 	mov	dpl,#0x87
      00657E 12r00r00         [24]17494 	lcall	_LCD_guigio
      006581 90r0Dr14         [24]17495 	mov	dptr,#___str_158
      006584 75 F0 80         [24]17496 	mov	b,#0x80
      006587 12r00r00         [24]17497 	lcall	_LCD_guichuoi
      00658A D0 06            [24]17498 	pop	ar6
      00658C D0 07            [24]17499 	pop	ar7
      00658E 02r66r4B         [24]17500 	ljmp	00414$
                                  17501 ;	src\main.c:602: case 4:	LCD_guigio(0xc5,GPS_time?" G ":(eep_gpson?" D ":" A "),hour,minute,second,flip_pulse); 
      006591                      17502 00412$:
      006591 30*1B 06         [24]17503 	jnb	_GPS_time,00739$
      006594 7Br17            [12]17504 	mov	r3,#___str_159
      006596 7Cs0D            [12]17505 	mov	r4,#(___str_159 >> 8)
      006598 80 19            [24]17506 	sjmp	00740$
      00659A                      17507 00739$:
      00659A 90 F0 02         [24]17508 	mov	dptr,#_eep_gpson
      00659D E4               [12]17509 	clr	a
      00659E 93               [24]17510 	movc	a,@a+dptr
      00659F 60 08            [24]17511 	jz	00741$
      0065A1 75*2Fr1B         [24]17512 	mov	_main_sloc0_1_0,#___str_160
      0065A4 75*30s0D         [24]17513 	mov	(_main_sloc0_1_0 + 1),#(___str_160 >> 8)
      0065A7 80 06            [24]17514 	sjmp	00742$
      0065A9                      17515 00741$:
      0065A9 75*2Fr1F         [24]17516 	mov	_main_sloc0_1_0,#___str_161
      0065AC 75*30s0D         [24]17517 	mov	(_main_sloc0_1_0 + 1),#(___str_161 >> 8)
      0065AF                      17518 00742$:
      0065AF AB*2F            [24]17519 	mov	r3,_main_sloc0_1_0
      0065B1 AC*30            [24]17520 	mov	r4,(_main_sloc0_1_0 + 1)
      0065B3                      17521 00740$:
      0065B3 8B*00            [24]17522 	mov	_LCD_guigio_PARM_2,r3
      0065B5 8C*01            [24]17523 	mov	(_LCD_guigio_PARM_2 + 1),r4
      0065B7 75*02 80         [24]17524 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      0065BA 85*02*00         [24]17525 	mov	_LCD_guigio_PARM_3,_hour
      0065BD 85*01*00         [24]17526 	mov	_LCD_guigio_PARM_4,_minute
      0065C0 85*00*00         [24]17527 	mov	_LCD_guigio_PARM_5,_second
                                  17528 ;	assignBit
      0065C3 A2*1E            [12]17529 	mov	c,_flip_pulse
      0065C5 92*00            [24]17530 	mov	_LCD_guigio_PARM_6,c
      0065C7 75 82 C5         [24]17531 	mov	dpl,#0xc5
      0065CA C0 07            [24]17532 	push	ar7
      0065CC C0 06            [24]17533 	push	ar6
      0065CE 12r00r00         [24]17534 	lcall	_LCD_guigio
                                  17535 ;	src\main.c:603: LCD_guigio(0xc0," ",gio[3],phut[3],251,0);
      0065D1 75*00r23         [24]17536 	mov	_LCD_guigio_PARM_2,#___str_162
      0065D4 75*01s0D         [24]17537 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_162 >> 8)
      0065D7 75*02 80         [24]17538 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      0065DA 85*07*00         [24]17539 	mov	_LCD_guigio_PARM_3,(_gio + 0x0003)
      0065DD 85*0B*00         [24]17540 	mov	_LCD_guigio_PARM_4,(_phut + 0x0003)
      0065E0 75*00 FB         [24]17541 	mov	_LCD_guigio_PARM_5,#0xfb
                                  17542 ;	assignBit
      0065E3 C2*00            [12]17543 	clr	_LCD_guigio_PARM_6
      0065E5 75 82 C0         [24]17544 	mov	dpl,#0xc0
      0065E8 12r00r00         [24]17545 	lcall	_LCD_guigio
      0065EB D0 06            [24]17546 	pop	ar6
      0065ED D0 07            [24]17547 	pop	ar7
                                  17548 ;	src\main.c:604: case 3: LCD_guigio(0x80," ",gio[0],phut[0],251,0);LCD_guigio(0x85," ",gio[1],phut[1],251,0);
      0065EF                      17549 00413$:
      0065EF 75*00r23         [24]17550 	mov	_LCD_guigio_PARM_2,#___str_162
      0065F2 75*01s0D         [24]17551 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_162 >> 8)
      0065F5 75*02 80         [24]17552 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      0065F8 85*04*00         [24]17553 	mov	_LCD_guigio_PARM_3,_gio
      0065FB 85*08*00         [24]17554 	mov	_LCD_guigio_PARM_4,_phut
      0065FE 75*00 FB         [24]17555 	mov	_LCD_guigio_PARM_5,#0xfb
                                  17556 ;	assignBit
      006601 C2*00            [12]17557 	clr	_LCD_guigio_PARM_6
      006603 75 82 80         [24]17558 	mov	dpl,#0x80
      006606 C0 07            [24]17559 	push	ar7
      006608 C0 06            [24]17560 	push	ar6
      00660A 12r00r00         [24]17561 	lcall	_LCD_guigio
      00660D 75*00r23         [24]17562 	mov	_LCD_guigio_PARM_2,#___str_162
      006610 75*01s0D         [24]17563 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_162 >> 8)
      006613 75*02 80         [24]17564 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      006616 85*05*00         [24]17565 	mov	_LCD_guigio_PARM_3,(_gio + 0x0001)
      006619 85*09*00         [24]17566 	mov	_LCD_guigio_PARM_4,(_phut + 0x0001)
      00661C 75*00 FB         [24]17567 	mov	_LCD_guigio_PARM_5,#0xfb
                                  17568 ;	assignBit
      00661F C2*00            [12]17569 	clr	_LCD_guigio_PARM_6
      006621 75 82 85         [24]17570 	mov	dpl,#0x85
      006624 12r00r00         [24]17571 	lcall	_LCD_guigio
                                  17572 ;	src\main.c:605: LCD_guigio(0x8a," ",gio[2],phut[2],251,0);LCD_guidulieu(' ');
      006627 75*00r23         [24]17573 	mov	_LCD_guigio_PARM_2,#___str_162
      00662A 75*01s0D         [24]17574 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_162 >> 8)
      00662D 75*02 80         [24]17575 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      006630 85*06*00         [24]17576 	mov	_LCD_guigio_PARM_3,(_gio + 0x0002)
      006633 85*0A*00         [24]17577 	mov	_LCD_guigio_PARM_4,(_phut + 0x0002)
      006636 75*00 FB         [24]17578 	mov	_LCD_guigio_PARM_5,#0xfb
                                  17579 ;	assignBit
      006639 C2*00            [12]17580 	clr	_LCD_guigio_PARM_6
      00663B 75 82 8A         [24]17581 	mov	dpl,#0x8a
      00663E 12r00r00         [24]17582 	lcall	_LCD_guigio
      006641 75 82 20         [24]17583 	mov	dpl,#0x20
      006644 12r00r00         [24]17584 	lcall	_LCD_guidulieu
      006647 D0 06            [24]17585 	pop	ar6
      006649 D0 07            [24]17586 	pop	ar7
                                  17587 ;	src\main.c:606: }
      00664B                      17588 00414$:
                                  17589 ;	src\main.c:607: if(so_motor!=4){
      00664B 90r01r2E         [24]17590 	mov	dptr,#_so_motor
      00664E E0               [24]17591 	movx	a,@dptr
      00664F FC               [12]17592 	mov	r4,a
      006650 BC 04 02         [24]17593 	cjne	r4,#0x04,02621$
      006653 80 44            [24]17594 	sjmp	00419$
      006655                      17595 02621$:
                                  17596 ;	src\main.c:608: LCD_guigio(0xc0,GPS_time?"  GPS  ":(eep_gpson?"   DS  ":" ASIA  "),hour,minute,second,flip_pulse);
      006655 30*1B 06         [24]17597 	jnb	_GPS_time,00743$
      006658 7BrBC            [12]17598 	mov	r3,#___str_0
      00665A 7Cs03            [12]17599 	mov	r4,#(___str_0 >> 8)
      00665C 80 19            [24]17600 	sjmp	00744$
      00665E                      17601 00743$:
      00665E 90 F0 02         [24]17602 	mov	dptr,#_eep_gpson
      006661 E4               [12]17603 	clr	a
      006662 93               [24]17604 	movc	a,@a+dptr
      006663 60 08            [24]17605 	jz	00745$
      006665 75*2FrCC         [24]17606 	mov	_main_sloc0_1_0,#___str_2
      006668 75*30s03         [24]17607 	mov	(_main_sloc0_1_0 + 1),#(___str_2 >> 8)
      00666B 80 06            [24]17608 	sjmp	00746$
      00666D                      17609 00745$:
      00666D 75*2FrC4         [24]17610 	mov	_main_sloc0_1_0,#___str_1
      006670 75*30s03         [24]17611 	mov	(_main_sloc0_1_0 + 1),#(___str_1 >> 8)
      006673                      17612 00746$:
      006673 AB*2F            [24]17613 	mov	r3,_main_sloc0_1_0
      006675 AC*30            [24]17614 	mov	r4,(_main_sloc0_1_0 + 1)
      006677                      17615 00744$:
      006677 8B*00            [24]17616 	mov	_LCD_guigio_PARM_2,r3
      006679 8C*01            [24]17617 	mov	(_LCD_guigio_PARM_2 + 1),r4
      00667B 75*02 80         [24]17618 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      00667E 85*02*00         [24]17619 	mov	_LCD_guigio_PARM_3,_hour
      006681 85*01*00         [24]17620 	mov	_LCD_guigio_PARM_4,_minute
      006684 85*00*00         [24]17621 	mov	_LCD_guigio_PARM_5,_second
                                  17622 ;	assignBit
      006687 A2*1E            [12]17623 	mov	c,_flip_pulse
      006689 92*00            [24]17624 	mov	_LCD_guigio_PARM_6,c
      00668B 75 82 C0         [24]17625 	mov	dpl,#0xc0
      00668E C0 07            [24]17626 	push	ar7
      006690 C0 06            [24]17627 	push	ar6
      006692 12r00r00         [24]17628 	lcall	_LCD_guigio
      006695 D0 06            [24]17629 	pop	ar6
      006697 D0 07            [24]17630 	pop	ar7
      006699                      17631 00419$:
                                  17632 ;	src\main.c:611: if(!phim_mode_doi && !cam_vao){
      006699 90r00rF0         [24]17633 	mov	dptr,#_phim_mode_doi
      00669C E0               [24]17634 	movx	a,@dptr
      00669D 60 03            [24]17635 	jz	02624$
      00669F 02r79r7F         [24]17636 	ljmp	00643$
      0066A2                      17637 02624$:
      0066A2 30*15 03         [24]17638 	jnb	_cam_vao,02625$
      0066A5 02r79r7F         [24]17639 	ljmp	00643$
      0066A8                      17640 02625$:
                                  17641 ;	src\main.c:612: phim_mode_nhan=0;
                                  17642 ;	assignBit
      0066A8 C2*20            [12]17643 	clr	_phim_mode_nhan
                                  17644 ;	src\main.c:613: mode_wait = TIME_MODE_WAIT;
      0066AA 90r00rF5         [24]17645 	mov	dptr,#_mode_wait
      0066AD 74 3C            [12]17646 	mov	a,#0x3c
      0066AF F0               [24]17647 	movx	@dptr,a
                                  17648 ;	src\main.c:614: delay_ve_kim = canhkim = may_canh_kim = 0;
      0066B0 90r00rE1         [24]17649 	mov	dptr,#_may_canh_kim
      0066B3 E4               [12]17650 	clr	a
      0066B4 F0               [24]17651 	movx	@dptr,a
      0066B5 90r00rE0         [24]17652 	mov	dptr,#_canhkim
      0066B8 F0               [24]17653 	movx	@dptr,a
      0066B9 90r00rE2         [24]17654 	mov	dptr,#_delay_ve_kim
      0066BC F0               [24]17655 	movx	@dptr,a
                                  17656 ;	src\main.c:615: mode = SELECT;
      0066BD 90r00rF3         [24]17657 	mov	dptr,#_mode
      0066C0 74 07            [12]17658 	mov	a,#0x07
      0066C2 F0               [24]17659 	movx	@dptr,a
                                  17660 ;	src\main.c:616: sub_mode = GIOKIM;
      0066C3 90r00rF4         [24]17661 	mov	dptr,#_sub_mode
      0066C6 74 01            [12]17662 	mov	a,#0x01
      0066C8 F0               [24]17663 	movx	@dptr,a
                                  17664 ;	src\main.c:617: motor_index = motor_index2 = 5;
      0066C9 75*0E 05         [24]17665 	mov	_motor_index2,#0x05
      0066CC 75*0D 05         [24]17666 	mov	_motor_index,#0x05
                                  17667 ;	src\main.c:618: if(eep_mp3%4==2 && mp3_playing) mp3_play(9,0,0);
      0066CF 90 F0 10         [24]17668 	mov	dptr,#_eep_mp3
      0066D2 E4               [12]17669 	clr	a
      0066D3 93               [24]17670 	movc	a,@a+dptr
      0066D4 54 03            [12]17671 	anl	a,#0x03
      0066D6 FB               [12]17672 	mov	r3,a
      0066D7 7C 00            [12]17673 	mov	r4,#0x00
      0066D9 BB 02 1A         [24]17674 	cjne	r3,#0x02,00421$
      0066DC BC 00 17         [24]17675 	cjne	r4,#0x00,00421$
      0066DF 30 92 14         [24]17676 	jnb	_P12,00421$
      0066E2 75*00 00         [24]17677 	mov	_mp3_play_PARM_2,#0x00
      0066E5 75*00 00         [24]17678 	mov	_mp3_play_PARM_3,#0x00
      0066E8 75 82 09         [24]17679 	mov	dpl,#0x09
      0066EB C0 07            [24]17680 	push	ar7
      0066ED C0 06            [24]17681 	push	ar6
      0066EF 12r00r00         [24]17682 	lcall	_mp3_play
      0066F2 D0 06            [24]17683 	pop	ar6
      0066F4 D0 07            [24]17684 	pop	ar7
      0066F6                      17685 00421$:
                                  17686 ;	src\main.c:619: AmplyRelay = 0;
                                  17687 ;	assignBit
      0066F6 C2 C2            [12]17688 	clr	_P42
                                  17689 ;	src\main.c:620: mp3_status = mp3_IDLE;
      0066F8 78r01            [12]17690 	mov	r0,#_mp3_status
      0066FA 76 00            [12]17691 	mov	@r0,#0x00
                                  17692 ;	src\main.c:621: if(phim_back_nhan) phim_back_nhan = 0;
                                  17693 ;	assignBit
      0066FC 10*24 02         [24]17694 	jbc	_phim_back_nhan,02629$
      0066FF 80 03            [24]17695 	sjmp	00426$
      006701                      17696 02629$:
      006701 02r79r7F         [24]17697 	ljmp	00643$
      006704                      17698 00426$:
                                  17699 ;	src\main.c:623: baocaosms(CHINH,"\rchinh gio bang tay");
                                  17700 ;	assignBit
      006704 D2*44            [12]17701 	setb	_baocaosms_PARM_1
      006706 90r0Dr25         [24]17702 	mov	dptr,#___str_163
      006709 75 F0 80         [24]17703 	mov	b,#0x80
      00670C C0 07            [24]17704 	push	ar7
      00670E C0 06            [24]17705 	push	ar6
      006710 12r17r8C         [24]17706 	lcall	_baocaosms
      006713 D0 06            [24]17707 	pop	ar6
      006715 D0 07            [24]17708 	pop	ar7
                                  17709 ;	src\main.c:624: if(bat_phone_phu)baocaosms(PHU,"\r*chinh gio bang tay*");
      006717 20*08 03         [24]17710 	jb	_bat_phone_phu,02630$
      00671A 02r79r7F         [24]17711 	ljmp	00643$
      00671D                      17712 02630$:
                                  17713 ;	assignBit
      00671D C2*44            [12]17714 	clr	_baocaosms_PARM_1
      00671F 90r0Dr39         [24]17715 	mov	dptr,#___str_164
      006722 75 F0 80         [24]17716 	mov	b,#0x80
      006725 C0 07            [24]17717 	push	ar7
      006727 C0 06            [24]17718 	push	ar6
      006729 12r17r8C         [24]17719 	lcall	_baocaosms
      00672C D0 06            [24]17720 	pop	ar6
      00672E D0 07            [24]17721 	pop	ar7
                                  17722 ;	src\main.c:627: break;
      006730 02r79r7F         [24]17723 	ljmp	00643$
                                  17724 ;	src\main.c:629: case SELECT:
      006733                      17725 00431$:
                                  17726 ;	src\main.c:630: if(phim_mode_nhan){
                                  17727 ;	src\main.c:631: phim_mode_nhan = 0;
                                  17728 ;	assignBit
      006733 10*20 02         [24]17729 	jbc	_phim_mode_nhan,02631$
      006736 80 31            [24]17730 	sjmp	00438$
      006738                      17731 02631$:
                                  17732 ;	src\main.c:632: mode_wait = TIME_MODE_WAIT;
      006738 90r00rF5         [24]17733 	mov	dptr,#_mode_wait
      00673B 74 3C            [12]17734 	mov	a,#0x3c
      00673D F0               [24]17735 	movx	@dptr,a
                                  17736 ;	src\main.c:633: if(++sub_mode==MP3TEST && !(eep_mp3%4)) sub_mode++;
      00673E 90r00rF4         [24]17737 	mov	dptr,#_sub_mode
      006741 E0               [24]17738 	movx	a,@dptr
      006742 24 01            [12]17739 	add	a,#0x01
      006744 F0               [24]17740 	movx	@dptr,a
      006745 E0               [24]17741 	movx	a,@dptr
      006746 FC               [12]17742 	mov	r4,a
      006747 BC 04 0F         [24]17743 	cjne	r4,#0x04,00433$
      00674A 90 F0 10         [24]17744 	mov	dptr,#_eep_mp3
      00674D E4               [12]17745 	clr	a
      00674E 93               [24]17746 	movc	a,@a+dptr
      00674F 54 03            [12]17747 	anl	a,#0x03
      006751 70 06            [24]17748 	jnz	00433$
      006753 90r00rF4         [24]17749 	mov	dptr,#_sub_mode
      006756 EC               [12]17750 	mov	a,r4
      006757 04               [12]17751 	inc	a
      006758 F0               [24]17752 	movx	@dptr,a
      006759                      17753 00433$:
                                  17754 ;	src\main.c:634: if(sub_mode>MAX_MODE)sub_mode = 0;
      006759 90r00rF4         [24]17755 	mov	dptr,#_sub_mode
      00675C E0               [24]17756 	movx	a,@dptr
      00675D FC               [12]17757 	mov  r4,a
      00675E 24 F9            [12]17758 	add	a,#0xff - 0x06
      006760 50 05            [24]17759 	jnc	00436$
      006762 90r00rF4         [24]17760 	mov	dptr,#_sub_mode
      006765 E4               [12]17761 	clr	a
      006766 F0               [24]17762 	movx	@dptr,a
      006767                      17763 00436$:
                                  17764 ;	src\main.c:635: chop=0;
                                  17765 ;	assignBit
      006767 C2*2B            [12]17766 	clr	_chop
      006769                      17767 00438$:
                                  17768 ;	src\main.c:637: if(phim_cong_nhan){
                                  17769 ;	src\main.c:638: phim_cong_nhan = 0;
                                  17770 ;	assignBit
      006769 10*28 02         [24]17771 	jbc	_phim_cong_nhan,02637$
      00676C 80 0D            [24]17772 	sjmp	00440$
      00676E                      17773 02637$:
                                  17774 ;	src\main.c:639: mode_wait = TIME_MODE_WAIT;
      00676E 90r00rF5         [24]17775 	mov	dptr,#_mode_wait
      006771 74 3C            [12]17776 	mov	a,#0x3c
      006773 F0               [24]17777 	movx	@dptr,a
                                  17778 ;	src\main.c:640: sub_mode = 0;
      006774 90r00rF4         [24]17779 	mov	dptr,#_sub_mode
      006777 E4               [12]17780 	clr	a
      006778 F0               [24]17781 	movx	@dptr,a
                                  17782 ;	src\main.c:641: chop=0;
                                  17783 ;	assignBit
      006779 C2*2B            [12]17784 	clr	_chop
      00677B                      17785 00440$:
                                  17786 ;	src\main.c:643: if(phim_back_nhan){
                                  17787 ;	src\main.c:644: phim_back_nhan = 0;
                                  17788 ;	assignBit
      00677B 10*24 03         [24]17789 	jbc	_phim_back_nhan,02638$
      00677E 02r6Br88         [24]17790 	ljmp	00465$
      006781                      17791 02638$:
                                  17792 ;	src\main.c:645: mode_wait = TIME_MODE_WAIT;
      006781 90r00rF5         [24]17793 	mov	dptr,#_mode_wait
      006784 74 3C            [12]17794 	mov	a,#0x3c
      006786 F0               [24]17795 	movx	@dptr,a
                                  17796 ;	src\main.c:646: mode = sub_mode;
      006787 90r00rF4         [24]17797 	mov	dptr,#_sub_mode
      00678A E0               [24]17798 	movx	a,@dptr
      00678B 90r00rF3         [24]17799 	mov	dptr,#_mode
      00678E F0               [24]17800 	movx	@dptr,a
                                  17801 ;	src\main.c:647: sub_mode = 0;
      00678F 90r00rF4         [24]17802 	mov	dptr,#_sub_mode
      006792 E4               [12]17803 	clr	a
      006793 F0               [24]17804 	movx	@dptr,a
                                  17805 ;	src\main.c:648: motor_index  = motor_run_check();
      006794 C0 07            [24]17806 	push	ar7
      006796 C0 06            [24]17807 	push	ar6
      006798 12r01rE8         [24]17808 	lcall	_motor_run_check
      00679B 85 82*0D         [24]17809 	mov	_motor_index,dpl
                                  17810 ;	src\main.c:649: motor_index2 = motor_run_check2();
      00679E 12r04r60         [24]17811 	lcall	_motor_run_check2
      0067A1 85 82*0E         [24]17812 	mov	_motor_index2,dpl
      0067A4 D0 06            [24]17813 	pop	ar6
      0067A6 D0 07            [24]17814 	pop	ar7
                                  17815 ;	src\main.c:650: if(mode){
      0067A8 90r00rF3         [24]17816 	mov	dptr,#_mode
      0067AB E0               [24]17817 	movx	a,@dptr
      0067AC 70 03            [24]17818 	jnz	02639$
      0067AE 02r79r7F         [24]17819 	ljmp	00643$
      0067B1                      17820 02639$:
                                  17821 ;	src\main.c:651: LCD_guilenh(0x80);
      0067B1 75 82 80         [24]17822 	mov	dpl,#0x80
      0067B4 C0 07            [24]17823 	push	ar7
      0067B6 C0 06            [24]17824 	push	ar6
      0067B8 12r00r00         [24]17825 	lcall	_LCD_guilenh
                                  17826 ;	src\main.c:652: LCD_guichuoi(mode_select[mode]);
      0067BB 90r00rF3         [24]17827 	mov	dptr,#_mode
      0067BE E0               [24]17828 	movx	a,@dptr
      0067BF 75 F0 11         [24]17829 	mov	b,#0x11
      0067C2 A4               [48]17830 	mul	ab
      0067C3 24r1E            [12]17831 	add	a,#_mode_select
      0067C5 FB               [12]17832 	mov	r3,a
      0067C6 74s00            [12]17833 	mov	a,#(_mode_select >> 8)
      0067C8 35 F0            [12]17834 	addc	a,b
      0067CA FC               [12]17835 	mov	r4,a
      0067CB 7A 80            [12]17836 	mov	r2,#0x80
      0067CD 8B 82            [24]17837 	mov	dpl,r3
      0067CF 8C 83            [24]17838 	mov	dph,r4
      0067D1 8A F0            [24]17839 	mov	b,r2
      0067D3 12r00r00         [24]17840 	lcall	_LCD_guichuoi
      0067D6 D0 06            [24]17841 	pop	ar6
      0067D8 D0 07            [24]17842 	pop	ar7
                                  17843 ;	src\main.c:653: switch(mode){
      0067DA 90r00rF3         [24]17844 	mov	dptr,#_mode
      0067DD E0               [24]17845 	movx	a,@dptr
      0067DE FC               [12]17846 	mov  r4,a
      0067DF 24 F9            [12]17847 	add	a,#0xff - 0x06
      0067E1 50 03            [24]17848 	jnc	02640$
      0067E3 02r79r7F         [24]17849 	ljmp	00643$
      0067E6                      17850 02640$:
      0067E6 EC               [12]17851 	mov	a,r4
      0067E7 2C               [12]17852 	add	a,r4
      0067E8 2C               [12]17853 	add	a,r4
      0067E9 90r67rED         [24]17854 	mov	dptr,#02641$
      0067EC 73               [24]17855 	jmp	@a+dptr
      0067ED                      17856 02641$:
      0067ED 02r79r7F         [24]17857 	ljmp	00643$
      0067F0 02r68r02         [24]17858 	ljmp	00441$
      0067F3 02r69r1F         [24]17859 	ljmp	00450$
      0067F6 02r69r60         [24]17860 	ljmp	00451$
      0067F9 02r69r7D         [24]17861 	ljmp	00452$
      0067FC 02r6Ar03         [24]17862 	ljmp	00453$
      0067FF 02r6ArAB         [24]17863 	ljmp	00460$
                                  17864 ;	src\main.c:654: case GIOKIM : if(so_motor==1)LCD_guigio(0xc0,may_dc? "  MDC  " : "  MST  ",gio[0],phut[0],0,1);
      006802                      17865 00441$:
      006802 90r01r2E         [24]17866 	mov	dptr,#_so_motor
      006805 E0               [24]17867 	movx	a,@dptr
      006806 FC               [12]17868 	mov	r4,a
      006807 BC 01 2F         [24]17869 	cjne	r4,#0x01,00443$
      00680A 30*32 06         [24]17870 	jnb	_may_dc,00747$
      00680D 7Ar04            [12]17871 	mov	r2,#___str_156
      00680F 7Bs0D            [12]17872 	mov	r3,#(___str_156 >> 8)
      006811 80 04            [24]17873 	sjmp	00748$
      006813                      17874 00747$:
      006813 7Ar0C            [12]17875 	mov	r2,#___str_157
      006815 7Bs0D            [12]17876 	mov	r3,#(___str_157 >> 8)
      006817                      17877 00748$:
      006817 8A*00            [24]17878 	mov	_LCD_guigio_PARM_2,r2
      006819 8B*01            [24]17879 	mov	(_LCD_guigio_PARM_2 + 1),r3
      00681B 75*02 80         [24]17880 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      00681E 85*04*00         [24]17881 	mov	_LCD_guigio_PARM_3,_gio
      006821 85*08*00         [24]17882 	mov	_LCD_guigio_PARM_4,_phut
      006824 75*00 00         [24]17883 	mov	_LCD_guigio_PARM_5,#0x00
                                  17884 ;	assignBit
      006827 D2*00            [12]17885 	setb	_LCD_guigio_PARM_6
      006829 75 82 C0         [24]17886 	mov	dpl,#0xc0
      00682C C0 07            [24]17887 	push	ar7
      00682E C0 06            [24]17888 	push	ar6
      006830 12r00r00         [24]17889 	lcall	_LCD_guigio
      006833 D0 06            [24]17890 	pop	ar6
      006835 D0 07            [24]17891 	pop	ar7
      006837 80 6E            [24]17892 	sjmp	00444$
      006839                      17893 00443$:
                                  17894 ;	src\main.c:655: else {LCD_guigio((so_motor<3)?0xc0:0x80,"  ",gio[0],phut[0],253,1);LCD_guigio((so_motor<3)?0xc7:0x87,"  ",gio[1],phut[1],253,1);LCD_guichuoi("  "); }
      006839 BC 03 00         [24]17895 	cjne	r4,#0x03,02645$
      00683C                      17896 02645$:
      00683C 50 06            [24]17897 	jnc	00749$
      00683E 7B C0            [12]17898 	mov	r3,#0xc0
      006840 7C 00            [12]17899 	mov	r4,#0x00
      006842 80 04            [24]17900 	sjmp	00750$
      006844                      17901 00749$:
      006844 7B 80            [12]17902 	mov	r3,#0x80
      006846 7C 00            [12]17903 	mov	r4,#0x00
      006848                      17904 00750$:
      006848 8B 82            [24]17905 	mov	dpl,r3
      00684A 75*00r14         [24]17906 	mov	_LCD_guigio_PARM_2,#___str_158
      00684D 75*01s0D         [24]17907 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_158 >> 8)
      006850 75*02 80         [24]17908 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      006853 85*04*00         [24]17909 	mov	_LCD_guigio_PARM_3,_gio
      006856 85*08*00         [24]17910 	mov	_LCD_guigio_PARM_4,_phut
      006859 75*00 FD         [24]17911 	mov	_LCD_guigio_PARM_5,#0xfd
                                  17912 ;	assignBit
      00685C D2*00            [12]17913 	setb	_LCD_guigio_PARM_6
      00685E C0 07            [24]17914 	push	ar7
      006860 C0 06            [24]17915 	push	ar6
      006862 12r00r00         [24]17916 	lcall	_LCD_guigio
      006865 D0 06            [24]17917 	pop	ar6
      006867 D0 07            [24]17918 	pop	ar7
      006869 90r01r2E         [24]17919 	mov	dptr,#_so_motor
      00686C E0               [24]17920 	movx	a,@dptr
      00686D FC               [12]17921 	mov	r4,a
      00686E BC 03 00         [24]17922 	cjne	r4,#0x03,02647$
      006871                      17923 02647$:
      006871 50 06            [24]17924 	jnc	00751$
      006873 7B C7            [12]17925 	mov	r3,#0xc7
      006875 7C 00            [12]17926 	mov	r4,#0x00
      006877 80 04            [24]17927 	sjmp	00752$
      006879                      17928 00751$:
      006879 7B 87            [12]17929 	mov	r3,#0x87
      00687B 7C 00            [12]17930 	mov	r4,#0x00
      00687D                      17931 00752$:
      00687D 8B 82            [24]17932 	mov	dpl,r3
      00687F 75*00r14         [24]17933 	mov	_LCD_guigio_PARM_2,#___str_158
      006882 75*01s0D         [24]17934 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_158 >> 8)
      006885 75*02 80         [24]17935 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      006888 85*05*00         [24]17936 	mov	_LCD_guigio_PARM_3,(_gio + 0x0001)
      00688B 85*09*00         [24]17937 	mov	_LCD_guigio_PARM_4,(_phut + 0x0001)
      00688E 75*00 FD         [24]17938 	mov	_LCD_guigio_PARM_5,#0xfd
                                  17939 ;	assignBit
      006891 D2*00            [12]17940 	setb	_LCD_guigio_PARM_6
      006893 C0 07            [24]17941 	push	ar7
      006895 C0 06            [24]17942 	push	ar6
      006897 12r00r00         [24]17943 	lcall	_LCD_guigio
      00689A 90r0Dr14         [24]17944 	mov	dptr,#___str_158
      00689D 75 F0 80         [24]17945 	mov	b,#0x80
      0068A0 12r00r00         [24]17946 	lcall	_LCD_guichuoi
      0068A3 D0 06            [24]17947 	pop	ar6
      0068A5 D0 07            [24]17948 	pop	ar7
      0068A7                      17949 00444$:
                                  17950 ;	src\main.c:656: if(so_motor>2){
      0068A7 90r01r2E         [24]17951 	mov	dptr,#_so_motor
      0068AA E0               [24]17952 	movx	a,@dptr
      0068AB FC               [12]17953 	mov  r4,a
      0068AC 24 FD            [12]17954 	add	a,#0xff - 0x02
      0068AE 40 03            [24]17955 	jc	02649$
      0068B0 02r79r7F         [24]17956 	ljmp	00643$
      0068B3                      17957 02649$:
                                  17958 ;	src\main.c:657: LCD_guigio(0xc0,"  ",gio[2],phut[2],253,1);
      0068B3 75*00r14         [24]17959 	mov	_LCD_guigio_PARM_2,#___str_158
      0068B6 75*01s0D         [24]17960 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_158 >> 8)
      0068B9 75*02 80         [24]17961 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      0068BC 85*06*00         [24]17962 	mov	_LCD_guigio_PARM_3,(_gio + 0x0002)
      0068BF 85*0A*00         [24]17963 	mov	_LCD_guigio_PARM_4,(_phut + 0x0002)
      0068C2 75*00 FD         [24]17964 	mov	_LCD_guigio_PARM_5,#0xfd
                                  17965 ;	assignBit
      0068C5 D2*00            [12]17966 	setb	_LCD_guigio_PARM_6
      0068C7 75 82 C0         [24]17967 	mov	dpl,#0xc0
      0068CA C0 07            [24]17968 	push	ar7
      0068CC C0 06            [24]17969 	push	ar6
      0068CE 12r00r00         [24]17970 	lcall	_LCD_guigio
      0068D1 D0 06            [24]17971 	pop	ar6
      0068D3 D0 07            [24]17972 	pop	ar7
                                  17973 ;	src\main.c:658: if(so_motor==4){LCD_guigio(0xc7,"  ",gio[3],phut[3],253,1);LCD_guichuoi("  ");}
      0068D5 90r01r2E         [24]17974 	mov	dptr,#_so_motor
      0068D8 E0               [24]17975 	movx	a,@dptr
      0068D9 FC               [12]17976 	mov	r4,a
      0068DA BC 04 2E         [24]17977 	cjne	r4,#0x04,00446$
      0068DD 75*00r14         [24]17978 	mov	_LCD_guigio_PARM_2,#___str_158
      0068E0 75*01s0D         [24]17979 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_158 >> 8)
      0068E3 75*02 80         [24]17980 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      0068E6 85*07*00         [24]17981 	mov	_LCD_guigio_PARM_3,(_gio + 0x0003)
      0068E9 85*0B*00         [24]17982 	mov	_LCD_guigio_PARM_4,(_phut + 0x0003)
      0068EC 75*00 FD         [24]17983 	mov	_LCD_guigio_PARM_5,#0xfd
                                  17984 ;	assignBit
      0068EF D2*00            [12]17985 	setb	_LCD_guigio_PARM_6
      0068F1 75 82 C7         [24]17986 	mov	dpl,#0xc7
      0068F4 C0 07            [24]17987 	push	ar7
      0068F6 C0 06            [24]17988 	push	ar6
      0068F8 12r00r00         [24]17989 	lcall	_LCD_guigio
      0068FB 90r0Dr14         [24]17990 	mov	dptr,#___str_158
      0068FE 75 F0 80         [24]17991 	mov	b,#0x80
      006901 12r00r00         [24]17992 	lcall	_LCD_guichuoi
      006904 D0 06            [24]17993 	pop	ar6
      006906 D0 07            [24]17994 	pop	ar7
      006908 02r79r7F         [24]17995 	ljmp	00643$
      00690B                      17996 00446$:
                                  17997 ;	src\main.c:659: else LCD_guichuoi("         ");   
      00690B 90r0Dr4F         [24]17998 	mov	dptr,#___str_165
      00690E 75 F0 80         [24]17999 	mov	b,#0x80
      006911 C0 07            [24]18000 	push	ar7
      006913 C0 06            [24]18001 	push	ar6
      006915 12r00r00         [24]18002 	lcall	_LCD_guichuoi
      006918 D0 06            [24]18003 	pop	ar6
      00691A D0 07            [24]18004 	pop	ar7
                                  18005 ;	src\main.c:661: break;
      00691C 02r79r7F         [24]18006 	ljmp	00643$
                                  18007 ;	src\main.c:662: case GIOTHUC: LCD_guigio(0xc0,GPS_time?"  GPS  ":(eep_gpson?"   DS  ":" ASIA  "),hour,minute,second,1); 
      00691F                      18008 00450$:
      00691F 30*1B 06         [24]18009 	jnb	_GPS_time,00753$
      006922 7BrBC            [12]18010 	mov	r3,#___str_0
      006924 7Cs03            [12]18011 	mov	r4,#(___str_0 >> 8)
      006926 80 19            [24]18012 	sjmp	00754$
      006928                      18013 00753$:
      006928 90 F0 02         [24]18014 	mov	dptr,#_eep_gpson
      00692B E4               [12]18015 	clr	a
      00692C 93               [24]18016 	movc	a,@a+dptr
      00692D 60 08            [24]18017 	jz	00755$
      00692F 75*2FrCC         [24]18018 	mov	_main_sloc0_1_0,#___str_2
      006932 75*30s03         [24]18019 	mov	(_main_sloc0_1_0 + 1),#(___str_2 >> 8)
      006935 80 06            [24]18020 	sjmp	00756$
      006937                      18021 00755$:
      006937 75*2FrC4         [24]18022 	mov	_main_sloc0_1_0,#___str_1
      00693A 75*30s03         [24]18023 	mov	(_main_sloc0_1_0 + 1),#(___str_1 >> 8)
      00693D                      18024 00756$:
      00693D AB*2F            [24]18025 	mov	r3,_main_sloc0_1_0
      00693F AC*30            [24]18026 	mov	r4,(_main_sloc0_1_0 + 1)
      006941                      18027 00754$:
      006941 8B*00            [24]18028 	mov	_LCD_guigio_PARM_2,r3
      006943 8C*01            [24]18029 	mov	(_LCD_guigio_PARM_2 + 1),r4
      006945 75*02 80         [24]18030 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      006948 85*02*00         [24]18031 	mov	_LCD_guigio_PARM_3,_hour
      00694B 85*01*00         [24]18032 	mov	_LCD_guigio_PARM_4,_minute
      00694E 85*00*00         [24]18033 	mov	_LCD_guigio_PARM_5,_second
                                  18034 ;	assignBit
      006951 D2*00            [12]18035 	setb	_LCD_guigio_PARM_6
      006953 75 82 C0         [24]18036 	mov	dpl,#0xc0
      006956 12r00r00         [24]18037 	lcall	_LCD_guigio
                                  18038 ;	src\main.c:663: giotemp=hour;phuttemp=minute;break;
      006959 AF*02            [24]18039 	mov	r7,_hour
      00695B AE*01            [24]18040 	mov	r6,_minute
      00695D 02r79r7F         [24]18041 	ljmp	00643$
                                  18042 ;	src\main.c:664: case CANHKIM: LCD_guichuoi("\300MAY 1          ");LCD_blinkXY(DUOI,4);break;
      006960                      18043 00451$:
      006960 90r0Dr59         [24]18044 	mov	dptr,#___str_166
      006963 75 F0 80         [24]18045 	mov	b,#0x80
      006966 C0 07            [24]18046 	push	ar7
      006968 C0 06            [24]18047 	push	ar6
      00696A 12r00r00         [24]18048 	lcall	_LCD_guichuoi
      00696D 75*00 04         [24]18049 	mov	_LCD_blinkXY_PARM_2,#0x04
      006970 75 82 C0         [24]18050 	mov	dpl,#0xc0
      006973 12r00r00         [24]18051 	lcall	_LCD_blinkXY
      006976 D0 06            [24]18052 	pop	ar6
      006978 D0 07            [24]18053 	pop	ar7
      00697A 02r79r7F         [24]18054 	ljmp	00643$
                                  18055 ;	src\main.c:665: case MP3TEST: LCD_guigio(0xc0,"000 ",0,0,251,1);LCD_guigio(0xc8," ",day,month,100+year,1);giotemp=phuttemp=song_name=0;
      00697D                      18056 00452$:
      00697D 75*00r6A         [24]18057 	mov	_LCD_guigio_PARM_2,#___str_167
      006980 75*01s0D         [24]18058 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_167 >> 8)
      006983 75*02 80         [24]18059 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      006986 75*00 00         [24]18060 	mov	_LCD_guigio_PARM_3,#0x00
      006989 75*00 00         [24]18061 	mov	_LCD_guigio_PARM_4,#0x00
      00698C 75*00 FB         [24]18062 	mov	_LCD_guigio_PARM_5,#0xfb
                                  18063 ;	assignBit
      00698F D2*00            [12]18064 	setb	_LCD_guigio_PARM_6
      006991 75 82 C0         [24]18065 	mov	dpl,#0xc0
      006994 12r00r00         [24]18066 	lcall	_LCD_guigio
      006997 75*00r23         [24]18067 	mov	_LCD_guigio_PARM_2,#___str_162
      00699A 75*01s0D         [24]18068 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_162 >> 8)
      00699D 75*02 80         [24]18069 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      0069A0 90r00rDD         [24]18070 	mov	dptr,#_day
      0069A3 E0               [24]18071 	movx	a,@dptr
      0069A4 F5*00            [12]18072 	mov	_LCD_guigio_PARM_3,a
      0069A6 90r00rDE         [24]18073 	mov	dptr,#_month
      0069A9 E0               [24]18074 	movx	a,@dptr
      0069AA F5*00            [12]18075 	mov	_LCD_guigio_PARM_4,a
      0069AC 90r00rDF         [24]18076 	mov	dptr,#_year
      0069AF E0               [24]18077 	movx	a,@dptr
      0069B0 24 64            [12]18078 	add	a,#0x64
      0069B2 F5*00            [12]18079 	mov	_LCD_guigio_PARM_5,a
                                  18080 ;	assignBit
      0069B4 D2*00            [12]18081 	setb	_LCD_guigio_PARM_6
      0069B6 75 82 C8         [24]18082 	mov	dpl,#0xc8
      0069B9 12r00r00         [24]18083 	lcall	_LCD_guigio
      0069BC 90r00rF6         [24]18084 	mov	dptr,#_song_name
      0069BF E4               [12]18085 	clr	a
      0069C0 F0               [24]18086 	movx	@dptr,a
      0069C1 A3               [24]18087 	inc	dptr
      0069C2 F0               [24]18088 	movx	@dptr,a
      0069C3 7E 00            [12]18089 	mov	r6,#0x00
      0069C5 7F 00            [12]18090 	mov	r7,#0x00
                                  18091 ;	src\main.c:666: thutemp = date;ngaytemp = day;thangtemp = month; namtemp = year;
      0069C7 90r00rDC         [24]18092 	mov	dptr,#_date
      0069CA E0               [24]18093 	movx	a,@dptr
      0069CB 90r01r37         [24]18094 	mov	dptr,#_main_thutemp_65536_253
      0069CE F0               [24]18095 	movx	@dptr,a
      0069CF 90r00rDD         [24]18096 	mov	dptr,#_day
      0069D2 E0               [24]18097 	movx	a,@dptr
      0069D3 90r01r34         [24]18098 	mov	dptr,#_main_ngaytemp_65536_253
      0069D6 F0               [24]18099 	movx	@dptr,a
      0069D7 90r00rDE         [24]18100 	mov	dptr,#_month
      0069DA E0               [24]18101 	movx	a,@dptr
      0069DB 90r01r35         [24]18102 	mov	dptr,#_main_thangtemp_65536_253
      0069DE F0               [24]18103 	movx	@dptr,a
      0069DF 90r00rDF         [24]18104 	mov	dptr,#_year
      0069E2 E0               [24]18105 	movx	a,@dptr
      0069E3 90r01r36         [24]18106 	mov	dptr,#_main_namtemp_65536_253
      0069E6 F0               [24]18107 	movx	@dptr,a
                                  18108 ;	src\main.c:667: LCD_guilenh(0xcf);
      0069E7 75 82 CF         [24]18109 	mov	dpl,#0xcf
      0069EA C0 07            [24]18110 	push	ar7
      0069EC C0 06            [24]18111 	push	ar6
      0069EE 12r00r00         [24]18112 	lcall	_LCD_guilenh
                                  18113 ;	src\main.c:668: LCD_guidulieu(thutemp+'0');
      0069F1 90r01r37         [24]18114 	mov	dptr,#_main_thutemp_65536_253
      0069F4 E0               [24]18115 	movx	a,@dptr
      0069F5 24 30            [12]18116 	add	a,#0x30
      0069F7 F5 82            [12]18117 	mov	dpl,a
      0069F9 12r00r00         [24]18118 	lcall	_LCD_guidulieu
      0069FC D0 06            [24]18119 	pop	ar6
      0069FE D0 07            [24]18120 	pop	ar7
                                  18121 ;	src\main.c:669: break;
      006A00 02r79r7F         [24]18122 	ljmp	00643$
                                  18123 ;	src\main.c:670: case DIENTHOAI: if(nosim) LCD_guichuoi("\300  KHONG CO SIM  ");
      006A03                      18124 00453$:
      006A03 30*2E 14         [24]18125 	jnb	_nosim,00458$
      006A06 90r0Dr6F         [24]18126 	mov	dptr,#___str_168
      006A09 75 F0 80         [24]18127 	mov	b,#0x80
      006A0C C0 07            [24]18128 	push	ar7
      006A0E C0 06            [24]18129 	push	ar6
      006A10 12r00r00         [24]18130 	lcall	_LCD_guichuoi
      006A13 D0 06            [24]18131 	pop	ar6
      006A15 D0 07            [24]18132 	pop	ar7
      006A17 02r79r7F         [24]18133 	ljmp	00643$
      006A1A                      18134 00458$:
                                  18135 ;	src\main.c:671: else if(!gsm_pw) LCD_guichuoi("\300  GSM TAT NGUON ");
      006A1A 20 A0 14         [24]18136 	jb	_P20,00455$
      006A1D 90r0Dr81         [24]18137 	mov	dptr,#___str_169
      006A20 75 F0 80         [24]18138 	mov	b,#0x80
      006A23 C0 07            [24]18139 	push	ar7
      006A25 C0 06            [24]18140 	push	ar6
      006A27 12r00r00         [24]18141 	lcall	_LCD_guichuoi
      006A2A D0 06            [24]18142 	pop	ar6
      006A2C D0 07            [24]18143 	pop	ar7
      006A2E 02r79r7F         [24]18144 	ljmp	00643$
      006A31                      18145 00455$:
                                  18146 ;	src\main.c:673: kiemtratinhieu();kiemtrataikhoan();
      006A31 C0 07            [24]18147 	push	ar7
      006A33 C0 06            [24]18148 	push	ar6
      006A35 12r10r36         [24]18149 	lcall	_kiemtratinhieu
      006A38 12r0Fr84         [24]18150 	lcall	_kiemtrataikhoan
                                  18151 ;	src\main.c:674: LCD_xoa(DUOI);LCD_guilenh(0xc0);LCD_guichuoi(lenh_sms);
      006A3B 75 82 C0         [24]18152 	mov	dpl,#0xc0
      006A3E 12r00r00         [24]18153 	lcall	_LCD_xoa
      006A41 75 82 C0         [24]18154 	mov	dpl,#0xc0
      006A44 12r00r00         [24]18155 	lcall	_LCD_guilenh
      006A47 90r00r16         [24]18156 	mov	dptr,#_lenh_sms
      006A4A 75 F0 00         [24]18157 	mov	b,#0x00
      006A4D 12r00r00         [24]18158 	lcall	_LCD_guichuoi
                                  18159 ;	src\main.c:675: LCD_guilenh(0x80);phone[10]=0;LCD_guichuoi(phone);
      006A50 75 82 80         [24]18160 	mov	dpl,#0x80
      006A53 12r00r00         [24]18161 	lcall	_LCD_guilenh
      006A56 90r00r15         [24]18162 	mov	dptr,#(_phone + 0x000a)
      006A59 E4               [12]18163 	clr	a
      006A5A F0               [24]18164 	movx	@dptr,a
      006A5B 90r00r0B         [24]18165 	mov	dptr,#_phone
      006A5E 75 F0 00         [24]18166 	mov	b,#0x00
      006A61 12r00r00         [24]18167 	lcall	_LCD_guichuoi
                                  18168 ;	src\main.c:676: LCD_guilenh(0x8e);LCD_guidulieu(signal/10+'0');LCD_guidulieu(signal%10+'0');
      006A64 75 82 8E         [24]18169 	mov	dpl,#0x8e
      006A67 12r00r00         [24]18170 	lcall	_LCD_guilenh
      006A6A 90r00rF9         [24]18171 	mov	dptr,#_signal
      006A6D E0               [24]18172 	movx	a,@dptr
      006A6E FC               [12]18173 	mov	r4,a
      006A6F 7B 00            [12]18174 	mov	r3,#0x00
      006A71 75*00 0A         [24]18175 	mov	__divsint_PARM_2,#0x0a
                                  18176 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      006A74 8B*01            [24]18177 	mov	(__divsint_PARM_2 + 1),r3
      006A76 8C 82            [24]18178 	mov	dpl,r4
      006A78 8B 83            [24]18179 	mov	dph,r3
      006A7A 12r00r00         [24]18180 	lcall	__divsint
      006A7D AB 82            [24]18181 	mov	r3,dpl
      006A7F 74 30            [12]18182 	mov	a,#0x30
      006A81 2B               [12]18183 	add	a,r3
      006A82 F5 82            [12]18184 	mov	dpl,a
      006A84 12r00r00         [24]18185 	lcall	_LCD_guidulieu
      006A87 90r00rF9         [24]18186 	mov	dptr,#_signal
      006A8A E0               [24]18187 	movx	a,@dptr
      006A8B FC               [12]18188 	mov	r4,a
      006A8C 7B 00            [12]18189 	mov	r3,#0x00
      006A8E 75*00 0A         [24]18190 	mov	__modsint_PARM_2,#0x0a
                                  18191 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      006A91 8B*01            [24]18192 	mov	(__modsint_PARM_2 + 1),r3
      006A93 8C 82            [24]18193 	mov	dpl,r4
      006A95 8B 83            [24]18194 	mov	dph,r3
      006A97 12r00r00         [24]18195 	lcall	__modsint
      006A9A AB 82            [24]18196 	mov	r3,dpl
      006A9C 74 30            [12]18197 	mov	a,#0x30
      006A9E 2B               [12]18198 	add	a,r3
      006A9F F5 82            [12]18199 	mov	dpl,a
      006AA1 12r00r00         [24]18200 	lcall	_LCD_guidulieu
      006AA4 D0 06            [24]18201 	pop	ar6
      006AA6 D0 07            [24]18202 	pop	ar7
                                  18203 ;	src\main.c:678: break;
      006AA8 02r79r7F         [24]18204 	ljmp	00643$
                                  18205 ;	src\main.c:679: case DATE:  LCD_guichuoi("\300  ");LCD_guidulieu(day/10+'0');LCD_guidulieu(day%10+'0');
      006AAB                      18206 00460$:
      006AAB 90r0Dr93         [24]18207 	mov	dptr,#___str_170
      006AAE 75 F0 80         [24]18208 	mov	b,#0x80
      006AB1 C0 07            [24]18209 	push	ar7
      006AB3 C0 06            [24]18210 	push	ar6
      006AB5 12r00r00         [24]18211 	lcall	_LCD_guichuoi
      006AB8 90r00rDD         [24]18212 	mov	dptr,#_day
      006ABB E0               [24]18213 	movx	a,@dptr
      006ABC FC               [12]18214 	mov	r4,a
      006ABD 7B 00            [12]18215 	mov	r3,#0x00
      006ABF 75*00 0A         [24]18216 	mov	__divsint_PARM_2,#0x0a
                                  18217 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      006AC2 8B*01            [24]18218 	mov	(__divsint_PARM_2 + 1),r3
      006AC4 8C 82            [24]18219 	mov	dpl,r4
      006AC6 8B 83            [24]18220 	mov	dph,r3
      006AC8 12r00r00         [24]18221 	lcall	__divsint
      006ACB AB 82            [24]18222 	mov	r3,dpl
      006ACD 74 30            [12]18223 	mov	a,#0x30
      006ACF 2B               [12]18224 	add	a,r3
      006AD0 F5 82            [12]18225 	mov	dpl,a
      006AD2 12r00r00         [24]18226 	lcall	_LCD_guidulieu
      006AD5 90r00rDD         [24]18227 	mov	dptr,#_day
      006AD8 E0               [24]18228 	movx	a,@dptr
      006AD9 FC               [12]18229 	mov	r4,a
      006ADA 7B 00            [12]18230 	mov	r3,#0x00
      006ADC 75*00 0A         [24]18231 	mov	__modsint_PARM_2,#0x0a
                                  18232 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      006ADF 8B*01            [24]18233 	mov	(__modsint_PARM_2 + 1),r3
      006AE1 8C 82            [24]18234 	mov	dpl,r4
      006AE3 8B 83            [24]18235 	mov	dph,r3
      006AE5 12r00r00         [24]18236 	lcall	__modsint
      006AE8 AB 82            [24]18237 	mov	r3,dpl
      006AEA 74 30            [12]18238 	mov	a,#0x30
      006AEC 2B               [12]18239 	add	a,r3
      006AED F5 82            [12]18240 	mov	dpl,a
      006AEF 12r00r00         [24]18241 	lcall	_LCD_guidulieu
                                  18242 ;	src\main.c:680: LCD_guichuoi(" - ");LCD_guidulieu(month/10+'0');LCD_guidulieu(month%10+'0');
      006AF2 90r0Dr97         [24]18243 	mov	dptr,#___str_171
      006AF5 75 F0 80         [24]18244 	mov	b,#0x80
      006AF8 12r00r00         [24]18245 	lcall	_LCD_guichuoi
      006AFB 90r00rDE         [24]18246 	mov	dptr,#_month
      006AFE E0               [24]18247 	movx	a,@dptr
      006AFF FC               [12]18248 	mov	r4,a
      006B00 7B 00            [12]18249 	mov	r3,#0x00
      006B02 75*00 0A         [24]18250 	mov	__divsint_PARM_2,#0x0a
                                  18251 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      006B05 8B*01            [24]18252 	mov	(__divsint_PARM_2 + 1),r3
      006B07 8C 82            [24]18253 	mov	dpl,r4
      006B09 8B 83            [24]18254 	mov	dph,r3
      006B0B 12r00r00         [24]18255 	lcall	__divsint
      006B0E AB 82            [24]18256 	mov	r3,dpl
      006B10 74 30            [12]18257 	mov	a,#0x30
      006B12 2B               [12]18258 	add	a,r3
      006B13 F5 82            [12]18259 	mov	dpl,a
      006B15 12r00r00         [24]18260 	lcall	_LCD_guidulieu
      006B18 90r00rDE         [24]18261 	mov	dptr,#_month
      006B1B E0               [24]18262 	movx	a,@dptr
      006B1C FC               [12]18263 	mov	r4,a
      006B1D 7B 00            [12]18264 	mov	r3,#0x00
      006B1F 75*00 0A         [24]18265 	mov	__modsint_PARM_2,#0x0a
                                  18266 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      006B22 8B*01            [24]18267 	mov	(__modsint_PARM_2 + 1),r3
      006B24 8C 82            [24]18268 	mov	dpl,r4
      006B26 8B 83            [24]18269 	mov	dph,r3
      006B28 12r00r00         [24]18270 	lcall	__modsint
      006B2B AB 82            [24]18271 	mov	r3,dpl
      006B2D 74 30            [12]18272 	mov	a,#0x30
      006B2F 2B               [12]18273 	add	a,r3
      006B30 F5 82            [12]18274 	mov	dpl,a
      006B32 12r00r00         [24]18275 	lcall	_LCD_guidulieu
                                  18276 ;	src\main.c:681: LCD_guichuoi(" - ");LCD_guidulieu(year/10+'0');LCD_guidulieu(year%10+'0');LCD_guichuoi("  ");
      006B35 90r0Dr97         [24]18277 	mov	dptr,#___str_171
      006B38 75 F0 80         [24]18278 	mov	b,#0x80
      006B3B 12r00r00         [24]18279 	lcall	_LCD_guichuoi
      006B3E 90r00rDF         [24]18280 	mov	dptr,#_year
      006B41 E0               [24]18281 	movx	a,@dptr
      006B42 FC               [12]18282 	mov	r4,a
      006B43 7B 00            [12]18283 	mov	r3,#0x00
      006B45 75*00 0A         [24]18284 	mov	__divsint_PARM_2,#0x0a
                                  18285 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      006B48 8B*01            [24]18286 	mov	(__divsint_PARM_2 + 1),r3
      006B4A 8C 82            [24]18287 	mov	dpl,r4
      006B4C 8B 83            [24]18288 	mov	dph,r3
      006B4E 12r00r00         [24]18289 	lcall	__divsint
      006B51 AB 82            [24]18290 	mov	r3,dpl
      006B53 74 30            [12]18291 	mov	a,#0x30
      006B55 2B               [12]18292 	add	a,r3
      006B56 F5 82            [12]18293 	mov	dpl,a
      006B58 12r00r00         [24]18294 	lcall	_LCD_guidulieu
      006B5B 90r00rDF         [24]18295 	mov	dptr,#_year
      006B5E E0               [24]18296 	movx	a,@dptr
      006B5F FC               [12]18297 	mov	r4,a
      006B60 7B 00            [12]18298 	mov	r3,#0x00
      006B62 75*00 0A         [24]18299 	mov	__modsint_PARM_2,#0x0a
                                  18300 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      006B65 8B*01            [24]18301 	mov	(__modsint_PARM_2 + 1),r3
      006B67 8C 82            [24]18302 	mov	dpl,r4
      006B69 8B 83            [24]18303 	mov	dph,r3
      006B6B 12r00r00         [24]18304 	lcall	__modsint
      006B6E AB 82            [24]18305 	mov	r3,dpl
      006B70 74 30            [12]18306 	mov	a,#0x30
      006B72 2B               [12]18307 	add	a,r3
      006B73 F5 82            [12]18308 	mov	dpl,a
      006B75 12r00r00         [24]18309 	lcall	_LCD_guidulieu
      006B78 90r0Dr14         [24]18310 	mov	dptr,#___str_158
      006B7B 75 F0 80         [24]18311 	mov	b,#0x80
      006B7E 12r00r00         [24]18312 	lcall	_LCD_guichuoi
      006B81 D0 06            [24]18313 	pop	ar6
      006B83 D0 07            [24]18314 	pop	ar7
                                  18315 ;	src\main.c:685: break;
      006B85 02r79r7F         [24]18316 	ljmp	00643$
      006B88                      18317 00465$:
                                  18318 ;	src\main.c:688: LCD_guigio(0xc0,GPS_time?"  GPS  ":(eep_gpson?"   DS  ":" ASIA  "),hour,minute,mode_wait,flip_pulse);
      006B88 30*1B 06         [24]18319 	jnb	_GPS_time,00757$
      006B8B 7BrBC            [12]18320 	mov	r3,#___str_0
      006B8D 7Cs03            [12]18321 	mov	r4,#(___str_0 >> 8)
      006B8F 80 19            [24]18322 	sjmp	00758$
      006B91                      18323 00757$:
      006B91 90 F0 02         [24]18324 	mov	dptr,#_eep_gpson
      006B94 E4               [12]18325 	clr	a
      006B95 93               [24]18326 	movc	a,@a+dptr
      006B96 60 08            [24]18327 	jz	00759$
      006B98 75*2FrCC         [24]18328 	mov	_main_sloc0_1_0,#___str_2
      006B9B 75*30s03         [24]18329 	mov	(_main_sloc0_1_0 + 1),#(___str_2 >> 8)
      006B9E 80 06            [24]18330 	sjmp	00760$
      006BA0                      18331 00759$:
      006BA0 75*2FrC4         [24]18332 	mov	_main_sloc0_1_0,#___str_1
      006BA3 75*30s03         [24]18333 	mov	(_main_sloc0_1_0 + 1),#(___str_1 >> 8)
      006BA6                      18334 00760$:
      006BA6 AB*2F            [24]18335 	mov	r3,_main_sloc0_1_0
      006BA8 AC*30            [24]18336 	mov	r4,(_main_sloc0_1_0 + 1)
      006BAA                      18337 00758$:
      006BAA 8B*00            [24]18338 	mov	_LCD_guigio_PARM_2,r3
      006BAC 8C*01            [24]18339 	mov	(_LCD_guigio_PARM_2 + 1),r4
      006BAE 75*02 80         [24]18340 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      006BB1 90r00rF5         [24]18341 	mov	dptr,#_mode_wait
      006BB4 E0               [24]18342 	movx	a,@dptr
      006BB5 F5*00            [12]18343 	mov	_LCD_guigio_PARM_5,a
      006BB7 85*02*00         [24]18344 	mov	_LCD_guigio_PARM_3,_hour
      006BBA 85*01*00         [24]18345 	mov	_LCD_guigio_PARM_4,_minute
                                  18346 ;	assignBit
      006BBD A2*1E            [12]18347 	mov	c,_flip_pulse
      006BBF 92*00            [24]18348 	mov	_LCD_guigio_PARM_6,c
      006BC1 75 82 C0         [24]18349 	mov	dpl,#0xc0
      006BC4 C0 07            [24]18350 	push	ar7
      006BC6 C0 06            [24]18351 	push	ar6
      006BC8 12r00r00         [24]18352 	lcall	_LCD_guigio
                                  18353 ;	src\main.c:689: LCD_chop(TREN,mode_select[sub_mode]);		
      006BCB 90r00rF4         [24]18354 	mov	dptr,#_sub_mode
      006BCE E0               [24]18355 	movx	a,@dptr
      006BCF 75 F0 11         [24]18356 	mov	b,#0x11
      006BD2 A4               [48]18357 	mul	ab
      006BD3 24r1E            [12]18358 	add	a,#_mode_select
      006BD5 FB               [12]18359 	mov	r3,a
      006BD6 74s00            [12]18360 	mov	a,#(_mode_select >> 8)
      006BD8 35 F0            [12]18361 	addc	a,b
      006BDA FC               [12]18362 	mov	r4,a
      006BDB 8B*00            [24]18363 	mov	_LCD_chop_PARM_2,r3
      006BDD 8C*01            [24]18364 	mov	(_LCD_chop_PARM_2 + 1),r4
      006BDF 75*02 80         [24]18365 	mov	(_LCD_chop_PARM_2 + 2),#0x80
      006BE2 75 82 80         [24]18366 	mov	dpl,#0x80
      006BE5 12r00r00         [24]18367 	lcall	_LCD_chop
      006BE8 D0 06            [24]18368 	pop	ar6
      006BEA D0 07            [24]18369 	pop	ar7
                                  18370 ;	src\main.c:690: break;
      006BEC 02r79r7F         [24]18371 	ljmp	00643$
                                  18372 ;	src\main.c:691: case GIOKIM:
      006BEF                      18373 00466$:
                                  18374 ;	src\main.c:692: LCD_blinkXY((sub_mode<8 && so_motor>2)?TREN:DUOI,so_motor==1?(7+sub_mode+sub_mode/2):(2+sub_mode%8+sub_mode%8/2+sub_mode%8/4));
      006BEF 90r00rF4         [24]18375 	mov	dptr,#_sub_mode
      006BF2 E0               [24]18376 	movx	a,@dptr
      006BF3 FC               [12]18377 	mov	r4,a
      006BF4 BC 08 00         [24]18378 	cjne	r4,#0x08,02658$
      006BF7                      18379 02658$:
      006BF7 50 0F            [24]18380 	jnc	00761$
      006BF9 90r01r2E         [24]18381 	mov	dptr,#_so_motor
      006BFC E0               [24]18382 	movx	a,@dptr
      006BFD FC               [12]18383 	mov  r4,a
      006BFE 24 FD            [12]18384 	add	a,#0xff - 0x02
      006C00 50 06            [24]18385 	jnc	00761$
      006C02 7B 80            [12]18386 	mov	r3,#0x80
      006C04 7C 00            [12]18387 	mov	r4,#0x00
      006C06 80 04            [24]18388 	sjmp	00762$
      006C08                      18389 00761$:
      006C08 7B C0            [12]18390 	mov	r3,#0xc0
      006C0A 7C 00            [12]18391 	mov	r4,#0x00
      006C0C                      18392 00762$:
      006C0C 90r01r2E         [24]18393 	mov	dptr,#_so_motor
      006C0F E0               [24]18394 	movx	a,@dptr
      006C10 FC               [12]18395 	mov	r4,a
      006C11 BC 01 32         [24]18396 	cjne	r4,#0x01,00766$
      006C14 C0 03            [24]18397 	push	ar3
      006C16 90r00rF4         [24]18398 	mov	dptr,#_sub_mode
      006C19 E0               [24]18399 	movx	a,@dptr
      006C1A FC               [12]18400 	mov	r4,a
      006C1B 24 07            [12]18401 	add	a,#0x07
      006C1D FA               [12]18402 	mov	r2,a
      006C1E 8C 03            [24]18403 	mov	ar3,r4
      006C20 7C 00            [12]18404 	mov	r4,#0x00
      006C22 75*00 02         [24]18405 	mov	__divsint_PARM_2,#0x02
                                  18406 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      006C25 8C*01            [24]18407 	mov	(__divsint_PARM_2 + 1),r4
      006C27 8B 82            [24]18408 	mov	dpl,r3
      006C29 8C 83            [24]18409 	mov	dph,r4
      006C2B C0 07            [24]18410 	push	ar7
      006C2D C0 06            [24]18411 	push	ar6
      006C2F C0 02            [24]18412 	push	ar2
      006C31 12r00r00         [24]18413 	lcall	__divsint
      006C34 AB 82            [24]18414 	mov	r3,dpl
      006C36 AC 83            [24]18415 	mov	r4,dph
      006C38 D0 02            [24]18416 	pop	ar2
      006C3A D0 06            [24]18417 	pop	ar6
      006C3C D0 07            [24]18418 	pop	ar7
      006C3E EB               [12]18419 	mov	a,r3
      006C3F 2A               [12]18420 	add	a,r2
      006C40 F5*31            [12]18421 	mov	_main_sloc1_1_0,a
      006C42 D0 03            [24]18422 	pop	ar3
      006C44 80 4D            [24]18423 	sjmp	00767$
      006C46                      18424 00766$:
      006C46 C0 03            [24]18425 	push	ar3
      006C48 90r00rF4         [24]18426 	mov	dptr,#_sub_mode
      006C4B E0               [24]18427 	movx	a,@dptr
      006C4C 54 07            [12]18428 	anl	a,#0x07
      006C4E F5*32            [12]18429 	mov	_main_sloc2_1_0,a
      006C50 75*33 00         [24]18430 	mov	(_main_sloc2_1_0 + 1),#0x00
      006C53 AB*32            [24]18431 	mov	r3,_main_sloc2_1_0
      006C55 74 02            [12]18432 	mov	a,#0x02
      006C57 2B               [12]18433 	add	a,r3
      006C58 F5*2F            [12]18434 	mov	_main_sloc0_1_0,a
      006C5A 75*00 02         [24]18435 	mov	__divsint_PARM_2,#0x02
      006C5D 75*01 00         [24]18436 	mov	(__divsint_PARM_2 + 1),#0x00
      006C60 85*32 82         [24]18437 	mov	dpl,_main_sloc2_1_0
      006C63 85*33 83         [24]18438 	mov	dph,(_main_sloc2_1_0 + 1)
      006C66 C0 07            [24]18439 	push	ar7
      006C68 C0 06            [24]18440 	push	ar6
      006C6A 12r00r00         [24]18441 	lcall	__divsint
      006C6D E5 82            [12]18442 	mov	a,dpl
      006C6F 25*2F            [12]18443 	add	a,_main_sloc0_1_0
      006C71 FB               [12]18444 	mov	r3,a
      006C72 75*00 04         [24]18445 	mov	__divsint_PARM_2,#0x04
      006C75 75*01 00         [24]18446 	mov	(__divsint_PARM_2 + 1),#0x00
      006C78 85*32 82         [24]18447 	mov	dpl,_main_sloc2_1_0
      006C7B 85*33 83         [24]18448 	mov	dph,(_main_sloc2_1_0 + 1)
      006C7E C0 03            [24]18449 	push	ar3
      006C80 12r00r00         [24]18450 	lcall	__divsint
      006C83 AA 82            [24]18451 	mov	r2,dpl
      006C85 AC 83            [24]18452 	mov	r4,dph
      006C87 D0 03            [24]18453 	pop	ar3
      006C89 D0 06            [24]18454 	pop	ar6
      006C8B D0 07            [24]18455 	pop	ar7
      006C8D EA               [12]18456 	mov	a,r2
      006C8E 2B               [12]18457 	add	a,r3
      006C8F F5*31            [12]18458 	mov	_main_sloc1_1_0,a
                                  18459 ;	src\main.c:973: WATCHDOG;
      006C91 D0 03            [24]18460 	pop	ar3
                                  18461 ;	src\main.c:692: LCD_blinkXY((sub_mode<8 && so_motor>2)?TREN:DUOI,so_motor==1?(7+sub_mode+sub_mode/2):(2+sub_mode%8+sub_mode%8/2+sub_mode%8/4));
      006C93                      18462 00767$:
      006C93 85*31*00         [24]18463 	mov	_LCD_blinkXY_PARM_2,_main_sloc1_1_0
      006C96 8B 82            [24]18464 	mov	dpl,r3
      006C98 C0 07            [24]18465 	push	ar7
      006C9A C0 06            [24]18466 	push	ar6
      006C9C 12r00r00         [24]18467 	lcall	_LCD_blinkXY
      006C9F D0 06            [24]18468 	pop	ar6
      006CA1 D0 07            [24]18469 	pop	ar7
                                  18470 ;	src\main.c:693: if(!phim_mode_doi){
      006CA3 90r00rF0         [24]18471 	mov	dptr,#_phim_mode_doi
      006CA6 E0               [24]18472 	movx	a,@dptr
      006CA7 70 6C            [24]18473 	jnz	00468$
                                  18474 ;	src\main.c:694: LCD_noblink();
      006CA9 C0 07            [24]18475 	push	ar7
      006CAB C0 06            [24]18476 	push	ar6
      006CAD 12r00r00         [24]18477 	lcall	_LCD_noblink
                                  18478 ;	src\main.c:695: sub_mode = mode;
      006CB0 90r00rF3         [24]18479 	mov	dptr,#_mode
      006CB3 E0               [24]18480 	movx	a,@dptr
      006CB4 90r00rF4         [24]18481 	mov	dptr,#_sub_mode
      006CB7 F0               [24]18482 	movx	@dptr,a
                                  18483 ;	src\main.c:696: mode = SELECT;
      006CB8 90r00rF3         [24]18484 	mov	dptr,#_mode
      006CBB 74 07            [12]18485 	mov	a,#0x07
      006CBD F0               [24]18486 	movx	@dptr,a
                                  18487 ;	src\main.c:697: gio[0] = gio[0]%12;
      006CBE AB*04            [24]18488 	mov	r3,_gio
      006CC0 7C 00            [12]18489 	mov	r4,#0x00
      006CC2 75*00 0C         [24]18490 	mov	__modsint_PARM_2,#0x0c
                                  18491 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      006CC5 8C*01            [24]18492 	mov	(__modsint_PARM_2 + 1),r4
      006CC7 8B 82            [24]18493 	mov	dpl,r3
      006CC9 8C 83            [24]18494 	mov	dph,r4
      006CCB 12r00r00         [24]18495 	lcall	__modsint
      006CCE AB 82            [24]18496 	mov	r3,dpl
      006CD0 8B*04            [24]18497 	mov	_gio,r3
                                  18498 ;	src\main.c:698: gio[1] = gio[1]%12;
      006CD2 AB*05            [24]18499 	mov	r3,(_gio + 0x0001)
      006CD4 7C 00            [12]18500 	mov	r4,#0x00
      006CD6 75*00 0C         [24]18501 	mov	__modsint_PARM_2,#0x0c
                                  18502 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      006CD9 8C*01            [24]18503 	mov	(__modsint_PARM_2 + 1),r4
      006CDB 8B 82            [24]18504 	mov	dpl,r3
      006CDD 8C 83            [24]18505 	mov	dph,r4
      006CDF 12r00r00         [24]18506 	lcall	__modsint
      006CE2 AB 82            [24]18507 	mov	r3,dpl
      006CE4 8B*05            [24]18508 	mov	(_gio + 0x0001),r3
                                  18509 ;	src\main.c:699: gio[2] = gio[2]%12;
      006CE6 AB*06            [24]18510 	mov	r3,(_gio + 0x0002)
      006CE8 7C 00            [12]18511 	mov	r4,#0x00
      006CEA 75*00 0C         [24]18512 	mov	__modsint_PARM_2,#0x0c
                                  18513 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      006CED 8C*01            [24]18514 	mov	(__modsint_PARM_2 + 1),r4
      006CEF 8B 82            [24]18515 	mov	dpl,r3
      006CF1 8C 83            [24]18516 	mov	dph,r4
      006CF3 12r00r00         [24]18517 	lcall	__modsint
      006CF6 AB 82            [24]18518 	mov	r3,dpl
      006CF8 8B*06            [24]18519 	mov	(_gio + 0x0002),r3
                                  18520 ;	src\main.c:700: gio[3] = gio[3]%12;
      006CFA AB*07            [24]18521 	mov	r3,(_gio + 0x0003)
      006CFC 7C 00            [12]18522 	mov	r4,#0x00
      006CFE 75*00 0C         [24]18523 	mov	__modsint_PARM_2,#0x0c
                                  18524 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      006D01 8C*01            [24]18525 	mov	(__modsint_PARM_2 + 1),r4
      006D03 8B 82            [24]18526 	mov	dpl,r3
      006D05 8C 83            [24]18527 	mov	dph,r4
      006D07 12r00r00         [24]18528 	lcall	__modsint
      006D0A AB 82            [24]18529 	mov	r3,dpl
      006D0C 8B*07            [24]18530 	mov	(_gio + 0x0003),r3
                                  18531 ;	src\main.c:701: luu_gio_kim();	
      006D0E 12r06rDD         [24]18532 	lcall	_luu_gio_kim
      006D11 D0 06            [24]18533 	pop	ar6
      006D13 D0 07            [24]18534 	pop	ar7
      006D15                      18535 00468$:
                                  18536 ;	src\main.c:703: if(phim_cong_nhan){
                                  18537 ;	src\main.c:704: phim_cong_nhan = 0;
                                  18538 ;	assignBit
      006D15 10*28 03         [24]18539 	jbc	_phim_cong_nhan,02664$
      006D18 02r6Fr9D         [24]18540 	ljmp	00509$
      006D1B                      18541 02664$:
                                  18542 ;	src\main.c:705: mode_wait = TIME_MODE_WAIT;
      006D1B 90r00rF5         [24]18543 	mov	dptr,#_mode_wait
      006D1E 74 3C            [12]18544 	mov	a,#0x3c
      006D20 F0               [24]18545 	movx	@dptr,a
                                  18546 ;	src\main.c:706: switch(sub_mode){
      006D21 90r00rF4         [24]18547 	mov	dptr,#_sub_mode
      006D24 E0               [24]18548 	movx	a,@dptr
      006D25 FC               [12]18549 	mov  r4,a
      006D26 24 F0            [12]18550 	add	a,#0xff - 0x0f
      006D28 50 03            [24]18551 	jnc	02665$
      006D2A 02r6Er85         [24]18552 	ljmp	00499$
      006D2D                      18553 02665$:
      006D2D EC               [12]18554 	mov	a,r4
      006D2E 24 0A            [12]18555 	add	a,#(02666$-3-.)
      006D30 83               [24]18556 	movc	a,@a+pc
      006D31 F5 82            [12]18557 	mov	dpl,a
      006D33 EC               [12]18558 	mov	a,r4
      006D34 24 14            [12]18559 	add	a,#(02667$-3-.)
      006D36 83               [24]18560 	movc	a,@a+pc
      006D37 F5 83            [12]18561 	mov	dph,a
      006D39 E4               [12]18562 	clr	a
      006D3A 73               [24]18563 	jmp	@a+dptr
      006D3B                      18564 02666$:
      006D3Br5B                   18565 	.db	00472$
      006D3CrA9                   18566 	.db	00479$
      006D3Dr13                   18567 	.db	00489$
      006D3Er45                   18568 	.db	00496$
      006D3Fr5B                   18569 	.db	00472$
      006D40rA9                   18570 	.db	00479$
      006D41r13                   18571 	.db	00489$
      006D42r45                   18572 	.db	00496$
      006D43r5B                   18573 	.db	00472$
      006D44rA9                   18574 	.db	00479$
      006D45r13                   18575 	.db	00489$
      006D46r45                   18576 	.db	00496$
      006D47r5B                   18577 	.db	00472$
      006D48rA9                   18578 	.db	00479$
      006D49r13                   18579 	.db	00489$
      006D4Ar45                   18580 	.db	00496$
      006D4B                      18581 02667$:
      006D4Bs6D                   18582 	.db	00472$>>8
      006D4Cs6D                   18583 	.db	00479$>>8
      006D4Ds6E                   18584 	.db	00489$>>8
      006D4Es6E                   18585 	.db	00496$>>8
      006D4Fs6D                   18586 	.db	00472$>>8
      006D50s6D                   18587 	.db	00479$>>8
      006D51s6E                   18588 	.db	00489$>>8
      006D52s6E                   18589 	.db	00496$>>8
      006D53s6D                   18590 	.db	00472$>>8
      006D54s6D                   18591 	.db	00479$>>8
      006D55s6E                   18592 	.db	00489$>>8
      006D56s6E                   18593 	.db	00496$>>8
      006D57s6D                   18594 	.db	00472$>>8
      006D58s6D                   18595 	.db	00479$>>8
      006D59s6E                   18596 	.db	00489$>>8
      006D5As6E                   18597 	.db	00496$>>8
                                  18598 ;	src\main.c:708: case GIO3CHUC : case GIO4CHUC  :
      006D5B                      18599 00472$:
                                  18600 ;	src\main.c:709: if(gio[sub_mode/4]>13)gio[sub_mode/4]%=10;
      006D5B 8C 02            [24]18601 	mov	ar2,r4
      006D5D 7B 00            [12]18602 	mov	r3,#0x00
      006D5F 75*00 04         [24]18603 	mov	__divsint_PARM_2,#0x04
                                  18604 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      006D62 8B*01            [24]18605 	mov	(__divsint_PARM_2 + 1),r3
      006D64 8A 82            [24]18606 	mov	dpl,r2
      006D66 8B 83            [24]18607 	mov	dph,r3
      006D68 C0 07            [24]18608 	push	ar7
      006D6A C0 06            [24]18609 	push	ar6
      006D6C 12r00r00         [24]18610 	lcall	__divsint
      006D6F AA 82            [24]18611 	mov	r2,dpl
      006D71 D0 06            [24]18612 	pop	ar6
      006D73 D0 07            [24]18613 	pop	ar7
      006D75 EA               [12]18614 	mov	a,r2
      006D76 24r04            [12]18615 	add	a,#_gio
      006D78 F9               [12]18616 	mov	r1,a
      006D79 E7               [12]18617 	mov	a,@r1
      006D7A FB               [12]18618 	mov	r3,a
      006D7B 24 F2            [12]18619 	add	a,#0xff - 0x0d
      006D7D 50 23            [24]18620 	jnc	00474$
      006D7F C0 06            [24]18621 	push	ar6
      006D81 8B 02            [24]18622 	mov	ar2,r3
      006D83 7E 00            [12]18623 	mov	r6,#0x00
      006D85 75*00 0A         [24]18624 	mov	__modsint_PARM_2,#0x0a
                                  18625 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      006D88 8E*01            [24]18626 	mov	(__modsint_PARM_2 + 1),r6
      006D8A 8A 82            [24]18627 	mov	dpl,r2
      006D8C 8E 83            [24]18628 	mov	dph,r6
      006D8E C0 07            [24]18629 	push	ar7
      006D90 C0 01            [24]18630 	push	ar1
      006D92 12r00r00         [24]18631 	lcall	__modsint
      006D95 AA 82            [24]18632 	mov	r2,dpl
      006D97 D0 01            [24]18633 	pop	ar1
      006D99 D0 07            [24]18634 	pop	ar7
      006D9B A7 02            [24]18635 	mov	@r1,ar2
      006D9D D0 06            [24]18636 	pop	ar6
      006D9F 02r6Er85         [24]18637 	ljmp	00499$
      006DA2                      18638 00474$:
                                  18639 ;	src\main.c:710: else gio[sub_mode/4] +=10;
      006DA2 74 0A            [12]18640 	mov	a,#0x0a
      006DA4 2B               [12]18641 	add	a,r3
      006DA5 F7               [12]18642 	mov	@r1,a
                                  18643 ;	src\main.c:711: break;
      006DA6 02r6Er85         [24]18644 	ljmp	00499$
                                  18645 ;	src\main.c:713: case GIO3DVI  : case GIO4DVI   :
      006DA9                      18646 00479$:
                                  18647 ;	src\main.c:714: if(gio[sub_mode/4]>22) gio[sub_mode/4] = 20;
      006DA9 8C 02            [24]18648 	mov	ar2,r4
      006DAB 7B 00            [12]18649 	mov	r3,#0x00
      006DAD 75*00 04         [24]18650 	mov	__divsint_PARM_2,#0x04
                                  18651 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      006DB0 8B*01            [24]18652 	mov	(__divsint_PARM_2 + 1),r3
      006DB2 8A 82            [24]18653 	mov	dpl,r2
      006DB4 8B 83            [24]18654 	mov	dph,r3
      006DB6 C0 07            [24]18655 	push	ar7
      006DB8 C0 06            [24]18656 	push	ar6
      006DBA 12r00r00         [24]18657 	lcall	__divsint
      006DBD AA 82            [24]18658 	mov	r2,dpl
      006DBF AB 83            [24]18659 	mov	r3,dph
      006DC1 D0 06            [24]18660 	pop	ar6
      006DC3 D0 07            [24]18661 	pop	ar7
      006DC5 EA               [12]18662 	mov	a,r2
      006DC6 24r04            [12]18663 	add	a,#_gio
      006DC8 F9               [12]18664 	mov	r1,a
      006DC9 E7               [12]18665 	mov	a,@r1
      006DCA F5*32            [12]18666 	mov	_main_sloc2_1_0,a
      006DCC 24 E9            [12]18667 	add	a,#0xff - 0x16
      006DCE 50 05            [24]18668 	jnc	00484$
      006DD0 77 14            [12]18669 	mov	@r1,#0x14
      006DD2 02r6Er85         [24]18670 	ljmp	00499$
      006DD5                      18671 00484$:
                                  18672 ;	src\main.c:715: else if(gio[sub_mode/4]%10==9) gio[sub_mode/4]-=9;
      006DD5 C0 01            [24]18673 	push	ar1
      006DD7 AA*32            [24]18674 	mov	r2,_main_sloc2_1_0
      006DD9 7B 00            [12]18675 	mov	r3,#0x00
      006DDB 75*00 0A         [24]18676 	mov	__modsint_PARM_2,#0x0a
                                  18677 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      006DDE 8B*01            [24]18678 	mov	(__modsint_PARM_2 + 1),r3
      006DE0 8A 82            [24]18679 	mov	dpl,r2
      006DE2 8B 83            [24]18680 	mov	dph,r3
      006DE4 C0 07            [24]18681 	push	ar7
      006DE6 C0 06            [24]18682 	push	ar6
      006DE8 C0 01            [24]18683 	push	ar1
      006DEA 12r00r00         [24]18684 	lcall	__modsint
      006DED AA 82            [24]18685 	mov	r2,dpl
      006DEF AB 83            [24]18686 	mov	r3,dph
      006DF1 D0 01            [24]18687 	pop	ar1
      006DF3 D0 06            [24]18688 	pop	ar6
      006DF5 D0 07            [24]18689 	pop	ar7
      006DF7 BA 09 05         [24]18690 	cjne	r2,#0x09,02670$
      006DFA BB 00 02         [24]18691 	cjne	r3,#0x00,02670$
      006DFD 80 04            [24]18692 	sjmp	02671$
      006DFF                      18693 02670$:
      006DFF D0 01            [24]18694 	pop	ar1
      006E01 80 0A            [24]18695 	sjmp	00481$
      006E03                      18696 02671$:
      006E03 D0 01            [24]18697 	pop	ar1
      006E05 E5*32            [12]18698 	mov	a,_main_sloc2_1_0
      006E07 FB               [12]18699 	mov	r3,a
      006E08 24 F7            [12]18700 	add	a,#0xf7
      006E0A F7               [12]18701 	mov	@r1,a
      006E0B 80 78            [24]18702 	sjmp	00499$
      006E0D                      18703 00481$:
                                  18704 ;	src\main.c:716: else gio[sub_mode/4]++;
      006E0D E5*32            [12]18705 	mov	a,_main_sloc2_1_0
      006E0F 04               [12]18706 	inc	a
      006E10 F7               [12]18707 	mov	@r1,a
                                  18708 ;	src\main.c:717: break;
                                  18709 ;	src\main.c:719: case PHUT3CHUC: case PHUT4CHUC :
      006E11 80 72            [24]18710 	sjmp	00499$
      006E13                      18711 00489$:
                                  18712 ;	src\main.c:720: if(phut[sub_mode/4]>49) phut[sub_mode/4]-=50;
      006E13 8C 02            [24]18713 	mov	ar2,r4
      006E15 7B 00            [12]18714 	mov	r3,#0x00
      006E17 75*00 04         [24]18715 	mov	__divsint_PARM_2,#0x04
                                  18716 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      006E1A 8B*01            [24]18717 	mov	(__divsint_PARM_2 + 1),r3
      006E1C 8A 82            [24]18718 	mov	dpl,r2
      006E1E 8B 83            [24]18719 	mov	dph,r3
      006E20 C0 07            [24]18720 	push	ar7
      006E22 C0 06            [24]18721 	push	ar6
      006E24 12r00r00         [24]18722 	lcall	__divsint
      006E27 AA 82            [24]18723 	mov	r2,dpl
      006E29 D0 06            [24]18724 	pop	ar6
      006E2B D0 07            [24]18725 	pop	ar7
      006E2D EA               [12]18726 	mov	a,r2
      006E2E 24r08            [12]18727 	add	a,#_phut
      006E30 F9               [12]18728 	mov	r1,a
      006E31 E7               [12]18729 	mov	a,@r1
      006E32 FB               [12]18730 	mov	r3,a
      006E33 24 CE            [12]18731 	add	a,#0xff - 0x31
      006E35 50 08            [24]18732 	jnc	00491$
      006E37 8B 02            [24]18733 	mov	ar2,r3
      006E39 EA               [12]18734 	mov	a,r2
      006E3A 24 CE            [12]18735 	add	a,#0xce
      006E3C F7               [12]18736 	mov	@r1,a
      006E3D 80 46            [24]18737 	sjmp	00499$
      006E3F                      18738 00491$:
                                  18739 ;	src\main.c:721: else phut[sub_mode/4]+=10;
      006E3F 74 0A            [12]18740 	mov	a,#0x0a
      006E41 2B               [12]18741 	add	a,r3
      006E42 F7               [12]18742 	mov	@r1,a
                                  18743 ;	src\main.c:722: break;
                                  18744 ;	src\main.c:724: case PHUT3DVI : case PHUT4DVI  :
      006E43 80 40            [24]18745 	sjmp	00499$
      006E45                      18746 00496$:
                                  18747 ;	src\main.c:725: if(!(++phut[sub_mode/4]%10)) phut[sub_mode/4]-=10;
      006E45 7B 00            [12]18748 	mov	r3,#0x00
      006E47 75*00 04         [24]18749 	mov	__divsint_PARM_2,#0x04
                                  18750 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      006E4A 8B*01            [24]18751 	mov	(__divsint_PARM_2 + 1),r3
      006E4C 8C 82            [24]18752 	mov	dpl,r4
      006E4E 8B 83            [24]18753 	mov	dph,r3
      006E50 C0 07            [24]18754 	push	ar7
      006E52 C0 06            [24]18755 	push	ar6
      006E54 12r00r00         [24]18756 	lcall	__divsint
      006E57 E5 82            [12]18757 	mov	a,dpl
      006E59 24r08            [12]18758 	add	a,#_phut
      006E5B F9               [12]18759 	mov	r1,a
      006E5C 87 04            [24]18760 	mov	ar4,@r1
      006E5E 0C               [12]18761 	inc	r4
      006E5F A7 04            [24]18762 	mov	@r1,ar4
      006E61 7B 00            [12]18763 	mov	r3,#0x00
      006E63 75*00 0A         [24]18764 	mov	__modsint_PARM_2,#0x0a
                                  18765 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      006E66 8B*01            [24]18766 	mov	(__modsint_PARM_2 + 1),r3
      006E68 8C 82            [24]18767 	mov	dpl,r4
      006E6A 8B 83            [24]18768 	mov	dph,r3
      006E6C C0 01            [24]18769 	push	ar1
      006E6E 12r00r00         [24]18770 	lcall	__modsint
      006E71 E5 82            [12]18771 	mov	a,dpl
      006E73 85 83 F0         [24]18772 	mov	b,dph
      006E76 D0 01            [24]18773 	pop	ar1
      006E78 D0 06            [24]18774 	pop	ar6
      006E7A D0 07            [24]18775 	pop	ar7
      006E7C 45 F0            [12]18776 	orl	a,b
      006E7E 70 05            [24]18777 	jnz	00499$
      006E80 E7               [12]18778 	mov	a,@r1
      006E81 FC               [12]18779 	mov	r4,a
      006E82 24 F6            [12]18780 	add	a,#0xf6
      006E84 F7               [12]18781 	mov	@r1,a
                                  18782 ;	src\main.c:727: }
      006E85                      18783 00499$:
                                  18784 ;	src\main.c:729: if(so_motor==1)LCD_guigio(0xc0,may_dc? "  MDC  " : "  MST  ",gio[0],phut[0],0,flip_pulse);
      006E85 90r01r2E         [24]18785 	mov	dptr,#_so_motor
      006E88 E0               [24]18786 	movx	a,@dptr
      006E89 FC               [12]18787 	mov	r4,a
      006E8A BC 01 31         [24]18788 	cjne	r4,#0x01,00501$
      006E8D 30*32 06         [24]18789 	jnb	_may_dc,00768$
      006E90 7Ar04            [12]18790 	mov	r2,#___str_156
      006E92 7Bs0D            [12]18791 	mov	r3,#(___str_156 >> 8)
      006E94 80 04            [24]18792 	sjmp	00769$
      006E96                      18793 00768$:
      006E96 7Ar0C            [12]18794 	mov	r2,#___str_157
      006E98 7Bs0D            [12]18795 	mov	r3,#(___str_157 >> 8)
      006E9A                      18796 00769$:
      006E9A 8A*00            [24]18797 	mov	_LCD_guigio_PARM_2,r2
      006E9C 8B*01            [24]18798 	mov	(_LCD_guigio_PARM_2 + 1),r3
      006E9E 75*02 80         [24]18799 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      006EA1 85*04*00         [24]18800 	mov	_LCD_guigio_PARM_3,_gio
      006EA4 85*08*00         [24]18801 	mov	_LCD_guigio_PARM_4,_phut
      006EA7 75*00 00         [24]18802 	mov	_LCD_guigio_PARM_5,#0x00
                                  18803 ;	assignBit
      006EAA A2*1E            [12]18804 	mov	c,_flip_pulse
      006EAC 92*00            [24]18805 	mov	_LCD_guigio_PARM_6,c
      006EAE 75 82 C0         [24]18806 	mov	dpl,#0xc0
      006EB1 C0 07            [24]18807 	push	ar7
      006EB3 C0 06            [24]18808 	push	ar6
      006EB5 12r00r00         [24]18809 	lcall	_LCD_guigio
      006EB8 D0 06            [24]18810 	pop	ar6
      006EBA D0 07            [24]18811 	pop	ar7
      006EBC 80 6E            [24]18812 	sjmp	00502$
      006EBE                      18813 00501$:
                                  18814 ;	src\main.c:730: else {LCD_guigio((so_motor<3)?0xc0:0x80,"  ",gio[0],phut[0],253,1);LCD_guigio((so_motor<3)?0xc7:0x87,"  ",gio[1],phut[1],253,1);LCD_guichuoi("  ");}
      006EBE BC 03 00         [24]18815 	cjne	r4,#0x03,02677$
      006EC1                      18816 02677$:
      006EC1 50 06            [24]18817 	jnc	00770$
      006EC3 7B C0            [12]18818 	mov	r3,#0xc0
      006EC5 7C 00            [12]18819 	mov	r4,#0x00
      006EC7 80 04            [24]18820 	sjmp	00771$
      006EC9                      18821 00770$:
      006EC9 7B 80            [12]18822 	mov	r3,#0x80
      006ECB 7C 00            [12]18823 	mov	r4,#0x00
      006ECD                      18824 00771$:
      006ECD 8B 82            [24]18825 	mov	dpl,r3
      006ECF 75*00r14         [24]18826 	mov	_LCD_guigio_PARM_2,#___str_158
      006ED2 75*01s0D         [24]18827 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_158 >> 8)
      006ED5 75*02 80         [24]18828 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      006ED8 85*04*00         [24]18829 	mov	_LCD_guigio_PARM_3,_gio
      006EDB 85*08*00         [24]18830 	mov	_LCD_guigio_PARM_4,_phut
      006EDE 75*00 FD         [24]18831 	mov	_LCD_guigio_PARM_5,#0xfd
                                  18832 ;	assignBit
      006EE1 D2*00            [12]18833 	setb	_LCD_guigio_PARM_6
      006EE3 C0 07            [24]18834 	push	ar7
      006EE5 C0 06            [24]18835 	push	ar6
      006EE7 12r00r00         [24]18836 	lcall	_LCD_guigio
      006EEA D0 06            [24]18837 	pop	ar6
      006EEC D0 07            [24]18838 	pop	ar7
      006EEE 90r01r2E         [24]18839 	mov	dptr,#_so_motor
      006EF1 E0               [24]18840 	movx	a,@dptr
      006EF2 FC               [12]18841 	mov	r4,a
      006EF3 BC 03 00         [24]18842 	cjne	r4,#0x03,02679$
      006EF6                      18843 02679$:
      006EF6 50 06            [24]18844 	jnc	00772$
      006EF8 7B C7            [12]18845 	mov	r3,#0xc7
      006EFA 7C 00            [12]18846 	mov	r4,#0x00
      006EFC 80 04            [24]18847 	sjmp	00773$
      006EFE                      18848 00772$:
      006EFE 7B 87            [12]18849 	mov	r3,#0x87
      006F00 7C 00            [12]18850 	mov	r4,#0x00
      006F02                      18851 00773$:
      006F02 8B 82            [24]18852 	mov	dpl,r3
      006F04 75*00r14         [24]18853 	mov	_LCD_guigio_PARM_2,#___str_158
      006F07 75*01s0D         [24]18854 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_158 >> 8)
      006F0A 75*02 80         [24]18855 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      006F0D 85*05*00         [24]18856 	mov	_LCD_guigio_PARM_3,(_gio + 0x0001)
      006F10 85*09*00         [24]18857 	mov	_LCD_guigio_PARM_4,(_phut + 0x0001)
      006F13 75*00 FD         [24]18858 	mov	_LCD_guigio_PARM_5,#0xfd
                                  18859 ;	assignBit
      006F16 D2*00            [12]18860 	setb	_LCD_guigio_PARM_6
      006F18 C0 07            [24]18861 	push	ar7
      006F1A C0 06            [24]18862 	push	ar6
      006F1C 12r00r00         [24]18863 	lcall	_LCD_guigio
      006F1F 90r0Dr14         [24]18864 	mov	dptr,#___str_158
      006F22 75 F0 80         [24]18865 	mov	b,#0x80
      006F25 12r00r00         [24]18866 	lcall	_LCD_guichuoi
      006F28 D0 06            [24]18867 	pop	ar6
      006F2A D0 07            [24]18868 	pop	ar7
      006F2C                      18869 00502$:
                                  18870 ;	src\main.c:731: if(so_motor>2){
      006F2C 90r01r2E         [24]18871 	mov	dptr,#_so_motor
      006F2F E0               [24]18872 	movx	a,@dptr
      006F30 FC               [12]18873 	mov  r4,a
      006F31 24 FD            [12]18874 	add	a,#0xff - 0x02
      006F33 50 68            [24]18875 	jnc	00509$
                                  18876 ;	src\main.c:732: LCD_guigio(0xc0,"  ",gio[2],phut[2],253,1);
      006F35 75*00r14         [24]18877 	mov	_LCD_guigio_PARM_2,#___str_158
      006F38 75*01s0D         [24]18878 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_158 >> 8)
      006F3B 75*02 80         [24]18879 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      006F3E 85*06*00         [24]18880 	mov	_LCD_guigio_PARM_3,(_gio + 0x0002)
      006F41 85*0A*00         [24]18881 	mov	_LCD_guigio_PARM_4,(_phut + 0x0002)
      006F44 75*00 FD         [24]18882 	mov	_LCD_guigio_PARM_5,#0xfd
                                  18883 ;	assignBit
      006F47 D2*00            [12]18884 	setb	_LCD_guigio_PARM_6
      006F49 75 82 C0         [24]18885 	mov	dpl,#0xc0
      006F4C C0 07            [24]18886 	push	ar7
      006F4E C0 06            [24]18887 	push	ar6
      006F50 12r00r00         [24]18888 	lcall	_LCD_guigio
      006F53 D0 06            [24]18889 	pop	ar6
      006F55 D0 07            [24]18890 	pop	ar7
                                  18891 ;	src\main.c:733: if(so_motor==4){LCD_guigio(0xc7,"  ",gio[3],phut[3],253,1);LCD_guichuoi("  ");}
      006F57 90r01r2E         [24]18892 	mov	dptr,#_so_motor
      006F5A E0               [24]18893 	movx	a,@dptr
      006F5B FC               [12]18894 	mov	r4,a
      006F5C BC 04 2D         [24]18895 	cjne	r4,#0x04,00504$
      006F5F 75*00r14         [24]18896 	mov	_LCD_guigio_PARM_2,#___str_158
      006F62 75*01s0D         [24]18897 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_158 >> 8)
      006F65 75*02 80         [24]18898 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      006F68 85*07*00         [24]18899 	mov	_LCD_guigio_PARM_3,(_gio + 0x0003)
      006F6B 85*0B*00         [24]18900 	mov	_LCD_guigio_PARM_4,(_phut + 0x0003)
      006F6E 75*00 FD         [24]18901 	mov	_LCD_guigio_PARM_5,#0xfd
                                  18902 ;	assignBit
      006F71 D2*00            [12]18903 	setb	_LCD_guigio_PARM_6
      006F73 75 82 C7         [24]18904 	mov	dpl,#0xc7
      006F76 C0 07            [24]18905 	push	ar7
      006F78 C0 06            [24]18906 	push	ar6
      006F7A 12r00r00         [24]18907 	lcall	_LCD_guigio
      006F7D 90r0Dr14         [24]18908 	mov	dptr,#___str_158
      006F80 75 F0 80         [24]18909 	mov	b,#0x80
      006F83 12r00r00         [24]18910 	lcall	_LCD_guichuoi
      006F86 D0 06            [24]18911 	pop	ar6
      006F88 D0 07            [24]18912 	pop	ar7
      006F8A 80 11            [24]18913 	sjmp	00509$
      006F8C                      18914 00504$:
                                  18915 ;	src\main.c:734: else LCD_guichuoi("         ");   
      006F8C 90r0Dr4F         [24]18916 	mov	dptr,#___str_165
      006F8F 75 F0 80         [24]18917 	mov	b,#0x80
      006F92 C0 07            [24]18918 	push	ar7
      006F94 C0 06            [24]18919 	push	ar6
      006F96 12r00r00         [24]18920 	lcall	_LCD_guichuoi
      006F99 D0 06            [24]18921 	pop	ar6
      006F9B D0 07            [24]18922 	pop	ar7
      006F9D                      18923 00509$:
                                  18924 ;	src\main.c:737: if(phim_back_nhan){
                                  18925 ;	src\main.c:738: phim_back_nhan = 0;
                                  18926 ;	assignBit
      006F9D 10*24 02         [24]18927 	jbc	_phim_back_nhan,02684$
      006FA0 80 24            [24]18928 	sjmp	00514$
      006FA2                      18929 02684$:
                                  18930 ;	src\main.c:739: mode_wait = TIME_MODE_WAIT;
      006FA2 90r00rF5         [24]18931 	mov	dptr,#_mode_wait
      006FA5 74 3C            [12]18932 	mov	a,#0x3c
      006FA7 F0               [24]18933 	movx	@dptr,a
                                  18934 ;	src\main.c:740: if(sub_mode)sub_mode--;
      006FA8 90r00rF4         [24]18935 	mov	dptr,#_sub_mode
      006FAB E0               [24]18936 	movx	a,@dptr
      006FAC FC               [12]18937 	mov	r4,a
      006FAD E0               [24]18938 	movx	a,@dptr
      006FAE 60 08            [24]18939 	jz	00511$
      006FB0 EC               [12]18940 	mov	a,r4
      006FB1 14               [12]18941 	dec	a
      006FB2 90r00rF4         [24]18942 	mov	dptr,#_sub_mode
      006FB5 F0               [24]18943 	movx	@dptr,a
      006FB6 80 0E            [24]18944 	sjmp	00514$
      006FB8                      18945 00511$:
                                  18946 ;	src\main.c:741: else sub_mode = 4*so_motor-1;
      006FB8 90r01r2E         [24]18947 	mov	dptr,#_so_motor
      006FBB E0               [24]18948 	movx	a,@dptr
      006FBC 25 E0            [12]18949 	add	a,acc
      006FBE 25 E0            [12]18950 	add	a,acc
      006FC0 FC               [12]18951 	mov	r4,a
      006FC1 14               [12]18952 	dec	a
      006FC2 90r00rF4         [24]18953 	mov	dptr,#_sub_mode
      006FC5 F0               [24]18954 	movx	@dptr,a
      006FC6                      18955 00514$:
                                  18956 ;	src\main.c:744: if(phim_mode_nhan){
      006FC6 20*20 03         [24]18957 	jb	_phim_mode_nhan,02686$
      006FC9 02r79r7F         [24]18958 	ljmp	00643$
      006FCC                      18959 02686$:
                                  18960 ;	src\main.c:746: phim_mode_nhan = 0;
      006FCC C0 06            [24]18961 	push	ar6
                                  18962 ;	assignBit
      006FCE C2*20            [12]18963 	clr	_phim_mode_nhan
                                  18964 ;	src\main.c:747: mode_wait = TIME_MODE_WAIT;
      006FD0 90r00rF5         [24]18965 	mov	dptr,#_mode_wait
      006FD3 74 3C            [12]18966 	mov	a,#0x3c
      006FD5 F0               [24]18967 	movx	@dptr,a
                                  18968 ;	src\main.c:748: if(++sub_mode>(4*so_motor-1)){
      006FD6 90r00rF4         [24]18969 	mov	dptr,#_sub_mode
      006FD9 E0               [24]18970 	movx	a,@dptr
      006FDA 24 01            [12]18971 	add	a,#0x01
      006FDC F0               [24]18972 	movx	@dptr,a
      006FDD 90r01r2E         [24]18973 	mov	dptr,#_so_motor
      006FE0 E0               [24]18974 	movx	a,@dptr
      006FE1 7B 00            [12]18975 	mov	r3,#0x00
      006FE3 25 E0            [12]18976 	add	a,acc
      006FE5 FC               [12]18977 	mov	r4,a
      006FE6 EB               [12]18978 	mov	a,r3
      006FE7 33               [12]18979 	rlc	a
      006FE8 FB               [12]18980 	mov	r3,a
      006FE9 EC               [12]18981 	mov	a,r4
      006FEA 2C               [12]18982 	add	a,r4
      006FEB FC               [12]18983 	mov	r4,a
      006FEC EB               [12]18984 	mov	a,r3
      006FED 33               [12]18985 	rlc	a
      006FEE FB               [12]18986 	mov	r3,a
      006FEF 1C               [12]18987 	dec	r4
      006FF0 BC FF 01         [24]18988 	cjne	r4,#0xff,02687$
      006FF3 1B               [12]18989 	dec	r3
      006FF4                      18990 02687$:
      006FF4 90r00rF4         [24]18991 	mov	dptr,#_sub_mode
      006FF7 E0               [24]18992 	movx	a,@dptr
      006FF8 FA               [12]18993 	mov	r2,a
      006FF9 7E 00            [12]18994 	mov	r6,#0x00
      006FFB C3               [12]18995 	clr	c
      006FFC EC               [12]18996 	mov	a,r4
      006FFD 9A               [12]18997 	subb	a,r2
      006FFE EB               [12]18998 	mov	a,r3
      006FFF 64 80            [12]18999 	xrl	a,#0x80
      007001 8E F0            [24]19000 	mov	b,r6
      007003 63 F0 80         [24]19001 	xrl	b,#0x80
      007006 95 F0            [12]19002 	subb	a,b
      007008 D0 06            [24]19003 	pop	ar6
      00700A 40 03            [24]19004 	jc	02688$
      00700C 02r79r7F         [24]19005 	ljmp	00643$
      00700F                      19006 02688$:
                                  19007 ;	src\main.c:749: LCD_noblink();
      00700F C0 07            [24]19008 	push	ar7
      007011 C0 06            [24]19009 	push	ar6
      007013 12r00r00         [24]19010 	lcall	_LCD_noblink
                                  19011 ;	src\main.c:750: sub_mode = mode;
      007016 90r00rF3         [24]19012 	mov	dptr,#_mode
      007019 E0               [24]19013 	movx	a,@dptr
      00701A 90r00rF4         [24]19014 	mov	dptr,#_sub_mode
      00701D F0               [24]19015 	movx	@dptr,a
                                  19016 ;	src\main.c:751: mode = SELECT;
      00701E 90r00rF3         [24]19017 	mov	dptr,#_mode
      007021 74 07            [12]19018 	mov	a,#0x07
      007023 F0               [24]19019 	movx	@dptr,a
                                  19020 ;	src\main.c:752: gio[0] = gio[0]%12;
      007024 AB*04            [24]19021 	mov	r3,_gio
      007026 7C 00            [12]19022 	mov	r4,#0x00
      007028 75*00 0C         [24]19023 	mov	__modsint_PARM_2,#0x0c
                                  19024 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      00702B 8C*01            [24]19025 	mov	(__modsint_PARM_2 + 1),r4
      00702D 8B 82            [24]19026 	mov	dpl,r3
      00702F 8C 83            [24]19027 	mov	dph,r4
      007031 12r00r00         [24]19028 	lcall	__modsint
      007034 AB 82            [24]19029 	mov	r3,dpl
      007036 8B*04            [24]19030 	mov	_gio,r3
                                  19031 ;	src\main.c:753: gio[1] = gio[1]%12;
      007038 AB*05            [24]19032 	mov	r3,(_gio + 0x0001)
      00703A 7C 00            [12]19033 	mov	r4,#0x00
      00703C 75*00 0C         [24]19034 	mov	__modsint_PARM_2,#0x0c
                                  19035 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      00703F 8C*01            [24]19036 	mov	(__modsint_PARM_2 + 1),r4
      007041 8B 82            [24]19037 	mov	dpl,r3
      007043 8C 83            [24]19038 	mov	dph,r4
      007045 12r00r00         [24]19039 	lcall	__modsint
      007048 AB 82            [24]19040 	mov	r3,dpl
      00704A 8B*05            [24]19041 	mov	(_gio + 0x0001),r3
                                  19042 ;	src\main.c:754: gio[2] = gio[2]%12;
      00704C AB*06            [24]19043 	mov	r3,(_gio + 0x0002)
      00704E 7C 00            [12]19044 	mov	r4,#0x00
      007050 75*00 0C         [24]19045 	mov	__modsint_PARM_2,#0x0c
                                  19046 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      007053 8C*01            [24]19047 	mov	(__modsint_PARM_2 + 1),r4
      007055 8B 82            [24]19048 	mov	dpl,r3
      007057 8C 83            [24]19049 	mov	dph,r4
      007059 12r00r00         [24]19050 	lcall	__modsint
      00705C AB 82            [24]19051 	mov	r3,dpl
      00705E 8B*06            [24]19052 	mov	(_gio + 0x0002),r3
                                  19053 ;	src\main.c:755: gio[3] = gio[3]%12;
      007060 AB*07            [24]19054 	mov	r3,(_gio + 0x0003)
      007062 7C 00            [12]19055 	mov	r4,#0x00
      007064 75*00 0C         [24]19056 	mov	__modsint_PARM_2,#0x0c
                                  19057 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      007067 8C*01            [24]19058 	mov	(__modsint_PARM_2 + 1),r4
      007069 8B 82            [24]19059 	mov	dpl,r3
      00706B 8C 83            [24]19060 	mov	dph,r4
      00706D 12r00r00         [24]19061 	lcall	__modsint
      007070 AB 82            [24]19062 	mov	r3,dpl
      007072 8B*07            [24]19063 	mov	(_gio + 0x0003),r3
                                  19064 ;	src\main.c:756: luu_gio_kim();
      007074 12r06rDD         [24]19065 	lcall	_luu_gio_kim
      007077 D0 06            [24]19066 	pop	ar6
      007079 D0 07            [24]19067 	pop	ar7
                                  19068 ;	src\main.c:761: break;
      00707B 02r79r7F         [24]19069 	ljmp	00643$
                                  19070 ;	src\main.c:762: case GIOTHUC:
      00707E                      19071 00519$:
                                  19072 ;	src\main.c:763: LCD_blinkXY(DUOI,7+sub_mode+sub_mode/2);
      00707E 90r00rF4         [24]19073 	mov	dptr,#_sub_mode
      007081 E0               [24]19074 	movx	a,@dptr
      007082 FC               [12]19075 	mov	r4,a
      007083 24 07            [12]19076 	add	a,#0x07
      007085 FB               [12]19077 	mov	r3,a
      007086 7A 00            [12]19078 	mov	r2,#0x00
      007088 75*00 02         [24]19079 	mov	__divsint_PARM_2,#0x02
                                  19080 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      00708B 8A*01            [24]19081 	mov	(__divsint_PARM_2 + 1),r2
      00708D 8C 82            [24]19082 	mov	dpl,r4
      00708F 8A 83            [24]19083 	mov	dph,r2
      007091 C0 07            [24]19084 	push	ar7
      007093 C0 06            [24]19085 	push	ar6
      007095 C0 03            [24]19086 	push	ar3
      007097 12r00r00         [24]19087 	lcall	__divsint
      00709A AA 82            [24]19088 	mov	r2,dpl
      00709C D0 03            [24]19089 	pop	ar3
      00709E EA               [12]19090 	mov	a,r2
      00709F 2B               [12]19091 	add	a,r3
      0070A0 F5*00            [12]19092 	mov	_LCD_blinkXY_PARM_2,a
      0070A2 75 82 C0         [24]19093 	mov	dpl,#0xc0
      0070A5 12r00r00         [24]19094 	lcall	_LCD_blinkXY
      0070A8 D0 06            [24]19095 	pop	ar6
      0070AA D0 07            [24]19096 	pop	ar7
                                  19097 ;	src\main.c:764: if(eep_gpson && !phim_mode_doi){
      0070AC 90 F0 02         [24]19098 	mov	dptr,#_eep_gpson
      0070AF E4               [12]19099 	clr	a
      0070B0 93               [24]19100 	movc	a,@a+dptr
      0070B1 60 3F            [24]19101 	jz	00523$
      0070B3 90r00rF0         [24]19102 	mov	dptr,#_phim_mode_doi
      0070B6 E0               [24]19103 	movx	a,@dptr
      0070B7 70 39            [24]19104 	jnz	00523$
                                  19105 ;	src\main.c:765: sub_mode = mode;
      0070B9 90r00rF3         [24]19106 	mov	dptr,#_mode
      0070BC E0               [24]19107 	movx	a,@dptr
      0070BD 90r00rF4         [24]19108 	mov	dptr,#_sub_mode
      0070C0 F0               [24]19109 	movx	@dptr,a
                                  19110 ;	src\main.c:766: mode = SELECT;
      0070C1 90r00rF3         [24]19111 	mov	dptr,#_mode
      0070C4 74 07            [12]19112 	mov	a,#0x07
      0070C6 F0               [24]19113 	movx	@dptr,a
                                  19114 ;	src\main.c:767: mp3_hour = 24;
      0070C7 78r03            [12]19115 	mov	r0,#_mp3_hour
      0070C9 76 18            [12]19116 	mov	@r0,#0x18
                                  19117 ;	src\main.c:768: mp3_minute = 60;
      0070CB 78r04            [12]19118 	mov	r0,#_mp3_minute
      0070CD 76 3C            [12]19119 	mov	@r0,#0x3c
                                  19120 ;	src\main.c:769: if(eep_gpson) gsm_thietlapngaygiothuc();//gsm_laygio_gps();
      0070CF 90 F0 02         [24]19121 	mov	dptr,#_eep_gpson
      0070D2 E4               [12]19122 	clr	a
      0070D3 93               [24]19123 	movc	a,@a+dptr
      0070D4 60 0B            [24]19124 	jz	00521$
      0070D6 C0 07            [24]19125 	push	ar7
      0070D8 C0 06            [24]19126 	push	ar6
      0070DA 12r1Cr8F         [24]19127 	lcall	_gsm_thietlapngaygiothuc
      0070DD D0 06            [24]19128 	pop	ar6
      0070DF D0 07            [24]19129 	pop	ar7
      0070E1                      19130 00521$:
                                  19131 ;	src\main.c:771: hour12 = (hour>11)?hour-12:hour;
      0070E1 E5*02            [12]19132 	mov	a,_hour
      0070E3 24 F4            [12]19133 	add	a,#0xff - 0x0b
      0070E5 50 07            [24]19134 	jnc	00774$
      0070E7 E5*02            [12]19135 	mov	a,_hour
      0070E9 24 F4            [12]19136 	add	a,#0xf4
      0070EB FC               [12]19137 	mov	r4,a
      0070EC 80 02            [24]19138 	sjmp	00775$
      0070EE                      19139 00774$:
      0070EE AC*02            [24]19140 	mov	r4,_hour
      0070F0                      19141 00775$:
      0070F0 8C*03            [24]19142 	mov	_hour12,r4
      0070F2                      19143 00523$:
                                  19144 ;	src\main.c:773: if(phim_cong_nhan){
                                  19145 ;	src\main.c:774: phim_cong_nhan = 0;
                                  19146 ;	assignBit
      0070F2 10*28 03         [24]19147 	jbc	_phim_cong_nhan,02693$
      0070F5 02r71rF7         [24]19148 	ljmp	00545$
      0070F8                      19149 02693$:
                                  19150 ;	src\main.c:775: mode_wait = TIME_MODE_WAIT;
      0070F8 90r00rF5         [24]19151 	mov	dptr,#_mode_wait
      0070FB 74 3C            [12]19152 	mov	a,#0x3c
      0070FD F0               [24]19153 	movx	@dptr,a
                                  19154 ;	src\main.c:776: switch(sub_mode){
      0070FE 90r00rF4         [24]19155 	mov	dptr,#_sub_mode
      007101 E0               [24]19156 	movx	a,@dptr
      007102 FC               [12]19157 	mov  r4,a
      007103 24 FC            [12]19158 	add	a,#0xff - 0x03
      007105 50 03            [24]19159 	jnc	02694$
      007107 02r71rB4         [24]19160 	ljmp	00543$
      00710A                      19161 02694$:
      00710A EC               [12]19162 	mov	a,r4
      00710B 2C               [12]19163 	add	a,r4
                                  19164 ;	src\main.c:777: case GIOCHUC  :
      00710C 90r71r10         [24]19165 	mov	dptr,#02695$
      00710F 73               [24]19166 	jmp	@a+dptr
      007110                      19167 02695$:
      007110 80 06            [24]19168 	sjmp	00525$
      007112 80 2D            [24]19169 	sjmp	00529$
      007114 80 61            [24]19170 	sjmp	00536$
      007116 80 74            [24]19171 	sjmp	00540$
      007118                      19172 00525$:
                                  19173 ;	src\main.c:778: if(giotemp>13)giotemp%=10;
      007118 EF               [12]19174 	mov	a,r7
      007119 24 F2            [12]19175 	add	a,#0xff - 0x0d
      00711B 50 1C            [24]19176 	jnc	00527$
      00711D 8F 03            [24]19177 	mov	ar3,r7
      00711F 7C 00            [12]19178 	mov	r4,#0x00
      007121 75*00 0A         [24]19179 	mov	__modsint_PARM_2,#0x0a
                                  19180 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      007124 8C*01            [24]19181 	mov	(__modsint_PARM_2 + 1),r4
      007126 8B 82            [24]19182 	mov	dpl,r3
      007128 8C 83            [24]19183 	mov	dph,r4
      00712A C0 06            [24]19184 	push	ar6
      00712C 12r00r00         [24]19185 	lcall	__modsint
      00712F AB 82            [24]19186 	mov	r3,dpl
      007131 AC 83            [24]19187 	mov	r4,dph
      007133 D0 06            [24]19188 	pop	ar6
      007135 8B 07            [24]19189 	mov	ar7,r3
      007137 80 7B            [24]19190 	sjmp	00543$
      007139                      19191 00527$:
                                  19192 ;	src\main.c:779: else giotemp +=10;
      007139 8F 04            [24]19193 	mov	ar4,r7
      00713B 74 0A            [12]19194 	mov	a,#0x0a
      00713D 2C               [12]19195 	add	a,r4
      00713E FF               [12]19196 	mov	r7,a
                                  19197 ;	src\main.c:780: break;
                                  19198 ;	src\main.c:781: case GIODVI   :
      00713F 80 73            [24]19199 	sjmp	00543$
      007141                      19200 00529$:
                                  19201 ;	src\main.c:782: if(giotemp>22) giotemp = 20;
      007141 EF               [12]19202 	mov	a,r7
      007142 24 E9            [12]19203 	add	a,#0xff - 0x16
      007144 50 04            [24]19204 	jnc	00534$
      007146 7F 14            [12]19205 	mov	r7,#0x14
      007148 80 6A            [24]19206 	sjmp	00543$
      00714A                      19207 00534$:
                                  19208 ;	src\main.c:783: else if(giotemp%10==9) giotemp-=9;
      00714A 8F 03            [24]19209 	mov	ar3,r7
      00714C 7C 00            [12]19210 	mov	r4,#0x00
      00714E 75*00 0A         [24]19211 	mov	__modsint_PARM_2,#0x0a
                                  19212 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      007151 8C*01            [24]19213 	mov	(__modsint_PARM_2 + 1),r4
      007153 8B 82            [24]19214 	mov	dpl,r3
      007155 8C 83            [24]19215 	mov	dph,r4
      007157 C0 07            [24]19216 	push	ar7
      007159 C0 06            [24]19217 	push	ar6
      00715B 12r00r00         [24]19218 	lcall	__modsint
      00715E AB 82            [24]19219 	mov	r3,dpl
      007160 AC 83            [24]19220 	mov	r4,dph
      007162 D0 06            [24]19221 	pop	ar6
      007164 D0 07            [24]19222 	pop	ar7
      007166 BB 09 0B         [24]19223 	cjne	r3,#0x09,00531$
      007169 BC 00 08         [24]19224 	cjne	r4,#0x00,00531$
      00716C 8F 04            [24]19225 	mov	ar4,r7
      00716E EC               [12]19226 	mov	a,r4
      00716F 24 F7            [12]19227 	add	a,#0xf7
      007171 FF               [12]19228 	mov	r7,a
      007172 80 40            [24]19229 	sjmp	00543$
      007174                      19230 00531$:
                                  19231 ;	src\main.c:784: else giotemp++;
      007174 0F               [12]19232 	inc	r7
                                  19233 ;	src\main.c:785: break;
                                  19234 ;	src\main.c:786: case PHUTCHUC :
      007175 80 3D            [24]19235 	sjmp	00543$
      007177                      19236 00536$:
                                  19237 ;	src\main.c:787: if(phuttemp>49) phuttemp-=50;
      007177 EE               [12]19238 	mov	a,r6
      007178 24 CE            [12]19239 	add	a,#0xff - 0x31
      00717A 50 08            [24]19240 	jnc	00538$
      00717C 8E 04            [24]19241 	mov	ar4,r6
      00717E EC               [12]19242 	mov	a,r4
      00717F 24 CE            [12]19243 	add	a,#0xce
      007181 FE               [12]19244 	mov	r6,a
      007182 80 30            [24]19245 	sjmp	00543$
      007184                      19246 00538$:
                                  19247 ;	src\main.c:788: else phuttemp+=10;
      007184 8E 04            [24]19248 	mov	ar4,r6
      007186 74 0A            [12]19249 	mov	a,#0x0a
      007188 2C               [12]19250 	add	a,r4
      007189 FE               [12]19251 	mov	r6,a
                                  19252 ;	src\main.c:789: break;
                                  19253 ;	src\main.c:790: case PHUTDVI  :
      00718A 80 28            [24]19254 	sjmp	00543$
      00718C                      19255 00540$:
                                  19256 ;	src\main.c:791: if(!(++phuttemp%10)) phuttemp-=10;
      00718C 0E               [12]19257 	inc	r6
      00718D 8E 03            [24]19258 	mov	ar3,r6
      00718F 7C 00            [12]19259 	mov	r4,#0x00
      007191 75*00 0A         [24]19260 	mov	__modsint_PARM_2,#0x0a
                                  19261 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      007194 8C*01            [24]19262 	mov	(__modsint_PARM_2 + 1),r4
      007196 8B 82            [24]19263 	mov	dpl,r3
      007198 8C 83            [24]19264 	mov	dph,r4
      00719A C0 07            [24]19265 	push	ar7
      00719C C0 06            [24]19266 	push	ar6
      00719E 12r00r00         [24]19267 	lcall	__modsint
      0071A1 E5 82            [12]19268 	mov	a,dpl
      0071A3 85 83 F0         [24]19269 	mov	b,dph
      0071A6 D0 06            [24]19270 	pop	ar6
      0071A8 D0 07            [24]19271 	pop	ar7
      0071AA 45 F0            [12]19272 	orl	a,b
      0071AC 70 06            [24]19273 	jnz	00543$
      0071AE 8E 04            [24]19274 	mov	ar4,r6
      0071B0 EC               [12]19275 	mov	a,r4
      0071B1 24 F6            [12]19276 	add	a,#0xf6
      0071B3 FE               [12]19277 	mov	r6,a
                                  19278 ;	src\main.c:793: }
      0071B4                      19279 00543$:
                                  19280 ;	src\main.c:795: LCD_guigio(0xc0,GPS_time?"  GPS  ":(eep_gpson?"   DS  ":" ASIA  "),giotemp,phuttemp,mode_wait,1);
      0071B4 30*1B 06         [24]19281 	jnb	_GPS_time,00776$
      0071B7 7BrBC            [12]19282 	mov	r3,#___str_0
      0071B9 7Cs03            [12]19283 	mov	r4,#(___str_0 >> 8)
      0071BB 80 19            [24]19284 	sjmp	00777$
      0071BD                      19285 00776$:
      0071BD 90 F0 02         [24]19286 	mov	dptr,#_eep_gpson
      0071C0 E4               [12]19287 	clr	a
      0071C1 93               [24]19288 	movc	a,@a+dptr
      0071C2 60 08            [24]19289 	jz	00778$
      0071C4 75*32rCC         [24]19290 	mov	_main_sloc2_1_0,#___str_2
      0071C7 75*33s03         [24]19291 	mov	(_main_sloc2_1_0 + 1),#(___str_2 >> 8)
      0071CA 80 06            [24]19292 	sjmp	00779$
      0071CC                      19293 00778$:
      0071CC 75*32rC4         [24]19294 	mov	_main_sloc2_1_0,#___str_1
      0071CF 75*33s03         [24]19295 	mov	(_main_sloc2_1_0 + 1),#(___str_1 >> 8)
      0071D2                      19296 00779$:
      0071D2 AB*32            [24]19297 	mov	r3,_main_sloc2_1_0
      0071D4 AC*33            [24]19298 	mov	r4,(_main_sloc2_1_0 + 1)
      0071D6                      19299 00777$:
      0071D6 8B*00            [24]19300 	mov	_LCD_guigio_PARM_2,r3
      0071D8 8C*01            [24]19301 	mov	(_LCD_guigio_PARM_2 + 1),r4
      0071DA 75*02 80         [24]19302 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      0071DD 90r00rF5         [24]19303 	mov	dptr,#_mode_wait
      0071E0 E0               [24]19304 	movx	a,@dptr
      0071E1 F5*00            [12]19305 	mov	_LCD_guigio_PARM_5,a
      0071E3 8F*00            [24]19306 	mov	_LCD_guigio_PARM_3,r7
      0071E5 8E*00            [24]19307 	mov	_LCD_guigio_PARM_4,r6
                                  19308 ;	assignBit
      0071E7 D2*00            [12]19309 	setb	_LCD_guigio_PARM_6
      0071E9 75 82 C0         [24]19310 	mov	dpl,#0xc0
      0071EC C0 07            [24]19311 	push	ar7
      0071EE C0 06            [24]19312 	push	ar6
      0071F0 12r00r00         [24]19313 	lcall	_LCD_guigio
      0071F3 D0 06            [24]19314 	pop	ar6
      0071F5 D0 07            [24]19315 	pop	ar7
      0071F7                      19316 00545$:
                                  19317 ;	src\main.c:798: if(phim_back_nhan){
                                  19318 ;	src\main.c:799: phim_back_nhan = 0;
                                  19319 ;	assignBit
      0071F7 10*24 02         [24]19320 	jbc	_phim_back_nhan,02704$
      0071FA 80 1C            [24]19321 	sjmp	00550$
      0071FC                      19322 02704$:
                                  19323 ;	src\main.c:800: mode_wait = TIME_MODE_WAIT;
      0071FC 90r00rF5         [24]19324 	mov	dptr,#_mode_wait
      0071FF 74 3C            [12]19325 	mov	a,#0x3c
      007201 F0               [24]19326 	movx	@dptr,a
                                  19327 ;	src\main.c:801: if(sub_mode)sub_mode--;
      007202 90r00rF4         [24]19328 	mov	dptr,#_sub_mode
      007205 E0               [24]19329 	movx	a,@dptr
      007206 FC               [12]19330 	mov	r4,a
      007207 E0               [24]19331 	movx	a,@dptr
      007208 60 08            [24]19332 	jz	00547$
      00720A EC               [12]19333 	mov	a,r4
      00720B 14               [12]19334 	dec	a
      00720C 90r00rF4         [24]19335 	mov	dptr,#_sub_mode
      00720F F0               [24]19336 	movx	@dptr,a
      007210 80 06            [24]19337 	sjmp	00550$
      007212                      19338 00547$:
                                  19339 ;	src\main.c:802: else sub_mode = 3;
      007212 90r00rF4         [24]19340 	mov	dptr,#_sub_mode
      007215 74 03            [12]19341 	mov	a,#0x03
      007217 F0               [24]19342 	movx	@dptr,a
      007218                      19343 00550$:
                                  19344 ;	src\main.c:805: if(phim_mode_nhan){
                                  19345 ;	src\main.c:806: phim_mode_nhan = 0;
                                  19346 ;	assignBit
      007218 10*20 03         [24]19347 	jbc	_phim_mode_nhan,02706$
      00721B 02r79r7F         [24]19348 	ljmp	00643$
      00721E                      19349 02706$:
                                  19350 ;	src\main.c:807: mode_wait = TIME_MODE_WAIT;
      00721E 90r00rF5         [24]19351 	mov	dptr,#_mode_wait
      007221 74 3C            [12]19352 	mov	a,#0x3c
      007223 F0               [24]19353 	movx	@dptr,a
                                  19354 ;	src\main.c:808: if(++sub_mode>3){
      007224 90r00rF4         [24]19355 	mov	dptr,#_sub_mode
      007227 E0               [24]19356 	movx	a,@dptr
      007228 24 01            [12]19357 	add	a,#0x01
      00722A F0               [24]19358 	movx	@dptr,a
      00722B E0               [24]19359 	movx	a,@dptr
      00722C FC               [12]19360 	mov  r4,a
      00722D 24 FC            [12]19361 	add	a,#0xff - 0x03
      00722F 40 03            [24]19362 	jc	02707$
      007231 02r79r7F         [24]19363 	ljmp	00643$
      007234                      19364 02707$:
                                  19365 ;	src\main.c:809: LCD_noblink();
      007234 C0 07            [24]19366 	push	ar7
      007236 C0 06            [24]19367 	push	ar6
      007238 12r00r00         [24]19368 	lcall	_LCD_noblink
      00723B D0 06            [24]19369 	pop	ar6
      00723D D0 07            [24]19370 	pop	ar7
                                  19371 ;	src\main.c:810: sub_mode = mode;
      00723F 90r00rF3         [24]19372 	mov	dptr,#_mode
      007242 E0               [24]19373 	movx	a,@dptr
      007243 90r00rF4         [24]19374 	mov	dptr,#_sub_mode
      007246 F0               [24]19375 	movx	@dptr,a
                                  19376 ;	src\main.c:811: mode = SELECT;
      007247 90r00rF3         [24]19377 	mov	dptr,#_mode
      00724A 74 07            [12]19378 	mov	a,#0x07
      00724C F0               [24]19379 	movx	@dptr,a
                                  19380 ;	src\main.c:812: hour = giotemp;
      00724D 8F*02            [24]19381 	mov	_hour,r7
                                  19382 ;	src\main.c:813: minute = phuttemp;
      00724F 8E*01            [24]19383 	mov	_minute,r6
                                  19384 ;	src\main.c:814: rtc_settime(hour,minute,second);
      007251 85*01*00         [24]19385 	mov	_rtc_settime_PARM_2,_minute
      007254 85*00*00         [24]19386 	mov	_rtc_settime_PARM_3,_second
      007257 85*02 82         [24]19387 	mov	dpl,_hour
      00725A C0 07            [24]19388 	push	ar7
      00725C C0 06            [24]19389 	push	ar6
      00725E 12r00r00         [24]19390 	lcall	_rtc_settime
                                  19391 ;	src\main.c:815: hour12 = hour % 12;
      007261 AB*02            [24]19392 	mov	r3,_hour
      007263 7C 00            [12]19393 	mov	r4,#0x00
      007265 75*00 0C         [24]19394 	mov	__modsint_PARM_2,#0x0c
                                  19395 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      007268 8C*01            [24]19396 	mov	(__modsint_PARM_2 + 1),r4
      00726A 8B 82            [24]19397 	mov	dpl,r3
      00726C 8C 83            [24]19398 	mov	dph,r4
      00726E 12r00r00         [24]19399 	lcall	__modsint
      007271 AB 82            [24]19400 	mov	r3,dpl
      007273 AC 83            [24]19401 	mov	r4,dph
      007275 D0 06            [24]19402 	pop	ar6
      007277 D0 07            [24]19403 	pop	ar7
      007279 8B*03            [24]19404 	mov	_hour12,r3
                                  19405 ;	src\main.c:816: GPS_time = 0;
                                  19406 ;	assignBit
      00727B C2*1B            [12]19407 	clr	_GPS_time
                                  19408 ;	src\main.c:817: mp3_hour = 24;
      00727D 78r03            [12]19409 	mov	r0,#_mp3_hour
      00727F 76 18            [12]19410 	mov	@r0,#0x18
                                  19411 ;	src\main.c:818: mp3_minute = 60;
      007281 78r04            [12]19412 	mov	r0,#_mp3_minute
      007283 76 3C            [12]19413 	mov	@r0,#0x3c
                                  19414 ;	src\main.c:821: break;
      007285 02r79r7F         [24]19415 	ljmp	00643$
                                  19416 ;	src\main.c:822: case MP3TEST:
      007288                      19417 00555$:
                                  19418 ;	src\main.c:824: LCD_blinkXY(DUOI,sub_mode+(sub_mode>2)+(sub_mode>6));
      007288 90r00rF4         [24]19419 	mov	dptr,#_sub_mode
      00728B E0               [24]19420 	movx	a,@dptr
      00728C FC               [12]19421 	mov	r4,a
      00728D C3               [12]19422 	clr	c
      00728E 74 02            [12]19423 	mov	a,#0x02
      007290 9C               [12]19424 	subb	a,r4
      007291 E4               [12]19425 	clr	a
      007292 33               [12]19426 	rlc	a
      007293 2C               [12]19427 	add	a,r4
      007294 FB               [12]19428 	mov	r3,a
      007295 C3               [12]19429 	clr	c
      007296 74 06            [12]19430 	mov	a,#0x06
      007298 9C               [12]19431 	subb	a,r4
      007299 E4               [12]19432 	clr	a
      00729A 33               [12]19433 	rlc	a
      00729B 2B               [12]19434 	add	a,r3
      00729C F5*00            [12]19435 	mov	_LCD_blinkXY_PARM_2,a
      00729E 75 82 C0         [24]19436 	mov	dpl,#0xc0
      0072A1 C0 07            [24]19437 	push	ar7
      0072A3 C0 06            [24]19438 	push	ar6
      0072A5 12r00r00         [24]19439 	lcall	_LCD_blinkXY
      0072A8 D0 06            [24]19440 	pop	ar6
      0072AA D0 07            [24]19441 	pop	ar7
                                  19442 ;	src\main.c:825: AmplyRelay = mp3_playing;
                                  19443 ;	assignBit
      0072AC A2 92            [12]19444 	mov	c,_P12
      0072AE 92 C2            [24]19445 	mov	_P42,c
                                  19446 ;	src\main.c:826: if(!phim_mode_doi){
      0072B0 90r00rF0         [24]19447 	mov	dptr,#_phim_mode_doi
      0072B3 E0               [24]19448 	movx	a,@dptr
      0072B4 70 27            [24]19449 	jnz	00559$
                                  19450 ;	src\main.c:827: sub_mode = mode;
      0072B6 90r00rF3         [24]19451 	mov	dptr,#_mode
      0072B9 E0               [24]19452 	movx	a,@dptr
      0072BA 90r00rF4         [24]19453 	mov	dptr,#_sub_mode
      0072BD F0               [24]19454 	movx	@dptr,a
                                  19455 ;	src\main.c:828: mode = SELECT;
      0072BE 90r00rF3         [24]19456 	mov	dptr,#_mode
      0072C1 74 07            [12]19457 	mov	a,#0x07
      0072C3 F0               [24]19458 	movx	@dptr,a
                                  19459 ;	src\main.c:829: if(mp3_playing) mp3_play(9,0,0);
      0072C4 30 92 14         [24]19460 	jnb	_P12,00557$
      0072C7 75*00 00         [24]19461 	mov	_mp3_play_PARM_2,#0x00
      0072CA 75*00 00         [24]19462 	mov	_mp3_play_PARM_3,#0x00
      0072CD 75 82 09         [24]19463 	mov	dpl,#0x09
      0072D0 C0 07            [24]19464 	push	ar7
      0072D2 C0 06            [24]19465 	push	ar6
      0072D4 12r00r00         [24]19466 	lcall	_mp3_play
      0072D7 D0 06            [24]19467 	pop	ar6
      0072D9 D0 07            [24]19468 	pop	ar7
      0072DB                      19469 00557$:
                                  19470 ;	src\main.c:830: AmplyRelay = 0;
                                  19471 ;	assignBit
      0072DB C2 C2            [12]19472 	clr	_P42
      0072DD                      19473 00559$:
                                  19474 ;	src\main.c:832: if(phim_cong_nhan){
                                  19475 ;	src\main.c:833: phim_cong_nhan = 0;
                                  19476 ;	assignBit
      0072DD 10*28 03         [24]19477 	jbc	_phim_cong_nhan,02710$
      0072E0 02r77r9D         [24]19478 	ljmp	00616$
      0072E3                      19479 02710$:
                                  19480 ;	src\main.c:834: mode_wait = TIME_MODE_WAIT;
      0072E3 90r00rF5         [24]19481 	mov	dptr,#_mode_wait
      0072E6 74 3C            [12]19482 	mov	a,#0x3c
      0072E8 F0               [24]19483 	movx	@dptr,a
                                  19484 ;	src\main.c:835: switch(sub_mode){
      0072E9 90r00rF4         [24]19485 	mov	dptr,#_sub_mode
      0072EC E0               [24]19486 	movx	a,@dptr
      0072ED FC               [12]19487 	mov  r4,a
      0072EE 24 F3            [12]19488 	add	a,#0xff - 0x0c
      0072F0 50 03            [24]19489 	jnc	02711$
      0072F2 02r76r1F         [24]19490 	ljmp	00614$
      0072F5                      19491 02711$:
      0072F5 EC               [12]19492 	mov	a,r4
      0072F6 24 0A            [12]19493 	add	a,#(02712$-3-.)
      0072F8 83               [24]19494 	movc	a,@a+pc
      0072F9 F5 82            [12]19495 	mov	dpl,a
      0072FB EC               [12]19496 	mov	a,r4
      0072FC 24 11            [12]19497 	add	a,#(02713$-3-.)
      0072FE 83               [24]19498 	movc	a,@a+pc
      0072FF F5 83            [12]19499 	mov	dph,a
      007301 E4               [12]19500 	clr	a
      007302 73               [24]19501 	jmp	@a+dptr
      007303                      19502 02712$:
      007303r1D                   19503 	.db	00560$
      007304r4F                   19504 	.db	00561$
      007305rC2                   19505 	.db	00562$
      007306r31                   19506 	.db	00563$
      007307r5C                   19507 	.db	00567$
      007308r95                   19508 	.db	00574$
      007309rAC                   19509 	.db	00578$
      00730ArF0                   19510 	.db	00581$
      00730Br35                   19511 	.db	00587$
      00730Cr82                   19512 	.db	00594$
      00730DrA9                   19513 	.db	00600$
      00730ErCE                   19514 	.db	00607$
      00730FrEB                   19515 	.db	00611$
      007310                      19516 02713$:
      007310s73                   19517 	.db	00560$>>8
      007311s73                   19518 	.db	00561$>>8
      007312s73                   19519 	.db	00562$>>8
      007313s74                   19520 	.db	00563$>>8
      007314s74                   19521 	.db	00567$>>8
      007315s74                   19522 	.db	00574$>>8
      007316s74                   19523 	.db	00578$>>8
      007317s74                   19524 	.db	00581$>>8
      007318s75                   19525 	.db	00587$>>8
      007319s75                   19526 	.db	00594$>>8
      00731As75                   19527 	.db	00600$>>8
      00731Bs75                   19528 	.db	00607$>>8
      00731Cs75                   19529 	.db	00611$>>8
                                  19530 ;	src\main.c:836: case MP3SONGTRAM  :
      00731D                      19531 00560$:
                                  19532 ;	src\main.c:837: song_name = (song_name+100)%1000;
      00731D 90r00rF6         [24]19533 	mov	dptr,#_song_name
      007320 E0               [24]19534 	movx	a,@dptr
      007321 FB               [12]19535 	mov	r3,a
      007322 A3               [24]19536 	inc	dptr
      007323 E0               [24]19537 	movx	a,@dptr
      007324 FC               [12]19538 	mov	r4,a
      007325 74 64            [12]19539 	mov	a,#0x64
      007327 2B               [12]19540 	add	a,r3
      007328 F5 82            [12]19541 	mov	dpl,a
      00732A E4               [12]19542 	clr	a
      00732B 3C               [12]19543 	addc	a,r4
      00732C F5 83            [12]19544 	mov	dph,a
      00732E 75*00 E8         [24]19545 	mov	__moduint_PARM_2,#0xe8
      007331 75*01 03         [24]19546 	mov	(__moduint_PARM_2 + 1),#0x03
      007334 C0 07            [24]19547 	push	ar7
      007336 C0 06            [24]19548 	push	ar6
      007338 12r00r00         [24]19549 	lcall	__moduint
      00733B E5 82            [12]19550 	mov	a,dpl
      00733D 85 83 F0         [24]19551 	mov	b,dph
      007340 D0 06            [24]19552 	pop	ar6
      007342 D0 07            [24]19553 	pop	ar7
      007344 90r00rF6         [24]19554 	mov	dptr,#_song_name
      007347 F0               [24]19555 	movx	@dptr,a
      007348 E5 F0            [12]19556 	mov	a,b
      00734A A3               [24]19557 	inc	dptr
      00734B F0               [24]19558 	movx	@dptr,a
                                  19559 ;	src\main.c:838: break;
      00734C 02r76r1F         [24]19560 	ljmp	00614$
                                  19561 ;	src\main.c:839: case MP3SONGCHUC  :
      00734F                      19562 00561$:
                                  19563 ;	src\main.c:840: song_name = (song_name/100*100) + (song_name-song_name/100*100+10)%100;
      00734F C0 06            [24]19564 	push	ar6
      007351 90r00rF6         [24]19565 	mov	dptr,#_song_name
      007354 E0               [24]19566 	movx	a,@dptr
      007355 FB               [12]19567 	mov	r3,a
      007356 A3               [24]19568 	inc	dptr
      007357 E0               [24]19569 	movx	a,@dptr
      007358 FC               [12]19570 	mov	r4,a
      007359 75*00 64         [24]19571 	mov	__divuint_PARM_2,#0x64
      00735C 75*01 00         [24]19572 	mov	(__divuint_PARM_2 + 1),#0x00
      00735F 8B 82            [24]19573 	mov	dpl,r3
      007361 8C 83            [24]19574 	mov	dph,r4
      007363 C0 07            [24]19575 	push	ar7
      007365 C0 06            [24]19576 	push	ar6
      007367 C0 04            [24]19577 	push	ar4
      007369 C0 03            [24]19578 	push	ar3
      00736B 12r00r00         [24]19579 	lcall	__divuint
      00736E 85 82*00         [24]19580 	mov	__mulint_PARM_2,dpl
      007371 85 83*01         [24]19581 	mov	(__mulint_PARM_2 + 1),dph
      007374 D0 03            [24]19582 	pop	ar3
      007376 D0 04            [24]19583 	pop	ar4
      007378 D0 06            [24]19584 	pop	ar6
      00737A 90 00 64         [24]19585 	mov	dptr,#0x0064
      00737D C0 04            [24]19586 	push	ar4
      00737F C0 03            [24]19587 	push	ar3
      007381 12r00r00         [24]19588 	lcall	__mulint
      007384 AA 82            [24]19589 	mov	r2,dpl
      007386 AE 83            [24]19590 	mov	r6,dph
      007388 D0 03            [24]19591 	pop	ar3
      00738A D0 04            [24]19592 	pop	ar4
      00738C EB               [12]19593 	mov	a,r3
      00738D C3               [12]19594 	clr	c
      00738E 9A               [12]19595 	subb	a,r2
      00738F FB               [12]19596 	mov	r3,a
      007390 EC               [12]19597 	mov	a,r4
      007391 9E               [12]19598 	subb	a,r6
      007392 FC               [12]19599 	mov	r4,a
      007393 74 0A            [12]19600 	mov	a,#0x0a
      007395 2B               [12]19601 	add	a,r3
      007396 F5 82            [12]19602 	mov	dpl,a
      007398 E4               [12]19603 	clr	a
      007399 3C               [12]19604 	addc	a,r4
      00739A F5 83            [12]19605 	mov	dph,a
      00739C 75*00 64         [24]19606 	mov	__moduint_PARM_2,#0x64
      00739F 75*01 00         [24]19607 	mov	(__moduint_PARM_2 + 1),#0x00
      0073A2 C0 06            [24]19608 	push	ar6
      0073A4 C0 02            [24]19609 	push	ar2
      0073A6 12r00r00         [24]19610 	lcall	__moduint
      0073A9 AB 82            [24]19611 	mov	r3,dpl
      0073AB AC 83            [24]19612 	mov	r4,dph
      0073AD D0 02            [24]19613 	pop	ar2
      0073AF D0 06            [24]19614 	pop	ar6
      0073B1 D0 07            [24]19615 	pop	ar7
      0073B3 90r00rF6         [24]19616 	mov	dptr,#_song_name
      0073B6 EB               [12]19617 	mov	a,r3
      0073B7 2A               [12]19618 	add	a,r2
      0073B8 F0               [24]19619 	movx	@dptr,a
      0073B9 EC               [12]19620 	mov	a,r4
      0073BA 3E               [12]19621 	addc	a,r6
      0073BB A3               [24]19622 	inc	dptr
      0073BC F0               [24]19623 	movx	@dptr,a
                                  19624 ;	src\main.c:841: break;
      0073BD D0 06            [24]19625 	pop	ar6
      0073BF 02r76r1F         [24]19626 	ljmp	00614$
                                  19627 ;	src\main.c:842: case MP3SONGDVI  :
      0073C2                      19628 00562$:
                                  19629 ;	src\main.c:843: song_name = (song_name/10*10) + (song_name-song_name/10*10+1)%10;
      0073C2 C0 06            [24]19630 	push	ar6
      0073C4 90r00rF6         [24]19631 	mov	dptr,#_song_name
      0073C7 E0               [24]19632 	movx	a,@dptr
      0073C8 FB               [12]19633 	mov	r3,a
      0073C9 A3               [24]19634 	inc	dptr
      0073CA E0               [24]19635 	movx	a,@dptr
      0073CB FC               [12]19636 	mov	r4,a
      0073CC 75*00 0A         [24]19637 	mov	__divuint_PARM_2,#0x0a
      0073CF 75*01 00         [24]19638 	mov	(__divuint_PARM_2 + 1),#0x00
      0073D2 8B 82            [24]19639 	mov	dpl,r3
      0073D4 8C 83            [24]19640 	mov	dph,r4
      0073D6 C0 07            [24]19641 	push	ar7
      0073D8 C0 06            [24]19642 	push	ar6
      0073DA C0 04            [24]19643 	push	ar4
      0073DC C0 03            [24]19644 	push	ar3
      0073DE 12r00r00         [24]19645 	lcall	__divuint
      0073E1 85 82*00         [24]19646 	mov	__mulint_PARM_2,dpl
      0073E4 85 83*01         [24]19647 	mov	(__mulint_PARM_2 + 1),dph
      0073E7 D0 03            [24]19648 	pop	ar3
      0073E9 D0 04            [24]19649 	pop	ar4
      0073EB D0 06            [24]19650 	pop	ar6
      0073ED 90 00 0A         [24]19651 	mov	dptr,#0x000a
      0073F0 C0 04            [24]19652 	push	ar4
      0073F2 C0 03            [24]19653 	push	ar3
      0073F4 12r00r00         [24]19654 	lcall	__mulint
      0073F7 AA 82            [24]19655 	mov	r2,dpl
      0073F9 AE 83            [24]19656 	mov	r6,dph
      0073FB D0 03            [24]19657 	pop	ar3
      0073FD D0 04            [24]19658 	pop	ar4
      0073FF EB               [12]19659 	mov	a,r3
      007400 C3               [12]19660 	clr	c
      007401 9A               [12]19661 	subb	a,r2
      007402 FB               [12]19662 	mov	r3,a
      007403 EC               [12]19663 	mov	a,r4
      007404 9E               [12]19664 	subb	a,r6
      007405 FC               [12]19665 	mov	r4,a
      007406 8B 82            [24]19666 	mov	dpl,r3
      007408 8C 83            [24]19667 	mov	dph,r4
      00740A A3               [24]19668 	inc	dptr
      00740B 75*00 0A         [24]19669 	mov	__moduint_PARM_2,#0x0a
      00740E 75*01 00         [24]19670 	mov	(__moduint_PARM_2 + 1),#0x00
      007411 C0 06            [24]19671 	push	ar6
      007413 C0 02            [24]19672 	push	ar2
      007415 12r00r00         [24]19673 	lcall	__moduint
      007418 AB 82            [24]19674 	mov	r3,dpl
      00741A AC 83            [24]19675 	mov	r4,dph
      00741C D0 02            [24]19676 	pop	ar2
      00741E D0 06            [24]19677 	pop	ar6
      007420 D0 07            [24]19678 	pop	ar7
      007422 90r00rF6         [24]19679 	mov	dptr,#_song_name
      007425 EB               [12]19680 	mov	a,r3
      007426 2A               [12]19681 	add	a,r2
      007427 F0               [24]19682 	movx	@dptr,a
      007428 EC               [12]19683 	mov	a,r4
      007429 3E               [12]19684 	addc	a,r6
      00742A A3               [24]19685 	inc	dptr
      00742B F0               [24]19686 	movx	@dptr,a
                                  19687 ;	src\main.c:844: break;
      00742C D0 06            [24]19688 	pop	ar6
      00742E 02r76r1F         [24]19689 	ljmp	00614$
                                  19690 ;	src\main.c:845: case MP3GIOCHUC  :
      007431                      19691 00563$:
                                  19692 ;	src\main.c:846: if(giotemp>13)giotemp%=10;
      007431 EF               [12]19693 	mov	a,r7
      007432 24 F2            [12]19694 	add	a,#0xff - 0x0d
      007434 50 1D            [24]19695 	jnc	00565$
      007436 8F 03            [24]19696 	mov	ar3,r7
      007438 7C 00            [12]19697 	mov	r4,#0x00
      00743A 75*00 0A         [24]19698 	mov	__modsint_PARM_2,#0x0a
                                  19699 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      00743D 8C*01            [24]19700 	mov	(__modsint_PARM_2 + 1),r4
      00743F 8B 82            [24]19701 	mov	dpl,r3
      007441 8C 83            [24]19702 	mov	dph,r4
      007443 C0 06            [24]19703 	push	ar6
      007445 12r00r00         [24]19704 	lcall	__modsint
      007448 AB 82            [24]19705 	mov	r3,dpl
      00744A AC 83            [24]19706 	mov	r4,dph
      00744C D0 06            [24]19707 	pop	ar6
      00744E 8B 07            [24]19708 	mov	ar7,r3
      007450 02r76r1F         [24]19709 	ljmp	00614$
      007453                      19710 00565$:
                                  19711 ;	src\main.c:847: else giotemp +=10;
      007453 8F 04            [24]19712 	mov	ar4,r7
      007455 74 0A            [12]19713 	mov	a,#0x0a
      007457 2C               [12]19714 	add	a,r4
      007458 FF               [12]19715 	mov	r7,a
                                  19716 ;	src\main.c:848: break;
      007459 02r76r1F         [24]19717 	ljmp	00614$
                                  19718 ;	src\main.c:849: case MP3GIODVI   :
      00745C                      19719 00567$:
                                  19720 ;	src\main.c:850: if(giotemp>22) giotemp = 20;
      00745C EF               [12]19721 	mov	a,r7
      00745D 24 E9            [12]19722 	add	a,#0xff - 0x16
      00745F 50 05            [24]19723 	jnc	00572$
      007461 7F 14            [12]19724 	mov	r7,#0x14
      007463 02r76r1F         [24]19725 	ljmp	00614$
      007466                      19726 00572$:
                                  19727 ;	src\main.c:851: else if(giotemp%10==9) giotemp-=9;
      007466 8F 03            [24]19728 	mov	ar3,r7
      007468 7C 00            [12]19729 	mov	r4,#0x00
      00746A 75*00 0A         [24]19730 	mov	__modsint_PARM_2,#0x0a
                                  19731 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      00746D 8C*01            [24]19732 	mov	(__modsint_PARM_2 + 1),r4
      00746F 8B 82            [24]19733 	mov	dpl,r3
      007471 8C 83            [24]19734 	mov	dph,r4
      007473 C0 07            [24]19735 	push	ar7
      007475 C0 06            [24]19736 	push	ar6
      007477 12r00r00         [24]19737 	lcall	__modsint
      00747A AB 82            [24]19738 	mov	r3,dpl
      00747C AC 83            [24]19739 	mov	r4,dph
      00747E D0 06            [24]19740 	pop	ar6
      007480 D0 07            [24]19741 	pop	ar7
      007482 BB 09 0C         [24]19742 	cjne	r3,#0x09,00569$
      007485 BC 00 09         [24]19743 	cjne	r4,#0x00,00569$
      007488 8F 04            [24]19744 	mov	ar4,r7
      00748A EC               [12]19745 	mov	a,r4
      00748B 24 F7            [12]19746 	add	a,#0xf7
      00748D FF               [12]19747 	mov	r7,a
      00748E 02r76r1F         [24]19748 	ljmp	00614$
      007491                      19749 00569$:
                                  19750 ;	src\main.c:852: else giotemp++;
      007491 0F               [12]19751 	inc	r7
                                  19752 ;	src\main.c:853: break;
      007492 02r76r1F         [24]19753 	ljmp	00614$
                                  19754 ;	src\main.c:854: case MP3PHUTCHUC :
      007495                      19755 00574$:
                                  19756 ;	src\main.c:855: if(phuttemp>49) phuttemp-=50;
      007495 EE               [12]19757 	mov	a,r6
      007496 24 CE            [12]19758 	add	a,#0xff - 0x31
      007498 50 09            [24]19759 	jnc	00576$
      00749A 8E 04            [24]19760 	mov	ar4,r6
      00749C EC               [12]19761 	mov	a,r4
      00749D 24 CE            [12]19762 	add	a,#0xce
      00749F FE               [12]19763 	mov	r6,a
      0074A0 02r76r1F         [24]19764 	ljmp	00614$
      0074A3                      19765 00576$:
                                  19766 ;	src\main.c:856: else phuttemp+=10;
      0074A3 8E 04            [24]19767 	mov	ar4,r6
      0074A5 74 0A            [12]19768 	mov	a,#0x0a
      0074A7 2C               [12]19769 	add	a,r4
      0074A8 FE               [12]19770 	mov	r6,a
                                  19771 ;	src\main.c:857: break;
      0074A9 02r76r1F         [24]19772 	ljmp	00614$
                                  19773 ;	src\main.c:858: case MP3PHUTDVI  :
      0074AC                      19774 00578$:
                                  19775 ;	src\main.c:859: phuttemp=phuttemp+(eep_mp3>3?5:1);
      0074AC 90 F0 10         [24]19776 	mov	dptr,#_eep_mp3
      0074AF E4               [12]19777 	clr	a
      0074B0 93               [24]19778 	movc	a,@a+dptr
      0074B1 24 FC            [12]19779 	add	a,#0xff - 0x03
      0074B3 50 06            [24]19780 	jnc	00780$
      0074B5 7B 05            [12]19781 	mov	r3,#0x05
      0074B7 7C 00            [12]19782 	mov	r4,#0x00
      0074B9 80 04            [24]19783 	sjmp	00781$
      0074BB                      19784 00780$:
      0074BB 7B 01            [12]19785 	mov	r3,#0x01
      0074BD 7C 00            [12]19786 	mov	r4,#0x00
      0074BF                      19787 00781$:
      0074BF 8E 04            [24]19788 	mov	ar4,r6
      0074C1 EB               [12]19789 	mov	a,r3
      0074C2 2C               [12]19790 	add	a,r4
                                  19791 ;	src\main.c:860: if(!(phuttemp%10)) phuttemp-=10;
      0074C3 FE               [12]19792 	mov	r6,a
      0074C4 FB               [12]19793 	mov	r3,a
      0074C5 7C 00            [12]19794 	mov	r4,#0x00
      0074C7 75*00 0A         [24]19795 	mov	__modsint_PARM_2,#0x0a
                                  19796 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0074CA 8C*01            [24]19797 	mov	(__modsint_PARM_2 + 1),r4
      0074CC 8B 82            [24]19798 	mov	dpl,r3
      0074CE 8C 83            [24]19799 	mov	dph,r4
      0074D0 C0 07            [24]19800 	push	ar7
      0074D2 C0 06            [24]19801 	push	ar6
      0074D4 12r00r00         [24]19802 	lcall	__modsint
      0074D7 E5 82            [12]19803 	mov	a,dpl
      0074D9 85 83 F0         [24]19804 	mov	b,dph
      0074DC D0 06            [24]19805 	pop	ar6
      0074DE D0 07            [24]19806 	pop	ar7
      0074E0 45 F0            [12]19807 	orl	a,b
      0074E2 60 03            [24]19808 	jz	02720$
      0074E4 02r76r1F         [24]19809 	ljmp	00614$
      0074E7                      19810 02720$:
      0074E7 8E 04            [24]19811 	mov	ar4,r6
      0074E9 EC               [12]19812 	mov	a,r4
      0074EA 24 F6            [12]19813 	add	a,#0xf6
      0074EC FE               [12]19814 	mov	r6,a
                                  19815 ;	src\main.c:861: break;
      0074ED 02r76r1F         [24]19816 	ljmp	00614$
                                  19817 ;	src\main.c:862: case MP3NGAYCHUC :
      0074F0                      19818 00581$:
                                  19819 ;	src\main.c:863: if(ngaytemp>21) ngaytemp%=10;
      0074F0 90r01r34         [24]19820 	mov	dptr,#_main_ngaytemp_65536_253
      0074F3 E0               [24]19821 	movx	a,@dptr
      0074F4 FC               [12]19822 	mov  r4,a
      0074F5 24 EA            [12]19823 	add	a,#0xff - 0x15
      0074F7 50 23            [24]19824 	jnc	00583$
      0074F9 8C 02            [24]19825 	mov	ar2,r4
      0074FB 7B 00            [12]19826 	mov	r3,#0x00
      0074FD 75*00 0A         [24]19827 	mov	__modsint_PARM_2,#0x0a
                                  19828 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      007500 8B*01            [24]19829 	mov	(__modsint_PARM_2 + 1),r3
      007502 8A 82            [24]19830 	mov	dpl,r2
      007504 8B 83            [24]19831 	mov	dph,r3
      007506 C0 07            [24]19832 	push	ar7
      007508 C0 06            [24]19833 	push	ar6
      00750A 12r00r00         [24]19834 	lcall	__modsint
      00750D AA 82            [24]19835 	mov	r2,dpl
      00750F AB 83            [24]19836 	mov	r3,dph
      007511 D0 06            [24]19837 	pop	ar6
      007513 D0 07            [24]19838 	pop	ar7
      007515 90r01r34         [24]19839 	mov	dptr,#_main_ngaytemp_65536_253
      007518 EA               [12]19840 	mov	a,r2
      007519 F0               [24]19841 	movx	@dptr,a
      00751A 80 07            [24]19842 	sjmp	00584$
      00751C                      19843 00583$:
                                  19844 ;	src\main.c:864: else ngaytemp+=10;
      00751C 90r01r34         [24]19845 	mov	dptr,#_main_ngaytemp_65536_253
      00751F 74 0A            [12]19846 	mov	a,#0x0a
      007521 2C               [12]19847 	add	a,r4
      007522 F0               [24]19848 	movx	@dptr,a
      007523                      19849 00584$:
                                  19850 ;	src\main.c:865: if(!ngaytemp) ngaytemp = 10;
      007523 90r01r34         [24]19851 	mov	dptr,#_main_ngaytemp_65536_253
      007526 E0               [24]19852 	movx	a,@dptr
      007527 60 03            [24]19853 	jz	02722$
      007529 02r76r1F         [24]19854 	ljmp	00614$
      00752C                      19855 02722$:
      00752C 90r01r34         [24]19856 	mov	dptr,#_main_ngaytemp_65536_253
      00752F 74 0A            [12]19857 	mov	a,#0x0a
      007531 F0               [24]19858 	movx	@dptr,a
                                  19859 ;	src\main.c:866: break;
      007532 02r76r1F         [24]19860 	ljmp	00614$
                                  19861 ;	src\main.c:867: case MP3NGAYDVI  :
      007535                      19862 00587$:
                                  19863 ;	src\main.c:868: if(ngaytemp>30) ngaytemp = 30;
      007535 90r01r34         [24]19864 	mov	dptr,#_main_ngaytemp_65536_253
      007538 E0               [24]19865 	movx	a,@dptr
      007539 FC               [12]19866 	mov  r4,a
      00753A 24 E1            [12]19867 	add	a,#0xff - 0x1e
      00753C 50 09            [24]19868 	jnc	00592$
      00753E 90r01r34         [24]19869 	mov	dptr,#_main_ngaytemp_65536_253
      007541 74 1E            [12]19870 	mov	a,#0x1e
      007543 F0               [24]19871 	movx	@dptr,a
      007544 02r76r1F         [24]19872 	ljmp	00614$
      007547                      19873 00592$:
                                  19874 ;	src\main.c:869: else if(ngaytemp%10==9) ngaytemp-=9;
      007547 8C 02            [24]19875 	mov	ar2,r4
      007549 7B 00            [12]19876 	mov	r3,#0x00
      00754B 75*00 0A         [24]19877 	mov	__modsint_PARM_2,#0x0a
                                  19878 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      00754E 8B*01            [24]19879 	mov	(__modsint_PARM_2 + 1),r3
      007550 8A 82            [24]19880 	mov	dpl,r2
      007552 8B 83            [24]19881 	mov	dph,r3
      007554 C0 07            [24]19882 	push	ar7
      007556 C0 06            [24]19883 	push	ar6
      007558 C0 04            [24]19884 	push	ar4
      00755A 12r00r00         [24]19885 	lcall	__modsint
      00755D AA 82            [24]19886 	mov	r2,dpl
      00755F AB 83            [24]19887 	mov	r3,dph
      007561 D0 04            [24]19888 	pop	ar4
      007563 D0 06            [24]19889 	pop	ar6
      007565 D0 07            [24]19890 	pop	ar7
      007567 BA 09 0F         [24]19891 	cjne	r2,#0x09,00589$
      00756A BB 00 0C         [24]19892 	cjne	r3,#0x00,00589$
      00756D 8C 03            [24]19893 	mov	ar3,r4
      00756F EB               [12]19894 	mov	a,r3
      007570 24 F7            [12]19895 	add	a,#0xf7
      007572 90r01r34         [24]19896 	mov	dptr,#_main_ngaytemp_65536_253
      007575 F0               [24]19897 	movx	@dptr,a
      007576 02r76r1F         [24]19898 	ljmp	00614$
      007579                      19899 00589$:
                                  19900 ;	src\main.c:870: else ngaytemp++;
      007579 90r01r34         [24]19901 	mov	dptr,#_main_ngaytemp_65536_253
      00757C EC               [12]19902 	mov	a,r4
      00757D 04               [12]19903 	inc	a
      00757E F0               [24]19904 	movx	@dptr,a
                                  19905 ;	src\main.c:871: break;
      00757F 02r76r1F         [24]19906 	ljmp	00614$
                                  19907 ;	src\main.c:872: case MP3THANGCHUC :
      007582                      19908 00594$:
                                  19909 ;	src\main.c:873: if(thangtemp<3) thangtemp+=10;
      007582 90r01r35         [24]19910 	mov	dptr,#_main_thangtemp_65536_253
      007585 E0               [24]19911 	movx	a,@dptr
      007586 FC               [12]19912 	mov	r4,a
      007587 BC 03 00         [24]19913 	cjne	r4,#0x03,02726$
      00758A                      19914 02726$:
      00758A 50 0C            [24]19915 	jnc	00598$
      00758C 8C 03            [24]19916 	mov	ar3,r4
      00758E 90r01r35         [24]19917 	mov	dptr,#_main_thangtemp_65536_253
      007591 74 0A            [12]19918 	mov	a,#0x0a
      007593 2B               [12]19919 	add	a,r3
      007594 F0               [24]19920 	movx	@dptr,a
      007595 02r76r1F         [24]19921 	ljmp	00614$
      007598                      19922 00598$:
                                  19923 ;	src\main.c:874: else if(thangtemp>10) thangtemp-=10;
      007598 EC               [12]19924 	mov	a,r4
      007599 24 F5            [12]19925 	add	a,#0xff - 0x0a
      00759B 40 03            [24]19926 	jc	02728$
      00759D 02r76r1F         [24]19927 	ljmp	00614$
      0075A0                      19928 02728$:
      0075A0 EC               [12]19929 	mov	a,r4
      0075A1 24 F6            [12]19930 	add	a,#0xf6
      0075A3 90r01r35         [24]19931 	mov	dptr,#_main_thangtemp_65536_253
      0075A6 F0               [24]19932 	movx	@dptr,a
                                  19933 ;	src\main.c:875: break;
                                  19934 ;	src\main.c:876: case MP3THANGDVI  :
      0075A7 80 76            [24]19935 	sjmp	00614$
      0075A9                      19936 00600$:
                                  19937 ;	src\main.c:877: if(thangtemp==9) thangtemp = 1;
      0075A9 90r01r35         [24]19938 	mov	dptr,#_main_thangtemp_65536_253
      0075AC E0               [24]19939 	movx	a,@dptr
      0075AD FC               [12]19940 	mov	r4,a
      0075AE BC 09 08         [24]19941 	cjne	r4,#0x09,00605$
      0075B1 90r01r35         [24]19942 	mov	dptr,#_main_thangtemp_65536_253
      0075B4 74 01            [12]19943 	mov	a,#0x01
      0075B6 F0               [24]19944 	movx	@dptr,a
      0075B7 80 66            [24]19945 	sjmp	00614$
      0075B9                      19946 00605$:
                                  19947 ;	src\main.c:878: else if(thangtemp>11) thangtemp = 10;
      0075B9 EC               [12]19948 	mov	a,r4
      0075BA 24 F4            [12]19949 	add	a,#0xff - 0x0b
      0075BC 50 08            [24]19950 	jnc	00602$
      0075BE 90r01r35         [24]19951 	mov	dptr,#_main_thangtemp_65536_253
      0075C1 74 0A            [12]19952 	mov	a,#0x0a
      0075C3 F0               [24]19953 	movx	@dptr,a
      0075C4 80 59            [24]19954 	sjmp	00614$
      0075C6                      19955 00602$:
                                  19956 ;	src\main.c:879: else thangtemp++;
      0075C6 90r01r35         [24]19957 	mov	dptr,#_main_thangtemp_65536_253
      0075C9 EC               [12]19958 	mov	a,r4
      0075CA 04               [12]19959 	inc	a
      0075CB F0               [24]19960 	movx	@dptr,a
                                  19961 ;	src\main.c:880: break;
                                  19962 ;	src\main.c:881: case MP3NAMCHUC :
      0075CC 80 51            [24]19963 	sjmp	00614$
      0075CE                      19964 00607$:
                                  19965 ;	src\main.c:882: if(namtemp>89) namtemp-=90;
      0075CE 90r01r36         [24]19966 	mov	dptr,#_main_namtemp_65536_253
      0075D1 E0               [24]19967 	movx	a,@dptr
      0075D2 FC               [12]19968 	mov  r4,a
      0075D3 24 A6            [12]19969 	add	a,#0xff - 0x59
      0075D5 50 0B            [24]19970 	jnc	00609$
      0075D7 8C 03            [24]19971 	mov	ar3,r4
      0075D9 EB               [12]19972 	mov	a,r3
      0075DA 24 A6            [12]19973 	add	a,#0xa6
      0075DC 90r01r36         [24]19974 	mov	dptr,#_main_namtemp_65536_253
      0075DF F0               [24]19975 	movx	@dptr,a
      0075E0 80 3D            [24]19976 	sjmp	00614$
      0075E2                      19977 00609$:
                                  19978 ;	src\main.c:883: else namtemp+=10;
      0075E2 90r01r36         [24]19979 	mov	dptr,#_main_namtemp_65536_253
      0075E5 74 0A            [12]19980 	mov	a,#0x0a
      0075E7 2C               [12]19981 	add	a,r4
      0075E8 F0               [24]19982 	movx	@dptr,a
                                  19983 ;	src\main.c:884: break;
                                  19984 ;	src\main.c:885: case MP3NAMDVI  :
      0075E9 80 34            [24]19985 	sjmp	00614$
      0075EB                      19986 00611$:
                                  19987 ;	src\main.c:886: if(!(++namtemp%10)) namtemp-=10;
      0075EB 90r01r36         [24]19988 	mov	dptr,#_main_namtemp_65536_253
      0075EE E0               [24]19989 	movx	a,@dptr
      0075EF 24 01            [12]19990 	add	a,#0x01
      0075F1 F0               [24]19991 	movx	@dptr,a
      0075F2 E0               [24]19992 	movx	a,@dptr
      0075F3 FC               [12]19993 	mov	r4,a
      0075F4 FA               [12]19994 	mov	r2,a
      0075F5 7B 00            [12]19995 	mov	r3,#0x00
      0075F7 75*00 0A         [24]19996 	mov	__modsint_PARM_2,#0x0a
                                  19997 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0075FA 8B*01            [24]19998 	mov	(__modsint_PARM_2 + 1),r3
      0075FC 8A 82            [24]19999 	mov	dpl,r2
      0075FE 8B 83            [24]20000 	mov	dph,r3
      007600 C0 07            [24]20001 	push	ar7
      007602 C0 06            [24]20002 	push	ar6
      007604 C0 04            [24]20003 	push	ar4
      007606 12r00r00         [24]20004 	lcall	__modsint
      007609 E5 82            [12]20005 	mov	a,dpl
      00760B 85 83 F0         [24]20006 	mov	b,dph
      00760E D0 04            [24]20007 	pop	ar4
      007610 D0 06            [24]20008 	pop	ar6
      007612 D0 07            [24]20009 	pop	ar7
      007614 45 F0            [12]20010 	orl	a,b
      007616 70 07            [24]20011 	jnz	00614$
      007618 EC               [12]20012 	mov	a,r4
      007619 24 F6            [12]20013 	add	a,#0xf6
      00761B 90r01r36         [24]20014 	mov	dptr,#_main_namtemp_65536_253
      00761E F0               [24]20015 	movx	@dptr,a
                                  20016 ;	src\main.c:889: }
      00761F                      20017 00614$:
                                  20018 ;	src\main.c:890: LCD_guigio(0xc0,"    ",giotemp,phuttemp,251,1);
      00761F 75*00r9B         [24]20019 	mov	_LCD_guigio_PARM_2,#___str_172
      007622 75*01s0D         [24]20020 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_172 >> 8)
      007625 75*02 80         [24]20021 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      007628 8F*00            [24]20022 	mov	_LCD_guigio_PARM_3,r7
      00762A 8E*00            [24]20023 	mov	_LCD_guigio_PARM_4,r6
      00762C 75*00 FB         [24]20024 	mov	_LCD_guigio_PARM_5,#0xfb
                                  20025 ;	assignBit
      00762F D2*00            [12]20026 	setb	_LCD_guigio_PARM_6
      007631 75 82 C0         [24]20027 	mov	dpl,#0xc0
      007634 C0 07            [24]20028 	push	ar7
      007636 C0 06            [24]20029 	push	ar6
      007638 12r00r00         [24]20030 	lcall	_LCD_guigio
                                  20031 ;	src\main.c:891: LCD_guilenh(0xc0);
      00763B 75 82 C0         [24]20032 	mov	dpl,#0xc0
      00763E 12r00r00         [24]20033 	lcall	_LCD_guilenh
                                  20034 ;	src\main.c:892: LCD_guidulieu(song_name/100+'0');
      007641 90r00rF6         [24]20035 	mov	dptr,#_song_name
      007644 E0               [24]20036 	movx	a,@dptr
      007645 FB               [12]20037 	mov	r3,a
      007646 A3               [24]20038 	inc	dptr
      007647 E0               [24]20039 	movx	a,@dptr
      007648 FC               [12]20040 	mov	r4,a
      007649 75*00 64         [24]20041 	mov	__divuint_PARM_2,#0x64
      00764C 75*01 00         [24]20042 	mov	(__divuint_PARM_2 + 1),#0x00
      00764F 8B 82            [24]20043 	mov	dpl,r3
      007651 8C 83            [24]20044 	mov	dph,r4
      007653 12r00r00         [24]20045 	lcall	__divuint
      007656 AB 82            [24]20046 	mov	r3,dpl
      007658 74 30            [12]20047 	mov	a,#0x30
      00765A 2B               [12]20048 	add	a,r3
      00765B F5 82            [12]20049 	mov	dpl,a
      00765D 12r00r00         [24]20050 	lcall	_LCD_guidulieu
                                  20051 ;	src\main.c:893: LCD_guidulieu(song_name/10%10+'0');
      007660 90r00rF6         [24]20052 	mov	dptr,#_song_name
      007663 E0               [24]20053 	movx	a,@dptr
      007664 FB               [12]20054 	mov	r3,a
      007665 A3               [24]20055 	inc	dptr
      007666 E0               [24]20056 	movx	a,@dptr
      007667 FC               [12]20057 	mov	r4,a
      007668 75*00 0A         [24]20058 	mov	__divuint_PARM_2,#0x0a
      00766B 75*01 00         [24]20059 	mov	(__divuint_PARM_2 + 1),#0x00
      00766E 8B 82            [24]20060 	mov	dpl,r3
      007670 8C 83            [24]20061 	mov	dph,r4
      007672 12r00r00         [24]20062 	lcall	__divuint
      007675 75*00 0A         [24]20063 	mov	__moduint_PARM_2,#0x0a
      007678 75*01 00         [24]20064 	mov	(__moduint_PARM_2 + 1),#0x00
      00767B 12r00r00         [24]20065 	lcall	__moduint
      00767E AB 82            [24]20066 	mov	r3,dpl
      007680 74 30            [12]20067 	mov	a,#0x30
      007682 2B               [12]20068 	add	a,r3
      007683 F5 82            [12]20069 	mov	dpl,a
      007685 12r00r00         [24]20070 	lcall	_LCD_guidulieu
                                  20071 ;	src\main.c:894: LCD_guidulieu(song_name%10 + '0');
      007688 90r00rF6         [24]20072 	mov	dptr,#_song_name
      00768B E0               [24]20073 	movx	a,@dptr
      00768C FB               [12]20074 	mov	r3,a
      00768D A3               [24]20075 	inc	dptr
      00768E E0               [24]20076 	movx	a,@dptr
      00768F FC               [12]20077 	mov	r4,a
      007690 75*00 0A         [24]20078 	mov	__moduint_PARM_2,#0x0a
      007693 75*01 00         [24]20079 	mov	(__moduint_PARM_2 + 1),#0x00
      007696 8B 82            [24]20080 	mov	dpl,r3
      007698 8C 83            [24]20081 	mov	dph,r4
      00769A 12r00r00         [24]20082 	lcall	__moduint
      00769D AB 82            [24]20083 	mov	r3,dpl
      00769F 74 30            [12]20084 	mov	a,#0x30
      0076A1 2B               [12]20085 	add	a,r3
      0076A2 F5 82            [12]20086 	mov	dpl,a
      0076A4 12r00r00         [24]20087 	lcall	_LCD_guidulieu
      0076A7 D0 06            [24]20088 	pop	ar6
      0076A9 D0 07            [24]20089 	pop	ar7
                                  20090 ;	src\main.c:895: LCD_guigio(0xc8," ",ngaytemp,thangtemp,100+namtemp,1);
      0076AB 75*00r23         [24]20091 	mov	_LCD_guigio_PARM_2,#___str_162
      0076AE 75*01s0D         [24]20092 	mov	(_LCD_guigio_PARM_2 + 1),#(___str_162 >> 8)
      0076B1 75*02 80         [24]20093 	mov	(_LCD_guigio_PARM_2 + 2),#0x80
      0076B4 90r01r34         [24]20094 	mov	dptr,#_main_ngaytemp_65536_253
      0076B7 E0               [24]20095 	movx	a,@dptr
      0076B8 FC               [12]20096 	mov	r4,a
      0076B9 90r01r35         [24]20097 	mov	dptr,#_main_thangtemp_65536_253
      0076BC E0               [24]20098 	movx	a,@dptr
      0076BD FB               [12]20099 	mov	r3,a
      0076BE 90r01r36         [24]20100 	mov	dptr,#_main_namtemp_65536_253
      0076C1 E0               [24]20101 	movx	a,@dptr
      0076C2 F5*32            [12]20102 	mov	_main_sloc2_1_0,a
      0076C4 C0 06            [24]20103 	push	ar6
      0076C6 AE*32            [24]20104 	mov	r6,_main_sloc2_1_0
      0076C8 74 64            [12]20105 	mov	a,#0x64
      0076CA 2E               [12]20106 	add	a,r6
      0076CB F5*00            [12]20107 	mov	_LCD_guigio_PARM_5,a
      0076CD 8C*00            [24]20108 	mov	_LCD_guigio_PARM_3,r4
      0076CF 8B*00            [24]20109 	mov	_LCD_guigio_PARM_4,r3
                                  20110 ;	assignBit
      0076D1 D2*00            [12]20111 	setb	_LCD_guigio_PARM_6
      0076D3 75 82 C8         [24]20112 	mov	dpl,#0xc8
      0076D6 C0 07            [24]20113 	push	ar7
      0076D8 C0 06            [24]20114 	push	ar6
      0076DA C0 04            [24]20115 	push	ar4
      0076DC C0 03            [24]20116 	push	ar3
      0076DE 12r00r00         [24]20117 	lcall	_LCD_guigio
      0076E1 D0 03            [24]20118 	pop	ar3
                                  20119 ;	src\main.c:896: check = (23*thangtemp/9 + ngaytemp + (thangtemp>2?!(namtemp%4):2) + namtemp + (namtemp+3)/4 + 1);
      0076E3 8B*00            [24]20120 	mov	__mulint_PARM_2,r3
      0076E5 75*01 00         [24]20121 	mov	(__mulint_PARM_2 + 1),#0x00
      0076E8 90 00 17         [24]20122 	mov	dptr,#0x0017
      0076EB C0 03            [24]20123 	push	ar3
      0076ED 12r00r00         [24]20124 	lcall	__mulint
      0076F0 75*00 09         [24]20125 	mov	__divsint_PARM_2,#0x09
      0076F3 75*01 00         [24]20126 	mov	(__divsint_PARM_2 + 1),#0x00
      0076F6 12r00r00         [24]20127 	lcall	__divsint
      0076F9 85 82*2F         [24]20128 	mov	_main_sloc0_1_0,dpl
      0076FC 85 83*30         [24]20129 	mov	(_main_sloc0_1_0 + 1),dph
      0076FF D0 03            [24]20130 	pop	ar3
      007701 D0 04            [24]20131 	pop	ar4
      007703 D0 06            [24]20132 	pop	ar6
      007705 D0 07            [24]20133 	pop	ar7
      007707 7E 00            [12]20134 	mov	r6,#0x00
      007709 EC               [12]20135 	mov	a,r4
      00770A 25*2F            [12]20136 	add	a,_main_sloc0_1_0
      00770C F5*2F            [12]20137 	mov	_main_sloc0_1_0,a
      00770E EE               [12]20138 	mov	a,r6
      00770F 35*30            [12]20139 	addc	a,(_main_sloc0_1_0 + 1)
      007711 F5*30            [12]20140 	mov	(_main_sloc0_1_0 + 1),a
      007713 C3               [12]20141 	clr	c
      007714 74 02            [12]20142 	mov	a,#0x02
      007716 9B               [12]20143 	subb	a,r3
      007717 D0 06            [24]20144 	pop	ar6
      007719 50 13            [24]20145 	jnc	00782$
      00771B 74 03            [12]20146 	mov	a,#0x03
      00771D 55*32            [12]20147 	anl	a,_main_sloc2_1_0
      00771F 7C 00            [12]20148 	mov	r4,#0x00
      007721 4C               [12]20149 	orl	a,r4
      007722 B4 01 00         [24]20150 	cjne	a,#0x01,02735$
      007725                      20151 02735$:
      007725 92*4C            [24]20152 	mov  _main_sloc3_1_0,c
      007727 E4               [12]20153 	clr	a
      007728 33               [12]20154 	rlc	a
      007729 FB               [12]20155 	mov	r3,a
      00772A 7C 00            [12]20156 	mov	r4,#0x00
      00772C 80 04            [24]20157 	sjmp	00783$
      00772E                      20158 00782$:
      00772E 7B 02            [12]20159 	mov	r3,#0x02
      007730 7C 00            [12]20160 	mov	r4,#0x00
      007732                      20161 00783$:
      007732 C0 06            [24]20162 	push	ar6
      007734 EB               [12]20163 	mov	a,r3
      007735 25*2F            [12]20164 	add	a,_main_sloc0_1_0
      007737 FB               [12]20165 	mov	r3,a
      007738 EC               [12]20166 	mov	a,r4
      007739 35*30            [12]20167 	addc	a,(_main_sloc0_1_0 + 1)
      00773B FC               [12]20168 	mov	r4,a
      00773C 90r01r36         [24]20169 	mov	dptr,#_main_namtemp_65536_253
      00773F E0               [24]20170 	movx	a,@dptr
      007740 FA               [12]20171 	mov	r2,a
      007741 7E 00            [12]20172 	mov	r6,#0x00
      007743 2B               [12]20173 	add	a,r3
      007744 FB               [12]20174 	mov	r3,a
      007745 EE               [12]20175 	mov	a,r6
      007746 3C               [12]20176 	addc	a,r4
      007747 FC               [12]20177 	mov	r4,a
      007748 8A 82            [24]20178 	mov	dpl,r2
      00774A 8E 83            [24]20179 	mov	dph,r6
      00774C A3               [24]20180 	inc	dptr
      00774D A3               [24]20181 	inc	dptr
      00774E A3               [24]20182 	inc	dptr
      00774F 75*00 04         [24]20183 	mov	__divsint_PARM_2,#0x04
                                  20184 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      007752 8E*01            [24]20185 	mov	(__divsint_PARM_2 + 1),r6
      007754 C0 07            [24]20186 	push	ar7
      007756 C0 04            [24]20187 	push	ar4
      007758 C0 03            [24]20188 	push	ar3
      00775A 12r00r00         [24]20189 	lcall	__divsint
      00775D AA 82            [24]20190 	mov	r2,dpl
      00775F AE 83            [24]20191 	mov	r6,dph
      007761 D0 03            [24]20192 	pop	ar3
      007763 D0 04            [24]20193 	pop	ar4
      007765 EA               [12]20194 	mov	a,r2
      007766 2B               [12]20195 	add	a,r3
      007767 FB               [12]20196 	mov	r3,a
      007768 EE               [12]20197 	mov	a,r6
      007769 3C               [12]20198 	addc	a,r4
      00776A FC               [12]20199 	mov	r4,a
      00776B 8B 82            [24]20200 	mov	dpl,r3
      00776D 8C 83            [24]20201 	mov	dph,r4
      00776F A3               [24]20202 	inc	dptr
                                  20203 ;	src\main.c:897: thutemp = check%7+1; 
      007770 75*00 07         [24]20204 	mov	__moduint_PARM_2,#0x07
      007773 75*01 00         [24]20205 	mov	(__moduint_PARM_2 + 1),#0x00
      007776 12r00r00         [24]20206 	lcall	__moduint
      007779 AC 82            [24]20207 	mov	r4,dpl
      00777B AE 83            [24]20208 	mov	r6,dph
      00777D 0C               [12]20209 	inc	r4
      00777E 90r01r37         [24]20210 	mov	dptr,#_main_thutemp_65536_253
      007781 EC               [12]20211 	mov	a,r4
      007782 F0               [24]20212 	movx	@dptr,a
                                  20213 ;	src\main.c:898: LCD_guilenh(0xcf);
      007783 75 82 CF         [24]20214 	mov	dpl,#0xcf
      007786 C0 06            [24]20215 	push	ar6
      007788 C0 04            [24]20216 	push	ar4
      00778A 12r00r00         [24]20217 	lcall	_LCD_guilenh
      00778D D0 04            [24]20218 	pop	ar4
                                  20219 ;	src\main.c:899: LCD_guidulieu(thutemp+'0');
      00778F 74 30            [12]20220 	mov	a,#0x30
      007791 2C               [12]20221 	add	a,r4
      007792 F5 82            [12]20222 	mov	dpl,a
      007794 12r00r00         [24]20223 	lcall	_LCD_guidulieu
      007797 D0 06            [24]20224 	pop	ar6
      007799 D0 07            [24]20225 	pop	ar7
                                  20226 ;	src\main.c:973: WATCHDOG;
      00779B D0 06            [24]20227 	pop	ar6
                                  20228 ;	src\main.c:899: LCD_guidulieu(thutemp+'0');
      00779D                      20229 00616$:
                                  20230 ;	src\main.c:903: if(phim_back_nhan){
                                  20231 ;	src\main.c:904: phim_back_nhan = 0;
                                  20232 ;	assignBit
      00779D 10*24 02         [24]20233 	jbc	_phim_back_nhan,02736$
      0077A0 80 40            [24]20234 	sjmp	00621$
      0077A2                      20235 02736$:
                                  20236 ;	src\main.c:905: mode_wait = TIME_MODE_WAIT;
      0077A2 90r00rF5         [24]20237 	mov	dptr,#_mode_wait
      0077A5 74 3C            [12]20238 	mov	a,#0x3c
      0077A7 F0               [24]20239 	movx	@dptr,a
                                  20240 ;	src\main.c:906: if(sub_mode)sub_mode--;
      0077A8 90r00rF4         [24]20241 	mov	dptr,#_sub_mode
      0077AB E0               [24]20242 	movx	a,@dptr
      0077AC FC               [12]20243 	mov	r4,a
      0077AD E0               [24]20244 	movx	a,@dptr
      0077AE 60 08            [24]20245 	jz	00618$
      0077B0 EC               [12]20246 	mov	a,r4
      0077B1 14               [12]20247 	dec	a
      0077B2 90r00rF4         [24]20248 	mov	dptr,#_sub_mode
      0077B5 F0               [24]20249 	movx	@dptr,a
      0077B6 80 2A            [24]20250 	sjmp	00621$
      0077B8                      20251 00618$:
                                  20252 ;	src\main.c:908: song_name = 0;
      0077B8 90r00rF6         [24]20253 	mov	dptr,#_song_name
      0077BB E4               [12]20254 	clr	a
      0077BC F0               [24]20255 	movx	@dptr,a
      0077BD A3               [24]20256 	inc	dptr
      0077BE F0               [24]20257 	movx	@dptr,a
                                  20258 ;	src\main.c:909: LCD_guilenh(0xc0);
      0077BF 75 82 C0         [24]20259 	mov	dpl,#0xc0
      0077C2 C0 07            [24]20260 	push	ar7
      0077C4 C0 06            [24]20261 	push	ar6
      0077C6 12r00r00         [24]20262 	lcall	_LCD_guilenh
                                  20263 ;	src\main.c:910: LCD_guichuoi("000 ");
      0077C9 90r0Dr6A         [24]20264 	mov	dptr,#___str_167
      0077CC 75 F0 80         [24]20265 	mov	b,#0x80
      0077CF 12r00r00         [24]20266 	lcall	_LCD_guichuoi
                                  20267 ;	src\main.c:911: mp3_play(9,0,0);
      0077D2 75*00 00         [24]20268 	mov	_mp3_play_PARM_2,#0x00
      0077D5 75*00 00         [24]20269 	mov	_mp3_play_PARM_3,#0x00
      0077D8 75 82 09         [24]20270 	mov	dpl,#0x09
      0077DB 12r00r00         [24]20271 	lcall	_mp3_play
      0077DE D0 06            [24]20272 	pop	ar6
      0077E0 D0 07            [24]20273 	pop	ar7
      0077E2                      20274 00621$:
                                  20275 ;	src\main.c:916: if(phim_mode_nhan){
                                  20276 ;	src\main.c:918: phim_mode_nhan = 0;
                                  20277 ;	assignBit
      0077E2 10*20 03         [24]20278 	jbc	_phim_mode_nhan,02738$
      0077E5 02r79r7F         [24]20279 	ljmp	00643$
      0077E8                      20280 02738$:
                                  20281 ;	src\main.c:919: mode_wait = TIME_MODE_WAIT;
      0077E8 90r00rF5         [24]20282 	mov	dptr,#_mode_wait
      0077EB 74 3C            [12]20283 	mov	a,#0x3c
      0077ED F0               [24]20284 	movx	@dptr,a
                                  20285 ;	src\main.c:920: if(++sub_mode>12){
      0077EE 90r00rF4         [24]20286 	mov	dptr,#_sub_mode
      0077F1 E0               [24]20287 	movx	a,@dptr
      0077F2 24 01            [12]20288 	add	a,#0x01
      0077F4 F0               [24]20289 	movx	@dptr,a
      0077F5 E0               [24]20290 	movx	a,@dptr
      0077F6 FC               [12]20291 	mov  r4,a
      0077F7 24 F3            [12]20292 	add	a,#0xff - 0x0c
      0077F9 50 58            [24]20293 	jnc	00627$
                                  20294 ;	src\main.c:921: sub_mode = 0;
      0077FB 90r00rF4         [24]20295 	mov	dptr,#_sub_mode
      0077FE E4               [12]20296 	clr	a
      0077FF F0               [24]20297 	movx	@dptr,a
                                  20298 ;	src\main.c:922: mp3_play(eep_mp3>3?thutemp:10,giotemp,phuttemp);
      007800 90 F0 10         [24]20299 	mov	dptr,#_eep_mp3
                                  20300 ;	genFromRTrack removed	clr	a
      007803 93               [24]20301 	movc	a,@a+dptr
      007804 24 FC            [12]20302 	add	a,#0xff - 0x03
      007806 50 09            [24]20303 	jnc	00784$
      007808 90r01r37         [24]20304 	mov	dptr,#_main_thutemp_65536_253
      00780B E0               [24]20305 	movx	a,@dptr
      00780C FA               [12]20306 	mov	r2,a
      00780D 7B 00            [12]20307 	mov	r3,#0x00
      00780F 80 04            [24]20308 	sjmp	00785$
      007811                      20309 00784$:
      007811 7A 0A            [12]20310 	mov	r2,#0x0a
      007813 7B 00            [12]20311 	mov	r3,#0x00
      007815                      20312 00785$:
      007815 8A 82            [24]20313 	mov	dpl,r2
      007817 8F*00            [24]20314 	mov	_mp3_play_PARM_2,r7
      007819 8E*00            [24]20315 	mov	_mp3_play_PARM_3,r6
      00781B C0 07            [24]20316 	push	ar7
      00781D C0 06            [24]20317 	push	ar6
      00781F 12r00r00         [24]20318 	lcall	_mp3_play
                                  20319 ;	src\main.c:923: delay_ms(100);
      007822 90 00 64         [24]20320 	mov	dptr,#0x0064
      007825 12r00r00         [24]20321 	lcall	_delay_ms
                                  20322 ;	src\main.c:924: AmplyRelay = mp3_playing;
                                  20323 ;	assignBit
      007828 A2 92            [12]20324 	mov	c,_P12
      00782A 92 C2            [24]20325 	mov	_P42,c
                                  20326 ;	src\main.c:925: LCD_guilenh(0xc3);
      00782C 75 82 C3         [24]20327 	mov	dpl,#0xc3
      00782F 12r00r00         [24]20328 	lcall	_LCD_guilenh
      007832 D0 06            [24]20329 	pop	ar6
      007834 D0 07            [24]20330 	pop	ar7
                                  20331 ;	src\main.c:926: LCD_guidulieu(mp3_playing?'O':'X');
      007836 30 92 06         [24]20332 	jnb	_P12,00786$
      007839 7A 4F            [12]20333 	mov	r2,#0x4f
      00783B 7B 00            [12]20334 	mov	r3,#0x00
      00783D 80 04            [24]20335 	sjmp	00787$
      00783F                      20336 00786$:
      00783F 7A 58            [12]20337 	mov	r2,#0x58
      007841 7B 00            [12]20338 	mov	r3,#0x00
      007843                      20339 00787$:
      007843 8A 82            [24]20340 	mov	dpl,r2
      007845 C0 07            [24]20341 	push	ar7
      007847 C0 06            [24]20342 	push	ar6
      007849 12r00r00         [24]20343 	lcall	_LCD_guidulieu
      00784C D0 06            [24]20344 	pop	ar6
      00784E D0 07            [24]20345 	pop	ar7
      007850 02r79r7F         [24]20346 	ljmp	00643$
      007853                      20347 00627$:
                                  20348 ;	src\main.c:933: }else if(song_name && sub_mode > 2 && eep_mp3>3){
      007853 90r00rF6         [24]20349 	mov	dptr,#_song_name
      007856 E0               [24]20350 	movx	a,@dptr
      007857 FA               [12]20351 	mov	r2,a
      007858 A3               [24]20352 	inc	dptr
      007859 E0               [24]20353 	movx	a,@dptr
      00785A FB               [12]20354 	mov	r3,a
      00785B 4A               [12]20355 	orl	a,r2
      00785C 70 03            [24]20356 	jnz	02742$
      00785E 02r79r7F         [24]20357 	ljmp	00643$
      007861                      20358 02742$:
      007861 EC               [12]20359 	mov	a,r4
      007862 24 FD            [12]20360 	add	a,#0xff - 0x02
      007864 40 03            [24]20361 	jc	02743$
      007866 02r79r7F         [24]20362 	ljmp	00643$
      007869                      20363 02743$:
      007869 90 F0 10         [24]20364 	mov	dptr,#_eep_mp3
      00786C E4               [12]20365 	clr	a
      00786D 93               [24]20366 	movc	a,@a+dptr
      00786E FC               [12]20367 	mov  r4,a
      00786F 24 FC            [12]20368 	add	a,#0xff - 0x03
      007871 40 03            [24]20369 	jc	02744$
      007873 02r79r7F         [24]20370 	ljmp	00643$
      007876                      20371 02744$:
                                  20372 ;	src\main.c:934: sub_mode = 0;
      007876 C0 06            [24]20373 	push	ar6
      007878 90r00rF4         [24]20374 	mov	dptr,#_sub_mode
      00787B E4               [12]20375 	clr	a
      00787C F0               [24]20376 	movx	@dptr,a
                                  20377 ;	src\main.c:935: mp3_play(0,song_name/12,(song_name-song_name/12*12)*5);
      00787D 75*00 0C         [24]20378 	mov	__divuint_PARM_2,#0x0c
                                  20379 ;	1-genFromRTrack replaced	mov	(__divuint_PARM_2 + 1),#0x00
      007880 F5*01            [12]20380 	mov	(__divuint_PARM_2 + 1),a
      007882 8A 82            [24]20381 	mov	dpl,r2
      007884 8B 83            [24]20382 	mov	dph,r3
      007886 C0 07            [24]20383 	push	ar7
      007888 C0 03            [24]20384 	push	ar3
      00788A C0 02            [24]20385 	push	ar2
      00788C 12r00r00         [24]20386 	lcall	__divuint
      00788F AC 82            [24]20387 	mov	r4,dpl
      007891 D0 02            [24]20388 	pop	ar2
      007893 D0 03            [24]20389 	pop	ar3
      007895 EC               [12]20390 	mov	a,r4
      007896 75 F0 0C         [24]20391 	mov	b,#0x0c
      007899 A4               [48]20392 	mul	ab
      00789A FE               [12]20393 	mov	r6,a
      00789B EA               [12]20394 	mov	a,r2
      00789C C3               [12]20395 	clr	c
      00789D 9E               [12]20396 	subb	a,r6
      00789E FE               [12]20397 	mov	r6,a
      00789F 75 F0 05         [24]20398 	mov	b,#0x05
      0078A2 A4               [48]20399 	mul	ab
      0078A3 F5*00            [12]20400 	mov	_mp3_play_PARM_3,a
      0078A5 8C*00            [24]20401 	mov	_mp3_play_PARM_2,r4
      0078A7 75 82 00         [24]20402 	mov	dpl,#0x00
      0078AA C0 06            [24]20403 	push	ar6
      0078AC 12r00r00         [24]20404 	lcall	_mp3_play
                                  20405 ;	src\main.c:936: delay_ms(100);
      0078AF 90 00 64         [24]20406 	mov	dptr,#0x0064
      0078B2 12r00r00         [24]20407 	lcall	_delay_ms
                                  20408 ;	src\main.c:937: AmplyRelay = mp3_playing;
                                  20409 ;	assignBit
      0078B5 A2 92            [12]20410 	mov	c,_P12
      0078B7 92 C2            [24]20411 	mov	_P42,c
                                  20412 ;	src\main.c:938: LCD_guilenh(0xc3);
      0078B9 75 82 C3         [24]20413 	mov	dpl,#0xc3
      0078BC 12r00r00         [24]20414 	lcall	_LCD_guilenh
      0078BF D0 06            [24]20415 	pop	ar6
      0078C1 D0 07            [24]20416 	pop	ar7
                                  20417 ;	src\main.c:939: LCD_guidulieu(mp3_playing?'M':'X');
      0078C3 D0 06            [24]20418 	pop	ar6
      0078C5 30 92 06         [24]20419 	jnb	_P12,00788$
      0078C8 7B 4D            [12]20420 	mov	r3,#0x4d
      0078CA 7C 00            [12]20421 	mov	r4,#0x00
      0078CC 80 04            [24]20422 	sjmp	00789$
      0078CE                      20423 00788$:
      0078CE 7B 58            [12]20424 	mov	r3,#0x58
      0078D0 7C 00            [12]20425 	mov	r4,#0x00
      0078D2                      20426 00789$:
      0078D2 8B 82            [24]20427 	mov	dpl,r3
      0078D4 C0 07            [24]20428 	push	ar7
      0078D6 C0 06            [24]20429 	push	ar6
      0078D8 12r00r00         [24]20430 	lcall	_LCD_guidulieu
      0078DB D0 06            [24]20431 	pop	ar6
      0078DD D0 07            [24]20432 	pop	ar7
                                  20433 ;	src\main.c:943: break;
      0078DF 02r79r7F         [24]20434 	ljmp	00643$
                                  20435 ;	src\main.c:944: case CANHKIM:
      0078E2                      20436 00631$:
                                  20437 ;	src\main.c:945: if(phim_mode_nhan){
                                  20438 ;	src\main.c:946: phim_mode_nhan=0;
                                  20439 ;	assignBit
      0078E2 10*20 02         [24]20440 	jbc	_phim_mode_nhan,02746$
      0078E5 80 2B            [24]20441 	sjmp	00633$
      0078E7                      20442 02746$:
                                  20443 ;	src\main.c:947: canhkim = 5; 
      0078E7 90r00rE0         [24]20444 	mov	dptr,#_canhkim
      0078EA 74 05            [12]20445 	mov	a,#0x05
      0078EC F0               [24]20446 	movx	@dptr,a
                                  20447 ;	src\main.c:948: may_canh_kim = sub_mode+1;
      0078ED 90r00rF4         [24]20448 	mov	dptr,#_sub_mode
      0078F0 E0               [24]20449 	movx	a,@dptr
      0078F1 90r00rE1         [24]20450 	mov	dptr,#_may_canh_kim
      0078F4 04               [12]20451 	inc	a
      0078F5 F0               [24]20452 	movx	@dptr,a
                                  20453 ;	src\main.c:949: delay_ve_kim = 5;
      0078F6 90r00rE2         [24]20454 	mov	dptr,#_delay_ve_kim
      0078F9 74 05            [12]20455 	mov	a,#0x05
      0078FB F0               [24]20456 	movx	@dptr,a
                                  20457 ;	src\main.c:950: sub_mode = mode;
      0078FC 90r00rF4         [24]20458 	mov	dptr,#_sub_mode
      0078FF ED               [12]20459 	mov	a,r5
      007900 F0               [24]20460 	movx	@dptr,a
                                  20461 ;	src\main.c:951: mode = SELECT;
      007901 90r00rF3         [24]20462 	mov	dptr,#_mode
      007904 74 07            [12]20463 	mov	a,#0x07
      007906 F0               [24]20464 	movx	@dptr,a
                                  20465 ;	src\main.c:952: LCD_noblink();
      007907 C0 07            [24]20466 	push	ar7
      007909 C0 06            [24]20467 	push	ar6
      00790B 12r00r00         [24]20468 	lcall	_LCD_noblink
      00790E D0 06            [24]20469 	pop	ar6
      007910 D0 07            [24]20470 	pop	ar7
      007912                      20471 00633$:
                                  20472 ;	src\main.c:954: if(phim_cong_nhan){
      007912 30*28 6A         [24]20473 	jnb	_phim_cong_nhan,00643$
                                  20474 ;	src\main.c:955: phim_cong_nhan = 0;
      007915 C0 06            [24]20475 	push	ar6
                                  20476 ;	assignBit
      007917 C2*28            [12]20477 	clr	_phim_cong_nhan
                                  20478 ;	src\main.c:956: if(++sub_mode>so_motor-1) sub_mode = 0;
      007919 90r00rF4         [24]20479 	mov	dptr,#_sub_mode
      00791C E0               [24]20480 	movx	a,@dptr
      00791D 24 01            [12]20481 	add	a,#0x01
      00791F F0               [24]20482 	movx	@dptr,a
      007920 90r01r2E         [24]20483 	mov	dptr,#_so_motor
      007923 E0               [24]20484 	movx	a,@dptr
      007924 FC               [12]20485 	mov	r4,a
      007925 7B 00            [12]20486 	mov	r3,#0x00
      007927 1C               [12]20487 	dec	r4
      007928 BC FF 01         [24]20488 	cjne	r4,#0xff,02748$
      00792B 1B               [12]20489 	dec	r3
      00792C                      20490 02748$:
      00792C 90r00rF4         [24]20491 	mov	dptr,#_sub_mode
      00792F E0               [24]20492 	movx	a,@dptr
      007930 FA               [12]20493 	mov	r2,a
      007931 7E 00            [12]20494 	mov	r6,#0x00
      007933 C3               [12]20495 	clr	c
      007934 EC               [12]20496 	mov	a,r4
      007935 9A               [12]20497 	subb	a,r2
      007936 EB               [12]20498 	mov	a,r3
      007937 64 80            [12]20499 	xrl	a,#0x80
      007939 8E F0            [24]20500 	mov	b,r6
      00793B 63 F0 80         [24]20501 	xrl	b,#0x80
      00793E 95 F0            [12]20502 	subb	a,b
      007940 D0 06            [24]20503 	pop	ar6
      007942 50 05            [24]20504 	jnc	00635$
      007944 90r00rF4         [24]20505 	mov	dptr,#_sub_mode
      007947 E4               [12]20506 	clr	a
      007948 F0               [24]20507 	movx	@dptr,a
      007949                      20508 00635$:
                                  20509 ;	src\main.c:957: LCD_guidulieu(sub_mode+'1');
      007949 90r00rF4         [24]20510 	mov	dptr,#_sub_mode
      00794C E0               [24]20511 	movx	a,@dptr
      00794D 24 31            [12]20512 	add	a,#0x31
      00794F F5 82            [12]20513 	mov	dpl,a
      007951 C0 07            [24]20514 	push	ar7
      007953 C0 06            [24]20515 	push	ar6
      007955 12r00r00         [24]20516 	lcall	_LCD_guidulieu
                                  20517 ;	src\main.c:958: LCD_guilenh(0xc4);
      007958 75 82 C4         [24]20518 	mov	dpl,#0xc4
      00795B 12r00r00         [24]20519 	lcall	_LCD_guilenh
      00795E D0 06            [24]20520 	pop	ar6
      007960 D0 07            [24]20521 	pop	ar7
                                  20522 ;	src\main.c:960: break;
                                  20523 ;	src\main.c:962: case DATE:
      007962 80 1B            [24]20524 	sjmp	00643$
      007964                      20525 00639$:
                                  20526 ;	src\main.c:964: if(phim_mode_nhan){
                                  20527 ;	src\main.c:965: phim_mode_nhan=0;
                                  20528 ;	assignBit
      007964 10*20 02         [24]20529 	jbc	_phim_mode_nhan,02750$
      007967 80 16            [24]20530 	sjmp	00643$
      007969                      20531 02750$:
                                  20532 ;	src\main.c:966: sub_mode = mode;
      007969 90r00rF4         [24]20533 	mov	dptr,#_sub_mode
      00796C ED               [12]20534 	mov	a,r5
      00796D F0               [24]20535 	movx	@dptr,a
                                  20536 ;	src\main.c:967: mode = SELECT;
      00796E 90r00rF3         [24]20537 	mov	dptr,#_mode
      007971 74 07            [12]20538 	mov	a,#0x07
      007973 F0               [24]20539 	movx	@dptr,a
                                  20540 ;	src\main.c:969: break;
                                  20541 ;	src\main.c:970: default: mode = sub_mode = 0;
      007974 80 09            [24]20542 	sjmp	00643$
      007976                      20543 00642$:
      007976 90r00rF4         [24]20544 	mov	dptr,#_sub_mode
      007979 E4               [12]20545 	clr	a
      00797A F0               [24]20546 	movx	@dptr,a
      00797B 90r00rF3         [24]20547 	mov	dptr,#_mode
      00797E F0               [24]20548 	movx	@dptr,a
                                  20549 ;	src\main.c:971: }
      00797F                      20550 00643$:
                                  20551 ;	src\main.c:973: WATCHDOG;
      00797F 43 C1 10         [24]20552 	orl	_WDT_CONTR,#0x10
                                  20553 ;	src\main.c:975: }
      007982 02r5Er42         [24]20554 	ljmp	00645$
                                  20555 ;------------------------------------------------------------
                                  20556 ;Allocation info for local variables in function 'mp3_serial_interupt'
                                  20557 ;------------------------------------------------------------
                                  20558 ;	src\main.c:977: void mp3_serial_interupt() __interrupt 8 __using 1 {
                                  20559 ;	-----------------------------------------
                                  20560 ;	 function mp3_serial_interupt
                                  20561 ;	-----------------------------------------
      007985                      20562 _mp3_serial_interupt:
                           00000F 20563 	ar7 = 0x0f
                           00000E 20564 	ar6 = 0x0e
                           00000D 20565 	ar5 = 0x0d
                           00000C 20566 	ar4 = 0x0c
                           00000B 20567 	ar3 = 0x0b
                           00000A 20568 	ar2 = 0x0a
                           000009 20569 	ar1 = 0x09
                           000008 20570 	ar0 = 0x08
      007985 C0 E0            [24]20571 	push	acc
                                  20572 ;	src\main.c:978: WATCHDOG;
      007987 43 C1 10         [24]20573 	orl	_WDT_CONTR,#0x10
                                  20574 ;	src\main.c:979: if(mp3_RI)
      00798A E5 9A            [12]20575 	mov	a,_S2CON
      00798C 30 E0 03         [24]20576 	jnb	acc.0,00103$
                                  20577 ;	src\main.c:980: S2CON &= 0xFE;
      00798F 53 9A FE         [24]20578 	anl	_S2CON,#0xfe
      007992                      20579 00103$:
                                  20580 ;	src\main.c:982: }
      007992 D0 E0            [24]20581 	pop	acc
      007994 32               [24]20582 	reti
                                  20583 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                  20584 ;	eliminated unneeded push/pop not_psw
                                  20585 ;	eliminated unneeded push/pop dpl
                                  20586 ;	eliminated unneeded push/pop dph
                                  20587 ;	eliminated unneeded push/pop b
                                  20588 ;------------------------------------------------------------
                                  20589 ;Allocation info for local variables in function 'adc_isr'
                                  20590 ;------------------------------------------------------------
                                  20591 ;	src\main.c:986: void adc_isr() __interrupt ADC_VECTOR __using 0
                                  20592 ;	-----------------------------------------
                                  20593 ;	 function adc_isr
                                  20594 ;	-----------------------------------------
      007995                      20595 _adc_isr:
                           000007 20596 	ar7 = 0x07
                           000006 20597 	ar6 = 0x06
                           000005 20598 	ar5 = 0x05
                           000004 20599 	ar4 = 0x04
                           000003 20600 	ar3 = 0x03
                           000002 20601 	ar2 = 0x02
                           000001 20602 	ar1 = 0x01
                           000000 20603 	ar0 = 0x00
      007995 C0 E0            [24]20604 	push	acc
      007997 C0 07            [24]20605 	push	ar7
      007999 C0 00            [24]20606 	push	ar0
      00799B C0 D0            [24]20607 	push	psw
      00799D 75 D0 00         [24]20608 	mov	psw,#0x00
                                  20609 ;	src\main.c:988: ADC_CONTR = 0x83; //Clear ADC interrupt flag
      0079A0 75 BC 83         [24]20610 	mov	_ADC_CONTR,#0x83
                                  20611 ;	src\main.c:991: dien_ap_nguon = ADC_RES;
      0079A3 AF BD            [24]20612 	mov	r7,_ADC_RES
      0079A5 78r00            [12]20613 	mov	r0,#_dien_ap_nguon
      0079A7 A6 07            [24]20614 	mov	@r0,ar7
                                  20615 ;	src\main.c:992: if(motor_index==5 && motor_index2==5){
      0079A9 74 05            [12]20616 	mov	a,#0x05
      0079AB B5*0D 2A         [24]20617 	cjne	a,_motor_index,00112$
      0079AE 74 05            [12]20618 	mov	a,#0x05
      0079B0 B5*0E 25         [24]20619 	cjne	a,_motor_index2,00112$
                                  20620 ;	src\main.c:993: if(dien_ap_thap){
      0079B3 30*00 12         [24]20621 	jnb	_dien_ap_thap,00109$
                                  20622 ;	src\main.c:994: if(dien_ap_nguon<82) ChargeRelay = 0;
      0079B6 BF 52 00         [24]20623 	cjne	r7,#0x52,00145$
      0079B9                      20624 00145$:
      0079B9 50 04            [24]20625 	jnc	00104$
                                  20626 ;	assignBit
      0079BB C2 A2            [12]20627 	clr	_P22
      0079BD 80 19            [24]20628 	sjmp	00112$
      0079BF                      20629 00104$:
                                  20630 ;	src\main.c:995: else if(dien_ap_nguon>110) {
      0079BF EF               [12]20631 	mov	a,r7
      0079C0 24 91            [12]20632 	add	a,#0xff - 0x6e
      0079C2 50 14            [24]20633 	jnc	00112$
                                  20634 ;	src\main.c:996: dien_ap_thap = 0;
                                  20635 ;	assignBit
      0079C4 C2*00            [12]20636 	clr	_dien_ap_thap
      0079C6 80 10            [24]20637 	sjmp	00112$
      0079C8                      20638 00109$:
                                  20639 ;	src\main.c:998: }else if(dien_ap_nguon<92){
      0079C8 BF 5C 00         [24]20640 	cjne	r7,#0x5c,00148$
      0079CB                      20641 00148$:
      0079CB 50 0B            [24]20642 	jnc	00112$
                                  20643 ;	src\main.c:999: dien_ap_thap = 1;
                                  20644 ;	assignBit
      0079CD D2*00            [12]20645 	setb	_dien_ap_thap
                                  20646 ;	src\main.c:1000: motor_index  = motor_index2 = 5;
      0079CF 75*0E 05         [24]20647 	mov	_motor_index2,#0x05
      0079D2 75*0D 05         [24]20648 	mov	_motor_index,#0x05
                                  20649 ;	src\main.c:1001: P2 &= 0x0F;
      0079D5 53 A0 0F         [24]20650 	anl	_P2,#0x0f
      0079D8                      20651 00112$:
                                  20652 ;	src\main.c:1006: ADC_CONTR = 0x8b;
      0079D8 75 BC 8B         [24]20653 	mov	_ADC_CONTR,#0x8b
                                  20654 ;	src\main.c:1007: }
      0079DB D0 D0            [24]20655 	pop	psw
      0079DD D0 00            [24]20656 	pop	ar0
      0079DF D0 07            [24]20657 	pop	ar7
      0079E1 D0 E0            [24]20658 	pop	acc
      0079E3 32               [24]20659 	reti
                                  20660 ;	eliminated unneeded push/pop ar1
                                  20661 ;	eliminated unneeded push/pop dpl
                                  20662 ;	eliminated unneeded push/pop dph
                                  20663 ;	eliminated unneeded push/pop b
                                  20664 	.area CSEG    (CODE)
                                  20665 	.area CONST   (CODE)
                           00F000 20666 _eep_motor	=	0xf000
                           00F001 20667 _eep_baocao	=	0xf001
                           00F002 20668 _eep_gpson	=	0xf002
                           00F003 20669 _eep_ngayreset	=	0xf003
                           00F004 20670 _eep_gioreset	=	0xf004
                           00F005 20671 _eep_norreset	=	0xf005
                           00F006 20672 _eep_giosacxa	=	0xf006
                           00F007 20673 _eep_tatmoden	=	0xf007
                           00F010 20674 _eep_mp3	=	0xf010
                           00F011 20675 _eep_phonephu	=	0xf011
                           00F01D 20676 _eep_loithesim	=	0xf01d
                           00F01E 20677 _eep_debug	=	0xf01e
                           00F01F 20678 _eep_cam	=	0xf01f
                           00F200 20679 _eep_phut1	=	0xf200
                           00F201 20680 _eep_gio1	=	0xf201
                           00F202 20681 _eep_phut2	=	0xf202
                           00F203 20682 _eep_gio2	=	0xf203
                           00F204 20683 _eep_phut3	=	0xf204
                           00F205 20684 _eep_gio3	=	0xf205
                           00F206 20685 _eep_phut4	=	0xf206
                           00F207 20686 _eep_gio4	=	0xf207
      000000                      20687 _phone1:
      000000 30 39 34 39 38 34 37 20688 	.ascii "0949847098"
             30 39 38
      00000A 00                   20689 	.db 0x00
      00000B                      20690 _phone2:
      00000B 30 39 38 38 38 38 38 20691 	.ascii "0988888901"
             39 30 31
      000015 00                   20692 	.db 0x00
      000016                      20693 _motor_step:
      000016 80                   20694 	.db #0x80	; 128
      000017 90                   20695 	.db #0x90	; 144
      000018 10                   20696 	.db #0x10	; 16
      000019 30                   20697 	.db #0x30	; 48	'0'
      00001A 20                   20698 	.db #0x20	; 32
      00001B 60                   20699 	.db #0x60	; 96
      00001C 40                   20700 	.db #0x40	; 64
      00001D C0                   20701 	.db #0xc0	; 192
      00001E                      20702 _mode_select:
      00001E 20 20 20 20 20 20 45 20703 	.ascii "      EXIT      "
             58 49 54 20 20 20 20
             20 20
      00002E 00                   20704 	.db 0x00
      00002F 20 20 43 48 49 4E 48 20705 	.ascii "  CHINH GIO KIM "
             20 47 49 4F 20 4B 49
             4D 20
      00003F 00                   20706 	.db 0x00
      000040 20 43 48 49 4E 48 20 20707 	.ascii " CHINH GIO THUC "
             47 49 4F 20 54 48 55
             43 20
      000050 00                   20708 	.db 0x00
      000051 20 20 20 20 43 41 4E 20709 	.ascii "    CANH KIM    "
             48 20 4B 49 4D 20 20
             20 20
      000061 00                   20710 	.db 0x00
      000062 20 20 20 20 54 45 53 20711 	.ascii "    TEST MP3    "
             54 20 4D 50 33 20 20
             20 20
      000072 00                   20712 	.db 0x00
      000073 20 20 20 44 49 45 4E 20713 	.ascii "   DIEN THOAI   "
             20 54 48 4F 41 49 20
             20 20
      000083 00                   20714 	.db 0x00
      000084 20 4E 47 41 59 20 54 20715 	.ascii " NGAY THANG NAM "
             48 41 4E 47 20 4E 41
             4D 20
      000094 00                   20716 	.db 0x00
      000095                      20717 _ver:
      000095 5F 41 53 49 41 5F 47 20718 	.ascii "_ASIA_GPS__4.7D_"
             50 53 5F 5F 34 2E 37
             44 5F
      0000A5 00                   20719 	.db 0x00
      0000A6                      20720 _huongdan:
      0000A6 44 48 2C 4F 4E 20 64 20721 	.ascii "DH,ON dong ho chay - DH,OFF dong ho dung"
             6F 6E 67 20 68 6F 20
             63 68 61 79 20 2D 20
             44 48 2C 4F 46 46 20
             64 6F 6E 67 20 68 6F
             20 64 75 6E 67
      0000CE 0A                   20722 	.db 0x0a
      0000CF 44 48 2C 2B 6D 6D 20 20723 	.ascii "DH,+mm kim phut lech duong mm phut - DH,-mm lech am mm phut"
             6B 69 6D 20 70 68 75
             74 20 6C 65 63 68 20
             64 75 6F 6E 67 20 6D
             6D 20 70 68 75 74 20
             2D 20 44 48 2C 2D 6D
             6D 20 6C 65 63 68 20
             61 6D 20 6D 6D 20 70
             68 75 74
      00010A 0A                   20724 	.db 0x0a
      00010B 44 48 2C 6B 6B 6B 6B 20725 	.ascii "DH,kkkk,kkkk,kkkk,kkkk,tttt chinh gio kim gio thuc gio tu do"
             2C 6B 6B 6B 6B 2C 6B
             6B 6B 6B 2C 6B 6B 6B
             6B 2C 74 74 74 74 20
             63 68 69 6E 68 20 67
             69 6F 20 6B 69 6D 20
             67 69 6F 20 74 68 75
             63 20 67 69 6F 20 74
             75 20 64 6F
      000147 6E 67 20 74 68 61 79 20726 	.ascii "ng thay tttt bang auto"
             20 74 74 74 74 20 62
             61 6E 67 20 61 75 74
             6F
      00015D 0A                   20727 	.db 0x0a
      00015E 44 48 2C 78 54 44 20 20728 	.ascii "DH,xTD x la so may, T: D cho DC, S cho ST; D: A cho Atmel dr"
             78 20 6C 61 20 73 6F
             20 6D 61 79 2C 20 54
             3A 20 44 20 63 68 6F
             20 44 43 2C 20 53 20
             63 68 6F 20 53 54 3B
             20 44 3A 20 41 20 63
             68 6F 20 41 74 6D 65
             6C 20 64 72
      00019A 69 76 65 72 2C 20 53 20729 	.ascii "iver, S cho STC15 truc tiep"
             20 63 68 6F 20 53 54
             43 31 35 20 74 72 75
             63 20 74 69 65 70
      0001B5 0A                   20730 	.db 0x0a
      0001B6 42 43 2C 4F 4E 20 62 20731 	.ascii "BC,ON bao cao dau gio - BC,OFF tat bao cao dau gio"
             61 6F 20 63 61 6F 20
             64 61 75 20 67 69 6F
             20 2D 20 42 43 2C 4F
             46 46 20 74 61 74 20
             62 61 6F 20 63 61 6F
             20 64 61 75 20 67 69
             6F
      0001E8 0A                   20732 	.db 0x0a
      0001E9 42 43 20 67 75 69 20 20733 	.ascii "BC gui bao cao - BC,DEN BC,MP3 bao cao den bao cao mp3"
             62 61 6F 20 63 61 6F
             20 2D 20 42 43 2C 44
             45 4E 20 42 43 2C 4D
             50 33 20 62 61 6F 20
             63 61 6F 20 64 65 6E
             20 62 61 6F 20 63 61
             6F 20 6D 70 33
      00021F 0A                   20734 	.db 0x0a
      000220 52 53 20 72 65 73 65 20735 	.ascii "RS reset:RS,sys reset he thong - RS,sim reset gps module"
             74 3A 52 53 2C 73 79
             73 20 72 65 73 65 74
             20 68 65 20 74 68 6F
             6E 67 20 2D 20 52 53
             2C 73 69 6D 20 72 65
             73 65 74 20 67 70 73
             20 6D 6F 64 75 6C 65
      000258 0A                   20736 	.db 0x0a
      000259 52 53 2C 4E 47 2C 6E 20737 	.ascii "RS,NG,nn,gg moi nn ngay vao gio gg:06 bo dieu khien reset"
             6E 2C 67 67 20 6D 6F
             69 20 6E 6E 20 6E 67
             61 79 20 76 61 6F 20
             67 69 6F 20 67 67 3A
             30 36 20 62 6F 20 64
             69 65 75 20 6B 68 69
             65 6E 20 72 65 73 65
             74
      000292 0A                   20738 	.db 0x0a
      000293 44 45 4E 2C 58 4F 41 20739 	.ascii "DEN,XOA xoa toan bo thong so den tat den"
             20 78 6F 61 20 74 6F
             61 6E 20 62 6F 20 74
             68 6F 6E 67 20 73 6F
             20 64 65 6E 20 74 61
             74 20 64 65 6E
      0002BB 0A                   20740 	.db 0x0a
      0002BC 44 45 4E 2C 74 74 74 20741 	.ascii "DEN,tttt,mmmm,tttt,mmmm,tttt,mmmm tttt,mmmm gio tat/mo den"
             74 2C 6D 6D 6D 6D 2C
             74 74 74 74 2C 6D 6D
             6D 6D 2C 74 74 74 74
             2C 6D 6D 6D 6D 20 74
             74 74 74 2C 6D 6D 6D
             6D 20 67 69 6F 20 74
             61 74 2F 6D 6F 20 64
             65 6E
      0002F6 0A                   20742 	.db 0x0a
      0002F7 4D 50 33 2C 68 68 6D 20743 	.ascii "MP3,hhmm test bai hat luc hh gio mm phut"
             6D 20 74 65 73 74 20
             62 61 69 20 68 61 74
             20 6C 75 63 20 68 68
             20 67 69 6F 20 6D 6D
             20 70 68 75 74
      00031F 0A                   20744 	.db 0x0a
      000320 44 54 2C 30 78 78 78 20745 	.ascii "DT,0xxxxxxxxx DT,+84xxxxxxxxx thay doi so dien thoai phu"
             78 78 78 78 78 78 20
             44 54 2C 2B 38 34 78
             78 78 78 78 78 78 78
             78 20 74 68 61 79 20
             64 6F 69 20 73 6F 20
             64 69 65 6E 20 74 68
             6F 61 69 20 70 68 75
      000358 0A                   20746 	.db 0x0a
      000359 44 54 2C 58 4F 41 20 20747 	.ascii "DT,XOA xoa so dien thoai phu"
             78 6F 61 20 73 6F 20
             64 69 65 6E 20 74 68
             6F 61 69 20 70 68 75
      000375 0A                   20748 	.db 0x0a
      000376 44 54 2C 4F 4E 20 44 20749 	.ascii "DT,ON DT,OFF - bat tat dien thoai phu"
             54 2C 4F 46 46 20 2D
             20 62 61 74 20 74 61
             74 20 64 69 65 6E 20
             74 68 6F 61 69 20 70
             68 75
      00039B 0A                   20750 	.db 0x0a
      00039C 44 54 2C 47 4F 49 20 20751 	.ascii "DT,GOI goi lai cho so dt chinh"
             67 6F 69 20 6C 61 69
             20 63 68 6F 20 73 6F
             20 64 74 20 63 68 69
             6E 68
      0003BA 0A                   20752 	.db 0x0a
      0003BB 00                   20753 	.db 0x00
                                  20754 	.area CONST   (CODE)
      0003BC                      20755 ___str_0:
      0003BC 20 20 47 50 53 20 20 20756 	.ascii "  GPS  "
      0003C3 00                   20757 	.db 0x00
                                  20758 	.area CSEG    (CODE)
                                  20759 	.area CONST   (CODE)
      0003C4                      20760 ___str_1:
      0003C4 20 41 53 49 41 20 20 20761 	.ascii " ASIA  "
      0003CB 00                   20762 	.db 0x00
                                  20763 	.area CSEG    (CODE)
                                  20764 	.area CONST   (CODE)
      0003CC                      20765 ___str_2:
      0003CC 20 20 20 44 53 20 20 20766 	.ascii "   DS  "
      0003D3 00                   20767 	.db 0x00
                                  20768 	.area CSEG    (CODE)
                                  20769 	.area CONST   (CODE)
      0003D4                      20770 ___str_3:
      0003D4 41 2F                20771 	.ascii "A/"
      0003D6 0D                   20772 	.db 0x0d
      0003D7 00                   20773 	.db 0x00
                                  20774 	.area CSEG    (CODE)
                                  20775 	.area CONST   (CODE)
      0003D8                      20776 ___str_4:
      0003D8 41 54 44             20777 	.ascii "ATD"
      0003DB 00                   20778 	.db 0x00
                                  20779 	.area CSEG    (CODE)
                                  20780 	.area CONST   (CODE)
      0003DC                      20781 ___str_5:
      0003DC 3B                   20782 	.ascii ";"
      0003DD 0D                   20783 	.db 0x0d
      0003DE 00                   20784 	.db 0x00
                                  20785 	.area CSEG    (CODE)
                                  20786 	.area CONST   (CODE)
      0003DF                      20787 ___str_6:
      0003DF 20 20 20 20 43 41 4C 20788 	.ascii "    CALLING     "
             4C 49 4E 47 20 20 20
             20 20
      0003EF 00                   20789 	.db 0x00
                                  20790 	.area CSEG    (CODE)
                                  20791 	.area CONST   (CODE)
      0003F0                      20792 ___str_7:
      0003F0 1A                   20793 	.db 0x1a
      0003F1 00                   20794 	.db 0x00
                                  20795 	.area CSEG    (CODE)
                                  20796 	.area CONST   (CODE)
      0003F2                      20797 ___str_8:
      0003F2 54 4B 3C 31 30 30 30 20798 	.ascii "TK<1000 K BAOCAO"
             20 4B 20 42 41 4F 43
             41 4F
      000402 00                   20799 	.db 0x00
                                  20800 	.area CSEG    (CODE)
                                  20801 	.area CONST   (CODE)
      000403                      20802 ___str_9:
      000403 41 54 2B 43 4D 47 53 20803 	.ascii "AT+CMGS="
             3D
      00040B 22                   20804 	.db 0x22
      00040C 00                   20805 	.db 0x00
                                  20806 	.area CSEG    (CODE)
                                  20807 	.area CONST   (CODE)
      00040D                      20808 ___str_10:
      00040D 22                   20809 	.db 0x22
      00040E 0D                   20810 	.db 0x0d
      00040F 00                   20811 	.db 0x00
                                  20812 	.area CSEG    (CODE)
                                  20813 	.area CONST   (CODE)
      000410                      20814 ___str_11:
      000410 20 20 20 53 45 4E 44 20815 	.ascii "   SENDING   "
             49 4E 47 20 20 20
      00041D 00                   20816 	.db 0x00
                                  20817 	.area CSEG    (CODE)
                                  20818 	.area CONST   (CODE)
      00041E                      20819 ___str_12:
      00041E 41 54 2B 43 55 53 44 20820 	.ascii "AT+CUSD=1,"
             3D 31 2C
      000428 22                   20821 	.db 0x22
      000429 2A 31 30 31 23       20822 	.ascii "*101#"
      00042E 22                   20823 	.db 0x22
      00042F 2C                   20824 	.ascii ","
      000430 0D                   20825 	.db 0x0d
      000431 00                   20826 	.db 0x00
                                  20827 	.area CSEG    (CODE)
                                  20828 	.area CONST   (CODE)
      000432                      20829 ___str_13:
      000432 20 20 4B 49 45 4D 20 20830 	.ascii "  KIEM TRA TK   "
             54 52 41 20 54 4B 20
             20 20
      000442 00                   20831 	.db 0x00
                                  20832 	.area CSEG    (CODE)
                                  20833 	.area CONST   (CODE)
      000443                      20834 ___str_14:
      000443 20 20 4B 49 45 4D 20 20835 	.ascii "  KIEM TRA SDT   "
             54 52 41 20 53 44 54
             20 20 20
      000454 00                   20836 	.db 0x00
                                  20837 	.area CSEG    (CODE)
                                  20838 	.area CONST   (CODE)
      000455                      20839 ___str_15:
      000455 41 54 2B 43 55 53 44 20840 	.ascii "AT+CUSD=1,"
             3D 31 2C
      00045F 22                   20841 	.db 0x22
      000460 2A 31 31 30 23       20842 	.ascii "*110#"
      000465 22                   20843 	.db 0x22
      000466 2C                   20844 	.ascii ","
      000467 0D                   20845 	.db 0x0d
      000468 00                   20846 	.db 0x00
                                  20847 	.area CSEG    (CODE)
                                  20848 	.area CONST   (CODE)
      000469                      20849 ___str_16:
      000469 41 54 2B 43 55 53 44 20850 	.ascii "AT+CUSD=1,"
             3D 31 2C
      000473 22                   20851 	.db 0x22
      000474 2A 30 23             20852 	.ascii "*0#"
      000477 22                   20853 	.db 0x22
      000478 2C                   20854 	.ascii ","
      000479 0D                   20855 	.db 0x0d
      00047A 00                   20856 	.db 0x00
                                  20857 	.area CSEG    (CODE)
                                  20858 	.area CONST   (CODE)
      00047B                      20859 ___str_17:
      00047B 41 54 2B 43 53 51    20860 	.ascii "AT+CSQ"
      000481 0D                   20861 	.db 0x0d
      000482 00                   20862 	.db 0x00
                                  20863 	.area CSEG    (CODE)
                                  20864 	.area CONST   (CODE)
      000483                      20865 ___str_18:
      000483 20 53 4F 4E 47 20    20866 	.ascii " SONG "
      000489 00                   20867 	.db 0x00
                                  20868 	.area CSEG    (CODE)
                                  20869 	.area CONST   (CODE)
      00048A                      20870 ___str_19:
      00048A 0D                   20871 	.db 0x0d
      00048B 38 39 43 35 35       20872 	.ascii "89C55"
      000490 00                   20873 	.db 0x00
                                  20874 	.area CSEG    (CODE)
                                  20875 	.area CONST   (CODE)
      000491                      20876 ___str_20:
      000491 0D                   20877 	.db 0x0d
      000492 53 54 43 31 35       20878 	.ascii "STC15"
      000497 00                   20879 	.db 0x00
                                  20880 	.area CSEG    (CODE)
                                  20881 	.area CONST   (CODE)
      000498                      20882 ___str_21:
      000498 20 44 43             20883 	.ascii " DC"
      00049B 00                   20884 	.db 0x00
                                  20885 	.area CSEG    (CODE)
                                  20886 	.area CONST   (CODE)
      00049C                      20887 ___str_22:
      00049C 20 53 54             20888 	.ascii " ST"
      00049F 00                   20889 	.db 0x00
                                  20890 	.area CSEG    (CODE)
                                  20891 	.area CONST   (CODE)
      0004A0                      20892 ___str_23:
      0004A0 20 54 3D             20893 	.ascii " T="
      0004A3 00                   20894 	.db 0x00
                                  20895 	.area CSEG    (CODE)
                                  20896 	.area CONST   (CODE)
      0004A4                      20897 ___str_24:
      0004A4 20 43 4E 2C          20898 	.ascii " CN,"
      0004A8 00                   20899 	.db 0x00
                                  20900 	.area CSEG    (CODE)
                                  20901 	.area CONST   (CODE)
      0004A9                      20902 ___str_25:
      0004A9 20 54                20903 	.ascii " T"
      0004AB 00                   20904 	.db 0x00
                                  20905 	.area CSEG    (CODE)
                                  20906 	.area CONST   (CODE)
      0004AC                      20907 ___str_26:
      0004AC 20 47 50 53 3D       20908 	.ascii " GPS="
      0004B1 00                   20909 	.db 0x00
                                  20910 	.area CSEG    (CODE)
                                  20911 	.area CONST   (CODE)
      0004B2                      20912 ___str_27:
      0004B2 20 44 48 3D          20913 	.ascii " DH="
      0004B6 00                   20914 	.db 0x00
                                  20915 	.area CSEG    (CODE)
                                  20916 	.area CONST   (CODE)
      0004B7                      20917 ___str_28:
      0004B7 20 42 43 3D          20918 	.ascii " BC="
      0004BB 00                   20919 	.db 0x00
                                  20920 	.area CSEG    (CODE)
                                  20921 	.area CONST   (CODE)
      0004BC                      20922 ___str_29:
      0004BC 20 58 47 3D          20923 	.ascii " XG="
      0004C0 00                   20924 	.db 0x00
                                  20925 	.area CSEG    (CODE)
                                  20926 	.area CONST   (CODE)
      0004C1                      20927 ___str_30:
      0004C1 20 52 53 3D          20928 	.ascii " RS="
      0004C5 00                   20929 	.db 0x00
                                  20930 	.area CSEG    (CODE)
                                  20931 	.area CONST   (CODE)
      0004C6                      20932 ___str_31:
      0004C6 20 54 52 3D          20933 	.ascii " TR="
      0004CA 00                   20934 	.db 0x00
                                  20935 	.area CSEG    (CODE)
                                  20936 	.area CONST   (CODE)
      0004CB                      20937 ___str_32:
      0004CB 3A 30 36             20938 	.ascii ":06"
      0004CE 00                   20939 	.db 0x00
                                  20940 	.area CSEG    (CODE)
                                  20941 	.area CONST   (CODE)
      0004CF                      20942 ___str_33:
      0004CF 20 44 45 4E 3D       20943 	.ascii " DEN="
      0004D4 00                   20944 	.db 0x00
                                  20945 	.area CSEG    (CODE)
                                  20946 	.area CONST   (CODE)
      0004D5                      20947 ___str_34:
      0004D5 20 56 4F 4C 3D       20948 	.ascii " VOL="
      0004DA 00                   20949 	.db 0x00
                                  20950 	.area CSEG    (CODE)
                                  20951 	.area CONST   (CODE)
      0004DB                      20952 ___str_35:
      0004DB 20 4D 50 33 3D       20953 	.ascii " MP3="
      0004E0 00                   20954 	.db 0x00
                                  20955 	.area CSEG    (CODE)
                                  20956 	.area CONST   (CODE)
      0004E1                      20957 ___str_36:
      0004E1 20 53 49 47 3D       20958 	.ascii " SIG="
      0004E6 00                   20959 	.db 0x00
                                  20960 	.area CSEG    (CODE)
                                  20961 	.area CONST   (CODE)
      0004E7                      20962 ___str_37:
      0004E7 20 44 54 3D          20963 	.ascii " DT="
      0004EB 00                   20964 	.db 0x00
                                  20965 	.area CSEG    (CODE)
                                  20966 	.area CONST   (CODE)
      0004EC                      20967 ___str_38:
      0004EC 41 54                20968 	.ascii "AT"
      0004EE 0D                   20969 	.db 0x0d
      0004EF 00                   20970 	.db 0x00
                                  20971 	.area CSEG    (CODE)
                                  20972 	.area CONST   (CODE)
      0004F0                      20973 ___str_39:
      0004F0 42 41 54 20 44 41 55 20974 	.ascii "BAT DAU BAO CAO "
             20 42 41 4F 20 43 41
             4F 20
      000500 00                   20975 	.db 0x00
                                  20976 	.area CSEG    (CODE)
                                  20977 	.area CONST   (CODE)
      000501                      20978 ___str_40:
      000501 0D                   20979 	.db 0x0d
      000502 54 4B 20 43 68 69 6E 20980 	.ascii "TK Chinh="
             68 3D
      00050B 00                   20981 	.db 0x00
                                  20982 	.area CSEG    (CODE)
                                  20983 	.area CONST   (CODE)
      00050C                      20984 ___str_41:
      00050C 0D                   20985 	.db 0x0d
      00050D 54 61 69 20 6B 68 6F 20986 	.ascii "Tai khoan con duoi 10000"
             61 6E 20 63 6F 6E 20
             64 75 6F 69 20 31 30
             30 30 30
      000525 00                   20987 	.db 0x00
                                  20988 	.area CSEG    (CODE)
                                  20989 	.area CONST   (CODE)
      000526                      20990 ___str_42:
      000526 44 41 4E 47 20 47 55 20991 	.ascii "DANG GUI BAO CAO"
             49 20 42 41 4F 20 43
             41 4F
      000536 00                   20992 	.db 0x00
                                  20993 	.area CSEG    (CODE)
                                  20994 	.area CONST   (CODE)
      000537                      20995 ___str_43:
      000537 0D                   20996 	.db 0x0d
      000538 4D 4F 44 45 4E 3D    20997 	.ascii "MODEN="
      00053E 00                   20998 	.db 0x00
                                  20999 	.area CSEG    (CODE)
                                  21000 	.area CONST   (CODE)
      00053F                      21001 ___str_44:
      00053F 0D                   21002 	.db 0x0d
      000540 4B 68 6F 6E 67 20 63 21003 	.ascii "Khong co gio mo den"
             6F 20 67 69 6F 20 6D
             6F 20 64 65 6E
      000553 00                   21004 	.db 0x00
                                  21005 	.area CSEG    (CODE)
                                  21006 	.area CONST   (CODE)
      000554                      21007 ___str_45:
      000554 0D                   21008 	.db 0x0d
      000555 47 69 6F 20 4D 6F 20 21009 	.ascii "Gio Mo Den:"
             44 65 6E 3A
      000560 00                   21010 	.db 0x00
                                  21011 	.area CSEG    (CODE)
                                  21012 	.area CONST   (CODE)
      000561                      21013 ___str_46:
      000561 30 20 2D 20          21014 	.ascii "0 - "
      000565 00                   21015 	.db 0x00
                                  21016 	.area CSEG    (CODE)
                                  21017 	.area CONST   (CODE)
      000566                      21018 ___str_47:
      000566 47 55 49 20 42 41 4F 21019 	.ascii "GUI BAO CAO DEN "
             20 43 41 4F 20 44 45
             4E 20
      000576 00                   21020 	.db 0x00
                                  21021 	.area CSEG    (CODE)
                                  21022 	.area CONST   (CODE)
      000577                      21023 ___str_48:
      000577 20 47 55 49 20 48 55 21024 	.ascii " GUI HUONG DAN  "
             4F 4E 47 20 44 41 4E
             20 20
      000587 00                   21025 	.db 0x00
                                  21026 	.area CSEG    (CODE)
                                  21027 	.area CONST   (CODE)
      000588                      21028 ___str_49:
      000588 54 48 49 45 54 20 4C 21029 	.ascii "THIET LAP SIM800"
             41 50 20 53 49 4D 38
             30 30
      000598 00                   21030 	.db 0x00
                                  21031 	.area CSEG    (CODE)
                                  21032 	.area CONST   (CODE)
      000599                      21033 ___str_50:
      000599 41 54 2B 43 53 50 4E 21034 	.ascii "AT+CSPN?"
             3F
      0005A1 0D                   21035 	.db 0x0d
      0005A2 00                   21036 	.db 0x00
                                  21037 	.area CSEG    (CODE)
                                  21038 	.area CONST   (CODE)
      0005A3                      21039 ___str_51:
      0005A3 20 54 45 4E 20 54 4F 21040 	.ascii " TEN TONG DAI  "
             4E 47 20 44 41 49 20
             20
      0005B2 00                   21041 	.db 0x00
                                  21042 	.area CSEG    (CODE)
                                  21043 	.area CONST   (CODE)
      0005B3                      21044 ___str_52:
      0005B3 41 54 2B 43 4C 54 53 21045 	.ascii "AT+CLTS=1"
             3D 31
      0005BC 0D                   21046 	.db 0x0d
      0005BD 00                   21047 	.db 0x00
                                  21048 	.area CSEG    (CODE)
                                  21049 	.area CONST   (CODE)
      0005BE                      21050 ___str_53:
      0005BE 42 41 54 20 43 48 45 21051 	.ascii "BAT CHE DO GPS "
             20 44 4F 20 47 50 53
             20
      0005CD 00                   21052 	.db 0x00
                                  21053 	.area CSEG    (CODE)
                                  21054 	.area CONST   (CODE)
      0005CE                      21055 ___str_54:
      0005CE 41 54 2B 43 4F 50 53 21056 	.ascii "AT+COPS=2"
             3D 32
      0005D7 0D                   21057 	.db 0x0d
      0005D8 00                   21058 	.db 0x00
                                  21059 	.area CSEG    (CODE)
                                  21060 	.area CONST   (CODE)
      0005D9                      21061 ___str_55:
      0005D9 20 4B 48 4F 49 20 44 21062 	.ascii " KHOI DONG GPS "
             4F 4E 47 20 47 50 53
             20
      0005E8 00                   21063 	.db 0x00
                                  21064 	.area CSEG    (CODE)
                                  21065 	.area CONST   (CODE)
      0005E9                      21066 ___str_56:
      0005E9 41 54 2B 43 4F 50 53 21067 	.ascii "AT+COPS=0"
             3D 30
      0005F2 0D                   21068 	.db 0x0d
      0005F3 00                   21069 	.db 0x00
                                  21070 	.area CSEG    (CODE)
                                  21071 	.area CONST   (CODE)
      0005F4                      21072 ___str_57:
      0005F4 20 20 4B 45 54 20 4E 21073 	.ascii "  KET NOI GPS  "
             4F 49 20 47 50 53 20
             20
      000603 00                   21074 	.db 0x00
                                  21075 	.area CSEG    (CODE)
                                  21076 	.area CONST   (CODE)
      000604                      21077 ___str_58:
      000604 41 54 2B 43 43 4C 4B 21078 	.ascii "AT+CCLK?"
             3F
      00060C 0D                   21079 	.db 0x0d
      00060D 00                   21080 	.db 0x00
                                  21081 	.area CSEG    (CODE)
                                  21082 	.area CONST   (CODE)
      00060E                      21083 ___str_59:
      00060E 20 4C 41 59 20 54 49 21084 	.ascii " LAY TIME GPS  "
             4D 45 20 47 50 53 20
             20
      00061D 00                   21085 	.db 0x00
                                  21086 	.area CSEG    (CODE)
                                  21087 	.area CONST   (CODE)
      00061E                      21088 ___str_60:
      00061E 41 54 2B 43 4C 49 50 21089 	.ascii "AT+CLIP=1"
             3D 31
      000627 0D                   21090 	.db 0x0d
      000628 00                   21091 	.db 0x00
                                  21092 	.area CSEG    (CODE)
                                  21093 	.area CONST   (CODE)
      000629                      21094 ___str_61:
      000629 20 20 53 45 4E 44 49 21095 	.ascii "  SENDING CLIP  "
             4E 47 20 43 4C 49 50
             20 20
      000639 00                   21096 	.db 0x00
                                  21097 	.area CSEG    (CODE)
                                  21098 	.area CONST   (CODE)
      00063A                      21099 ___str_62:
      00063A 41 54 2B 43 43 41 4C 21100 	.ascii "AT+CCALR?"
             52 3F
      000643 0D                   21101 	.db 0x0d
      000644 00                   21102 	.db 0x00
                                  21103 	.area CSEG    (CODE)
                                  21104 	.area CONST   (CODE)
      000645                      21105 ___str_63:
      000645 20 54 48 49 45 54 20 21106 	.ascii " THIET LAP GOI "
             4C 41 50 20 47 4F 49
             20
      000654 00                   21107 	.db 0x00
                                  21108 	.area CSEG    (CODE)
                                  21109 	.area CONST   (CODE)
      000655                      21110 ___str_64:
      000655 41 54 2B 43 4D 47 46 21111 	.ascii "AT+CMGF=1"
             3D 31
      00065E 0D                   21112 	.db 0x0d
      00065F 00                   21113 	.db 0x00
                                  21114 	.area CSEG    (CODE)
                                  21115 	.area CONST   (CODE)
      000660                      21116 ___str_65:
      000660 20 20 53 45 4E 44 49 21117 	.ascii "  SENDING CMGF  "
             4E 47 20 43 4D 47 46
             20 20
      000670 00                   21118 	.db 0x00
                                  21119 	.area CSEG    (CODE)
                                  21120 	.area CONST   (CODE)
      000671                      21121 ___str_66:
      000671 41 54 2B 43 4E 4D 49 21122 	.ascii "AT+CNMI=1,1,0,0,1"
             3D 31 2C 31 2C 30 2C
             30 2C 31
      000682 0D                   21123 	.db 0x0d
      000683 00                   21124 	.db 0x00
                                  21125 	.area CSEG    (CODE)
                                  21126 	.area CONST   (CODE)
      000684                      21127 ___str_67:
      000684 20 20 53 45 4E 44 49 21128 	.ascii "  SENDING CNMI  "
             4E 47 20 43 4E 4D 49
             20 20
      000694 00                   21129 	.db 0x00
                                  21130 	.area CSEG    (CODE)
                                  21131 	.area CONST   (CODE)
      000695                      21132 ___str_68:
      000695 41 54 2B 43 4D 47 44 21133 	.ascii "AT+CMGDA="
             41 3D
      00069E 22                   21134 	.db 0x22
      00069F 44 45 4C 20 41 4C 4C 21135 	.ascii "DEL ALL"
      0006A6 22                   21136 	.db 0x22
      0006A7 0D                   21137 	.db 0x0d
      0006A8 00                   21138 	.db 0x00
                                  21139 	.area CSEG    (CODE)
                                  21140 	.area CONST   (CODE)
      0006A9                      21141 ___str_69:
      0006A9 20 20 54 48 49 45 54 21142 	.ascii "  THIET LAP TN  "
             20 4C 41 50 20 54 4E
             20 20
      0006B9 00                   21143 	.db 0x00
                                  21144 	.area CSEG    (CODE)
                                  21145 	.area CONST   (CODE)
      0006BA                      21146 ___str_70:
      0006BA 54 48 49 45 54 20 4C 21147 	.ascii "THIET LAP TNHAN "
             41 50 20 54 4E 48 41
             4E 20
      0006CA 00                   21148 	.db 0x00
                                  21149 	.area CSEG    (CODE)
                                  21150 	.area CONST   (CODE)
      0006CB                      21151 ___str_71:
      0006CB 20 20 53 45 4E 44 49 21152 	.ascii "  SENDING CMGDA  "
             4E 47 20 43 4D 47 44
             41 20 20
      0006DC 00                   21153 	.db 0x00
                                  21154 	.area CSEG    (CODE)
                                  21155 	.area CONST   (CODE)
      0006DD                      21156 ___str_72:
      0006DD 4C 41 59 20 47 49 4F 21157 	.ascii "LAY GIO VE TINH "
             20 56 45 20 54 49 4E
             48 20
      0006ED 00                   21158 	.db 0x00
                                  21159 	.area CSEG    (CODE)
                                  21160 	.area CONST   (CODE)
      0006EE                      21161 ___str_73:
      0006EE 41 54 2B 49 50 52 3D 21162 	.ascii "AT+IPR=0"
             30
      0006F6 0D                   21163 	.db 0x0d
      0006F7 00                   21164 	.db 0x00
                                  21165 	.area CSEG    (CODE)
                                  21166 	.area CONST   (CODE)
      0006F8                      21167 ___str_74:
      0006F8 20 20 53 45 4E 44 49 21168 	.ascii "  SENDING IPR   "
             4E 47 20 49 50 52 20
             20 20
      000708 00                   21169 	.db 0x00
                                  21170 	.area CSEG    (CODE)
                                  21171 	.area CONST   (CODE)
      000709                      21172 ___str_75:
      000709 20 20 53 45 4E 44 49 21173 	.ascii "  SENDING CLTS  "
             4E 47 20 43 4C 54 53
             20 20
      000719 00                   21174 	.db 0x00
                                  21175 	.area CSEG    (CODE)
                                  21176 	.area CONST   (CODE)
      00071A                      21177 ___str_76:
      00071A 41 54 2B 43 46 55 4E 21178 	.ascii "AT+CFUN=0"
             3D 30
      000723 0D                   21179 	.db 0x0d
      000724 00                   21180 	.db 0x00
                                  21181 	.area CSEG    (CODE)
                                  21182 	.area CONST   (CODE)
      000725                      21183 ___str_77:
      000725 20 20 53 45 4E 44 49 21184 	.ascii "  SENDING CFUN0  "
             4E 47 20 43 46 55 4E
             30 20 20
      000736 00                   21185 	.db 0x00
                                  21186 	.area CSEG    (CODE)
                                  21187 	.area CONST   (CODE)
      000737                      21188 ___str_78:
      000737 41 54 2B 43 46 55 4E 21189 	.ascii "AT+CFUN=1"
             3D 31
      000740 0D                   21190 	.db 0x0d
      000741 00                   21191 	.db 0x00
                                  21192 	.area CSEG    (CODE)
                                  21193 	.area CONST   (CODE)
      000742                      21194 ___str_79:
      000742 20 20 53 45 4E 44 49 21195 	.ascii "  SENDING CFUN1  "
             4E 47 20 43 46 55 4E
             31 20 20
      000753 00                   21196 	.db 0x00
                                  21197 	.area CSEG    (CODE)
                                  21198 	.area CONST   (CODE)
      000754                      21199 ___str_80:
      000754 41 54 48             21200 	.ascii "ATH"
      000757 0D                   21201 	.db 0x0d
      000758 00                   21202 	.db 0x00
                                  21203 	.area CSEG    (CODE)
                                  21204 	.area CONST   (CODE)
      000759                      21205 ___str_81:
      000759 0D                   21206 	.db 0x0d
      00075A 74 68 61 79 20 64 6F 21207 	.ascii "thay doi may va reset bo dieu khien"
             69 20 6D 61 79 20 76
             61 20 72 65 73 65 74
             20 62 6F 20 64 69 65
             75 20 6B 68 69 65 6E
      00077D 00                   21208 	.db 0x00
                                  21209 	.area CSEG    (CODE)
                                  21210 	.area CONST   (CODE)
      00077E                      21211 ___str_82:
      00077E 0D                   21212 	.db 0x0d
      00077F 6C 65 6E 68 20 6B 68 21213 	.ascii "lenh khong hop le"
             6F 6E 67 20 68 6F 70
             20 6C 65
      000790 00                   21214 	.db 0x00
                                  21215 	.area CSEG    (CODE)
                                  21216 	.area CONST   (CODE)
      000791                      21217 ___str_83:
      000791 0D                   21218 	.db 0x0d
      000792 6C 65 6E 68 20 64 6F 21219 	.ascii "lenh dong ho khong hop le"
             6E 67 20 68 6F 20 6B
             68 6F 6E 67 20 68 6F
             70 20 6C 65
      0007AB 0D                   21220 	.db 0x0d
      0007AC 50 68 6F 6E 65 20 70 21221 	.ascii "Phone phu gui lenh"
             68 75 20 67 75 69 20
             6C 65 6E 68
      0007BE 00                   21222 	.db 0x00
                                  21223 	.area CSEG    (CODE)
                                  21224 	.area CONST   (CODE)
      0007BF                      21225 ___str_84:
      0007BF 0D                   21226 	.db 0x0d
      0007C0 63 68 69 6E 68 20 64 21227 	.ascii "chinh dong ho thanh cong"
             6F 6E 67 20 68 6F 20
             74 68 61 6E 68 20 63
             6F 6E 67
      0007D8 00                   21228 	.db 0x00
                                  21229 	.area CSEG    (CODE)
                                  21230 	.area CONST   (CODE)
      0007D9                      21231 ___str_85:
      0007D9 0D                   21232 	.db 0x0d
      0007DA 63 68 69 6E 68 20 64 21233 	.ascii "chinh dong ho thanh cong"
             6F 6E 67 20 68 6F 20
             74 68 61 6E 68 20 63
             6F 6E 67
      0007F2 0D                   21234 	.db 0x0d
      0007F3 50 68 6F 6E 65 20 70 21235 	.ascii "Phone phu gui lenh"
             68 75 20 67 75 69 20
             6C 65 6E 68
      000805 00                   21236 	.db 0x00
                                  21237 	.area CSEG    (CODE)
                                  21238 	.area CONST   (CODE)
      000806                      21239 ___str_86:
      000806 0D                   21240 	.db 0x0d
      000807 62 61 6F 20 63 61 6F 21241 	.ascii "bao cao den thanh cong"
             20 64 65 6E 20 74 68
             61 6E 68 20 63 6F 6E
             67
      00081D 00                   21242 	.db 0x00
                                  21243 	.area CSEG    (CODE)
                                  21244 	.area CONST   (CODE)
      00081E                      21245 ___str_87:
      00081E 0D                   21246 	.db 0x0d
      00081F 6C 65 6E 68 20 6B 68 21247 	.ascii "lenh khong hop le"
             6F 6E 67 20 68 6F 70
             20 6C 65
      000830 0D                   21248 	.db 0x0d
      000831 50 68 6F 6E 65 20 70 21249 	.ascii "Phone phu gui lenh den"
             68 75 20 67 75 69 20
             6C 65 6E 68 20 64 65
             6E
      000847 00                   21250 	.db 0x00
                                  21251 	.area CSEG    (CODE)
                                  21252 	.area CONST   (CODE)
      000848                      21253 ___str_88:
      000848 0D                   21254 	.db 0x0d
      000849 62 61 6F 20 63 61 6F 21255 	.ascii "bao cao thanh cong"
             20 74 68 61 6E 68 20
             63 6F 6E 67
      00085B 00                   21256 	.db 0x00
                                  21257 	.area CSEG    (CODE)
                                  21258 	.area CONST   (CODE)
      00085C                      21259 ___str_89:
      00085C 0D                   21260 	.db 0x0d
      00085D 62 61 6F 20 63 61 6F 21261 	.ascii "bao cao thanh cong"
             20 74 68 61 6E 68 20
             63 6F 6E 67
      00086F 0D                   21262 	.db 0x0d
      000870 50 68 6F 6E 65 20 70 21263 	.ascii "Phone phu gui lenh"
             68 75 20 67 75 69 20
             6C 65 6E 68
      000882 00                   21264 	.db 0x00
                                  21265 	.area CSEG    (CODE)
                                  21266 	.area CONST   (CODE)
      000883                      21267 ___str_90:
      000883 0D                   21268 	.db 0x0d
      000884 72 65 73 65 74 20 62 21269 	.ascii "reset bo dieu khien"
             6F 20 64 69 65 75 20
             6B 68 69 65 6E
      000897 00                   21270 	.db 0x00
                                  21271 	.area CSEG    (CODE)
                                  21272 	.area CONST   (CODE)
      000898                      21273 ___str_91:
      000898 0D                   21274 	.db 0x0d
      000899 64 61 74 20 72 65 73 21275 	.ascii "dat reset thanh cong"
             65 74 20 74 68 61 6E
             68 20 63 6F 6E 67
      0008AD 00                   21276 	.db 0x00
                                  21277 	.area CSEG    (CODE)
                                  21278 	.area CONST   (CODE)
      0008AE                      21279 ___str_92:
      0008AE 0D                   21280 	.db 0x0d
      0008AF 64 61 74 20 72 65 73 21281 	.ascii "dat reset khong hop le"
             65 74 20 6B 68 6F 6E
             67 20 68 6F 70 20 6C
             65
      0008C5 00                   21282 	.db 0x00
                                  21283 	.area CSEG    (CODE)
                                  21284 	.area CONST   (CODE)
      0008C6                      21285 ___str_93:
      0008C6 0D                   21286 	.db 0x0d
      0008C7 72 65 73 65 74 20 67 21287 	.ascii "reset gsm sau10s"
             73 6D 20 73 61 75 31
             30 73
      0008D7 00                   21288 	.db 0x00
                                  21289 	.area CSEG    (CODE)
                                  21290 	.area CONST   (CODE)
      0008D8                      21291 ___str_94:
      0008D8 0D                   21292 	.db 0x0d
      0008D9 6C 65 6E 68 20 72 65 21293 	.ascii "lenh reset khong hop le"
             73 65 74 20 6B 68 6F
             6E 67 20 68 6F 70 20
             6C 65
      0008F0 00                   21294 	.db 0x00
                                  21295 	.area CSEG    (CODE)
                                  21296 	.area CONST   (CODE)
      0008F1                      21297 ___str_95:
      0008F1 0D                   21298 	.db 0x0d
      0008F2 78 6F 61 20 67 69 6F 21299 	.ascii "xoa gio den thanh cong"
             20 64 65 6E 20 74 68
             61 6E 68 20 63 6F 6E
             67
      000908 00                   21300 	.db 0x00
                                  21301 	.area CSEG    (CODE)
                                  21302 	.area CONST   (CODE)
      000909                      21303 ___str_96:
      000909 0D                   21304 	.db 0x0d
      00090A 6C 65 6E 68 20 64 65 21305 	.ascii "lenh den thanh cong"
             6E 20 74 68 61 6E 68
             20 63 6F 6E 67
      00091D 00                   21306 	.db 0x00
                                  21307 	.area CSEG    (CODE)
                                  21308 	.area CONST   (CODE)
      00091E                      21309 ___str_97:
      00091E 0D                   21310 	.db 0x0d
      00091F 74 68 6F 6E 67 20 73 21311 	.ascii "thong so den khong hop le"
             6F 20 64 65 6E 20 6B
             68 6F 6E 67 20 68 6F
             70 20 6C 65
      000938 00                   21312 	.db 0x00
                                  21313 	.area CSEG    (CODE)
                                  21314 	.area CONST   (CODE)
      000939                      21315 ___str_98:
      000939 0D                   21316 	.db 0x0d
      00093A 4B 68 6F 6E 67 20 43 21317 	.ascii "Khong Co Module Mp3"
             6F 20 4D 6F 64 75 6C
             65 20 4D 70 33
      00094D 00                   21318 	.db 0x00
                                  21319 	.area CSEG    (CODE)
                                  21320 	.area CONST   (CODE)
      00094E                      21321 ___str_99:
      00094E 0D                   21322 	.db 0x0d
      00094F 44 75 6E 67 20 4D 70 21323 	.ascii "Dung Mp3"
             33
      000957 00                   21324 	.db 0x00
                                  21325 	.area CSEG    (CODE)
                                  21326 	.area CONST   (CODE)
      000958                      21327 ___str_100:
      000958 0D                   21328 	.db 0x0d
      000959 42 61 74 20 6D 70 33 21329 	.ascii "Bat mp3"
      000960 00                   21330 	.db 0x00
                                  21331 	.area CSEG    (CODE)
                                  21332 	.area CONST   (CODE)
      000961                      21333 ___str_101:
      000961 0D                   21334 	.db 0x0d
      000962 54 61 74 20 6D 70 33 21335 	.ascii "Tat mp3"
      000969 00                   21336 	.db 0x00
                                  21337 	.area CSEG    (CODE)
                                  21338 	.area CONST   (CODE)
      00096A                      21339 ___str_102:
      00096A 0D                   21340 	.db 0x0d
      00096B 54 65 73 74 20 6D 70 21341 	.ascii "Test mp3 thanh cong"
             33 20 74 68 61 6E 68
             20 63 6F 6E 67
      00097E 00                   21342 	.db 0x00
                                  21343 	.area CSEG    (CODE)
                                  21344 	.area CONST   (CODE)
      00097F                      21345 ___str_103:
      00097F 0D                   21346 	.db 0x0d
      000980 6B 68 6F 6E 67 20 64 21347 	.ascii "khong dung gio phat hoac mp3 loi"
             75 6E 67 20 67 69 6F
             20 70 68 61 74 20 68
             6F 61 63 20 6D 70 33
             20 6C 6F 69
      0009A0 00                   21348 	.db 0x00
                                  21349 	.area CSEG    (CODE)
                                  21350 	.area CONST   (CODE)
      0009A1                      21351 ___str_104:
      0009A1 0D                   21352 	.db 0x0d
      0009A2 4D 70 33 20 64 61 6E 21353 	.ascii "Mp3 dang choi nhac nen chua the test"
             67 20 63 68 6F 69 20
             6E 68 61 63 20 6E 65
             6E 20 63 68 75 61 20
             74 68 65 20 74 65 73
             74
      0009C6 00                   21354 	.db 0x00
                                  21355 	.area CSEG    (CODE)
                                  21356 	.area CONST   (CODE)
      0009C7                      21357 ___str_105:
      0009C7 0D                   21358 	.db 0x0d
      0009C8 4C 65 6E 68 20 4D 50 21359 	.ascii "Lenh MP3 khong hop le"
             33 20 6B 68 6F 6E 67
             20 68 6F 70 20 6C 65
      0009DD 00                   21360 	.db 0x00
                                  21361 	.area CSEG    (CODE)
                                  21362 	.area CONST   (CODE)
      0009DE                      21363 ___str_106:
      0009DE 0D                   21364 	.db 0x0d
      0009DF 42 61 74 20 47 50 53 21365 	.ascii "Bat GPS"
      0009E6 00                   21366 	.db 0x00
                                  21367 	.area CSEG    (CODE)
                                  21368 	.area CONST   (CODE)
      0009E7                      21369 ___str_107:
      0009E7 0D                   21370 	.db 0x0d
      0009E8 54 61 74 20 47 50 53 21371 	.ascii "Tat GPS"
      0009EF 00                   21372 	.db 0x00
                                  21373 	.area CSEG    (CODE)
                                  21374 	.area CONST   (CODE)
      0009F0                      21375 ___str_108:
      0009F0 0D                   21376 	.db 0x0d
      0009F1 44 61 6E 67 20 67 6F 21377 	.ascii "Dang goi dien thoai ve ...."
             69 20 64 69 65 6E 20
             74 68 6F 61 69 20 76
             65 20 2E 2E 2E 2E
      000A0C 00                   21378 	.db 0x00
                                  21379 	.area CSEG    (CODE)
                                  21380 	.area CONST   (CODE)
      000A0D                      21381 ___str_109:
      000A0D 0D                   21382 	.db 0x0d
      000A0E 67 68 69 20 70 68 6F 21383 	.ascii "ghi phone phu moi thanh cong"
             6E 65 20 70 68 75 20
             6D 6F 69 20 74 68 61
             6E 68 20 63 6F 6E 67
      000A2A 00                   21384 	.db 0x00
                                  21385 	.area CSEG    (CODE)
                                  21386 	.area CONST   (CODE)
      000A2B                      21387 ___str_110:
      000A2B 0D                   21388 	.db 0x0d
      000A2C 74 68 61 79 20 64 6F 21389 	.ascii "thay doi phone phu khong thanh cong"
             69 20 70 68 6F 6E 65
             20 70 68 75 20 6B 68
             6F 6E 67 20 74 68 61
             6E 68 20 63 6F 6E 67
      000A4F 00                   21390 	.db 0x00
                                  21391 	.area CSEG    (CODE)
                                  21392 	.area CONST   (CODE)
      000A50                      21393 ___str_111:
      000A50 0D                   21394 	.db 0x0d
      000A51 58 6F 61 20 70 68 6F 21395 	.ascii "Xoa phone phu"
             6E 65 20 70 68 75
      000A5E 00                   21396 	.db 0x00
                                  21397 	.area CSEG    (CODE)
                                  21398 	.area CONST   (CODE)
      000A5F                      21399 ___str_112:
      000A5F 0D                   21400 	.db 0x0d
      000A60 6C 65 6E 68 20 6B 68 21401 	.ascii "lenh khong thanh cong do chua khoi tao phone phu"
             6F 6E 67 20 74 68 61
             6E 68 20 63 6F 6E 67
             20 64 6F 20 63 68 75
             61 20 6B 68 6F 69 20
             74 61 6F 20 70 68 6F
             6E 65 20 70 68 75
      000A90 00                   21402 	.db 0x00
                                  21403 	.area CSEG    (CODE)
                                  21404 	.area CONST   (CODE)
      000A91                      21405 ___str_113:
      000A91 0D                   21406 	.db 0x0d
      000A92 42 61 74 20 70 68 6F 21407 	.ascii "Bat phone phu"
             6E 65 20 70 68 75
      000A9F 00                   21408 	.db 0x00
                                  21409 	.area CSEG    (CODE)
                                  21410 	.area CONST   (CODE)
      000AA0                      21411 ___str_114:
      000AA0 0D                   21412 	.db 0x0d
      000AA1 54 61 74 20 70 68 6F 21413 	.ascii "Tat phone phu"
             6E 65 20 70 68 75
      000AAE 00                   21414 	.db 0x00
                                  21415 	.area CSEG    (CODE)
                                  21416 	.area CONST   (CODE)
      000AAF                      21417 ___str_115:
      000AAF 0D                   21418 	.db 0x0d
      000AB0 4C 65 6E 68 20 70 68 21419 	.ascii "Lenh phone phu khong hop le"
             6F 6E 65 20 70 68 75
             20 6B 68 6F 6E 67 20
             68 6F 70 20 6C 65
      000ACB 00                   21420 	.db 0x00
                                  21421 	.area CSEG    (CODE)
                                  21422 	.area CONST   (CODE)
      000ACC                      21423 ___str_116:
      000ACC 0D                   21424 	.db 0x0d
      000ACD 4C 65 6E 68 20 6B 68 21425 	.ascii "Lenh khong hop le"
             6F 6E 67 20 68 6F 70
             20 6C 65
      000ADE 00                   21426 	.db 0x00
                                  21427 	.area CSEG    (CODE)
                                  21428 	.area CONST   (CODE)
      000ADF                      21429 ___str_117:
      000ADF 0D                   21430 	.db 0x0d
      000AE0 4C 65 6E 68 20 6B 68 21431 	.ascii "Lenh khong hop le"
             6F 6E 67 20 68 6F 70
             20 6C 65
      000AF1 0D                   21432 	.db 0x0d
      000AF2 50 68 6F 6E 65 20 70 21433 	.ascii "Phone phu gui lenh"
             68 75 20 67 75 69 20
             6C 65 6E 68
      000B04 00                   21434 	.db 0x00
                                  21435 	.area CSEG    (CODE)
                                  21436 	.area CONST   (CODE)
      000B05                      21437 ___str_118:
      000B05 54 48 49 45 54 20 4C 21438 	.ascii "THIET LAP EEPROM"
             41 50 20 45 45 50 52
             4F 4D
      000B15 00                   21439 	.db 0x00
                                  21440 	.area CSEG    (CODE)
                                  21441 	.area CONST   (CODE)
      000B16                      21442 ___str_119:
      000B16 50 4F 57 45 52 20 4F 21443 	.ascii "POWER ON SIM800 "
             4E 20 53 49 4D 38 30
             30 20
      000B26 00                   21444 	.db 0x00
                                  21445 	.area CSEG    (CODE)
                                  21446 	.area CONST   (CODE)
      000B27                      21447 ___str_120:
      000B27 20 20 4B 48 4F 49 20 21448 	.ascii "  KHOI TAO MP3  "
             54 41 4F 20 4D 50 33
             20 20
      000B37 00                   21449 	.db 0x00
                                  21450 	.area CSEG    (CODE)
                                  21451 	.area CONST   (CODE)
      000B38                      21452 ___str_121:
      000B38 80                   21453 	.db 0x80
      000B39 20 4E 48 41 20 50 48 21454 	.ascii " NHA PHAT TRIEN"
             41 54 20 54 52 49 45
             4E
      000B48 00                   21455 	.db 0x00
                                  21456 	.area CSEG    (CODE)
                                  21457 	.area CONST   (CODE)
      000B49                      21458 ___str_122:
      000B49 C0                   21459 	.db 0xc0
      000B4A 4D 41 59 3A          21460 	.ascii "MAY:"
      000B4E 00                   21461 	.db 0x00
                                  21462 	.area CSEG    (CODE)
                                  21463 	.area CONST   (CODE)
      000B4F                      21464 ___str_123:
      000B4F C5                   21465 	.db 0xc5
      000B50 20 44 43 20          21466 	.ascii " DC "
      000B54 00                   21467 	.db 0x00
                                  21468 	.area CSEG    (CODE)
                                  21469 	.area CONST   (CODE)
      000B55                      21470 ___str_124:
      000B55 C5                   21471 	.db 0xc5
      000B56 20 53 54 20          21472 	.ascii " ST "
      000B5A 00                   21473 	.db 0x00
                                  21474 	.area CSEG    (CODE)
                                  21475 	.area CONST   (CODE)
      000B5B                      21476 ___str_125:
      000B5B C9                   21477 	.db 0xc9
      000B5C 43 35 35 20          21478 	.ascii "C55 "
      000B60 00                   21479 	.db 0x00
                                  21480 	.area CSEG    (CODE)
                                  21481 	.area CONST   (CODE)
      000B61                      21482 ___str_126:
      000B61 C9                   21483 	.db 0xc9
      000B62 53 54 43 20          21484 	.ascii "STC "
      000B66 00                   21485 	.db 0x00
                                  21486 	.area CSEG    (CODE)
                                  21487 	.area CONST   (CODE)
      000B67                      21488 ___str_127:
      000B67 CD                   21489 	.db 0xcd
      000B68 53 3A                21490 	.ascii "S:"
      000B6A 00                   21491 	.db 0x00
                                  21492 	.area CSEG    (CODE)
                                  21493 	.area CONST   (CODE)
      000B6B                      21494 ___str_128:
      000B6B C0                   21495 	.db 0xc0
      000B6C 50 3A                21496 	.ascii "P:"
      000B6E 00                   21497 	.db 0x00
                                  21498 	.area CSEG    (CODE)
                                  21499 	.area CONST   (CODE)
      000B6F                      21500 ___str_129:
      000B6F 20 54 3A             21501 	.ascii " T:"
      000B72 00                   21502 	.db 0x00
                                  21503 	.area CSEG    (CODE)
                                  21504 	.area CONST   (CODE)
      000B73                      21505 ___str_130:
      000B73 20 47 3A             21506 	.ascii " G:"
      000B76 00                   21507 	.db 0x00
                                  21508 	.area CSEG    (CODE)
                                  21509 	.area CONST   (CODE)
      000B77                      21510 ___str_131:
      000B77 20 4D 3A             21511 	.ascii " M:"
      000B7A 00                   21512 	.db 0x00
                                  21513 	.area CSEG    (CODE)
                                  21514 	.area CONST   (CODE)
      000B7B                      21515 ___str_132:
      000B7B C5                   21516 	.db 0xc5
      000B7C 20 5F 5F 20          21517 	.ascii " __ "
      000B80 00                   21518 	.db 0x00
                                  21519 	.area CSEG    (CODE)
                                  21520 	.area CONST   (CODE)
      000B81                      21521 ___str_133:
      000B81 C9                   21522 	.db 0xc9
      000B82 5F 5F 5F             21523 	.ascii "___"
      000B85 00                   21524 	.db 0x00
                                  21525 	.area CSEG    (CODE)
                                  21526 	.area CONST   (CODE)
      000B86                      21527 ___str_134:
      000B86 80                   21528 	.db 0x80
      000B87 20 20 20 20 20 20 53 21529 	.ascii "      SAVE      "
             41 56 45 20 20 20 20
             20 20
      000B97 00                   21530 	.db 0x00
                                  21531 	.area CSEG    (CODE)
                                  21532 	.area CONST   (CODE)
      000B98                      21533 ___str_135:
      000B98 C0                   21534 	.db 0xc0
      000B99 4D 4F 44 45 3A 4F 4B 21535 	.ascii "MODE:OK    RS:BO"
             20 20 20 20 52 53 3A
             42 4F
      000BA9 00                   21536 	.db 0x00
                                  21537 	.area CSEG    (CODE)
                                  21538 	.area CONST   (CODE)
      000BAA                      21539 ___str_136:
      000BAA 4B 49 45 4D 20 54 52 21540 	.ascii "KIEM TRA GIO RTC"
             41 20 47 49 4F 20 52
             54 43
      000BBA 00                   21541 	.db 0x00
                                  21542 	.area CSEG    (CODE)
                                  21543 	.area CONST   (CODE)
      000BBB                      21544 ___str_137:
      000BBB 4B 49 45 4D 20 4D 4F 21545 	.ascii "KIEM MOTOR 1 - 3"
             54 4F 52 20 31 20 2D
             20 33
      000BCB 00                   21546 	.db 0x00
                                  21547 	.area CSEG    (CODE)
                                  21548 	.area CONST   (CODE)
      000BCC                      21549 ___str_138:
      000BCC 4B 49 45 4D 20 4D 4F 21550 	.ascii "KIEM MOTOR 2 - 4"
             54 4F 52 20 32 20 2D
             20 34
      000BDC 00                   21551 	.db 0x00
                                  21552 	.area CSEG    (CODE)
                                  21553 	.area CONST   (CODE)
      000BDD                      21554 ___str_139:
      000BDD 54 48 49 45 54 20 4C 21555 	.ascii "THIET LAP MOTOR "
             41 50 20 4D 4F 54 4F
             52 20
      000BED 00                   21556 	.db 0x00
                                  21557 	.area CSEG    (CODE)
                                  21558 	.area CONST   (CODE)
      000BEE                      21559 ___str_140:
      000BEE 0D                   21560 	.db 0x0d
      000BEF 6B 68 6F 69 20 64 6F 21561 	.ascii "khoi dong phan mem san sang"
             6E 67 20 70 68 61 6E
             20 6D 65 6D 20 73 61
             6E 20 73 61 6E 67
      000C0A 00                   21562 	.db 0x00
                                  21563 	.area CSEG    (CODE)
                                  21564 	.area CONST   (CODE)
      000C0B                      21565 ___str_141:
      000C0B 0D                   21566 	.db 0x0d
      000C0C 6B 68 6F 69 20 64 6F 21567 	.ascii "khoi dong san sang"
             6E 67 20 73 61 6E 20
             73 61 6E 67
      000C1E 00                   21568 	.db 0x00
                                  21569 	.area CSEG    (CODE)
                                  21570 	.area CONST   (CODE)
      000C1F                      21571 ___str_142:
      000C1F 2A 2A 2A 73 74 63    21572 	.ascii "***stc"
      000C25 00                   21573 	.db 0x00
                                  21574 	.area CSEG    (CODE)
                                  21575 	.area CONST   (CODE)
      000C26                      21576 ___str_143:
      000C26 23 23 23             21577 	.ascii "###"
      000C29 0D                   21578 	.db 0x0d
      000C2A 0A                   21579 	.db 0x0a
      000C2B 00                   21580 	.db 0x00
                                  21581 	.area CSEG    (CODE)
                                  21582 	.area CONST   (CODE)
      000C2C                      21583 ___str_144:
      000C2C 0D                   21584 	.db 0x0d
      000C2D 64 69 65 6E 20 61 70 21585 	.ascii "dien ap thap"
             20 74 68 61 70
      000C39 00                   21586 	.db 0x00
                                  21587 	.area CSEG    (CODE)
                                  21588 	.area CONST   (CODE)
      000C3A                      21589 ___str_145:
      000C3A 0D                   21590 	.db 0x0d
      000C3B 64 69 65 6E 20 61 70 21591 	.ascii "dien ap khoi phuc"
             20 6B 68 6F 69 20 70
             68 75 63
      000C4C 00                   21592 	.db 0x00
                                  21593 	.area CSEG    (CODE)
                                  21594 	.area CONST   (CODE)
      000C4D                      21595 ___str_146:
      000C4D 0D                   21596 	.db 0x0d
      000C4E 6D 61 74 20 78 75 6E 21597 	.ascii "mat xung giay"
             67 20 67 69 61 79
      000C5B 00                   21598 	.db 0x00
                                  21599 	.area CSEG    (CODE)
                                  21600 	.area CONST   (CODE)
      000C5C                      21601 ___str_147:
      000C5C 0D                   21602 	.db 0x0d
      000C5D 6C 6F 69 20 64 6F 63 21603 	.ascii "loi doc cam 1"
             20 63 61 6D 20 31
      000C6A 00                   21604 	.db 0x00
                                  21605 	.area CSEG    (CODE)
                                  21606 	.area CONST   (CODE)
      000C6B                      21607 ___str_148:
      000C6B 0D                   21608 	.db 0x0d
      000C6C 6C 6F 69 20 64 6F 63 21609 	.ascii "loi doc cam 2"
             20 63 61 6D 20 32
      000C79 00                   21610 	.db 0x00
                                  21611 	.area CSEG    (CODE)
                                  21612 	.area CONST   (CODE)
      000C7A                      21613 ___str_149:
      000C7A 0D                   21614 	.db 0x0d
      000C7B 6C 6F 69 20 64 6F 63 21615 	.ascii "loi doc cam 3"
             20 63 61 6D 20 33
      000C88 00                   21616 	.db 0x00
                                  21617 	.area CSEG    (CODE)
                                  21618 	.area CONST   (CODE)
      000C89                      21619 ___str_150:
      000C89 0D                   21620 	.db 0x0d
      000C8A 6C 6F 69 20 64 6F 63 21621 	.ascii "loi doc cam 4"
             20 63 61 6D 20 34
      000C97 00                   21622 	.db 0x00
                                  21623 	.area CSEG    (CODE)
                                  21624 	.area CONST   (CODE)
      000C98                      21625 ___str_151:
      000C98 0D                   21626 	.db 0x0d
      000C99 43 68 75 61 6E 20 62 21627 	.ascii "Chuan bi reset phan mem tu cuoc goi"
             69 20 72 65 73 65 74
             20 70 68 61 6E 20 6D
             65 6D 20 74 75 20 63
             75 6F 63 20 67 6F 69
      000CBC 00                   21628 	.db 0x00
                                  21629 	.area CSEG    (CODE)
                                  21630 	.area CONST   (CODE)
      000CBD                      21631 ___str_152:
      000CBD 0D                   21632 	.db 0x0d
      000CBE 62 61 6F 20 63 61 6F 21633 	.ascii "bao cao dau gio"
             20 64 61 75 20 67 69
             6F
      000CCD 00                   21634 	.db 0x00
                                  21635 	.area CSEG    (CODE)
                                  21636 	.area CONST   (CODE)
      000CCE                      21637 ___str_153:
      000CCE 43 4F 20 54 49 4E 20 21638 	.ascii "CO TIN NHAN MOI "
             4E 48 41 4E 20 4D 4F
             49 20
      000CDE 00                   21639 	.db 0x00
                                  21640 	.area CSEG    (CODE)
                                  21641 	.area CONST   (CODE)
      000CDF                      21642 ___str_154:
      000CDF 41 54 2B 43 4D 47 4C 21643 	.ascii "AT+CMGL="
             3D
      000CE7 22                   21644 	.db 0x22
      000CE8 41 4C 4C             21645 	.ascii "ALL"
      000CEB 22                   21646 	.db 0x22
      000CEC 0D                   21647 	.db 0x0d
      000CED 00                   21648 	.db 0x00
                                  21649 	.area CSEG    (CODE)
                                  21650 	.area CONST   (CODE)
      000CEE                      21651 ___str_155:
      000CEE 0D                   21652 	.db 0x0d
      000CEF 67 73 6D 20 72 65 73 21653 	.ascii "gsm reset thanh cong"
             65 74 20 74 68 61 6E
             68 20 63 6F 6E 67
      000D03 00                   21654 	.db 0x00
                                  21655 	.area CSEG    (CODE)
                                  21656 	.area CONST   (CODE)
      000D04                      21657 ___str_156:
      000D04 20 20 4D 44 43 20 20 21658 	.ascii "  MDC  "
      000D0B 00                   21659 	.db 0x00
                                  21660 	.area CSEG    (CODE)
                                  21661 	.area CONST   (CODE)
      000D0C                      21662 ___str_157:
      000D0C 20 20 4D 53 54 20 20 21663 	.ascii "  MST  "
      000D13 00                   21664 	.db 0x00
                                  21665 	.area CSEG    (CODE)
                                  21666 	.area CONST   (CODE)
      000D14                      21667 ___str_158:
      000D14 20 20                21668 	.ascii "  "
      000D16 00                   21669 	.db 0x00
                                  21670 	.area CSEG    (CODE)
                                  21671 	.area CONST   (CODE)
      000D17                      21672 ___str_159:
      000D17 20 47 20             21673 	.ascii " G "
      000D1A 00                   21674 	.db 0x00
                                  21675 	.area CSEG    (CODE)
                                  21676 	.area CONST   (CODE)
      000D1B                      21677 ___str_160:
      000D1B 20 44 20             21678 	.ascii " D "
      000D1E 00                   21679 	.db 0x00
                                  21680 	.area CSEG    (CODE)
                                  21681 	.area CONST   (CODE)
      000D1F                      21682 ___str_161:
      000D1F 20 41 20             21683 	.ascii " A "
      000D22 00                   21684 	.db 0x00
                                  21685 	.area CSEG    (CODE)
                                  21686 	.area CONST   (CODE)
      000D23                      21687 ___str_162:
      000D23 20                   21688 	.ascii " "
      000D24 00                   21689 	.db 0x00
                                  21690 	.area CSEG    (CODE)
                                  21691 	.area CONST   (CODE)
      000D25                      21692 ___str_163:
      000D25 0D                   21693 	.db 0x0d
      000D26 63 68 69 6E 68 20 67 21694 	.ascii "chinh gio bang tay"
             69 6F 20 62 61 6E 67
             20 74 61 79
      000D38 00                   21695 	.db 0x00
                                  21696 	.area CSEG    (CODE)
                                  21697 	.area CONST   (CODE)
      000D39                      21698 ___str_164:
      000D39 0D                   21699 	.db 0x0d
      000D3A 2A 63 68 69 6E 68 20 21700 	.ascii "*chinh gio bang tay*"
             67 69 6F 20 62 61 6E
             67 20 74 61 79 2A
      000D4E 00                   21701 	.db 0x00
                                  21702 	.area CSEG    (CODE)
                                  21703 	.area CONST   (CODE)
      000D4F                      21704 ___str_165:
      000D4F 20 20 20 20 20 20 20 21705 	.ascii "         "
             20 20
      000D58 00                   21706 	.db 0x00
                                  21707 	.area CSEG    (CODE)
                                  21708 	.area CONST   (CODE)
      000D59                      21709 ___str_166:
      000D59 C0                   21710 	.db 0xc0
      000D5A 4D 41 59 20 31 20 20 21711 	.ascii "MAY 1          "
             20 20 20 20 20 20 20
             20
      000D69 00                   21712 	.db 0x00
                                  21713 	.area CSEG    (CODE)
                                  21714 	.area CONST   (CODE)
      000D6A                      21715 ___str_167:
      000D6A 30 30 30 20          21716 	.ascii "000 "
      000D6E 00                   21717 	.db 0x00
                                  21718 	.area CSEG    (CODE)
                                  21719 	.area CONST   (CODE)
      000D6F                      21720 ___str_168:
      000D6F C0                   21721 	.db 0xc0
      000D70 20 20 4B 48 4F 4E 47 21722 	.ascii "  KHONG CO SIM  "
             20 43 4F 20 53 49 4D
             20 20
      000D80 00                   21723 	.db 0x00
                                  21724 	.area CSEG    (CODE)
                                  21725 	.area CONST   (CODE)
      000D81                      21726 ___str_169:
      000D81 C0                   21727 	.db 0xc0
      000D82 20 20 47 53 4D 20 54 21728 	.ascii "  GSM TAT NGUON "
             41 54 20 4E 47 55 4F
             4E 20
      000D92 00                   21729 	.db 0x00
                                  21730 	.area CSEG    (CODE)
                                  21731 	.area CONST   (CODE)
      000D93                      21732 ___str_170:
      000D93 C0                   21733 	.db 0xc0
      000D94 20 20                21734 	.ascii "  "
      000D96 00                   21735 	.db 0x00
                                  21736 	.area CSEG    (CODE)
                                  21737 	.area CONST   (CODE)
      000D97                      21738 ___str_171:
      000D97 20 2D 20             21739 	.ascii " - "
      000D9A 00                   21740 	.db 0x00
                                  21741 	.area CSEG    (CODE)
                                  21742 	.area CONST   (CODE)
      000D9B                      21743 ___str_172:
      000D9B 20 20 20 20          21744 	.ascii "    "
      000D9F 00                   21745 	.db 0x00
                                  21746 	.area CSEG    (CODE)
                                  21747 	.area XINIT   (CODE)
      000000                      21748 __xinit__cnt:
      000000 14                   21749 	.db #0x14	; 20
      000001                      21750 __xinit__counter_xung_giay:
      000001 28                   21751 	.db #0x28	; 40
                                  21752 	.area CABS    (ABS,CODE)
